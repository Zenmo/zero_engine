<?xml version="1.0" encoding="UTF-8"?>
<AnyLogicWorkspace splitVersion="1"
                   WorkspaceVersion="1.9"
                   AnyLogicVersion="8.9.5.202506190548"
                   AlpVersion="8.9.5">
	<Model xmlns:al="http://anylogic.com">
		<Id>1658477103134</Id>
		<Name>Zero_engine</Name>
		<EngineVersion>6</EngineVersion>
		<JavaPackageName>zero_engine</JavaPackageName>
		<ModelTimeUnit>Hour</ModelTimeUnit>
		<OptionLists>
			<OptionList>
				<Id>1658478100573</Id>
				<Name>OL_GridNodeType</Name>
				<Option>
					<Id>1739967587321</Id>
					<Name>LVLV</Name>
				</Option>
				<Option>
					<Id>1658478100575</Id>
					<Name>MVLV</Name>
				</Option>
				<Option>
					<Id>1721992807138</Id>
					<Name>SUBMV</Name>
				</Option>
				<Option>
					<Id>1721992801441</Id>
					<Name>MVMV</Name>
				</Option>
				<Option>
					<Id>1658478100574</Id>
					<Name>HVMV</Name>
				</Option>
				<Option>
					<Id>1659705289295</Id>
					<Name>HT</Name>
				</Option>
				<Option>
					<Id>1659705303447</Id>
					<Name>MT</Name>
				</Option>
				<Option>
					<Id>1659705308600</Id>
					<Name>LT</Name>
				</Option>
				<Option>
					<Id>1659705310310</Id>
					<Name>LT5thgen</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659117289326</Id>
				<Name>OL_EnergyCarriers</Name>
				<Option>
					<Id>1659117289850</Id>
					<Name>ELECTRICITY</Name>
				</Option>
				<Option>
					<Id>1659117299915</Id>
					<Name>HEAT</Name>
				</Option>
				<Option>
					<Id>1659117296810</Id>
					<Name>METHANE</Name>
				</Option>
				<Option>
					<Id>1659117304956</Id>
					<Name>HYDROGEN</Name>
				</Option>
				<Option>
					<Id>1668600528877</Id>
					<Name>DIESEL</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659118262286</Id>
				<Name>OL_ElectrolyserState</Name>
				<Option>
					<Id>1659118262287</Id>
					<Name>SHUTDOWN</Name>
				</Option>
				<Option>
					<Id>1659118262289</Id>
					<Name>STANDBY</Name>
				</Option>
				<Option>
					<Id>1659118262290</Id>
					<Name>IDLE</Name>
				</Option>
				<Option>
					<Id>1660052337329</Id>
					<Name>FUNCTIONAL</Name>
				</Option>
				<Option>
					<Id>1665480199198</Id>
					<Name>FULLCAPACITY</Name>
				</Option>
				<Option>
					<Id>1716971923636</Id>
					<Name>POWER_UP</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659118272924</Id>
				<Name>OL_GISObjectType</Name>
				<Option>
					<Id>1659118342822</Id>
					<Name>REGION</Name>
				</Option>
				<Option>
					<Id>1729007177070</Id>
					<Name>NEIGHBOURHOOD</Name>
				</Option>
				<Option>
					<Id>1659118328423</Id>
					<Name>PARCEL</Name>
				</Option>
				<Option>
					<Id>1659118330290</Id>
					<Name>BUILDING</Name>
				</Option>
				<Option>
					<Id>1724852069141</Id>
					<Name>GRIDNODE</Name>
				</Option>
				<Option>
					<Id>1659118284642</Id>
					<Name>CHARGER</Name>
				</Option>
				<Option>
					<Id>1659118298339</Id>
					<Name>SOLARFARM</Name>
				</Option>
				<Option>
					<Id>1659118321493</Id>
					<Name>WINDFARM</Name>
				</Option>
				<Option>
					<Id>1659118323157</Id>
					<Name>BATTERY</Name>
				</Option>
				<Option>
					<Id>1724848835916</Id>
					<Name>ELECTROLYSER</Name>
				</Option>
				<Option>
					<Id>1659118344195</Id>
					<Name>ANTI_LAYER</Name>
				</Option>
				<Option>
					<Id>1725026204865</Id>
					<Name>LV_CABLE</Name>
				</Option>
				<Option>
					<Id>1725026212801</Id>
					<Name>MV_CABLE</Name>
				</Option>
				<Option>
					<Id>1730812719301</Id>
					<Name>REMAINING_BUILDING</Name>
				</Option>
				<Option>
					<Id>1730812264440</Id>
					<Name>GN_SERVICE_AREA</Name>
				</Option>
				<Option>
					<Id>1724849181274</Id>
					<Name>OTHER</Name>
				</Option>
				<Option>
					<Id>1739979321556</Id>
					<Name>COOP</Name>
				</Option>
				<Option>
					<Id>1749729312023</Id>
					<Name>PARKING</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659118426374</Id>
				<Name>OL_EnergyAssetType</Name>
				<Option>
					<Id>1669816033364</Id>
					<Name>ELECTRICITY_DEMAND</Name>
				</Option>
				<Option>
					<Id>1669815514091</Id>
					<Name>HEAT_DEMAND</Name>
				</Option>
				<Option>
					<Id>1659118426728</Id>
					<Name>WINDMILL</Name>
				</Option>
				<Option>
					<Id>1659118437009</Id>
					<Name>PHOTOVOLTAIC</Name>
				</Option>
				<Option>
					<Id>1659118482977</Id>
					<Name>PHOTOTHERMAL</Name>
				</Option>
				<Option>
					<Id>1659118532364</Id>
					<Name>GAS_BURNER</Name>
				</Option>
				<Option>
					<Id>1659454936646</Id>
					<Name>HEAT_PUMP_AIR</Name>
				</Option>
				<Option>
					<Id>1659454948025</Id>
					<Name>HEAT_PUMP_GROUND</Name>
				</Option>
				<Option>
					<Id>1659454952726</Id>
					<Name>STORAGE_HEAT</Name>
				</Option>
				<Option>
					<Id>1659703216848</Id>
					<Name>STORAGE_ELECTRIC</Name>
				</Option>
				<Option>
					<Id>1659954815659</Id>
					<Name>HOT_WATER_CONSUMPTION</Name>
				</Option>
				<Option>
					<Id>1660134509899</Id>
					<Name>HEAT_DELIVERY_SET</Name>
				</Option>
				<Option>
					<Id>1665501765513</Id>
					<Name>METHANE_FURNACE</Name>
				</Option>
				<Option>
					<Id>1665501776892</Id>
					<Name>HYDROGEN_FURNACE</Name>
				</Option>
				<Option>
					<Id>1666267116036</Id>
					<Name>ELECTRIC_HEATER</Name>
				</Option>
				<Option>
					<Id>1671111224507</Id>
					<Name>ELECTROLYSER</Name>
				</Option>
				<Option>
					<Id>1671465832026</Id>
					<Name>HYDROGEN_DEMAND</Name>
				</Option>
				<Option>
					<Id>1673867715990</Id>
					<Name>ELECTRIC_HOB</Name>
				</Option>
				<Option>
					<Id>1676965109301</Id>
					<Name>CURTAILER</Name>
				</Option>
				<Option>
					<Id>1678469475524</Id>
					<Name>CURTAILER_HEAT</Name>
				</Option>
				<Option>
					<Id>1676383232204</Id>
					<Name>RESIDUALHEATHT</Name>
				</Option>
				<Option>
					<Id>1676638948113</Id>
					<Name>RESIDUALHEATLT</Name>
				</Option>
				<Option>
					<Id>1676466480037</Id>
					<Name>METHANE_CHP</Name>
				</Option>
				<Option>
					<Id>1676463395259</Id>
					<Name>GAS_PIT</Name>
				</Option>
				<Option>
					<Id>1676894965662</Id>
					<Name>BUILDINGTHERMALS</Name>
				</Option>
				<Option>
					<Id>1677510098544</Id>
					<Name>HEAT_PUMP_WATER</Name>
				</Option>
				<Option>
					<Id>1681828835093</Id>
					<Name>DISTRICT_EBOILER_CHPPEAK</Name>
				</Option>
				<Option>
					<Id>1684332070404</Id>
					<Name>LIVESTOCK</Name>
				</Option>
				<Option>
					<Id>1684917236306</Id>
					<Name>STORAGE_GAS</Name>
				</Option>
				<Option>
					<Id>1685008578606</Id>
					<Name>DIESEL_DEMAND</Name>
				</Option>
				<Option>
					<Id>1685030175392</Id>
					<Name>BIOGAS_METHANE_CONVERTER</Name>
				</Option>
				<Option>
					<Id>1685518641145</Id>
					<Name>METHANE_DEMAND</Name>
				</Option>
				<Option>
					<Id>1668602156278</Id>
					<Name>DIESEL_VEHICLE</Name>
				</Option>
				<Option>
					<Id>1700138621293</Id>
					<Name>DIESEL_VAN</Name>
				</Option>
				<Option>
					<Id>1699367407696</Id>
					<Name>DIESEL_TRUCK</Name>
				</Option>
				<Option>
					<Id>1660202624229</Id>
					<Name>ELECTRIC_VEHICLE</Name>
				</Option>
				<Option>
					<Id>1710866465365</Id>
					<Name>ELECTRIC_VAN</Name>
				</Option>
				<Option>
					<Id>1666950754271</Id>
					<Name>ELECTRIC_TRUCK</Name>
				</Option>
				<Option>
					<Id>1711010112248</Id>
					<Name>HYDROGEN_VEHICLE</Name>
				</Option>
				<Option>
					<Id>1711010123129</Id>
					<Name>HYDROGEN_VAN</Name>
				</Option>
				<Option>
					<Id>1711010139283</Id>
					<Name>HYDROGEN_TRUCK</Name>
				</Option>
				<Option>
					<Id>1715121632612</Id>
					<Name>HYDROGEN_BURNER</Name>
				</Option>
				<Option>
					<Id>1717159864803</Id>
					<Name>FUEL_CELL</Name>
				</Option>
				<Option>
					<Id>1749651086661</Id>
					<Name>CHARGER</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659525715752</Id>
				<Name>OL_EAConversionTypes</Name>
				<Option>
					<Id>1659535854305</Id>
					<Name>HEATPUMP</Name>
				</Option>
				<Option>
					<Id>1659535860604</Id>
					<Name>GASBURNER</Name>
				</Option>
				<Option>
					<Id>1659535864564</Id>
					<Name>ELECTROLYSER</Name>
				</Option>
				<Option>
					<Id>1659535868209</Id>
					<Name>EBOILER</Name>
				</Option>
				<Option>
					<Id>1660131462165</Id>
					<Name>HEATDELIVERYSET</Name>
				</Option>
				<Option>
					<Id>1676964594398</Id>
					<Name>CURTAILER</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659525726440</Id>
				<Name>OL_EAProductionTypes</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Option>
					<Id>1659535893345</Id>
					<Name>PHOTOVOLTAIC</Name>
				</Option>
				<Option>
					<Id>1659535901330</Id>
					<Name>PHOTOTHERMAL</Name>
				</Option>
				<Option>
					<Id>1659950311558</Id>
					<Name>WINDMILL</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659525736586</Id>
				<Name>OL_EAConsumptionTypes</Name>
				<Option>
					<Id>1659535824593</Id>
					<Name>ELECTRICITY</Name>
				</Option>
				<Option>
					<Id>1659535830792</Id>
					<Name>HEAT</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659525748543</Id>
				<Name>OL_EAStorageTypes</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Option>
					<Id>1659535943908</Id>
					<Name>ELECTRIC_BATTERY</Name>
				</Option>
				<Option>
					<Id>1659535950717</Id>
					<Name>ELECTRIC_VEHICLE</Name>
				</Option>
				<Option>
					<Id>1659535949187</Id>
					<Name>HEATMODEL_BUILDING</Name>
				</Option>
				<Option>
					<Id>1674311988696</Id>
					<Name>HEATBUFFER</Name>
				</Option>
				<Option>
					<Id>1684917094693</Id>
					<Name>GAS</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659535485693</Id>
				<Name>OL_EACategories</Name>
				<Option>
					<Id>1659535486263</Id>
					<Name>CONSUMPTION</Name>
				</Option>
				<Option>
					<Id>1659535492572</Id>
					<Name>CONVERSION</Name>
				</Option>
				<Option>
					<Id>1659535495564</Id>
					<Name>PRODUCTION</Name>
				</Option>
				<Option>
					<Id>1659535498309</Id>
					<Name>STORAGE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659701773383</Id>
				<Name>OL_AreaType</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Option>
					<Id>1659701782496</Id>
					<Name>NEIGHBORHOOD</Name>
				</Option>
				<Option>
					<Id>1659701773953</Id>
					<Name>RES</Name>
				</Option>
				<Option>
					<Id>1659701788868</Id>
					<Name>INDUSTRY</Name>
				</Option>
				<Option>
					<Id>1659701795639</Id>
					<Name>BUSINESS</Name>
				</Option>
				<Option>
					<Id>1697466302695</Id>
					<Name>HVTRANSFORMER</Name>
				</Option>
				<Option>
					<Id>1713426522585</Id>
					<Name>PARCEL</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659711659517</Id>
				<Name>OL_BuildingType</Name>
				<Option>
					<Id>1659711661606</Id>
					<Name>House</Name>
				</Option>
				<Option>
					<Id>1659711661607</Id>
					<Name>Office</Name>
				</Option>
				<Option>
					<Id>1659711661608</Id>
					<Name>Store</Name>
				</Option>
				<Option>
					<Id>1659711661609</Id>
					<Name>School</Name>
				</Option>
				<Option>
					<Id>1659711661610</Id>
					<Name>Factory</Name>
				</Option>
				<Option>
					<Id>1660054094472</Id>
					<Name>Other</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1659950471000</Id>
				<Name>OL_EAPresetProductionAssets</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Option>
					<Id>1659950531538</Id>
					<Name>House_solarpanels_S</Name>
				</Option>
				<Option>
					<Id>1659950534060</Id>
					<Name>House_solarpanels_M</Name>
				</Option>
				<Option>
					<Id>1659950555546</Id>
					<Name>House_solarpanels_L</Name>
				</Option>
				<Option>
					<Id>1659950562453</Id>
					<Name>Windmill_3MW</Name>
				</Option>
				<Option>
					<Id>1659950566729</Id>
					<Name>Windmill_5MW</Name>
				</Option>
				<Option>
					<Id>1659950570261</Id>
					<Name>Windmill_7MW</Name>
				</Option>
				<Option>
					<Id>1659970013275</Id>
					<Name>Solarpanels_0MW</Name>
				</Option>
				<Option>
					<Id>1667995960684</Id>
					<Name>Solarpanels_1MW</Name>
				</Option>
				<Option>
					<Id>1667995977424</Id>
					<Name>Solarpanels_2MW</Name>
				</Option>
				<Option>
					<Id>1667995970571</Id>
					<Name>Solarpanels_3MW</Name>
				</Option>
				<Option>
					<Id>1667995986536</Id>
					<Name>Solarpanels_4MW</Name>
				</Option>
				<Option>
					<Id>1667996880047</Id>
					<Name>Solarpanels_5MW</Name>
				</Option>
				<Option>
					<Id>1667995988427</Id>
					<Name>Solarpanels_10MW</Name>
				</Option>
				<Option>
					<Id>1667995990541</Id>
					<Name>Building_solarpanels_0kWp</Name>
				</Option>
				<Option>
					<Id>1667996008098</Id>
					<Name>Building_solarpanels_1kWp</Name>
				</Option>
				<Option>
					<Id>1667996006832</Id>
					<Name>Building_solarpanels_2kWp</Name>
				</Option>
				<Option>
					<Id>1667996013583</Id>
					<Name>Building_solarpanels_3kWp</Name>
				</Option>
				<Option>
					<Id>1667996015832</Id>
					<Name>Building_solarpanels_4kWp</Name>
				</Option>
				<Option>
					<Id>1667996018938</Id>
					<Name>Building_solarpanels_5kWp</Name>
				</Option>
				<Option>
					<Id>1667996020759</Id>
					<Name>Building_solarpanels_10kWp</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660055228680</Id>
				<Name>OL_EAPresetStorageAssets</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Option>
					<Id>1660055281773</Id>
					<Name>House_battery</Name>
				</Option>
				<Option>
					<Id>1660055281774</Id>
					<Name>House_heatmodel_A</Name>
				</Option>
				<Option>
					<Id>1660055281775</Id>
					<Name>House_heatmodel_B</Name>
				</Option>
				<Option>
					<Id>1660055281776</Id>
					<Name>House_heatmodel_C</Name>
				</Option>
				<Option>
					<Id>1660055281777</Id>
					<Name>House_heatmodel_D</Name>
				</Option>
				<Option>
					<Id>1660055281778</Id>
					<Name>House_heatmodel_E</Name>
				</Option>
				<Option>
					<Id>1660055281779</Id>
					<Name>House_heatmodel_F</Name>
				</Option>
				<Option>
					<Id>1660055281780</Id>
					<Name>House_heatmodel_G</Name>
				</Option>
				<Option>
					<Id>1660055281781</Id>
					<Name>EV</Name>
				</Option>
				<Option>
					<Id>1660055439251</Id>
					<Name>District_Heating_heat_buffer_HT_S</Name>
				</Option>
				<Option>
					<Id>1664536366729</Id>
					<Name>District_Heating_network_HT_S</Name>
				</Option>
				<Option>
					<Id>1664541052353</Id>
					<Name>District_Heating_network_MT_S</Name>
				</Option>
				<Option>
					<Id>1666959280721</Id>
					<Name>Grid_battery_1MWh</Name>
				</Option>
				<Option>
					<Id>1667757454119</Id>
					<Name>EHGV</Name>
				</Option>
				<Option>
					<Id>1667464089952</Id>
					<Name>Grid_battery_10MWh</Name>
				</Option>
				<Option>
					<Id>1667995942136</Id>
					<Name>Grid_battery_0MWh</Name>
				</Option>
				<Option>
					<Id>1667996898857</Id>
					<Name>Grid_battery_5MWh</Name>
				</Option>
				<Option>
					<Id>1668594477547</Id>
					<Name>EHGV_x50</Name>
				</Option>
				<Option>
					<Id>1676893732560</Id>
					<Name>Store_heatmodel_A</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660226249511</Id>
				<Name>OL_ActorType</Name>
				<Option>
					<Id>1660226249512</Id>
					<Name>CONNECTIONOWNER</Name>
				</Option>
				<Option>
					<Id>1660226249513</Id>
					<Name>GOV</Name>
				</Option>
				<Option>
					<Id>1660226249514</Id>
					<Name>SUPPLIERENERGY</Name>
				</Option>
				<Option>
					<Id>1660226249515</Id>
					<Name>COOPENERGY</Name>
				</Option>
				<Option>
					<Id>1660577544099</Id>
					<Name>OPERATORGRID</Name>
				</Option>
				<Option>
					<Id>1692796172966</Id>
					<Name>GOVHOLON</Name>
				</Option>
				<Option>
					<Id>1703256179429</Id>
					<Name>SUBTENANT</Name>
				</Option>
				<Option>
					<Id>1717960308322</Id>
					<Name>CPO</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989498</Id>
				<Name>OL_ContractType</Name>
				<Option>
					<Id>1676283271704</Id>
					<Name>DELIVERY</Name>
				</Option>
				<Option>
					<Id>1676283288950</Id>
					<Name>CONNECTION</Name>
				</Option>
				<Option>
					<Id>1676283296109</Id>
					<Name>TRANSPORT</Name>
				</Option>
				<Option>
					<Id>1676283299749</Id>
					<Name>TAX</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989598</Id>
				<Name>OL_DeliveryContractType</Name>
				<Option>
					<Id>1660743990769</Id>
					<Name>ELECTRICITY_VARIABLE</Name>
				</Option>
				<Option>
					<Id>1676306691089</Id>
					<Name>ELECTRICITY_FIXED</Name>
				</Option>
				<Option>
					<Id>1679503406580</Id>
					<Name>METHANE_FIXED</Name>
				</Option>
				<Option>
					<Id>1679503410998</Id>
					<Name>HYDROGEN_FIXED</Name>
				</Option>
				<Option>
					<Id>1679503414243</Id>
					<Name>HEAT_FIXED</Name>
				</Option>
				<Option>
					<Id>1679503416680</Id>
					<Name>DIESEL_FIXED</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989698</Id>
				<Name>OL_TransportContractType</Name>
				<Option>
					<Id>1660743990769</Id>
					<Name>DEFAULT</Name>
				</Option>
				<Option>
					<Id>1676307663012</Id>
					<Name>NODALPRICING</Name>
				</Option>
				<Option>
					<Id>1676307680468</Id>
					<Name>PEAK</Name>
				</Option>
				<Option>
					<Id>1676539817413</Id>
					<Name>BANDWIDTH</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989698</Id>
				<Name>OL_ConnectionContractType</Name>
				<Option>
					<Id>1660743990769</Id>
					<Name>DEFAULT</Name>
				</Option>
				<Option>
					<Id>1676307607364</Id>
					<Name>NFATO</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1660743989798</Id>
				<Name>OL_TaxContractType</Name>
				<Option>
					<Id>1660743990769</Id>
					<Name>SALDEREN</Name>
				</Option>
				<Option>
					<Id>1676307694256</Id>
					<Name>NIETSALDEREN</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1665486884039</Id>
				<Name>OL_GridConnectionHeatingType</Name>
				<Option>
					<Id>1665486901407</Id>
					<Name>NONE</Name>
				</Option>
				<Option>
					<Id>1665486884694</Id>
					<Name>GAS_BURNER</Name>
				</Option>
				<Option>
					<Id>1711395634190</Id>
					<Name>HYBRID_HEATPUMP</Name>
				</Option>
				<Option>
					<Id>1711395468389</Id>
					<Name>ELECTRIC_HEATPUMP</Name>
				</Option>
				<Option>
					<Id>1665501223992</Id>
					<Name>HYDROGENBURNER</Name>
				</Option>
				<Option>
					<Id>1753785520927</Id>
					<Name>GAS_CHP</Name>
				</Option>
				<Option>
					<Id>1665486897604</Id>
					<Name>DISTRICTHEAT</Name>
				</Option>
				<Option>
					<Id>1752073245369</Id>
					<Name>LT_DISTRICTHEAT</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1665487983362</Id>
				<Name>OL_GridConnectionIsolationLabel</Name>
				<Option>
					<Id>1665487983978</Id>
					<Name>A</Name>
				</Option>
				<Option>
					<Id>1665487986412</Id>
					<Name>B</Name>
				</Option>
				<Option>
					<Id>1665487986996</Id>
					<Name>C</Name>
				</Option>
				<Option>
					<Id>1665487987672</Id>
					<Name>D</Name>
				</Option>
				<Option>
					<Id>1665487988212</Id>
					<Name>E</Name>
				</Option>
				<Option>
					<Id>1665487988752</Id>
					<Name>F</Name>
				</Option>
				<Option>
					<Id>1665487989247</Id>
					<Name>G</Name>
				</Option>
				<Option>
					<Id>1665487989742</Id>
					<Name>NONE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1667742453792</Id>
				<Name>OL_MobilityPatternType</Name>
				<Option>
					<Id>1667742462468</Id>
					<Name>TRUCK</Name>
				</Option>
				<Option>
					<Id>1667742466151</Id>
					<Name>PRIVATE_VEHICLE</Name>
				</Option>
				<Option>
					<Id>1667742486158</Id>
					<Name>BUS</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1668361027279</Id>
				<Name>OL_ChargingAttitude</Name>
				<Option>
					<Id>1668361027280</Id>
					<Name>SIMPLE</Name>
				</Option>
				<Option>
					<Id>1668368194052</Id>
					<Name>MAX_SPREAD</Name>
				</Option>
				<Option>
					<Id>1668371973959</Id>
					<Name>MAX_POWER</Name>
				</Option>
				<Option>
					<Id>1671011596610</Id>
					<Name>CHEAP</Name>
				</Option>
				<Option>
					<Id>1750246095668</Id>
					<Name>V1G</Name>
				</Option>
				<Option>
					<Id>1695825443639</Id>
					<Name>V2G</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1668693527446</Id>
				<Name>OL_BatteryOperationMode</Name>
				<Option>
					<Id>1753170751446</Id>
					<Name>OFF</Name>
				</Option>
				<Option>
					<Id>1725879557284</Id>
					<Name>SELF_CONSUMPTION</Name>
				</Option>
				<Option>
					<Id>1668693554312</Id>
					<Name>PRICE</Name>
				</Option>
				<Option>
					<Id>1750764233265</Id>
					<Name>PEAK_SHAVING</Name>
				</Option>
				<Option>
					<Id>1752753649099</Id>
					<Name>PEAK_SHAVING_PARENT_NODE</Name>
				</Option>
				<Option>
					<Id>1752753659151</Id>
					<Name>PEAK_SHAVING_COOP</Name>
				</Option>
				<Option>
					<Id>1752585441102</Id>
					<Name>PEAK_SHAVING_FORECAST</Name>
				</Option>
				<Option>
					<Id>1752585822134</Id>
					<Name>CUSTOM</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1668693527447</Id>
				<Name>OL_ElectrolyserOperationMode</Name>
				<Option>
					<Id>1668693549847</Id>
					<Name>BALANCE</Name>
				</Option>
				<Option>
					<Id>1668693554313</Id>
					<Name>PRICE</Name>
				</Option>
				<Option>
					<Id>1717061998153</Id>
					<Name>BALANCE_PASTWEEK</Name>
				</Option>
				<Option>
					<Id>1717140116168</Id>
					<Name>ALWAYS_IDLE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1674403295460</Id>
				<Name>OL_EVChargingNeed</Name>
				<Option>
					<Id>1674403295461</Id>
					<Name>HIGH</Name>
				</Option>
				<Option>
					<Id>1674403295462</Id>
					<Name>MEDIUM</Name>
				</Option>
				<Option>
					<Id>1674403295463</Id>
					<Name>LOW</Name>
				</Option>
				<Option>
					<Id>1674403309820</Id>
					<Name>NONE</Name>
				</Option>
				<Option>
					<Id>1674416304469</Id>
					<Name>EV_NOT_AVAILABLE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1675025163072</Id>
				<Name>OL_ConnectionOwnerType</Name>
				<Option>
					<Id>1675025163073</Id>
					<Name>COMPANY</Name>
				</Option>
				<Option>
					<Id>1675025163074</Id>
					<Name>HOUSEHOLD</Name>
				</Option>
				<Option>
					<Id>1675025163075</Id>
					<Name>SUBTENANT</Name>
				</Option>
				<Option>
					<Id>1702915272457</Id>
					<Name>COOP</Name>
				</Option>
				<Option>
					<Id>1722505556838</Id>
					<Name>SOLARFARM_OP</Name>
				</Option>
				<Option>
					<Id>1722505534634</Id>
					<Name>WINDFARM_OP</Name>
				</Option>
				<Option>
					<Id>1722505559622</Id>
					<Name>ELECTROLYSER_OP</Name>
				</Option>
				<Option>
					<Id>1722505562966</Id>
					<Name>BATTERY_OP</Name>
				</Option>
				<Option>
					<Id>1717960327813</Id>
					<Name>CHARGEPOINT_OP</Name>
				</Option>
				<Option>
					<Id>1707990736908</Id>
					<Name>OTHER</Name>
				</Option>
				<Option>
					<Id>1750078140891</Id>
					<Name>PARKINGSPACE_OP</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1718560423698</Id>
				<Name>OL_ProfileAssetType</Name>
				<Option>
					<Id>1718560423699</Id>
					<Name>ELECTRICITYBASELOAD</Name>
				</Option>
				<Option>
					<Id>1718560423700</Id>
					<Name>CHARGING</Name>
				</Option>
				<Option>
					<Id>1718713672051</Id>
					<Name>WINDTURBINE</Name>
				</Option>
				<Option>
					<Id>1718713684483</Id>
					<Name>SOLARPANELS</Name>
				</Option>
				<Option>
					<Id>1727254638101</Id>
					<Name>HEATDEMAND</Name>
				</Option>
				<Option>
					<Id>1734018498969</Id>
					<Name>METHANEDEMAND</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1722411204920</Id>
				<Name>OL_CurtailmentMode</Name>
				<Option>
					<Id>1722411204921</Id>
					<Name>CAPACITY</Name>
				</Option>
				<Option>
					<Id>1722411204922</Id>
					<Name>MARKETPRICE</Name>
				</Option>
				<Option>
					<Id>1742810522883</Id>
					<Name>NODALPRICING</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1726685111559</Id>
				<Name>OL_HouseholdCookingMethod</Name>
				<Option>
					<Id>1726685111560</Id>
					<Name>ELECTRIC</Name>
				</Option>
				<Option>
					<Id>1726685111561</Id>
					<Name>GAS</Name>
				</Option>
				<Option>
					<Id>1726685111562</Id>
					<Name>NONE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1729161119459</Id>
				<Name>OL_FlowsMapKeys</Name>
				<Option>
					<Id>1729161184706</Id>
					<Name>ELECTRICITY_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184707</Id>
					<Name>ELECTRICITY_CONSUMPTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184708</Id>
					<Name>HEAT_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184709</Id>
					<Name>HEAT_CONSUMPTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184710</Id>
					<Name>METHANE_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184711</Id>
					<Name>METHANE_CONSUMPTION_KW</Name>
				</Option>
				<Option>
					<Id>1729599301974</Id>
					<Name>DIESEL_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184713</Id>
					<Name>DIESEL_CONSUMPTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184714</Id>
					<Name>HYDROGEN_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161184715</Id>
					<Name>HYDROGEN_CONSUMPTION_KW</Name>
				</Option>
				<Option>
					<Id>1729161224606</Id>
					<Name>PRIMARY_PRODUCTION_KW</Name>
				</Option>
				<Option>
					<Id>1729586288144</Id>
					<Name>FINAL_CONSUMPTION_KW</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1729686050861</Id>
				<Name>OL_EAFlowKeys</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
			</OptionList>
			<OptionList>
				<Id>1741598206262</Id>
				<Name>OL_ResultScope</Name>
				<Option>
					<Id>1741598207010</Id>
					<Name>ENERGYMODEL</Name>
				</Option>
				<Option>
					<Id>1741598225549</Id>
					<Name>ENERGYCOOP</Name>
				</Option>
				<Option>
					<Id>1741598228834</Id>
					<Name>GRIDCONNECTION</Name>
				</Option>
				<Option>
					<Id>1741598233168</Id>
					<Name>GRIDNODE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1749738812988</Id>
				<Name>OL_ParkingSpaceType</Name>
				<Option>
					<Id>1749738813678</Id>
					<Name>DISABLED</Name>
				</Option>
				<Option>
					<Id>1749738839937</Id>
					<Name>PUBLIC</Name>
				</Option>
				<Option>
					<Id>1749738872124</Id>
					<Name>PRIVATE</Name>
				</Option>
				<Option>
					<Id>1749738876030</Id>
					<Name>ELECTRIC</Name>
				</Option>
				<Option>
					<Id>1749738897847</Id>
					<Name>KISS_AND_RIDE</Name>
				</Option>
			</OptionList>
			<OptionList>
				<Id>1751886660644</Id>
				<Name>OL_AmbientTempType</Name>
				<Option>
					<Id>1751886662187</Id>
					<Name>FIXED</Name>
				</Option>
				<Option>
					<Id>1751886672826</Id>
					<Name>AMBIENT_AIR</Name>
				</Option>
				<Option>
					<Id>1751886676413</Id>
					<Name>BUILDING</Name>
				</Option>
				<Option>
					<Id>1751886681120</Id>
					<Name>HEAT_GRID</Name>
				</Option>
				<Option>
					<Id>1751888823414</Id>
					<Name>HEAT_STORAGE</Name>
				</Option>
			</OptionList>
		</OptionLists>
		<Folders>
			<Folder>
				<Id>1752677823817</Id>
				<Name>GridConnections</Name>
			</Folder>
			<Folder>
				<Id>1752677826356</Id>
				<Name>BatteryAlgorithms</Name>
			</Folder>
			<Folder>
				<Id>1752677829820</Id>
				<Name>Actors</Name>
			</Folder>
			<Folder>
				<Id>1752677832758</Id>
				<Name>EnergyAssets</Name>
			</Folder>
			<Folder>
				<Id>1752679379816</Id>
				<Name>DataStructures</Name>
			</Folder>
			<Folder>
				<Id>1752680962144</Id>
				<Name>DataClasses</Name>
			</Folder>
			<Folder>
				<Id>1752681631114</Id>
				<Name>GIS</Name>
			</Folder>
			<Folder>
				<Id>1752681639768</Id>
				<Name>ActivityTrackers</Name>
			</Folder>
			<Folder>
				<Id>1752737189062</Id>
				<Name>Deprecated</Name>
			</Folder>
			<Folder>
				<Id>1753194088788</Id>
				<Name>HeatingManagement</Name>
			</Folder>
		</Folders>
		<ActiveObjectClasses>
			<ActiveObjectClass>
				<Id>1674662535386</Id>
				<Name>Actor</Name>
				<Folder>1752677829820</Folder>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1674662535384</Id>
					<Name>1674662535384</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089996</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1674720000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1674662535382</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1674662535385</CurrentLevel>
				<ConnectionsId>1674662535381</ConnectionsId>
				<Variables>
					<Variable Class="Parameter">
						<Id>1674662727346</Id>
						<Name>p_actorID</Name>
						<Description>Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674662727344</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674662727350</Id>
						<Name>p_actorType</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_ActorType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674662727348</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692112728484</Id>
						<Name>p_actorGroup</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1692112728482</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692112731344</Id>
						<Name>p_actorSubgroup</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<X>160</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1692112731342</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<AgentLinks>
					<AgentLink>
						<Id>1674662535381</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1674662535385</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Line>
								<Id>1674662718508</Id>
								<Name>line</Name>
								<X>20</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1674662718511</Id>
								<Name>text</Name>
								<X>50</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>ID &amp; connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658752695711</Id>
				<Name>A_SubTenant</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
				</Parameters>
				<StartupCode>energyModel.c_actors.add(this);</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658752695709</Id>
					<Name>1658752695709</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089995</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658822400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658752695707</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658752695710</CurrentLevel>
				<ConnectionsId>1658752695706</ConnectionsId>
				<Variables>
					<Variable Class="Parameter">
						<Id>1703256699222</Id>
						<Name>p_mainTenantID</Name>
						<X>60</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1703256699220</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1711030779035</Id>
						<Name>p_connectedGridConnection</Name>
						<X>60</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GridConnection</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1711030779033</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1727191476488</Id>
						<Name>p_address</Name>
						<X>60</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_Address</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1727191476486</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1703256699219</Id>
						<Name>c_GISBuildings</Name>
						<X>60</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<AgentLinks>
					<AgentLink>
						<Id>1658752695706</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1703256686877</Id>
						<Name>l_mainTenant</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>220</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>SINGLE_LINK</AgentLinkType>
						<AgentReferenceId>1660224852394</AgentReferenceId>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1658752707227</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1658752695710</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660224852394</Id>
				<Name>ConnectionOwner</Name>
				<Folder>1752677829820</Folder>
				<Import>import com.fasterxml.jackson.databind.JsonNode;</Import>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<StartupCode>energyModel.c_actors.add(this);
energyModel.c_connectionOwners.add(this);</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660224852392</Id>
					<Name>1660224852392</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089994</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660291200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660224852390</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660224852393</CurrentLevel>
				<ConnectionsId>1660224852389</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1660744173993</Id>
						<Name>v_electricityContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_DeliveryContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>OL_DeliveryContractType.ELECTRICITY_VARIABLE</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660744181560</Id>
						<Name>v_heatContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>HEAT_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660744190914</Id>
						<Name>v_methaneContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>METHANE_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660744732007</Id>
						<Name>v_electricityVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>740</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660744756249</Id>
						<Name>v_heatVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>740</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660744762793</Id>
						<Name>v_methaneVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>740</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660745490749</Id>
						<Name>v_balanceElectricity_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>970</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660745504140</Id>
						<Name>v_balanceHeat_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660745513069</Id>
						<Name>v_balanceMethane_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661174627092</Id>
						<Name>v_hydrogenContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>HYDROGEN_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661174643058</Id>
						<Name>v_balanceHydrogen_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661175214034</Id>
						<Name>v_hydrogenVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>740</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661177954454</Id>
						<Name>v_energySupplierDistrictHeat</Name>
						<X>61</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Agent</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661267039916</Id>
						<Name>j_ConnectionOwnerData</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ActorData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661267039917</Id>
						<Name>j_ActorData</Name>
						<X>60</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ActorData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1663237705961</Id>
						<Name>v_electricityVariablePrice_eurpkWh</Name>
						<X>720</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1663237725571</Id>
						<Name>v_electricitySurpluss_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666529984344</Id>
						<Name>v_priceBandsDelivery</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1024</X>
						<Y>478</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666531542032</Id>
						<Name>v_currentNodalPrice_eurpkWh</Name>
						<X>720</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666531573460</Id>
						<Name>v_congestionTariffAllowance_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666531581003</Id>
						<Name>v_updatePriceBands_b</Name>
						<Description>Not visible as it is swtiched on and of in between timesteps ( for fixed tarifs at least)</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667401120682</Id>
						<Name>v_currentCongestionType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
							<InitialValue Class="CodeValue">
								<Code>"No congestion atm"</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669024165241</Id>
						<Name>v_dieselVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>740</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669024172107</Id>
						<Name>v_balanceDiesel_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669036835710</Id>
						<Name>v_contractDelivery</Name>
						<X>940</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DeliveryContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669036845521</Id>
						<Name>v_contractTransport</Name>
						<X>940</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_TransportContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669036853577</Id>
						<Name>v_contractTax</Name>
						<X>940</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_TaxContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1673455438812</Id>
						<Name>v_enable_nfATO_b</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675864492131</Id>
						<Name>v_congestionTariff_b</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676282750780</Id>
						<Name>v_contractConnection</Name>
						<X>940</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ConnectionContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676459405457</Id>
						<Name>v_balanceElectricityDelivery_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>970</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676459420019</Id>
						<Name>v_balanceElectricityTransport_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>970</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676459433986</Id>
						<Name>v_balanceElectricityTax_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>970</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676459631796</Id>
						<Name>v_priceBandsTransport</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1024</X>
						<Y>498</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676459645240</Id>
						<Name>v_priceBandsTax</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1024</X>
						<Y>518</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676540839762</Id>
						<Name>v_capacityTariff_b</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676900973462</Id>
						<Name>v_totalElectricityUsed_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>550</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676900973464</Id>
						<Name>v_totalHeatUsed_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>550</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676900973466</Id>
						<Name>v_totalMethaneUsed_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>550</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676900973468</Id>
						<Name>v_totalHydrogenUsed_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>550</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676900973470</Id>
						<Name>v_totalDieselUsed_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>550</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679478047052</Id>
						<Name>v_methanePrice_eurpkWh</Name>
						<X>470</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679478050320</Id>
						<Name>v_hydrogenPrice_eurpkWh</Name>
						<X>470</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679560933209</Id>
						<Name>v_heatPrice_eurpkWh</Name>
						<X>470</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1666976143102</Id>
						<Name>p_coopParent</Name>
						<Description>This 'link' is used for battery management functions that use collective (Coop) load balancing!</Description>
						<X>300</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>EnergyCoop</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1666976143100</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1669036749740</Id>
						<Name>p_actorContractList</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>940</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>com.fasterxml.jackson.databind.node.ArrayNode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1669036749738</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674905911483</Id>
						<Name>p_capacityTariffApplicable</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674905911481</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674906947038</Id>
						<Name>p_capacityPrice_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674906947036</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674906962435</Id>
						<Name>p_capacityLevel_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674906962433</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674920557400</Id>
						<Name>p_congestionTariffApplicable</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674920557398</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1672145426525</Id>
						<Name>p_connectionCapacity_kW</Name>
						<Description>TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2000</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1672145426523</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562128</Id>
						<Name>p_actorID</Name>
						<Description>Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1675870562126</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562132</Id>
						<Name>p_actorType</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1675870562130</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562138</Id>
						<Name>p_electricitySupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>300</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1675870562136</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562141</Id>
						<Name>p_nfatoStart_h</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1675870562139</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562144</Id>
						<Name>p_nfatoEnd_h</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0
</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1675870562142</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675870562147</Id>
						<Name>p_nfatoLvl_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1675870562145</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676537396743</Id>
						<Name>p_gridOperator</Name>
						<X>300</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676537396741</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679492829100</Id>
						<Name>p_methaneSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>300</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679492829098</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679492842259</Id>
						<Name>p_hydrogenSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>300</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679492842257</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679492857358</Id>
						<Name>p_heatSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>300</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679492857356</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702915036278</Id>
						<Name>p_connectionOwnerType</Name>
						<X>180</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_ConnectionOwnerType</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1702915036276</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1708595094989</Id>
						<Name>p_connectionOwnerIndexNr</Name>
						<Description>Used to give every actor an index number, which can be used in buttons to go to the correct private company/connection UI.

@author: Ate</Description>
						<X>60</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1708595094987</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709048918242</Id>
						<Name>p_detailedCompany</Name>
						<Description>Is it a company that filled in the survey</Description>
						<X>60</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709048918240</Id>
								<Label>p_detailedCompany</Label>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715715075104</Id>
						<Name>b_hasPrivateUI</Name>
						<X>60</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1715715075102</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1716901949775</Id>
						<Name>p_energySupplierID</Name>
						<Description>This 'link' is used for battery management functions that use collective (Coop) load balancing!</Description>
						<X>60</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1716901949773</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1716901977342</Id>
						<Name>p_energyCoopID</Name>
						<Description>This 'link' is used for battery management functions that use collective (Coop) load balancing!</Description>
						<X>60</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1716901977340</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1745927932568</Id>
						<Name>b_dataSharingAgreed</Name>
						<X>60</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1745927932566</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1679502158516</Id>
						<Name>c_actorContracts</Name>
						<X>940</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_Contract</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1703003561048</Id>
						<Name>c_ownedGridConnections</Name>
						<X>60</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1704196760553</Id>
						<Name>c_subTenants</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>A_SubTenant</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1704895140924</Id>
						<Name>c_ownedBuildings</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Building</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660230297342</Id>
						<Name>f_connectToChild</Name>
						<X>660</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>GridConnection</Type>
						</Parameter>
						<Body>c_ownedGridConnections.add(ConnectingChildNode);&#xD;
//v_ownedGridConnection = ConnectingChildNode;&#xD;
//traceln("f_connectToChild in connectionOwner agent, connection contract type: " + v_contractConnection.connectionContractType);&#xD;
/*if (v_contractConnection.connectionContractType.equals(OL_ConnectionContractType.NFATO)) {&#xD;
	ConnectingChildNode.v_enable_nfATO_b = true;&#xD;
	ConnectingChildNode.p_nfatoStart_h = v_contractConnection.nfATOstart_h;&#xD;
	ConnectingChildNode.p_nfatoEnd_h = v_contractConnection.nfATOend_h;&#xD;
	ConnectingChildNode.p_nfatoLvl_kW = v_contractConnection.nfATOpower_kW;&#xD;
	traceln("Setting nfATO TRUE for gridConnection: " + ConnectingChildNode.p_gridNodeID);&#xD;
}*/&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660230784171</Id>
						<Name>f_connectToParentActor</Name>
						<Description>Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ</Description>
						<X>670</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//f_setContractValues();&#xD;
//f_setInitPriceBands();&#xD;
// Connect to energy supplier (can be a Coop!)&#xD;
//traceln(p_actorID + " is looking for its supplier");&#xD;
if (v_contractDelivery == null) {&#xD;
	throw new RuntimeException(&#xD;
		String.format(&#xD;
			"Actor %s has no delivery contract",&#xD;
			p_actorID&#xD;
		)&#xD;
	);&#xD;
}&#xD;
Actor mySupplier = findFirst(energyModel.pop_energySuppliers, p-&gt;p.p_actorID.equals(v_contractDelivery.contractScope)) ;&#xD;
if (mySupplier != null) {&#xD;
	((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
} else {&#xD;
	mySupplier = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(v_contractDelivery.contractScope)) ;&#xD;
	if (mySupplier != null) {		&#xD;
		((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.ELECTRICITY);&#xD;
		p_coopParent = (EnergyCoop)mySupplier;&#xD;
	}&#xD;
}&#xD;
&#xD;
if (mySupplier != null) {&#xD;
	//energySupplier.connectTo(mySupplier);&#xD;
	p_electricitySupplier = mySupplier;&#xD;
	//energySupplier.f_connectToChild(this);	&#xD;
} else { &#xD;
	/*traceln(&#xD;
		"Connection owner %s --&gt; f_connectToParentActor --&gt; no parent actor found, this should not be happening. contract holder: %s, parent: %s",&#xD;
		this,&#xD;
		v_contractDelivery.contractHolder,&#xD;
		v_contractDelivery.contractScope&#xD;
	);*/&#xD;
}&#xD;
&#xD;
// Connect to grid operator (can be a Coop!)&#xD;
if (v_contractTransport == null) {&#xD;
	throw new RuntimeException(&#xD;
		String.format(&#xD;
			"Actor %s has no transport contract",&#xD;
			p_actorID&#xD;
		)&#xD;
	);&#xD;
}&#xD;
Actor myGridoperator = findFirst(energyModel.pop_gridOperators, p-&gt;p.p_actorID.equals(v_contractTransport.contractScope)) ;&#xD;
if (myGridoperator == null) {&#xD;
	myGridoperator = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(v_contractTransport.contractScope)) ;&#xD;
}&#xD;
&#xD;
if (myGridoperator != null) {&#xD;
	p_gridOperator = myGridoperator;	&#xD;
} else { &#xD;
	/*traceln(&#xD;
	    "Connection owner --&gt; f_connectToParentActor --&gt; no grid operator found, this should not be happening. contract holder: %s, operator: %s",&#xD;
	    v_contractTransport.contractHolder,&#xD;
	    v_contractTransport.contractScope&#xD;
	);*/&#xD;
}&#xD;
&#xD;
//traceln(p_actorID + " finished looking for supplier");&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660742520265</Id>
						<Name>f_updateFinances</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//TODO: Diesel costs still missing!! [GH 21/11/2022] -&gt; Won't be in anylogic model, but in postprocessing.&#xD;
&#xD;
// get current energy flows&#xD;
f_gatherEnergyFlows();&#xD;
&#xD;
//double currentPowerDrawn_kW = v_electricityVolume_kWh / energyModel.p_timeStep_h;&#xD;
double transactionCostDelivery_eur = 0;&#xD;
double transactionCostTransport_eur = 0;&#xD;
double transactionCostTax_eur = 0;&#xD;
&#xD;
if (v_electricityVolume_kWh &gt;= 0) {&#xD;
	//transactionCostDelivery_eur = v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostDelivery_eur = (v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;&#xD;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;&#xD;
	&#xD;
	//transactionCostTransport_eur = v_priceBandsTransport.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;&#xD;
	v_balanceElectricityTransport_eur -= transactionCostTransport_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostTransport_eur;&#xD;
	&#xD;
	//transactionCostTax_eur = v_priceBandsTax.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostTax_eur = v_contractTax.deliveryTax_eurpkWh * v_electricityVolume_kWh;&#xD;
	//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.deliveryTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);&#xD;
	v_balanceElectricityTax_eur -= transactionCostTax_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostTax_eur;&#xD;
} else {&#xD;
	//transactionCostDelivery_eur = v_priceBandsDelivery.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostDelivery_eur = (v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;&#xD;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;&#xD;
	&#xD;
	//transactionCostTransport_eur = v_priceBandsTransport.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;&#xD;
	v_balanceElectricityTransport_eur -= transactionCostTransport_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostTransport_eur;&#xD;
	&#xD;
	//transactionCostTax_eur = v_priceBandsTax.floorEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	transactionCostTax_eur = v_contractTax.feedinTax_eurpkWh * v_electricityVolume_kWh;&#xD;
	//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);&#xD;
	v_balanceElectricityTax_eur -= transactionCostTax_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostTax_eur;&#xD;
}&#xD;
&#xD;
/*// trigger transaction with supplier/Coop&#xD;
if( p_energySupplier != null) {&#xD;
	//Agent energySupplier = p_energySupplier;&#xD;
	if( p_energySupplier instanceof EnergySupplier) {&#xD;
		EnergySupplier energySupplier = (EnergySupplier)p_energySupplier;&#xD;
		double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);&#xD;
		v_balanceElectricity_eur -= transactionCost_eur;&#xD;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);&#xD;
		v_balanceMethane_eur -= transactionCost_eur;&#xD;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_hydrogenVolume_kWh, v_hydrogenContractType);&#xD;
		v_balanceHydrogen_eur -= transactionCost_eur;&#xD;
	} else if ( p_energySupplier instanceof EnergyCoop ) {&#xD;
		EnergyCoop energySupplier = (EnergyCoop)p_energySupplier;&#xD;
		double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);&#xD;
		v_balanceElectricity_eur -= transactionCost_eur;&#xD;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);&#xD;
		v_balanceMethane_eur -= transactionCost_eur;&#xD;
		transactionCost_eur = energySupplier.f_doEnergyTransaction(v_hydrogenVolume_kWh, v_hydrogenContractType);&#xD;
		v_balanceHydrogen_eur -= transactionCost_eur;&#xD;
	}&#xD;
} else {&#xD;
	traceln("Connection owner " + this + " has no energy supplier!");&#xD;
}*/&#xD;
&#xD;
// Also needs to include congestion tariffs! &#xD;
/*if ( p_congestionTariffApplicable ) {&#xD;
	double congestionCost_eur = v_electricityVolume_kWh * v_currentCongestionTariffWhenBuying_eurpkWh;&#xD;
	v_balanceElectricityTransport_eur -= congestionCost_eur; // TODO: This transaction is 'one-sided'; the gridOperator is not yet receiving/giving this money!!&#xD;
}*/&#xD;
&#xD;
// trigger district heat accounting with specified heat supplier agent&#xD;
/*&#xD;
if( v_energySupplierDistrictHeat instanceof EnergySupplier) {&#xD;
	EnergySupplier energySupplier = (EnergySupplier)v_energySupplierDistrictHeat;&#xD;
	double transactionCost_eur = 0;//energySupplier.f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);&#xD;
	v_balanceHeat_eur -= transactionCost_eur;&#xD;
}&#xD;
else if( v_energySupplierDistrictHeat instanceof EnergyCoop ) {&#xD;
	EnergyCoop energySupplier = (EnergyCoop)v_energySupplierDistrictHeat;&#xD;
	double transactionCost_eur = 0;// energySupplier.f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);&#xD;
	v_balanceHeat_eur -= transactionCost_eur;&#xD;
}&#xD;
&#xD;
v_balanceDiesel_eur += v_dieselVolume_kWh * .196; // TODO: UGLY HACK&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660743030872</Id>
						<Name>f_gatherEnergyFlows</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// reset eenrgy flows&#xD;
v_electricityVolume_kWh = 0;&#xD;
v_heatVolume_kWh = 0;&#xD;
v_methaneVolume_kWh = 0;&#xD;
v_hydrogenVolume_kWh = 0;&#xD;
v_dieselVolume_kWh = 0;&#xD;
&#xD;
&#xD;
// gather electricity flows, convert to volume-per-timestep to facilitate financial transactions&#xD;
for(GridConnection n :  gridConnections.getConnections() ) {&#xD;
	v_electricityVolume_kWh += (n.v_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - n.v_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY)) * energyModel.p_timeStep_h;&#xD;
	v_heatVolume_kWh += (n.v_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HEAT) - n.v_currentProductionFlows_kW.get(OL_EnergyCarriers.HEAT)) * energyModel.p_timeStep_h;&#xD;
	v_methaneVolume_kWh += (n.v_currentConsumptionFlows_kW.get(OL_EnergyCarriers.METHANE) - n.v_currentProductionFlows_kW.get(OL_EnergyCarriers.METHANE)) * energyModel.p_timeStep_h;&#xD;
	v_hydrogenVolume_kWh += (n.v_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HYDROGEN) - n.v_currentProductionFlows_kW.get(OL_EnergyCarriers.HYDROGEN)) * energyModel.p_timeStep_h;&#xD;
	v_dieselVolume_kWh += (n.v_currentConsumptionFlows_kW.get(OL_EnergyCarriers.DIESEL) - n.v_currentProductionFlows_kW.get(OL_EnergyCarriers.DIESEL)) * energyModel.p_timeStep_h;&#xD;
}&#xD;
&#xD;
v_totalElectricityUsed_kWh += v_electricityVolume_kWh;&#xD;
v_totalHeatUsed_kWh += v_heatVolume_kWh;&#xD;
v_totalMethaneUsed_kWh += v_methaneVolume_kWh;&#xD;
v_totalHydrogenUsed_kWh += v_hydrogenVolume_kWh;&#xD;
v_totalDieselUsed_kWh += v_dieselVolume_kWh;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1663237679579</Id>
						<Name>f_updateIncentives</Name>
						<X>660</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (v_contractDelivery.deliveryContractType==OL_DeliveryContractType.ELECTRICITY_VARIABLE) {&#xD;
	if (p_electricitySupplier instanceof EnergySupplier) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((EnergySupplier)p_electricitySupplier).f_getVariableEnergyPrice();&#xD;
	} else if (p_electricitySupplier instanceof EnergyCoop) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_electricitySupplier).f_getVariableEnergyPrice();&#xD;
	}&#xD;
}&#xD;
&#xD;
// Transport pricing (nodal pricing) is 'pushed' to the connectionOwner from the GridNode, so don't have to ask for the price here.&#xD;
/*if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {&#xD;
	if (p_gridOperator instanceof GridOperator) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((GridOperator)p_gridOperator).f_getVariableEnergyPrice(v_electricityContractType, false);&#xD;
	} else if (p_gridOperator instanceof EnergyCoop) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_gridOperator).f_getEnergyPrice(v_electricityContractType, false);&#xD;
	}&#xD;
}*/	&#xD;
&#xD;
//f_setElectricityPriceBands();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666529572357</Id>
						<Name>f_setElectricityPriceBands</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>680</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE)) {&#xD;
	v_priceBandsDelivery.replace(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );&#xD;
	v_priceBandsDelivery.replace(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );&#xD;
}&#xD;
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {&#xD;
	v_priceBandsTransport.replace(-9999999.0, v_currentNodalPrice_eurpkWh);&#xD;
	v_priceBandsTransport.replace(9999999.0, v_currentNodalPrice_eurpkWh);&#xD;
}&#xD;
&#xD;
if (v_contractTax.proportionalTax_pct != 0.0 &amp;&amp; (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE) || v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING))) { // Add VAT (BTW), over all other cost components. At this point assumes there are only 2 price-bands, for delivery and feedin! No other 'steps'! Not true for capacity-tariff (bandbreedtemodel)!&#xD;
	v_priceBandsTax.replace(-9999999.0, v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractTax.feedinTax_eurpkWh));&#xD;
	v_priceBandsTax.replace(9999999.0, v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractTax.deliveryTax_eurpkWh));&#xD;
}&#xD;
	</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1669036739539</Id>
						<Name>f_setContractValues</Name>
						<X>670</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double methaneDeliveryPrice_eurpkWh = 0.0;&#xD;
double methaneDeliveryTax_eurpkWh = 0.0;&#xD;
double methaneVAT_pct = 0.0;&#xD;
double hydrogenDeliveryPrice_eurpkWh = 0.0;&#xD;
double hydrogenDeliveryTax_eurpkWh = 0.0;&#xD;
double hydrogenVAT_pct = 0.0;&#xD;
double heatDeliveryPrice_eurpkWh = 0.0;&#xD;
double heatDeliveryTax_eurpkWh = 0.0;&#xD;
double heatVAT_pct = 0.0;&#xD;
&#xD;
//if( p_actorContractList == null) {&#xD;
	//traceln( "No contract data for connectionOwner " + p_actorID );&#xD;
	//traceln( "Creating default contracts!");&#xD;
&#xD;
	String defaultSupplier = "defaultSupplier";&#xD;
	if (p_energyCoopID != null){&#xD;
		defaultSupplier = p_energyCoopID;&#xD;
	}&#xD;
	String defaultGridOperator = "defaultGridOperator";&#xD;
	String defaultGovernmentLayer = "defaultGovernmentLayer";&#xD;
	double annualFee_eur = 0;&#xD;
	double deliveryPrice_eurpkWh = 0.2;&#xD;
	double feedinPrice_eurpkWh = 0.2;&#xD;
	double bandwidthTreshold_kW = 0.0;&#xD;
	double bandwidthTariff_eurpkWh = 0.0;&#xD;
	double nfATOstart_h = 0.0;&#xD;
	double nfATOend_h = 0.0;&#xD;
	double nfATOcapacity_kW = 0.0;&#xD;
	double taxDelivery_eurpkWh = 0.13;&#xD;
	double taxFeedin_eurpkWh = 0.0;&#xD;
	double proportionalTax_pct = 0.21;&#xD;
&#xD;
	/*if (p_actorID.equals("logistics0owner")){&#xD;
		v_contractDelivery = new J_DeliveryContract("coop1", OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarriers.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
	} else {&#xD;
		v_contractDelivery = new J_DeliveryContract(defaultSupplier, OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarriers.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
	}*/&#xD;
	v_contractDelivery = new J_DeliveryContract(defaultSupplier, OL_DeliveryContractType.ELECTRICITY_FIXED, OL_EnergyCarriers.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
&#xD;
	v_contractTransport = new J_TransportContract(defaultGridOperator, OL_TransportContractType.DEFAULT , OL_EnergyCarriers.ELECTRICITY, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);&#xD;
&#xD;
	v_contractConnection = new J_ConnectionContract(defaultGridOperator, OL_ConnectionContractType.DEFAULT, OL_EnergyCarriers.ELECTRICITY, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);&#xD;
&#xD;
	v_contractTax = new J_TaxContract(defaultGovernmentLayer, OL_EnergyCarriers.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);&#xD;
&#xD;
	c_actorContracts.add(v_contractDelivery);&#xD;
	c_actorContracts.add(v_contractTransport);&#xD;
	c_actorContracts.add(v_contractConnection);&#xD;
	c_actorContracts.add(v_contractTax);&#xD;
/*&#xD;
} else {&#xD;
	for( JsonNode contractJson : p_actorContractList) {&#xD;
	//traceln("Contract hashmap l: " + l);&#xD;
	OL_ContractType contractService = OL_ContractType.valueOf(contractJson.required("contractType").textValue());&#xD;
	String contractScope = contractJson.required( "contractScope" ).textValue();&#xD;
	OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.valueOf(contractJson.required("energyCarrier").textValue());&#xD;
	double annualFee_eur = contractJson.required("annualFee_eur").doubleValue();&#xD;
	Actor mySupplier = null;&#xD;
	if (energyCarrier.equals(OL_EnergyCarriers.ELECTRICITY)){&#xD;
		switch( contractService ) {&#xD;
			case DELIVERY:&#xD;
				//String contractScope = (String)l.get( "contract_scope" );&#xD;
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.get("deliveryContractType").textValue());&#xD;
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();&#xD;
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();&#xD;
				v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarriers.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
				//traceln("Delivery contract: " + v_contractDelivery);&#xD;
				c_actorContracts.add(v_contractDelivery);&#xD;
			break;&#xD;
			case TRANSPORT:&#xD;
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.get("transportContractType").textValue());&#xD;
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();&#xD;
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();&#xD;
				v_contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			&#xD;
				c_actorContracts.add(v_contractTransport);&#xD;
			break;&#xD;
			case CONNECTION:&#xD;
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());&#xD;
				//traceln("Initializing connection contract with ConnectionContractType: " + connectionContractType);&#xD;
				double nfATOstart_h = contractJson.path("nfATO_starttime_h").doubleValue();&#xD;
				double nfATOend_h = contractJson.path("nfATO_endtime_h").doubleValue();&#xD;
				double nfATOcapacity_kW = contractJson.path("nfATO_capacity_kW").doubleValue();&#xD;
				v_contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);&#xD;
				c_actorContracts.add(v_contractConnection);&#xD;
			break;&#xD;
			case TAX:&#xD;
				double taxDelivery_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();&#xD;
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();&#xD;
				double proportionalTax_pct = contractJson.required("proportionalTax_pct").doubleValue();&#xD;
				v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarriers.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);&#xD;
				c_actorContracts.add(v_contractTax);&#xD;
			break;&#xD;
			default:&#xD;
			&#xD;
			break;		&#xD;
		}&#xD;
	//} else if (energyCarrier.equals(OL_EnergyCarriers.METHANE)){&#xD;
	} else {&#xD;
		switch( contractService ) {&#xD;
			case DELIVERY:					&#xD;
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.required("deliveryContractType").textValue());&#xD;
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();&#xD;
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();&#xD;
				J_DeliveryContract contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, energyCarrier, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
				//traceln("Delivery contract: " + v_contractDelivery);&#xD;
				c_actorContracts.add(contractDelivery);&#xD;
				//String contractScope = (String)l.get( "contractScope" );&#xD;
				mySupplier = findFirst(energyModel.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
				if (mySupplier != null) {&#xD;
					((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
				} else {&#xD;
					mySupplier = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergyCoop)mySupplier).f_connectToChild(this,energyCarrier);	&#xD;
						//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
					}&#xD;
				}&#xD;
				//traceln("Methane supplier: " + contractScope + " for actor " + p_actorID );&#xD;
				if (mySupplier != null) {&#xD;
					//energySupplier.connectTo(mySupplier);&#xD;
					if (energyCarrier==OL_EnergyCarriers.METHANE) {&#xD;
						p_methaneSupplier = mySupplier;&#xD;
						methaneDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HYDROGEN) {&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						hydrogenDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HEAT) {&#xD;
						p_heatSupplier = mySupplier;&#xD;
						heatDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					}&#xD;
					//traceln("MethaneSupplier " + mySupplier);&#xD;
					//energySupplier.f_connectToChild(this);	&#xD;
				} else { &#xD;
					traceln("Connection owner --&gt; f_connectToParentActor --&gt; " + energyCarrier + " supplier not found, this should not be happening");&#xD;
				}&#xD;
			break;&#xD;
			case TAX:&#xD;
				double DeliveryTax_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();&#xD;
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();&#xD;
				double VAT_pct = contractJson.required("proportionalTax_pct").doubleValue();&#xD;
				J_TaxContract contractTax = new J_TaxContract(contractScope, energyCarrier, DeliveryTax_eurpkWh, taxFeedin_eurpkWh, VAT_pct, annualFee_eur);&#xD;
				c_actorContracts.add(contractTax);&#xD;
				if (energyCarrier==OL_EnergyCarriers.METHANE) {						&#xD;
						methaneDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;&#xD;
						methaneVAT_pct=VAT_pct;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HYDROGEN) {&#xD;
						hydrogenDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;&#xD;
						hydrogenVAT_pct=VAT_pct;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HEAT) {&#xD;
						heatVAT_pct=VAT_pct;&#xD;
					}&#xD;
			break;&#xD;
			case CONNECTION:&#xD;
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());&#xD;
				J_ConnectionContract contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, 0.0, 0.0, 0.0, annualFee_eur);&#xD;
				c_actorContracts.add(contractConnection);&#xD;
				&#xD;
				&#xD;
					&#xD;
			break;&#xD;
			case TRANSPORT:&#xD;
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.required("transportContractType").textValue());&#xD;
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();&#xD;
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();&#xD;
				J_TransportContract contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			&#xD;
				c_actorContracts.add(contractTransport);&#xD;
			break;&#xD;
			default:&#xD;
				traceln("Unrecognized contract type!");&#xD;
			break;	&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
*/&#xD;
// Calculate nett gas and hydrogen price&#xD;
v_methanePrice_eurpkWh = (methaneDeliveryPrice_eurpkWh + methaneDeliveryTax_eurpkWh) * (1 + methaneVAT_pct);&#xD;
v_hydrogenPrice_eurpkWh = (hydrogenDeliveryPrice_eurpkWh + hydrogenDeliveryTax_eurpkWh) * (1 + hydrogenVAT_pct);&#xD;
v_heatPrice_eurpkWh = (heatDeliveryPrice_eurpkWh + heatDeliveryTax_eurpkWh) * (1 + heatVAT_pct);&#xD;
		/*} else if (energyCarrier.equals(OL_EnergyCarriers.HYDROGEN)){&#xD;
			switch( contractService ) {&#xD;
				case DELIVERY:&#xD;
					OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf((String)l.get("deliveryContractType"));&#xD;
					double deliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");&#xD;
					double feedinPrice_eurpkWh = (double)l.get("feedinPrice_eurpkWh");&#xD;
					v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarriers.HYDROGEN, deliveryPrice_eurpkWh, feedinPrice_eurpkWh);&#xD;
					//traceln("Delivery contract: " + v_contractDelivery);&#xD;
					c_actorContracts.add(v_contractDelivery);&#xD;
					mySupplier = findFirst(main.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
					} else {&#xD;
						mySupplier = findFirst(main.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
						if (mySupplier != null) {&#xD;
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.HYDROGEN);	&#xD;
							//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
						}&#xD;
					}&#xD;
					if (mySupplier != null) {&#xD;
						//energySupplier.connectTo(mySupplier);&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						//energySupplier.f_connectToChild(this);	&#xD;
					} else { &#xD;
						traceln("Connection owner --&gt; f_connectToParentActor --&gt; hydrogen supplier not found, this should not be happening");&#xD;
					}&#xD;
				break;&#xD;
				case TAX:&#xD;
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");&#xD;
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");&#xD;
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");&#xD;
					v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarriers.HYDROGEN, hydrogenDeliveryTax_eurpkWh, 0, hydrogenVAT_pct);&#xD;
					c_actorContracts.add(v_contractTax);&#xD;
				break;&#xD;
				default:&#xD;
				&#xD;
				break;	&#xD;
			}	&#xD;
		} else if (energyCarrier.equals(OL_EnergyCarriers.HEAT)){&#xD;
			switch( contractService ) {&#xD;
				case DELIVERY:&#xD;
					heatDeliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");&#xD;
					mySupplier = findFirst(main.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
					} else {&#xD;
						mySupplier = findFirst(main.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
						if (mySupplier != null) {&#xD;
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.HYDROGEN);	&#xD;
							//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
						}&#xD;
					}&#xD;
					if (mySupplier != null) {&#xD;
						//energySupplier.connectTo(mySupplier);&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						//energySupplier.f_connectToChild(this);	&#xD;
					} else { &#xD;
						traceln("Connection owner --&gt; f_connectToParentActor --&gt; heat supplier not found, this should not be happening");&#xD;
					}&#xD;
				break;&#xD;
				case TAX:&#xD;
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");&#xD;
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");&#xD;
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");&#xD;
				break;&#xD;
				default:&#xD;
				&#xD;
				break;	&#xD;
			}	&#xD;
		}*/&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1674919795415</Id>
						<Name>f_setInitPriceBands</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>670</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_priceBandsDelivery = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsDelivery.put(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh);&#xD;
v_priceBandsDelivery.put(0.0, 0.0);&#xD;
v_priceBandsDelivery.put(9999999.0,  v_contractDelivery.deliveryPrice_eurpkWh);&#xD;
&#xD;
v_priceBandsTransport = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsTransport.put(-9999999.0, 0.0);&#xD;
v_priceBandsTransport.put(0.0, 0.0);&#xD;
v_priceBandsTransport.put(9999999.0, 0.0);&#xD;
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.BANDWIDTH)) {&#xD;
	//traceln("Setting capacity tariff for " + p_actorID);&#xD;
	v_priceBandsTransport.put(-9999999.0, v_contractTransport.bandwidthTariff_eurpkWh);&#xD;
	v_priceBandsTransport.put(-v_contractTransport.bandwidthTreshold_kW, 0.0);&#xD;
	v_priceBandsTransport.put(0.0, 0.0);&#xD;
	v_priceBandsTransport.put(v_contractTransport.bandwidthTreshold_kW, 0.0);	&#xD;
	v_priceBandsTransport.put(9999999.0, v_contractTransport.bandwidthTariff_eurpkWh);&#xD;
	//traceln(v_priceBandsTransport.toString());&#xD;
} else {&#xD;
	v_priceBandsTransport.put(-9999999.0, 0.0);&#xD;
	v_priceBandsTransport.put(0.0, 0.0);&#xD;
	v_priceBandsTransport.put(9999999.0, 0.0);&#xD;
}&#xD;
&#xD;
v_priceBandsTax = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsTax.put(-9999999.0, v_contractTax.feedinTax_eurpkWh);&#xD;
v_priceBandsTax.put(0.0, 0.0);&#xD;
v_priceBandsTax.put(9999999.0, v_contractTax.deliveryTax_eurpkWh);&#xD;
&#xD;
/*&#xD;
if( p_congestionTariffApplicable ){&#xD;
	v_priceBandsDelivery.put(- p_capacityLevel_kW, 0.0);&#xD;
	v_priceBandsDelivery.put(p_capacityLevel_kW, 0.0);&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675011274392</Id>
						<Name>f_getElectricityPrice</Name>
						<X>660</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentPowerDrawn_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double price_eurpkWh = 0;&#xD;
if( currentPowerDrawn_kW &gt;= 0 ){&#xD;
	//Delivery&#xD;
	/*if( v_priceBandsDelivery.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsDelivery.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
	price_eurpkWh += v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;&#xD;
&#xD;
	//Transport&#xD;
	/*if( v_priceBandsTransport.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsTransport.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsTransport.ceilingEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
&#xD;
	price_eurpkWh += v_currentNodalPrice_eurpkWh;&#xD;
	//Tax&#xD;
	/*if( v_priceBandsTax.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsTax.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsTax.ceilingEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
&#xD;
	price_eurpkWh += v_contractTax.deliveryTax_eurpkWh + v_contractTax.proportionalTax_pct;// * (v_contractTax.deliveryTax_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh)&#xD;
	price_eurpkWh = price_eurpkWh * (1+v_contractTax.proportionalTax_pct);&#xD;
}&#xD;
else {&#xD;
	//Delivery&#xD;
	/*if( v_priceBandsDelivery.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsDelivery.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsDelivery.floorEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
&#xD;
	price_eurpkWh += v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;&#xD;
	//Transport&#xD;
	/*if( v_priceBandsTransport.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsTransport.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsTransport.floorEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
	price_eurpkWh += v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh;&#xD;
	//Tax&#xD;
	/*if( v_priceBandsTax.ceilingKey(currentPowerDrawn_kW) == currentPowerDrawn_kW ){&#xD;
		price += v_priceBandsTax.higherEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}&#xD;
	else{&#xD;
		price += v_priceBandsTax.floorEntry( currentPowerDrawn_kW ).getValue();&#xD;
	}*/&#xD;
	price_eurpkWh += v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct;// * (v_contractTax.deliveryTax_eurpkWh + v_currentNodalPrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh)&#xD;
	price_eurpkWh = price_eurpkWh * (1+v_contractTax.proportionalTax_pct);&#xD;
}&#xD;
//traceln(price_eurpkWh);&#xD;
return price_eurpkWh;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675012472432</Id>
						<Name>f_getAvailablePowerAtPrice</Name>
						<X>660</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentPowerDrawn_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double availablePower_kW;//, availablePowerDelivery, availablePowerTransport, availablePowerTax = 0;&#xD;
&#xD;
/*if( currentPowerDrawn_kW &gt;= 0 ){&#xD;
	// Check if one of the pricebands is at a 'breakpoint'	&#xD;
	if( currentPowerDrawn_kW == v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW )){&#xD;
		availablePowerDelivery = v_priceBandsDelivery.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	else {&#xD;
		availablePowerDelivery = v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}&#xD;
	if( currentPowerDrawn_kW == v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW )){&#xD;
		availablePowerTransport = v_priceBandsTransport.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	else {&#xD;
		availablePowerTransport = v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}&#xD;
	if( currentPowerDrawn_kW == v_priceBandsTax.ceilingKey( currentPowerDrawn_kW )){&#xD;
		availablePowerTax = v_priceBandsTax.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	else {&#xD;
		availablePowerTax = v_priceBandsTax.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}		&#xD;
}&#xD;
else {&#xD;
	if( currentPowerDrawn_kW == v_priceBandsDelivery.floorKey( currentPowerDrawn_kW )){&#xD;
		availablePowerDelivery = v_priceBandsDelivery.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	&#xD;
	else {&#xD;
		availablePowerDelivery = v_priceBandsDelivery.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}&#xD;
	&#xD;
	if( currentPowerDrawn_kW == v_priceBandsTransport.floorKey( currentPowerDrawn_kW )){&#xD;
		availablePowerTransport = v_priceBandsTransport.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	&#xD;
	else {&#xD;
		availablePowerTransport = v_priceBandsTransport.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}&#xD;
	&#xD;
	if( currentPowerDrawn_kW == v_priceBandsTax.floorKey( currentPowerDrawn_kW )){&#xD;
		availablePowerTax = v_priceBandsTax.higherKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	} 	&#xD;
	else {&#xD;
		availablePowerTax = v_priceBandsTax.ceilingKey( currentPowerDrawn_kW ) - currentPowerDrawn_kW;&#xD;
	}		&#xD;
	&#xD;
}*/&#xD;
&#xD;
//availablePower = min(min(availablePowerDelivery, availablePowerTransport), availablePowerTax);&#xD;
if( currentPowerDrawn_kW &gt;= 0 ){ // Only check if current power is positive or negative&#xD;
	availablePower_kW = 1e10; // 'Infinite', in this case 10 TW. Something else should be the limiting factor on power.&#xD;
} else {&#xD;
	availablePower_kW = -currentPowerDrawn_kW;&#xD;
}&#xD;
&#xD;
//traceln("Still using treemaps in f_getAvailablePowerAtPrice!");&#xD;
return availablePower_kW;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675068408612</Id>
						<Name>f_getAveragedElectricityPrice</Name>
						<Description>Returns the average electricity price of a given additional power demand above a current demand, taking all tariff structures into accounts. Mainly used for heatpumps that only operate at full </Description>
						<X>660</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>baseDemand_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>requestedPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double price_eurph = 0;&#xD;
double availablePower_kW = 0;&#xD;
double addedPrice_eurpkWh;&#xD;
double addedPower_kW;&#xD;
double currentPowerRequestLevel_kW;&#xD;
&#xD;
boolean isDemandMet = false;&#xD;
double loopcount = 1;&#xD;
&#xD;
//traceln( " ");&#xD;
//traceln( "starting demand: " + baseDemand_kW);&#xD;
//traceln("Power request: " + requestedPower_kW);&#xD;
&#xD;
while (! isDemandMet ) { // Loop door de treemap tot je requestedPower_kW bereikt&#xD;
	//traceln( " ");&#xD;
	//traceln( "loop " + loopcount + ", available Power: " + availablePower_kW);&#xD;
	currentPowerRequestLevel_kW = roundToDecimal( availablePower_kW + baseDemand_kW, 5);&#xD;
	//traceln("Current power request level = " + currentPowerRequestLevel_kW) ;&#xD;
	&#xD;
	addedPrice_eurpkWh = f_getElectricityPrice(currentPowerRequestLevel_kW);&#xD;
	addedPower_kW = f_getAvailablePowerAtPrice(currentPowerRequestLevel_kW);&#xD;
	//traceln("Added power " + addedPower_kW);&#xD;
	&#xD;
	if(addedPower_kW + availablePower_kW &gt;= requestedPower_kW) {&#xD;
		addedPower_kW = requestedPower_kW - availablePower_kW;&#xD;
		price_eurph += addedPrice_eurpkWh * addedPower_kW;&#xD;
		isDemandMet = true;&#xD;
	} &#xD;
	else {&#xD;
		availablePower_kW += addedPower_kW;&#xD;
		price_eurph += addedPrice_eurpkWh * addedPower_kW;		&#xD;
		loopcount += 1;&#xD;
	}&#xD;
	//traceln("price added " + addedPrice_eurpkWh);&#xD;
}&#xD;
//traceln("total price " + price_eurph);&#xD;
//getEngine().pause();&#xD;
traceln("Still using treemaps in f_getAveragedElectricityPrice!");&#xD;
&#xD;
return price_eurph / requestedPower_kW;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1679478105441</Id>
						<Name>f_getMethanePrice</Name>
						<X>660</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( v_methanePrice_eurpkWh == 0.0 ){&#xD;
	throw new IllegalStateException("Missing methane contracts! No methane price available for this connection!");&#xD;
}&#xD;
return v_methanePrice_eurpkWh;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1679478116012</Id>
						<Name>f_getHydrogenPrice</Name>
						<X>660</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( v_hydrogenPrice_eurpkWh == 0.0 ){&#xD;
	throw new IllegalStateException("Missing hydrogen contracts! No hydrogen price available for this connection!");&#xD;
}&#xD;
return v_hydrogenPrice_eurpkWh;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1704371830113</Id>
						<Name>f_resetStates</Name>
						<X>660</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Reset energytotals&#xD;
//v_totalElectricityUsed_kWh = v_totalHeatUsed_kWh = v_totalMethaneUsed_kWh = v_totalHydrogenUsed_kWh = v_totalDieselUsed_kWh = 0;&#xD;
// Reset finances&#xD;
//v_balanceElectricity_eur = v_balanceElectricityDelivery_eur = v_balanceElectricityTransport_eur = v_balanceElectricityTax_eur = 0;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716897235822</Id>
						<Name>f_initialize</Name>
						<X>660</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// What happens if this function is triggered multiple times per connectionOwner?&#xD;
f_setContractValues();&#xD;
f_connectToParentActor();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1718289254859</Id>
						<Name>f_getOwnedGridConnections</Name>
						<X>60</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return this.c_ownedGridConnections;</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1660224852389</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-70</X>
						<Y>-110</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>TreeMap&lt;Double, Double&gt;</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1660225105554</Id>
						<Name>energySupplier</Name>
						<Description>Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>-70</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>SINGLE_LINK</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660730128545</Id>
						<Name>energyModel</Name>
						<X>60</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660224852393</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Line>
								<Id>1667917035332</Id>
								<Name>line1</Name>
								<X>920</X>
								<Y>60</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667917035334</Id>
								<Name>text1</Name>
								<X>950</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Contracts</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1674921588187</Id>
								<Name>rectangle5</Name>
								<X>510</X>
								<Y>630</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>2</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DASHED</LineStyle>
								<Width>730</Width>
								<Height>189.967</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1674921588189</Id>
								<Name>text12</Name>
								<X>730</X>
								<Y>660</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-8355712</Color>
								<Text>Current consumption volumes</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1674921619300</Id>
								<Name>text13</Name>
								<X>970</X>
								<Y>660</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-8355712</Color>
								<Text>Electricity financial accounting</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1675071708039</Id>
								<Name>button</Name>
								<X>660</X>
								<Y>350</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="140" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>traceln("f_getAveragedElectricityPrice(-5, 10): " + f_getAveragedElectricityPrice(-5, 10));
traceln("f_getAveragedElectricityPrice(-5, 5): " + f_getAveragedElectricityPrice(-5, 5));
traceln("f_getAveragedElectricityPrice(-5, 4): " + f_getAveragedElectricityPrice(-5, 4));

/*
traceln("f_getAvailablePowerAtPrice(5) " + f_getAvailablePowerAtPrice(5));
traceln("f_getElectricityPrice(5) " + f_getElectricityPrice(5));
traceln("f_getAvailablePowerAtPrice(0) " + f_getAvailablePowerAtPrice(0));
traceln("f_getElectricityPrice(0) " + f_getElectricityPrice(0));
traceln("f_getAvailablePowerAtPrice(-1) " + f_getAvailablePowerAtPrice(-1));
traceln("f_getElectricityPrice(-1) " + f_getElectricityPrice(-1));
traceln("f_getAvailablePowerAtPrice(-10) " + f_getAvailablePowerAtPrice(-10));
traceln("f_getElectricityPrice(-10) " + f_getElectricityPrice(-10));
*/
</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>test avg price function</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1676900973459</Id>
								<Name>text14</Name>
								<X>540</X>
								<Y>660</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-8355712</Color>
								<Text>Total consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1714643374614</Id>
						<Name>va_ConnectionOwner</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660731375016</Id>
				<Name>EnergyCoop</Name>
				<AdditionalClassCode>public OL_ResultScope getScope(){return OL_ResultScope.ENERGYCOOP;}&#xD;
public J_RapidRunData getRapidRunData(){return v_rapidRunData;}&#xD;
public J_LiveData getLiveData(){return v_liveData;}&#xD;
public J_RapidRunData getPreviousRapidRunData(){return v_previousRunData;}</AdditionalClassCode>
				<Folder>1752677829820</Folder>
				<Import>import com.fasterxml.jackson.databind.JsonNode;

import zeroPackage.ZeroMath;
//import zeroPackage.ZeroAccumulator;

import java.util.EnumSet;</Import>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<Implements>I_EnergyData</Implements>
				<StartupCode>v_liveData = new J_LiveData(this);
v_liveConnectionMetaData = new J_ConnectionMetaData(this);
v_liveAssetsMetaData = new J_AssetsMetaData(this);
v_liveData.connectionMetaData = v_liveConnectionMetaData;
v_liveData.assetsMetaData = v_liveAssetsMetaData;
</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660731375014</Id>
					<Name>1660731375014</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089993</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660731375012</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660731375015</CurrentLevel>
				<ConnectionsId>1660731375011</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1667983361361</Id>
						<Name>v_energyPassedThrough_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667983361363</Id>
						<Name>v_electricityVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-319</X>
						<Y>919</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667983361365</Id>
						<Name>v_heatVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-319</X>
						<Y>939</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667983361367</Id>
						<Name>v_methaneVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-319</X>
						<Y>959</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667983361369</Id>
						<Name>v_electricitySurplus_kW</Name>
						<X>63</X>
						<Y>619</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667983361389</Id>
						<Name>v_hydrogenVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-319</X>
						<Y>979</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587453344</Id>
						<Name>v_balanceMembers_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2350</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587453348</Id>
						<Name>v_balanceMethane_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587453350</Id>
						<Name>v_balanceHeat_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587453352</Id>
						<Name>v_balanceHydrogen_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587944764</Id>
						<Name>v_electricityContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>OL_ContractType.ELECTRICITY_VARIABLE</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587944767</Id>
						<Name>v_heatContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>HEAT_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587944769</Id>
						<Name>v_methaneContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>METHANE_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668587944771</Id>
						<Name>v_hydrogenContractType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ContractType</Type>
							<InitialValue Class="CodeValue">
								<Code>HYDROGEN_FIXED</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669024099515</Id>
						<Name>v_dieselVolume_kWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-320</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669024644541</Id>
						<Name>v_balanceDiesel_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669037269503</Id>
						<Name>v_contractEnergyCoop</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669035973258</Id>
						<Name>v_allowedCapacity_kW</Name>
						<X>62</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669037284540</Id>
						<Name>v_contractEnergySupplier</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669037300744</Id>
						<Name>v_contractGridOperator</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670254434536</Id>
						<Name>v_enable_nfATO_b</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675335053811</Id>
						<Name>j_ActorData</Name>
						<X>62</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ActorData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552003055</Id>
						<Name>v_contractDelivery</Name>
						<X>390</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DeliveryContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552003057</Id>
						<Name>v_contractTransport</Name>
						<X>390</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_TransportContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552003059</Id>
						<Name>v_contractTax</Name>
						<X>390</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_TaxContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552003061</Id>
						<Name>v_contractConnection</Name>
						<X>390</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ConnectionContract</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552997739</Id>
						<Name>v_balanceElectricityDelivery_eur</Name>
						<X>660</X>
						<Y>519</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552997741</Id>
						<Name>v_balanceElectricityTransport_eur</Name>
						<X>660</X>
						<Y>539</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676552997743</Id>
						<Name>v_balanceElectricityTax_eur</Name>
						<X>660</X>
						<Y>559</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676553064622</Id>
						<Name>v_electricityVariablePrice_eurpkWh</Name>
						<X>62</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676553064625</Id>
						<Name>v_priceBandsDelivery</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676553064627</Id>
						<Name>v_currentNodalPrice_eurpkWh</Name>
						<X>62</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676553064629</Id>
						<Name>v_priceBandsTransport</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>339</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676553064631</Id>
						<Name>v_priceBandsTax</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>359</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>TreeMap&lt;Double, Double&gt;</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679563490208</Id>
						<Name>v_methanePrice_eurpkWh</Name>
						<X>62</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679563490210</Id>
						<Name>v_hydrogenPrice_eurpkWh</Name>
						<X>62</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1679563490212</Id>
						<Name>v_heatPrice_eurpkWh</Name>
						<X>62</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1692113155819</Id>
						<Name>v_balanceElectricity_eur</Name>
						<X>660</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1692113346724</Id>
						<Name>v_totalBalanceCoop_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2320</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1692620449476</Id>
						<Name>v_electricitySurplusLowPassed_kW</Name>
						<X>63</X>
						<Y>639</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1692620522011</Id>
						<Name>v_lowPassFactor_fr</Name>
						<X>62</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>min(1, 0.8*1.2 * energyModel.p_timeStep_h) //0.2 </Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1692631118805</Id>
						<Name>v_assetDepreciation_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2350</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704291413594</Id>
						<Name>v_currentEnergyCurtailed_kW</Name>
						<X>420</X>
						<Y>1310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1709644748300</Id>
						<Name>v_currentOwnElectricityProduction_kW</Name>
						<X>1240</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834851</Id>
						<Name>v_evChargingPowerElectric_kW</Name>
						<X>28</X>
						<Y>1249</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834853</Id>
						<Name>v_fixedConsumptionElectric_kW</Name>
						<X>28</X>
						<Y>1119</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834855</Id>
						<Name>v_pvProductionElectric_kW</Name>
						<X>25</X>
						<Y>1340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834857</Id>
						<Name>v_batteryPowerElectric_kW</Name>
						<X>28</X>
						<Y>1269</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834859</Id>
						<Name>v_conversionPowerElectric_kW</Name>
						<X>28</X>
						<Y>1169</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834861</Id>
						<Name>v_windProductionElectric_kW</Name>
						<X>25</X>
						<Y>1360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834863</Id>
						<Name>v_electricHobConsumption_kW</Name>
						<Description>This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information</Description>
						<X>58</X>
						<Y>1189</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834865</Id>
						<Name>v_heatPumpElectricityConsumption_kW</Name>
						<Description>This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information</Description>
						<X>58</X>
						<Y>1209</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834867</Id>
						<Name>v_hydrogenElectricityConsumption_kW</Name>
						<X>58</X>
						<Y>1229</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723034834869</Id>
						<Name>v_curtailmentPowerElectric_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>25</X>
						<Y>1400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1723102014142</Id>
						<Name>acc_totalOwnElectricityProduction_kW</Name>
						<X>880</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730133371154</Id>
						<Name>v_currentCustomerFeedIn_kW</Name>
						<X>1240</X>
						<Y>960</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730133390778</Id>
						<Name>acc_totalCustomerFeedIn_kW</Name>
						<X>880</X>
						<Y>1079</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731077836700</Id>
						<Name>fm_currentConsumptionFlows_kW</Name>
						<X>870</X>
						<Y>940</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731077836702</Id>
						<Name>fm_currentProductionFlows_kW</Name>
						<X>870</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731077836704</Id>
						<Name>fm_currentBalanceFlows_kW</Name>
						<X>870</X>
						<Y>960</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731078158609</Id>
						<Name>v_currentPrimaryEnergyProduction_kW</Name>
						<X>420</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731078158611</Id>
						<Name>v_currentFinalEnergyConsumption_kW</Name>
						<X>420</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731079071069</Id>
						<Name>v_currentPrimaryEnergyProductionHeatpumps_kW</Name>
						<X>420</X>
						<Y>1280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731400569232</Id>
						<Name>acc_totalCustomerDelivery_kW</Name>
						<X>880</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731400607488</Id>
						<Name>v_currentCustomerDelivery_kW</Name>
						<X>1240</X>
						<Y>940</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731404179099</Id>
						<Name>v_totalCustomerFeedIn_MWh</Name>
						<X>880</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731404179102</Id>
						<Name>v_totalCustomerDelivery_MWh</Name>
						<X>880</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731506246424</Id>
						<Name>v_totalOwnElectricityProduction_MWh</Name>
						<X>880</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732886770078</Id>
						<Name>v_activeEnergyCarriers</Name>
						<X>495</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740059065414</Id>
						<Name>v_activeConsumptionEnergyCarriers</Name>
						<X>509.6</X>
						<Y>957.4</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740059065416</Id>
						<Name>v_activeProductionEnergyCarriers</Name>
						<X>509.6</X>
						<Y>937.4</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740150490095</Id>
						<Name>v_CHPProductionElectric_kW</Name>
						<X>25</X>
						<Y>1380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740150490106</Id>
						<Name>v_batteryStoredEnergy_kWh</Name>
						<X>25</X>
						<Y>1450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740152681807</Id>
						<Name>v_cumulativeIndividualSelfconsumptionElectricity_fr</Name>
						<X>1420</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740152689012</Id>
						<Name>v_cumulativeIndividualSelfconsumptionEnergy_fr</Name>
						<X>1420</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740152690222</Id>
						<Name>v_cumulativeIndividualSelfSufficiencyElectricity_fr</Name>
						<X>1420</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740152691469</Id>
						<Name>v_cumulativeIndividualSelfSufficiencyEnergy_fr</Name>
						<X>1420</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740418585416</Id>
						<Name>v_districtHeatDelivery_kW</Name>
						<X>420</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740489780788</Id>
						<Name>v_cumulativeIndividualSelfconsumptionElectricity_MWh</Name>
						<X>1420</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740489782775</Id>
						<Name>v_cumulativeIndividualSelfconsumptionEnergy_MWh</Name>
						<X>1420</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740672534686</Id>
						<Name>v_cumulativeIndividualPeakFeedin_kW</Name>
						<X>1420</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1740672540722</Id>
						<Name>v_cumulativeIndividualPeakDelivery_kW</Name>
						<X>1420</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741277674318</Id>
						<Name>v_previousRunData</Name>
						<X>60</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
							<InitialValue Class="CodeValue">
								<Code>null</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872046287</Id>
						<Name>v_rapidRunData</Name>
						<X>60</X>
						<Y>900</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872046289</Id>
						<Name>v_liveData</Name>
						<X>60</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_LiveData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872046291</Id>
						<Name>v_liveAssetsMetaData</Name>
						<X>80</X>
						<Y>850</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_AssetsMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741943696911</Id>
						<Name>v_liveConnectionMetaData</Name>
						<X>80</X>
						<Y>870</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ConnectionMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1751630239580</Id>
						<Name>v_ptProductionHeat_kW</Name>
						<X>421</X>
						<Y>1163</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1669037234222</Id>
						<Name>p_actorContractList</Name>
						<X>390</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>com.fasterxml.jackson.databind.node.ArrayNode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658477089992</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1669036172744</Id>
						<Name>p_connectionCapacity_kW</Name>
						<Description>TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1669036172742</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1671707831168</Id>
						<Name>p_gridNodeUnderResponsibility</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1671707831166</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551040549</Id>
						<Name>p_actorID</Name>
						<Description>Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676551040547</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551040552</Id>
						<Name>p_actorType</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676551040550</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551040555</Id>
						<Name>p_parentActorID</Name>
						<Description>Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676551040553</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551040558</Id>
						<Name>p_electricitySupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676551040556</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551708075</Id>
						<Name>p_CoopParent</Name>
						<X>60</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1676551708073</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676551708078</Id>
						<Name>p_gridOperator</Name>
						<X>60</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676551708076</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679563405825</Id>
						<Name>p_methaneSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679563405823</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679563405829</Id>
						<Name>p_hydrogenSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679563405827</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1679563405832</Id>
						<Name>p_heatSupplier</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<X>60</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Actor</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1679563405830</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692112528722</Id>
						<Name>p_yearlyOperationalCosts_eur</Name>
						<Description>TODO: This is still hardcoded! How should Coop know where to 'gather' this data? (Capacity of shared connection)</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2350</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>123456</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1692112528720</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692620732354</Id>
						<Name>p_applyKostprijsPlus</Name>
						<X>62</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>true</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1692620732352</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1679563561816</Id>
						<Name>c_actorContracts</Name>
						<X>391</X>
						<Y>91</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_Contract</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1678292542481</Id>
						<Name>c_coopMembers</Name>
						<X>60</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Agent</ElementClass>
							<ValueElementClass>Object</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1709628025685</Id>
						<Name>c_coopCustomers</Name>
						<X>60</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Agent</ElementClass>
							<ValueElementClass>Object</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1739975612911</Id>
						<Name>c_memberGridConnections</Name>
						<X>60</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>Object</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1739975642432</Id>
						<Name>c_customerGridConnections</Name>
						<X>60</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>Object</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1669035973262</Id>
						<Name>e_startNonFirmATO</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089991</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1669017600000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>1d/1f</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>v_allowedCapacity_kW = v_contractConnection.nfATOpower_kW;// p_nfatoLvl_kW;</Action>
					</Event>
					<Event>
						<Id>1669035973267</Id>
						<Name>e_endNonFirmATO</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089990</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1669017600000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>1d/1f</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>v_allowedCapacity_kW = p_connectionCapacity_kW;</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660736326703</Id>
						<Name>f_connectToChild</Name>
						<X>660</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildActor</Name>
							<Type>Actor</Type>
						</Parameter>
						<Parameter>
							<Name>EnergyCarrier</Name>
							<Type>OL_EnergyCarriers</Type>
						</Parameter>
						<Body>/*switch( EnergyCarrier ) {&#xD;
		case ELECTRICITY:&#xD;
			subConnectionsElectricity.connectTo(ConnectingChildNode);&#xD;
		break;&#xD;
		case METHANE:&#xD;
			subConnectionsMethane.connectTo(ConnectingChildNode);&#xD;
		break;&#xD;
		case HYDROGEN:&#xD;
			subConnectionsHydrogen.connectTo(ConnectingChildNode);&#xD;
		break;&#xD;
		case HEAT:&#xD;
			subConnectionsHeat.connectTo(ConnectingChildNode);&#xD;
		break;&#xD;
		default:&#xD;
				&#xD;
		break;		&#xD;
}*/&#xD;
if (ConnectingChildActor.p_actorGroup != null) {&#xD;
	if (ConnectingChildActor.p_actorGroup.contains("production") || ConnectingChildActor.p_actorGroup.contains("Production") || ConnectingChildActor.p_actorGroup.contains("member")) { // Count owned production-sites as 'behind the meter'&#xD;
		c_coopMembers.add( ConnectingChildActor);&#xD;
		c_memberGridConnections.addAll(((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections);&#xD;
		(((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections).forEach( gc -&gt; gc.c_parentCoops.add(this));&#xD;
		//traceln("Adding: %s", ((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections);&#xD;
	} else {&#xD;
		c_coopCustomers.add( ConnectingChildActor );&#xD;
		c_customerGridConnections.addAll(((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections);&#xD;
	}&#xD;
} else {&#xD;
	c_coopCustomers.add( ConnectingChildActor );&#xD;
	c_customerGridConnections.addAll(((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections);&#xD;
	//traceln("Adding: %s", ((ConnectionOwner)ConnectingChildActor).c_ownedGridConnections);&#xD;
}&#xD;
&#xD;
/*&#xD;
if ( v_contractGridOperator.equals("NODALPRICING")) {&#xD;
//	traceln("Enabling nodal pricing for Coop memmber!");&#xD;
	if (ConnectingChildNode instanceof ConnectionOwner) {&#xD;
		//((ConnectionOwner)ConnectingChildNode).v_contractGridOperator = v_contractGridOperator;&#xD;
		((ConnectionOwner)ConnectingChildNode).v_congestionTariff_b = true;&#xD;
	}&#xD;
}&#xD;
if ( v_contractEnergySupplier.equals("VARIABLE")) {&#xD;
	if (ConnectingChildNode instanceof ConnectionOwner) {&#xD;
		((ConnectionOwner)ConnectingChildNode).v_electricityContractType = OL_DeliveryContractType.ELECTRICITY_VARIABLE;&#xD;
		//((ConnectionOwner)ConnectingChildNode).v_contractEnergySupplier= v_contractEnergySupplier;&#xD;
		//((ConnectionOwner)ConnectingChildNode).v_updatePriceBands_b = true;&#xD;
	}&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660806150226</Id>
						<Name>f_updateFinances</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// get current energy flows&#xD;
//f_gatherEnergyFlows();&#xD;
&#xD;
/*&#xD;
double currentPowerDrawn_kW = -v_electricitySurplus_kW;&#xD;
&#xD;
// trigger transaction with supplier/Coop&#xD;
&#xD;
double transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_electricityVolume_kWh, v_electricityContractType);&#xD;
double transactionCostTax_eur = 0;&#xD;
double transactionCostTransport_eur = 0;&#xD;
double transactionCostDelivery_eur = 0;&#xD;
//transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_heatVolume_kWh, v_heatContractType);&#xD;
//v_balanceHeat_eur -= transactionCost_eur;&#xD;
//transactionCost_eur = 0;//((EnergySupplier)p_energySupplier).f_doEnergyTransaction(v_methaneVolume_kWh, v_methaneContractType);&#xD;
//v_balanceMethane_eur -= transactionCost_eur;&#xD;
&#xD;
//&#xD;
if (v_electricityVolume_kWh &gt;= 0) {&#xD;
	//transactionCostDelivery_eur = v_priceBandsDelivery.ceilingEntry( currentPowerDrawn_kW ).getValue() * v_electricityVolume_kWh;&#xD;
	if (v_contractDelivery!=null){&#xD;
		transactionCostDelivery_eur = (v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;&#xD;
	} else {&#xD;
		transactionCostDelivery_eur = v_electricityVariablePrice_eurpkWh * v_electricityVolume_kWh;&#xD;
	}&#xD;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;&#xD;
&#xD;
	if (v_contractTax!=null){&#xD;
		transactionCostTax_eur = v_contractTax.deliveryTax_eurpkWh * v_electricityVolume_kWh;&#xD;
		//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);&#xD;
		v_balanceElectricityTax_eur -= transactionCostTax_eur;&#xD;
		v_balanceElectricity_eur -= transactionCostTax_eur;&#xD;
	}&#xD;
} else {&#xD;
	if (v_contractDelivery!=null){&#xD;
		transactionCostDelivery_eur = (v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh) * v_electricityVolume_kWh;&#xD;
	} else {&#xD;
		transactionCostDelivery_eur = v_electricityVariablePrice_eurpkWh * v_electricityVolume_kWh;&#xD;
	}&#xD;
	v_balanceElectricityDelivery_eur -= transactionCostDelivery_eur;&#xD;
	v_balanceElectricity_eur -= transactionCostDelivery_eur;&#xD;
&#xD;
	if (v_contractTax!=null){&#xD;
		transactionCostTax_eur = v_contractTax.feedinTax_eurpkWh * v_electricityVolume_kWh;&#xD;
		//transactionCostTax_eur = v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + v_contractTax.proportionalTax_pct*(v_electricityVolume_kWh * v_contractTax.feedinTax_eurpkWh + transactionCostDelivery_eur + transactionCostTransport_eur);&#xD;
		v_balanceElectricityTax_eur -= transactionCostTax_eur;&#xD;
		v_balanceElectricity_eur -= transactionCostTax_eur;&#xD;
	}&#xD;
}&#xD;
&#xD;
transactionCostTransport_eur = v_currentNodalPrice_eurpkWh * v_electricityVolume_kWh;&#xD;
v_balanceElectricityTransport_eur -= transactionCostTransport_eur;&#xD;
v_balanceElectricity_eur -= transactionCostTransport_eur;&#xD;
&#xD;
&#xD;
// TODO: Also needs to include congestion tariffs! So Coop needs to know to which GridNode it's connected! How should that work?&#xD;
*/</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660825183645</Id>
						<Name>f_doEnergyTransaction</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-330</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>transactionVolume_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>contractType</Name>
							<Type>OL_ContractType</Type>
						</Parameter>
						<Body>double transactionCostClient_eur = 0;&#xD;
&#xD;
if( p_energySupplier instanceof EnergySupplier ) {&#xD;
	EnergySupplier energySupplier = (EnergySupplier)p_energySupplier;&#xD;
	transactionCostClient_eur = energySupplier.f_doEnergyTransaction(transactionVolume_kWh, contractType);&#xD;
} else if( p_energySupplier instanceof EnergyCoop ) {&#xD;
	EnergyCoop energySupplier = (EnergyCoop)p_energySupplier;&#xD;
	transactionCostClient_eur = energySupplier.f_doEnergyTransaction(transactionVolume_kWh, contractType);&#xD;
}&#xD;
&#xD;
v_energyPassedThrough_kWh += transactionVolume_kWh;&#xD;
&#xD;
return transactionCostClient_eur;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660825257472</Id>
						<Name>f_connectToParentActor</Name>
						<Description>Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ</Description>
						<X>670</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>Actor mySupplier = null;&#xD;
mySupplier = findFirst(energyModel.pop_energySuppliers, p-&gt;p.p_actorID.equals(v_contractDelivery.contractScope)) ;&#xD;
if (mySupplier != null) {&#xD;
	((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
} else {&#xD;
	mySupplier = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(v_contractDelivery.contractScope)) ;&#xD;
	if (mySupplier != null) {&#xD;
		((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.ELECTRICITY);	&#xD;
	}&#xD;
}&#xD;
&#xD;
if (mySupplier != null) {&#xD;
	p_electricitySupplier = mySupplier;&#xD;
} &#xD;
else { &#xD;
	p_electricitySupplier = energyModel.pop_energySuppliers.get(0);  // this is a harcoded fix to make the buurtmodel run for 21-3-2023&#xD;
	traceln("Connection owner %s --&gt; f_connectToParentActor --&gt; no parent actor %s found, this should not be happening", this, v_contractDelivery.contractScope);&#xD;
}&#xD;
&#xD;
Actor myGridoperator = null;&#xD;
// Connect to grid operator (can be a Coop!)&#xD;
myGridoperator = findFirst(energyModel.pop_gridOperators, p-&gt;p.p_actorID.equals(v_contractTransport.contractScope)) ;&#xD;
if (myGridoperator == null) {&#xD;
	myGridoperator = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(v_contractTransport.contractScope)) ;&#xD;
}&#xD;
&#xD;
if (myGridoperator != null) {&#xD;
	p_gridOperator = myGridoperator;	&#xD;
} else { &#xD;
	//p_gridOperator = main.pop_gridOperators.get( 0 ) ; // this is a harcoded fix to make the buurtmodel run for 21-3-2023&#xD;
	traceln("Connection owner --&gt; f_connectToParentActor --&gt; no parent actor found, this should not be happening");&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1667983361355</Id>
						<Name>f_calculateEnergyBalance</Name>
						<X>670</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_currentOwnElectricityProduction_kW = 0; // Only electricity production from 'members' as opposed to 'customers'.&#xD;
v_currentCustomerFeedIn_kW = 0; // Feedin from customers (self-consumption behind-the-meter is not counted for customers)&#xD;
v_currentCustomerDelivery_kW = 0; // Delivery to customers (self-consumption behind-the-meter is not counted for customers)&#xD;
&#xD;
// Categorical power flows&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
v_electricHobConsumption_kW = 0;&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_pvProductionElectric_kW = 0;&#xD;
v_windProductionElectric_kW = 0;&#xD;
v_ptProductionHeat_kW = 0;&#xD;
v_conversionPowerElectric_kW = 0;&#xD;
v_districtHeatDelivery_kW = 0;&#xD;
v_CHPProductionElectric_kW = 0;&#xD;
&#xD;
fm_currentProductionFlows_kW.clear();&#xD;
fm_currentConsumptionFlows_kW.clear();&#xD;
fm_currentBalanceFlows_kW.clear();&#xD;
v_currentPrimaryEnergyProduction_kW = 0;&#xD;
v_currentFinalEnergyConsumption_kW = 0;&#xD;
v_currentEnergyCurtailed_kW = 0;&#xD;
v_currentPrimaryEnergyProductionHeatpumps_kW = 0;&#xD;
&#xD;
//Stored energy&#xD;
v_batteryStoredEnergy_kWh = 0;&#xD;
&#xD;
for (GridConnection GC : c_memberGridConnections) { // Take 'behind the meter' production and consumption!&#xD;
	for (OL_EnergyCarriers energyCarrier : v_activeEnergyCarriers) {&#xD;
		fm_currentProductionFlows_kW.addFlow( energyCarrier, GC.fm_currentProductionFlows_kW.get(energyCarrier));&#xD;
		fm_currentConsumptionFlows_kW.addFlow( energyCarrier, GC.fm_currentConsumptionFlows_kW.get(energyCarrier));&#xD;
		fm_currentBalanceFlows_kW.addFlow( energyCarrier, GC.fm_currentBalanceFlows_kW.get(energyCarrier));&#xD;
	}&#xD;
	v_currentPrimaryEnergyProduction_kW += GC.v_currentPrimaryEnergyProduction_kW;&#xD;
	v_currentFinalEnergyConsumption_kW += GC.v_currentFinalEnergyConsumption_kW;&#xD;
	v_currentEnergyCurtailed_kW += GC.v_currentEnergyCurtailed_kW;&#xD;
	v_currentPrimaryEnergyProductionHeatpumps_kW += GC.v_currentPrimaryEnergyProductionHeatpumps_kW;&#xD;
	v_currentOwnElectricityProduction_kW += GC.fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY); &#xD;
	&#xD;
	// Categorical power flows&#xD;
	v_fixedConsumptionElectric_kW += GC.v_fixedConsumptionElectric_kW;&#xD;
	v_electricHobConsumption_kW += GC.v_electricHobConsumption_kW;&#xD;
	v_heatPumpElectricityConsumption_kW += GC.v_heatPumpElectricityConsumption_kW;&#xD;
	v_hydrogenElectricityConsumption_kW += GC.v_hydrogenElectricityConsumption_kW;&#xD;
	v_evChargingPowerElectric_kW += GC.v_evChargingPowerElectric_kW;&#xD;
	v_batteryPowerElectric_kW += GC.v_batteryPowerElectric_kW;&#xD;
	v_pvProductionElectric_kW += GC.v_pvProductionElectric_kW;&#xD;
	v_windProductionElectric_kW += GC.v_windProductionElectric_kW;&#xD;
	v_ptProductionHeat_kW += GC.v_ptProductionHeat_kW;&#xD;
	v_conversionPowerElectric_kW += GC.v_conversionPowerElectric_kW;&#xD;
	v_districtHeatDelivery_kW += GC.v_districtHeatDelivery_kW;&#xD;
	v_CHPProductionElectric_kW += GC.v_CHPProductionElectric_kW;&#xD;
	&#xD;
	//Battery stored energy&#xD;
	v_batteryStoredEnergy_kWh += GC.v_batteryStoredEnergy_kWh;&#xD;
&#xD;
}&#xD;
&#xD;
&#xD;
// gather electricity flows&#xD;
for(Agent a :  c_coopMembers ) { // Take 'behind the meter' production and consumption!&#xD;
	if (a instanceof EnergyCoop) {&#xD;
		EnergyCoop EC = (EnergyCoop)a;&#xD;
		&#xD;
		for (OL_EnergyCarriers energyCarrier : v_activeEnergyCarriers) {&#xD;
			fm_currentProductionFlows_kW.addFlow( energyCarrier, EC.fm_currentProductionFlows_kW.get(energyCarrier));&#xD;
			fm_currentConsumptionFlows_kW.addFlow( energyCarrier, EC.fm_currentConsumptionFlows_kW.get(energyCarrier));&#xD;
			fm_currentBalanceFlows_kW.addFlow( energyCarrier, EC.fm_currentBalanceFlows_kW.get(energyCarrier));&#xD;
		}&#xD;
		&#xD;
		v_currentPrimaryEnergyProduction_kW += EC.v_currentPrimaryEnergyProduction_kW;&#xD;
		v_currentFinalEnergyConsumption_kW += EC.v_currentFinalEnergyConsumption_kW;&#xD;
		v_currentEnergyCurtailed_kW += EC.v_currentEnergyCurtailed_kW;&#xD;
		v_currentPrimaryEnergyProductionHeatpumps_kW += EC.v_currentPrimaryEnergyProductionHeatpumps_kW;&#xD;
		v_currentOwnElectricityProduction_kW += EC.fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY); &#xD;
		&#xD;
		&#xD;
		// Categorical power flows&#xD;
		v_fixedConsumptionElectric_kW += EC.v_fixedConsumptionElectric_kW;&#xD;
		v_electricHobConsumption_kW += EC.v_electricHobConsumption_kW;&#xD;
		v_heatPumpElectricityConsumption_kW += EC.v_heatPumpElectricityConsumption_kW;&#xD;
		v_hydrogenElectricityConsumption_kW += EC.v_hydrogenElectricityConsumption_kW;&#xD;
		v_evChargingPowerElectric_kW += EC.v_evChargingPowerElectric_kW;&#xD;
		v_batteryPowerElectric_kW += EC.v_batteryPowerElectric_kW;&#xD;
		v_pvProductionElectric_kW += EC.v_pvProductionElectric_kW;&#xD;
		v_windProductionElectric_kW += EC.v_windProductionElectric_kW;&#xD;
		v_ptProductionHeat_kW += EC.v_ptProductionHeat_kW;&#xD;
		v_conversionPowerElectric_kW += EC.v_conversionPowerElectric_kW;&#xD;
		v_districtHeatDelivery_kW += EC.v_districtHeatDelivery_kW;&#xD;
		v_CHPProductionElectric_kW += EC.v_CHPProductionElectric_kW;&#xD;
	&#xD;
		//Battery stored energy&#xD;
		v_batteryStoredEnergy_kWh += EC.v_batteryStoredEnergy_kWh;&#xD;
	}&#xD;
}&#xD;
&#xD;
for (GridConnection GC : c_customerGridConnections) { // Take 'behind the meter' production and consumption!&#xD;
	for (OL_EnergyCarriers energyCarrier : v_activeEnergyCarriers) {&#xD;
		double nettConsumption_kW = GC.fm_currentBalanceFlows_kW.get(energyCarrier);&#xD;
		fm_currentProductionFlows_kW.addFlow( energyCarrier, max(0, -nettConsumption_kW));&#xD;
		fm_currentConsumptionFlows_kW.addFlow( energyCarrier, max(0, nettConsumption_kW));&#xD;
		fm_currentBalanceFlows_kW.addFlow( energyCarrier, nettConsumption_kW);&#xD;
		if (energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
			v_currentCustomerFeedIn_kW += max(0,-nettConsumption_kW);&#xD;
			v_currentCustomerDelivery_kW += max(0,nettConsumption_kW);&#xD;
		}&#xD;
	}				&#xD;
	//v_currentCustomerFeedIn_kW += max(0, -GC.v_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
}&#xD;
&#xD;
for(Agent a :  c_coopCustomers ) { // Don't look at 'behind the meter' production/consumption, but use 'nett flow' as measure of consumption/production&#xD;
	if (a instanceof EnergyCoop) {&#xD;
		//traceln("Hello!? coopCustomer EnergyCoop!");&#xD;
		EnergyCoop EC = (EnergyCoop)a;&#xD;
				&#xD;
		for (OL_EnergyCarriers energyCarrier : v_activeEnergyCarriers) {&#xD;
			fm_currentProductionFlows_kW.addFlow( energyCarrier, EC.fm_currentProductionFlows_kW.get(energyCarrier));&#xD;
			fm_currentConsumptionFlows_kW.addFlow( energyCarrier, EC.fm_currentConsumptionFlows_kW.get(energyCarrier));&#xD;
			fm_currentBalanceFlows_kW.addFlow( energyCarrier, EC.fm_currentBalanceFlows_kW.get(energyCarrier));&#xD;
		}&#xD;
		&#xD;
		v_currentCustomerFeedIn_kW += EC.v_currentCustomerFeedIn_kW;&#xD;
		v_currentCustomerDelivery_kW += EC.v_currentCustomerDelivery_kW;&#xD;
		&#xD;
	}&#xD;
}&#xD;
&#xD;
//v_totalElectricityProduced_MWh += v_currentElectricityProduction_kW * energyModel.p_timeStep_h/1000;&#xD;
&#xD;
v_electricitySurplus_kW = -fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
&#xD;
/*&#xD;
v_electricitySurplus_kW = -v_electricityVolume_kWh / energyModel.p_timeStep_h;&#xD;
*/&#xD;
&#xD;
f_updateLiveDataSets();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1667983361357</Id>
						<Name>f_getVariableEnergyPrice</Name>
						<Description>v_currentNodalPrice_eurpkWh = node van deze Coop -&gt; p_gridNodeUnderResponsibility. Mogelijk niet robuust! TODO: checken of dit goed gaat!


</Description>
						<X>661</X>
						<Y>279</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double energyPrice_eurpkWh = v_electricityVariablePrice_eurpkWh + v_contractDelivery.deliveryPrice_eurpkWh;&#xD;
&#xD;
if ( v_contractTransport.transportContractType==OL_TransportContractType.NODALPRICING) {&#xD;
	energyPrice_eurpkWh += v_currentNodalPrice_eurpkWh;&#xD;
} &#xD;
&#xD;
//traceln("Coop received energy price of: " + energyPrice_eurpkWh + " eur/kWh");&#xD;
return energyPrice_eurpkWh;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1667983437058</Id>
						<Name>f_returnKPIData</Name>
						<Description>Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Total electricity import, export&#xD;
traceln("Coop Electricity imported: "+ v_electricityImported_kWh);&#xD;
traceln("Coop Electricity exported: "+ v_electricityExported_kWh);&#xD;
traceln("Coop electricity costs: " + v_balanceElectricity_eur + " euro");&#xD;
//Total energy consumption and production &#xD;
&#xD;
// Assume 'infinite storage' of hydrogen within model-scope; only nett total import/export counts.&#xD;
if (v_hydrogenImported_kWh &gt; v_hydrogenExported_kWh) {&#xD;
	v_hydrogenImported_kWh = v_hydrogenImported_kWh - v_hydrogenExported_kWh;&#xD;
	v_hydrogenExported_kWh = 0;&#xD;
} else {&#xD;
	v_hydrogenExported_kWh = v_hydrogenExported_kWh - v_hydrogenImported_kWh;&#xD;
	v_hydrogenImported_kWh = 0;&#xD;
}&#xD;
&#xD;
double energyProduced_kWh = 0;&#xD;
double energyConsumed_kWh = 0;&#xD;
for(Agent a :  subConnectionsElectricity.getConnections() ) {&#xD;
	if(a instanceof ConnectionOwner){&#xD;
		ConnectionOwner n = (ConnectionOwner)a;&#xD;
		for ( GridConnection g : n.gridConnections.getConnections() ) {&#xD;
			for (EnergyAsset e : g.c_energyAssets) {&#xD;
				double EnergyUsed_kWh = e.j_ea.getEnergyUsed_kWh();&#xD;
				//traceln("EnergyAsset " + e.getIndex() + " of type " + e.p_defaultEnergyAssetPresetName + " used " + EnergyUsed_kWh + " kWh energy");&#xD;
				if (EnergyUsed_kWh &gt; 0) {&#xD;
					energyConsumed_kWh += EnergyUsed_kWh;&#xD;
				} else {&#xD;
					energyProduced_kWh -= EnergyUsed_kWh;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	} else if (a instanceof EnergyCoop) { // 'Recursive' code for Coop-of-Coops. Only supports 2 levels of Coops!&#xD;
		EnergyCoop n = (EnergyCoop)a;&#xD;
		for(Agent a2 :  n.subConnectionsElectricity.getConnections() ) {&#xD;
			if(a2 instanceof ConnectionOwner){&#xD;
				ConnectionOwner n2 = (ConnectionOwner)a;&#xD;
				for ( GridConnection g : n2.gridConnections.getConnections() ) {&#xD;
					for (EnergyAsset e : g.c_energyAssets) {&#xD;
						double EnergyUsed_kWh = e.j_ea.getEnergyUsed_kWh();&#xD;
						//traceln("EnergyAsset " + e.getIndex() + " of type " + e.p_defaultEnergyAssetPresetName + " used " + EnergyUsed_kWh + " kWh energy");&#xD;
						if (EnergyUsed_kWh &gt; 0) {&#xD;
							energyConsumed_kWh += EnergyUsed_kWh;&#xD;
						} else {&#xD;
							energyProduced_kWh -= EnergyUsed_kWh;&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
traceln("Energy consumed: "+ energyConsumed_kWh);&#xD;
traceln("Energy produced: "+ energyProduced_kWh);&#xD;
// TODO: Make sure this calculation is correct when all energy carriers are 'active'! Only checked for electricity&#xD;
&#xD;
//Total selfconsumption, selfsufficiency&#xD;
double totalSelfConsumption_fr = 1 - (v_electricityExported_kWh + v_methaneExported_kWh + v_hydrogenExported_kWh + v_heatExported_kWh)/energyProduced_kWh;&#xD;
double totalSelfSufficiency_fr = 1 - (v_electricityImported_kWh + v_methaneImported_kWh + v_hydrogenImported_kWh + v_heatImported_kWh + v_dieselImported_kWh)/energyConsumed_kWh;&#xD;
&#xD;
double totalSelfSufficiency_fr_check = (energyProduced_kWh - (v_electricityExported_kWh + v_methaneExported_kWh + v_hydrogenExported_kWh + v_heatExported_kWh))/energyConsumed_kWh;&#xD;
traceln("Coop selfconsumption: " + totalSelfConsumption_fr + "%");&#xD;
traceln("Coop selfsufficiency: " + totalSelfSufficiency_fr + "%, doublecheck " + totalSelfSufficiency_fr_check);&#xD;
// TODO: Account for fuel imports/exports!!&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1669037224999</Id>
						<Name>f_setContractValues</Name>
						<X>670</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if( p_actorContractList != null) {&#xD;
	//traceln("Contract list connectionOwner " + p_actorID + ": " + p_actorContractList.toString());&#xD;
} else {&#xD;
	traceln( "No contract data for connectionOwner " + p_actorID );&#xD;
}&#xD;
&#xD;
double methaneDeliveryPrice_eurpkWh = 0.0;&#xD;
double methaneDeliveryTax_eurpkWh = 0.0;&#xD;
double methaneVAT_pct = 0.0;&#xD;
double hydrogenDeliveryPrice_eurpkWh = 0.0;&#xD;
double hydrogenDeliveryTax_eurpkWh = 0.0;&#xD;
double hydrogenVAT_pct = 0.0;&#xD;
double heatDeliveryPrice_eurpkWh = 0.0;&#xD;
double heatDeliveryTax_eurpkWh = 0.0;&#xD;
double heatVAT_pct = 0.0;&#xD;
&#xD;
for( JsonNode contractJson : p_actorContractList) {&#xD;
	//traceln("Contract hashmap l: " + l);&#xD;
	OL_ContractType contractService = OL_ContractType.valueOf(contractJson.required("contractType").textValue());&#xD;
	String contractScope = contractJson.required( "contractScope" ).textValue();&#xD;
	OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.valueOf(contractJson.required("energyCarrier").textValue());&#xD;
	double annualFee_eur = contractJson.required("annualFee_eur").doubleValue();&#xD;
	Actor mySupplier = null;&#xD;
	if (energyCarrier.equals(OL_EnergyCarriers.ELECTRICITY)){&#xD;
		switch( contractService ) {&#xD;
			case DELIVERY:&#xD;
				//String contractScope = (String)l.get( "contract_scope" );&#xD;
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.get("deliveryContractType").textValue());&#xD;
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();&#xD;
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();&#xD;
				v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarriers.ELECTRICITY, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
				//traceln("Delivery contract: " + v_contractDelivery);&#xD;
				c_actorContracts.add(v_contractDelivery);&#xD;
			break;&#xD;
			case TRANSPORT:&#xD;
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.get("transportContractType").textValue());&#xD;
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();&#xD;
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();&#xD;
				v_contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			&#xD;
				c_actorContracts.add(v_contractTransport);&#xD;
			break;&#xD;
			case CONNECTION:&#xD;
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());&#xD;
				//traceln("Initializing connection contract with ConnectionContractType: " + connectionContractType);&#xD;
				double nfATOstart_h = contractJson.path("nfATO_starttime_h").doubleValue();&#xD;
				double nfATOend_h = contractJson.path("nfATO_endtime_h").doubleValue();&#xD;
				double nfATOcapacity_kW = contractJson.path("nfATO_capacity_kW").doubleValue();&#xD;
				v_contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, nfATOstart_h, nfATOend_h, nfATOcapacity_kW, annualFee_eur);&#xD;
				c_actorContracts.add(v_contractConnection);&#xD;
			break;&#xD;
			case TAX:&#xD;
				double taxDelivery_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();&#xD;
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();&#xD;
				double proportionalTax_pct = contractJson.required("proportionalTax_pct").doubleValue();&#xD;
				v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarriers.ELECTRICITY, taxDelivery_eurpkWh, taxFeedin_eurpkWh, proportionalTax_pct, annualFee_eur);&#xD;
				c_actorContracts.add(v_contractTax);&#xD;
			break;&#xD;
			default:&#xD;
			&#xD;
			break;		&#xD;
		}&#xD;
	//} else if (energyCarrier.equals(OL_EnergyCarriers.METHANE)){&#xD;
	} else {&#xD;
		switch( contractService ) {&#xD;
			case DELIVERY:					&#xD;
				OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf(contractJson.required("deliveryContractType").textValue());&#xD;
				double deliveryPrice_eurpkWh = contractJson.required("deliveryPrice_eurpkWh").doubleValue();&#xD;
				double feedinPrice_eurpkWh = contractJson.required("feedinPrice_eurpkWh").doubleValue();&#xD;
				J_DeliveryContract contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, energyCarrier, deliveryPrice_eurpkWh, feedinPrice_eurpkWh, annualFee_eur);&#xD;
				//traceln("Delivery contract: " + v_contractDelivery);&#xD;
				c_actorContracts.add(contractDelivery);&#xD;
				//String contractScope = (String)l.get( "contractScope" );&#xD;
				mySupplier = findFirst(energyModel.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
				if (mySupplier != null) {&#xD;
					((EnergySupplier)mySupplier).f_connectToChild(this);	&#xD;
				} else {&#xD;
					mySupplier = findFirst(energyModel.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergyCoop)mySupplier).f_connectToChild(this,energyCarrier);	&#xD;
						//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
					}&#xD;
				}&#xD;
				//traceln("Methane supplier: " + contractScope + " for actor " + p_actorID );&#xD;
				if (mySupplier != null) {&#xD;
					//energySupplier.connectTo(mySupplier);&#xD;
					if (energyCarrier==OL_EnergyCarriers.METHANE) {&#xD;
						p_methaneSupplier = mySupplier;&#xD;
						methaneDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HYDROGEN) {&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						hydrogenDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HEAT) {&#xD;
						p_heatSupplier = mySupplier;&#xD;
						heatDeliveryPrice_eurpkWh=deliveryPrice_eurpkWh;&#xD;
					}&#xD;
					//traceln("MethaneSupplier " + mySupplier);&#xD;
					//energySupplier.f_connectToChild(this);	&#xD;
				} else { &#xD;
					traceln("Connection owner --&gt; f_connectToParentActor --&gt; " + energyCarrier + " supplier not found, this should not be happening");&#xD;
				}&#xD;
			break;&#xD;
			case TAX:&#xD;
				double DeliveryTax_eurpkWh = contractJson.required("taxDelivery_eurpkWh").doubleValue();&#xD;
				double taxFeedin_eurpkWh = contractJson.required("taxFeedin_eurpkWh").doubleValue();&#xD;
				double VAT_pct = contractJson.required("proportionalTax_pct").doubleValue();&#xD;
				J_TaxContract contractTax = new J_TaxContract(contractScope, energyCarrier, DeliveryTax_eurpkWh, taxFeedin_eurpkWh, VAT_pct, annualFee_eur);&#xD;
				c_actorContracts.add(contractTax);&#xD;
				if (energyCarrier==OL_EnergyCarriers.METHANE) {						&#xD;
						methaneDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;&#xD;
						methaneVAT_pct=VAT_pct;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HYDROGEN) {&#xD;
						hydrogenDeliveryTax_eurpkWh=DeliveryTax_eurpkWh;&#xD;
						hydrogenVAT_pct=VAT_pct;&#xD;
					} else if(energyCarrier==OL_EnergyCarriers.HEAT) {&#xD;
						heatVAT_pct=VAT_pct;&#xD;
					}&#xD;
			break;&#xD;
			case CONNECTION:&#xD;
				OL_ConnectionContractType connectionContractType = OL_ConnectionContractType.valueOf(contractJson.required("connectionContractType").textValue());&#xD;
				J_ConnectionContract contractConnection = new J_ConnectionContract(contractScope, connectionContractType, energyCarrier, 0.0, 0.0, 0.0, annualFee_eur);&#xD;
				c_actorContracts.add(contractConnection);&#xD;
&#xD;
&#xD;
&#xD;
			break;&#xD;
			case TRANSPORT:&#xD;
				OL_TransportContractType transportContractType = OL_TransportContractType.valueOf(contractJson.required("transportContractType").textValue());&#xD;
				double bandwidthTreshold_kW = contractJson.path("bandwidthTreshold_kW").doubleValue();&#xD;
				double bandwidthTariff_eurpkWh = contractJson.path("bandwidthTariff_eurpkWh").doubleValue();&#xD;
				J_TransportContract contractTransport = new J_TransportContract(contractScope, transportContractType, energyCarrier, bandwidthTreshold_kW, bandwidthTariff_eurpkWh, annualFee_eur);			&#xD;
				c_actorContracts.add(contractTransport);&#xD;
			break;&#xD;
			default:&#xD;
				traceln("Unrecognized contract type!");&#xD;
			break;	&#xD;
		}	&#xD;
	}&#xD;
}&#xD;
&#xD;
// Calculate nett gas and hydrogen price&#xD;
v_methanePrice_eurpkWh = (methaneDeliveryPrice_eurpkWh + methaneDeliveryTax_eurpkWh) * (1 + methaneVAT_pct);&#xD;
v_hydrogenPrice_eurpkWh = (hydrogenDeliveryPrice_eurpkWh + hydrogenDeliveryTax_eurpkWh) * (1 + hydrogenVAT_pct);&#xD;
v_heatPrice_eurpkWh = (heatDeliveryPrice_eurpkWh + heatDeliveryTax_eurpkWh) * (1 + heatVAT_pct);&#xD;
		/*} else if (energyCarrier.equals(OL_EnergyCarriers.HYDROGEN)){&#xD;
			switch( contractService ) {&#xD;
				case DELIVERY:&#xD;
					OL_DeliveryContractType deliveryContractType = OL_DeliveryContractType.valueOf((String)l.get("deliveryContractType"));&#xD;
					double deliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");&#xD;
					double feedinPrice_eurpkWh = (double)l.get("feedinPrice_eurpkWh");&#xD;
					v_contractDelivery = new J_DeliveryContract(contractScope, deliveryContractType, OL_EnergyCarriers.HYDROGEN, deliveryPrice_eurpkWh, feedinPrice_eurpkWh);&#xD;
					//traceln("Delivery contract: " + v_contractDelivery);&#xD;
					c_actorContracts.add(v_contractDelivery);&#xD;
					mySupplier = findFirst(main.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergySupplier)mySupplier).f_connectToChild(this);&#xD;
					} else {&#xD;
						mySupplier = findFirst(main.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
						if (mySupplier != null) {&#xD;
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.HYDROGEN);&#xD;
							//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
						}&#xD;
					}&#xD;
					if (mySupplier != null) {&#xD;
						//energySupplier.connectTo(mySupplier);&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						//energySupplier.f_connectToChild(this);&#xD;
					} else {&#xD;
						traceln("Connection owner --&gt; f_connectToParentActor --&gt; hydrogen supplier not found, this should not be happening");&#xD;
					}&#xD;
				break;&#xD;
				case TAX:&#xD;
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");&#xD;
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");&#xD;
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");&#xD;
					v_contractTax = new J_TaxContract(contractScope, OL_EnergyCarriers.HYDROGEN, hydrogenDeliveryTax_eurpkWh, 0, hydrogenVAT_pct);&#xD;
					c_actorContracts.add(v_contractTax);&#xD;
				break;&#xD;
				default:&#xD;
&#xD;
				break;&#xD;
			}&#xD;
		} else if (energyCarrier.equals(OL_EnergyCarriers.HEAT)){&#xD;
			switch( contractService ) {&#xD;
				case DELIVERY:&#xD;
					heatDeliveryPrice_eurpkWh = (double)l.get("deliveryPrice_eurpkWh");&#xD;
					mySupplier = findFirst(main.pop_energySuppliers, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
					if (mySupplier != null) {&#xD;
						((EnergySupplier)mySupplier).f_connectToChild(this);&#xD;
					} else {&#xD;
						mySupplier = findFirst(main.pop_energyCoops, p-&gt;p.p_actorID.equals(contractScope)) ;&#xD;
						if (mySupplier != null) {&#xD;
							((EnergyCoop)mySupplier).f_connectToChild(this,OL_EnergyCarriers.HYDROGEN);&#xD;
							//p_CoopParent = (EnergyCoop)mySupplier;&#xD;
						}&#xD;
					}&#xD;
					if (mySupplier != null) {&#xD;
						//energySupplier.connectTo(mySupplier);&#xD;
						p_hydrogenSupplier = mySupplier;&#xD;
						//energySupplier.f_connectToChild(this);&#xD;
					} else {&#xD;
						traceln("Connection owner --&gt; f_connectToParentActor --&gt; heat supplier not found, this should not be happening");&#xD;
					}&#xD;
				break;&#xD;
				case TAX:&#xD;
					hydrogenDeliveryTax_eurpkWh = (double)l.get("taxDelivery_eurpkWh");&#xD;
					//double taxFeedin_eurpkWh = (double)l.get("taxFeedin_eurpkWh");&#xD;
					hydrogenVAT_pct = (double)l.get("proportionalTax_pct");&#xD;
				break;&#xD;
				default:&#xD;
				&#xD;
				break;&#xD;
			}&#xD;
		}*/&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1669042410671</Id>
						<Name>f_initialize</Name>
						<X>660</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
v_liveConnectionMetaData.contractedDeliveryCapacityKnown = true;&#xD;
v_liveConnectionMetaData.contractedFeedinCapacityKnown = true;&#xD;
&#xD;
//Get energy carriers and capacities boolean&#xD;
for(GridConnection GC:c_memberGridConnections){&#xD;
	v_liveConnectionMetaData.contractedDeliveryCapacity_kW += GC.v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
	v_liveConnectionMetaData.contractedFeedinCapacity_kW += GC.v_liveConnectionMetaData.contractedFeedinCapacity_kW;&#xD;
	v_activeEnergyCarriers.addAll(GC.v_activeEnergyCarriers);&#xD;
	v_activeProductionEnergyCarriers.addAll(GC.v_activeProductionEnergyCarriers);&#xD;
	v_activeConsumptionEnergyCarriers.addAll(GC.v_activeConsumptionEnergyCarriers);&#xD;
	&#xD;
&#xD;
	if(!GC.v_liveConnectionMetaData.contractedDeliveryCapacityKnown){&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
	&#xD;
	}&#xD;
&#xD;
	if(!GC.v_liveConnectionMetaData.contractedFeedinCapacityKnown){&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
	&#xD;
	} &#xD;
}&#xD;
&#xD;
//v_rapidRunData.initializeAccumulators(energyModel.p_runEndTime_h - energyModel.p_runStartTime_h, energyModel.p_timeStep_h, v_activeEnergyCarriers, v_activeConsumptionEnergyCarriers, v_activeProductionEnergyCarriers); //f_initializeAccumulators();&#xD;
acc_totalOwnElectricityProduction_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);&#xD;
acc_totalCustomerDelivery_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);&#xD;
acc_totalCustomerFeedIn_kW = new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);&#xD;
&#xD;
//========== LIVE WEEK DATASETS ==========//&#xD;
v_liveData.dsm_liveDemand_kW.createEmptyDataSets(v_activeConsumptionEnergyCarriers, roundToInt(168/energyModel.p_timeStep_h));&#xD;
v_liveData.dsm_liveSupply_kW.createEmptyDataSets(v_activeProductionEnergyCarriers, roundToInt(168/energyModel.p_timeStep_h));&#xD;
&#xD;
// Initializing Live Data Class&#xD;
v_liveAssetsMetaData.updateActiveAssetData(new ArrayList&lt;&gt;(f_getAllChildMemberGridConnections()));&#xD;
v_liveData.activeConsumptionEnergyCarriers = v_activeConsumptionEnergyCarriers;&#xD;
v_liveData.activeProductionEnergyCarriers = v_activeProductionEnergyCarriers;&#xD;
v_liveData.activeEnergyCarriers = v_activeEnergyCarriers;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676553303568</Id>
						<Name>f_updateIncentives</Name>
						<X>661</X>
						<Y>301</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_electricitySurplusLowPassed_kW += v_lowPassFactor_fr * ( v_electricitySurplus_kW - v_electricitySurplusLowPassed_kW );&#xD;
&#xD;
/* if (v_contractDelivery.deliveryContractType==OL_DeliveryContractType.ELECTRICITY_VARIABLE) {&#xD;
	if (p_electricitySupplier instanceof EnergySupplier) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((EnergySupplier)p_electricitySupplier).f_getVariableEnergyPrice();&#xD;
	} else if (p_electricitySupplier instanceof EnergyCoop) {&#xD;
		v_electricityVariablePrice_eurpkWh = ((EnergyCoop)p_electricitySupplier).f_getVariableEnergyPrice();&#xD;
	}&#xD;
}&#xD;
&#xD;
f_setElectricityPriceBands(); */ // temporarily disabled!!&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676553303571</Id>
						<Name>f_setElectricityPriceBands</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>681</X>
						<Y>321</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>/*if (v_contractDelivery.deliveryContractType.equals(OL_DeliveryContractType.ELECTRICITY_VARIABLE)) {&#xD;
	v_priceBandsDelivery.replace(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );&#xD;
	v_priceBandsDelivery.replace(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh + v_electricityVariablePrice_eurpkWh );&#xD;
}&#xD;
if (v_contractTransport.transportContractType.equals(OL_TransportContractType.NODALPRICING)) {&#xD;
	v_priceBandsTransport.replace(-9999999.0, v_currentNodalPrice_eurpkWh);&#xD;
	v_priceBandsTransport.replace(9999999.0, v_currentNodalPrice_eurpkWh);&#xD;
}*/&#xD;
&#xD;
// Assuming Tax is not varying in time!!&#xD;
&#xD;
/*&#xD;
if( p_capacityTariffApplicable ){&#xD;
	v_priceBandsDelivery.replace(- p_capacityLevel_kW, v_electricitySellPrice_eurpkWh + v_currentCongestionTariffWhenSelling_eurpkWh);&#xD;
	v_priceBandsDelivery.replace(p_capacityLevel_kW, v_electricityVariablePrice_eurpkWh + v_currentNodalPrice_eurpkWh);&#xD;
}&#xD;
*/&#xD;
&#xD;
&#xD;
&#xD;
	</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676553472755</Id>
						<Name>f_setInitPriceBands</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-340</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_priceBandsDelivery = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsDelivery.put(-9999999.0, v_contractDelivery.feedinPrice_eurpkWh);&#xD;
v_priceBandsDelivery.put(0.0, 0.0);&#xD;
v_priceBandsDelivery.put(9999999.0, v_contractDelivery.deliveryPrice_eurpkWh);&#xD;
&#xD;
v_priceBandsTransport = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsTransport.put(-9999999.0, 0.0);&#xD;
v_priceBandsTransport.put(0.0, 0.0);&#xD;
v_priceBandsTransport.put(9999999.0, 0.0);&#xD;
&#xD;
v_priceBandsTax = new TreeMap&lt;Double, Double&gt;();&#xD;
v_priceBandsTax.put(-9999999.0, v_contractTax.feedinTax_eurpkWh);&#xD;
v_priceBandsTax.put(0.0, 0.0);&#xD;
v_priceBandsTax.put(9999999.0, v_contractTax.deliveryTax_eurpkWh);&#xD;
&#xD;
/*&#xD;
if( p_congestionTariffApplicable ){&#xD;
	v_priceBandsDelivery.put(- p_capacityLevel_kW, 0.0);&#xD;
	v_priceBandsDelivery.put(p_capacityLevel_kW, 0.0);&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1692111928489</Id>
						<Name>f_totalFinances</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2320</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Depreciation costs&#xD;
v_assetDepreciation_eur = f_totalAssetDepreciation();&#xD;
v_totalBalanceCoop_eur -= v_assetDepreciation_eur;&#xD;
// Operational costs: local parameter p_yearlyOperationalCosts_eur&#xD;
v_totalBalanceCoop_eur -= p_yearlyOperationalCosts_eur;&#xD;
// EPEX balance: take from local variable v_balanceElectricityDelivery_eur&#xD;
v_totalBalanceCoop_eur += v_balanceElectricity_eur;&#xD;
&#xD;
// member balance&#xD;
f_totalMembersBalance();&#xD;
v_totalBalanceCoop_eur += v_balanceMembers_eur;&#xD;
&#xD;
/*if (energyModel.b_addKpiVisuals) {&#xD;
	ch_coopBalance.updateData();&#xD;
}*/</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1692112062708</Id>
						<Name>f_totalAssetDepreciation</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2350</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Sum depreciation costs of assets in own portfolio. &#xD;
double depreciationCosts_eur=0;&#xD;
&#xD;
/*for (Agent a : subConnectionsElectricity.getConnections()) {&#xD;
	if(a instanceof ConnectionOwner){&#xD;
		ConnectionOwner c = (ConnectionOwner)a;&#xD;
		if( c.p_actorGroup.equals("CoopProducer")) {&#xD;
			for(J_EA e:c.v_ownedGridConnection.c_energyAssets) {&#xD;
			&#xD;
			double depreciation_eurpkWpa = energyModel.v_assetDepreciation.path(e.energyAssetType.name()).path("Depreciation_eurpkWpa").doubleValue();&#xD;
			traceln("Coop Depreciation %s eur/kW/annum", depreciation_eurpkWpa*e.getElectricCapacity_kW());&#xD;
			depreciationCosts_eur+= depreciation_eurpkWpa*e.getElectricCapacity_kW();&#xD;
			}&#xD;
			&#xD;
		}		&#xD;
	} else if (a instanceof EnergyCoop) {&#xD;
		&#xD;
	}&#xD;
	&#xD;
}*/ // Deprecated get depreciation per asset from input-json. Use other data-source!&#xD;
&#xD;
return depreciationCosts_eur;&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1692112229224</Id>
						<Name>f_totalMembersBalance</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2350</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Sum financial transactions from all members&#xD;
for(Agent a :  c_coopMembers ) {&#xD;
	if(a instanceof ConnectionOwner){&#xD;
		ConnectionOwner n = (ConnectionOwner)a;&#xD;
	    v_balanceMembers_eur -= n.v_balanceElectricityDelivery_eur;&#xD;
		&#xD;
	} else if (a instanceof EnergyCoop) {&#xD;
		&#xD;
	}&#xD;
}&#xD;
&#xD;
for(Agent a :  c_coopCustomers ) {&#xD;
	if(a instanceof ConnectionOwner){&#xD;
		ConnectionOwner n = (ConnectionOwner)a;&#xD;
	    v_balanceMembers_eur -= n.v_balanceElectricityDelivery_eur;&#xD;
		&#xD;
	} else if (a instanceof EnergyCoop) {&#xD;
		&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1704371824571</Id>
						<Name>f_resetStates</Name>
						<X>660</X>
						<Y>20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_electricitySurplusLowPassed_kW= 0;&#xD;
v_totalOwnElectricityProduction_MWh = 0;&#xD;
v_totalCustomerFeedIn_MWh = 0;&#xD;
v_totalCustomerDelivery_MWh = 0;&#xD;
&#xD;
acc_totalOwnElectricityProduction_kW.reset();&#xD;
acc_totalCustomerDelivery_kW.reset();&#xD;
acc_totalCustomerFeedIn_kW.reset();&#xD;
&#xD;
v_rapidRunData.resetAccumulators(energyModel.p_runEndTime_h - energyModel.p_runStartTime_h, energyModel.p_timeStep_h, v_activeEnergyCarriers, v_activeConsumptionEnergyCarriers, v_activeProductionEnergyCarriers); //f_initializeAccumulators();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715857260657</Id>
						<Name>f_updateLiveDataSets</Name>
						<X>680</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (energyModel.v_isRapidRun){&#xD;
	f_rapidRunDataLogging();&#xD;
} else {&#xD;
	//Current timestep&#xD;
	double currentTime_h = energyModel.t_h-energyModel.p_runStartTime_h;&#xD;
	&#xD;
	//Energy carrier flows&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentConsumptionFlows_kW.get(EC), 3) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentProductionFlows_kW.get(EC), 3) );&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Electricity balance&#xD;
	v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
	&#xD;
	&#xD;
	//Total demand and supply&#xD;
	v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
	v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
	&#xD;
	&#xD;
	//Live capacity datasets&#xD;
	v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	&#xD;
	//// Gather specific electricity flows from corresponding energy assets&#xD;
	&#xD;
	//Baseload electricity&#xD;
	v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, roundToDecimal(v_fixedConsumptionElectric_kW, 3));&#xD;
	&#xD;
	//Cooking&#xD;
	v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, roundToDecimal(v_electricHobConsumption_kW, 3));&#xD;
	&#xD;
	//Hydrogen elec consumption&#xD;
	v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, roundToDecimal(max(0, v_hydrogenElectricityConsumption_kW), 3));&#xD;
	&#xD;
	//Heatpump elec consumption&#xD;
	v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, roundToDecimal(max(0, v_heatPumpElectricityConsumption_kW), 3));&#xD;
	&#xD;
	//EVs&#xD;
	v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, roundToDecimal(max(0,v_evChargingPowerElectric_kW), 3));&#xD;
	v_liveData.data_V2GSupply_kW.add(currentTime_h, roundToDecimal(max(0, -v_evChargingPowerElectric_kW), 3));&#xD;
	&#xD;
	//Batteries&#xD;
	v_liveData.data_batteryCharging_kW.add(currentTime_h, roundToDecimal(max(0, v_batteryPowerElectric_kW), 3));		&#xD;
	v_liveData.data_batteryDischarging_kW.add(currentTime_h, roundToDecimal(max(0, -v_batteryPowerElectric_kW), 3));	&#xD;
	v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, v_batteryStoredEnergy_kWh/1000);&#xD;
	double currentSOC = 0;&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		currentSOC = (v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	v_liveData.data_batterySOC_fr.add(currentTime_h, roundToDecimal(currentSOC, 3));&#xD;
	&#xD;
	//CHP production&#xD;
	v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, roundToDecimal(v_CHPProductionElectric_kW, 3));&#xD;
	&#xD;
	//PV production&#xD;
	v_liveData.data_PVGeneration_kW.add(currentTime_h, roundToDecimal(v_pvProductionElectric_kW, 3));&#xD;
	&#xD;
	//Wind production&#xD;
	v_liveData.data_windGeneration_kW.add(currentTime_h, roundToDecimal(v_windProductionElectric_kW, 3));	&#xD;
	&#xD;
	//PV production&#xD;
	v_liveData.data_PTGeneration_kW.add(currentTime_h, roundToDecimal(v_ptProductionHeat_kW, 3));&#xD;
	&#xD;
	//District heating&#xD;
	v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, roundToDecimal(max(0,fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT)), 3));	&#xD;
&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1723103918133</Id>
						<Name>f_fillAnnualDatasetsOLD</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2360</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double v_currentPowerElectricity_kW = - v_electricitySurplus_kW;&#xD;
double v_currentPowerMethane_kW = v_methaneVolume_kWh / energyModel.p_timeStep_h;&#xD;
double v_currentPowerHydrogen_kW = v_hydrogenVolume_kWh / energyModel.p_timeStep_h;&#xD;
double v_currentPowerDiesel_kW = v_dieselVolume_kWh / energyModel.p_timeStep_h;&#xD;
double v_currentPowerHeat_kW = v_heatVolume_kWh / energyModel.p_timeStep_h;&#xD;
&#xD;
//double currentImport_kW = (max(0,v_currentPowerElectricity_kW) + max(0,v_currentPowerHeat_kW) + max(0,v_currentPowerMethane_kW) + max(0,v_currentPowerHydrogen_kW) + max(0,v_currentPowerDiesel_kW));&#xD;
//double currentExport_kW = (max(0,-v_currentPowerElectricity_kW) + max(0,-v_currentPowerHeat_kW) + max(0,-v_currentPowerMethane_kW) + max(0,-v_currentPowerHydrogen_kW) + max(0,-v_currentPowerDiesel_kW));&#xD;
&#xD;
double currentImport_MWh = (max(0,v_electricityVolume_kWh) + max(0,v_heatVolume_kWh) + max(0,v_methaneVolume_kWh) + max(0,v_hydrogenVolume_kWh) + max(0,v_dieselVolume_kWh))/1000;&#xD;
double currentExport_MWh = (max(0,-v_electricityVolume_kWh) + max(0,-v_heatVolume_kWh) + max(0,-v_methaneVolume_kWh) + max(0,-v_hydrogenVolume_kWh) + max(0,-v_dieselVolume_kWh))/1000;&#xD;
double currentImport_kW = currentImport_MWh * 1000 / energyModel.p_timeStep_h;&#xD;
double currentExport_kW = currentExport_MWh * 1000 / energyModel.p_timeStep_h;&#xD;
//traceln("ElectricityVolume_kWh: %s kWh, current production: %s kW", v_electricityVolume_kWh, v_currentOwnElectricityProduction_kW);	&#xD;
v_totalEnergyConsumed_MWh += (v_currentEnergyConsumption_kW * energyModel.p_timeStep_h)/1000;&#xD;
v_totalEnergyProduced_MWh += (v_currentEnergyProduction_kW * energyModel.p_timeStep_h)/1000;&#xD;
v_totalEnergyCurtailed_MWh += (v_currentEnergyCurtailed_kW * energyModel.p_timeStep_h)/1000;&#xD;
&#xD;
//data_annualCoopElectricityBalance_kW.add(energyModel.t_h, v_electricitySurplus_kW);&#xD;
acc_annualElectricityBalance_kW.addStep( -v_electricitySurplus_kW);&#xD;
acc_annualElectricityProduction_kW.addStep( v_currentElectricityProduction_kW);&#xD;
acc_annualElectricityConsumption_kW.addStep( v_currentElectricityConsumption_kW);&#xD;
acc_annualOwnElectricityProduction_kW.addStep( v_currentOwnElectricityProduction_kW);&#xD;
acc_annualCustomerFeedIn_kW.addStep( v_currentCustomerFeedIn_kW);&#xD;
&#xD;
acc_annualMethaneBalance_kW.addStep( v_methaneVolume_kWh/energyModel.p_timeStep_h);&#xD;
acc_annualHydrogenBalance_kW.addStep( v_hydrogenVolume_kWh/energyModel.p_timeStep_h);&#xD;
acc_annualDieselBalance_kW.addStep( v_dieselVolume_kWh/energyModel.p_timeStep_h);&#xD;
&#xD;
// Demand&#xD;
v_dailyBaseloadElectricityDemand_kW += v_fixedConsumptionElectric_kW;&#xD;
v_dailyHeatPumpElectricityDemand_kW += v_heatPumpElectricityConsumption_kW;&#xD;
v_dailyElectricVehicleDemand_kW += max(0,v_evChargingPowerElectric_kW);&#xD;
v_dailyBatteriesDemand_kW += max(0,v_batteryPowerElectric_kW);&#xD;
v_dailyNaturalGasDemand_kW += max(0, v_currentPowerMethane_kW);&#xD;
v_dailyDieselDemand_kW += max(0, v_currentPowerDiesel_kW);&#xD;
v_dailyHydrogenDemand_kW += max(0, v_currentPowerHydrogen_kW);&#xD;
//v_dailyDistrictHeatDemand_kWh += &#xD;
// Supply&#xD;
v_dailyPVGeneration_kW += v_pvProductionElectric_kW;&#xD;
v_dailyWindGeneration_kW += v_windProductionElectric_kW;&#xD;
v_dailyBatteriesSupply_kW += max(0,-v_batteryPowerElectric_kW);&#xD;
v_dailyV2GSupply_kW += -min(0,v_evChargingPowerElectric_kW);&#xD;
v_dailyNaturalGasSupply_kW += max(0, -v_currentPowerMethane_kW);&#xD;
v_dailyHydrogenSupply_kW += max(0, -v_currentPowerHydrogen_kW);&#xD;
&#xD;
//v_dailyDistrictHeatSupply_kWh += &#xD;
&#xD;
if (energyModel.t_h % 24 == 24-energyModel.p_timeStep_h) {&#xD;
	//data_annualElectricityDemand_MWh.add(energyModel.t_h, v_dailyElectricityDemand_kWh/(24 / energyModel.p_timeStep_h));&#xD;
	//data_annualElectricitySupply_MWh.add(energyModel.t_h, v_dailyElectricitySupply_kWh/(24 / energyModel.p_timeStep_h)); &#xD;
	// Demand&#xD;
	data_annualBaseloadElectricityDemand_kW.add(energyModel.t_h, v_dailyBaseloadElectricityDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_dailyHeatPumpElectricityDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualElectricVehicleDemand_kW.add(energyModel.t_h, v_dailyElectricVehicleDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualBatteriesDemand_kW.add(energyModel.t_h, v_dailyBatteriesDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualNaturalGasDemand_kW.add(energyModel.t_h, v_dailyNaturalGasDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualDieselDemand_kW.add(energyModel.t_h, v_dailyDieselDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualHydrogenDemand_kW.add(energyModel.t_h, v_dailyHydrogenDemand_kW/(24 / energyModel.p_timeStep_h));&#xD;
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatDemand_kWh/(24 / energyModel.p_timeStep_h));&#xD;
	// Supply&#xD;
	data_annualPVGeneration_kW.add(energyModel.t_h, v_dailyPVGeneration_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualWindGeneration_kW.add(energyModel.t_h, v_dailyWindGeneration_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualBatteriesSupply_kW.add(energyModel.t_h, v_dailyBatteriesSupply_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualV2GSupply_kW.add(energyModel.t_h, v_dailyV2GSupply_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualNaturalGasSupply_kW.add(energyModel.t_h, v_dailyNaturalGasSupply_kW/(24 / energyModel.p_timeStep_h));&#xD;
	data_annualHydrogenSupply_kW.add(energyModel.t_h, v_dailyHydrogenSupply_kW/(24 / energyModel.p_timeStep_h));&#xD;
	//data_annualDistrictHeatSupply_MWh.add(energyModel.t_h, v_dailyDistrictHeatSupply_kWh/(24 / energyModel.p_timeStep_h));&#xD;
&#xD;
	// Resetting the daily values&#xD;
	//v_dailyElectricityDemand_kWh = 0;&#xD;
	//v_dailyElectricitySupply_kWh = 0;&#xD;
	v_dailyBaseloadElectricityDemand_kW = 0;&#xD;
	v_dailyHeatPumpElectricityDemand_kW = 0;&#xD;
	v_dailyElectricVehicleDemand_kW = 0;&#xD;
	v_dailyBatteriesDemand_kW = 0;&#xD;
	v_dailyNaturalGasDemand_kW = 0;&#xD;
	v_dailyDieselDemand_kW = 0;&#xD;
	v_dailyHydrogenDemand_kW = 0;&#xD;
	//v_dailyDistrictHeatDemand_kWh = 0;&#xD;
	v_dailyPVGeneration_kW = 0;&#xD;
	v_dailyWindGeneration_kW = 0;&#xD;
	v_dailyBatteriesSupply_kW = 0;&#xD;
	v_dailyV2GSupply_kW = 0;&#xD;
	v_dailyNaturalGasSupply_kW = 0;&#xD;
	v_dailyHydrogenSupply_kW = 0;&#xD;
	//v_dailyDistrictHeatSupply_kWh = 0;&#xD;
}&#xD;
&#xD;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////&#xD;
//Summer week&#xD;
if (energyModel.t_h &gt;= energyModel.p_startHourSummerWeek &amp;&amp; energyModel.t_h &lt; energyModel.p_startHourSummerWeek + 24*7){&#xD;
	data_summerWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);&#xD;
	data_summerWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);&#xD;
	data_summerWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0,v_evChargingPowerElectric_kW));&#xD;
	data_summerWeekBatteriesDemand_kW.add(energyModel.t_h, max(0,v_batteryPowerElectric_kW));&#xD;
	data_summerWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));&#xD;
	data_summerWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));&#xD;
	data_summerWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));&#xD;
	&#xD;
	data_summerWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);&#xD;
	data_summerWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);&#xD;
	data_summerWeekBatteriesSupply_kW.add(energyModel.t_h, max(0,-v_batteryPowerElectric_kW));&#xD;
	data_summerWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));&#xD;
	data_summerWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));&#xD;
	data_summerWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));&#xD;
	&#xD;
	acc_summerElectricityBalance_kW.addStep(v_currentPowerElectricity_kW);&#xD;
	acc_summerMethaneBalance_kW.addStep(v_currentPowerMethane_kW);&#xD;
	acc_summerHydrogenBalance_kW.addStep(v_currentPowerHydrogen_kW);&#xD;
	acc_summerDieselBalance_kW.addStep(v_currentPowerDiesel_kW);&#xD;
	acc_summerHeatBalance_kW.addStep(v_currentPowerHeat_kW);&#xD;
	acc_summerTotalImport_kW.addStep(currentImport_kW);&#xD;
	acc_summerTotalExport_kW.addStep(currentExport_kW);&#xD;
	&#xD;
	acc_summerEnergyProduction_kW.addStep(v_currentEnergyProduction_kW);&#xD;
	acc_summerEnergyConsumption_kW.addStep(v_currentEnergyConsumption_kW);&#xD;
	acc_summerEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	acc_summerElectricityProduction_kW.addStep(v_currentElectricityProduction_kW);&#xD;
	acc_summerElectricityConsumption_kW.addStep(v_currentElectricityConsumption_kW);&#xD;
	//acc_summerHeatProduction_kW.addStep(v_currentEnergyProductionHeat_kW);	&#xD;
	&#xD;
}&#xD;
&#xD;
//Winter week&#xD;
if (energyModel.t_h &gt;= energyModel.p_startHourWinterWeek &amp;&amp; energyModel.t_h &lt; energyModel.p_startHourWinterWeek + 24*7){&#xD;
	data_winterWeekBaseloadElectricityDemand_kW.add(energyModel.t_h, v_fixedConsumptionElectric_kW);&#xD;
	data_winterWeekHeatPumpElectricityDemand_kW.add(energyModel.t_h, v_heatPumpElectricityConsumption_kW);&#xD;
	data_winterWeekElectricVehicleDemand_kW.add(energyModel.t_h, max(0, v_evChargingPowerElectric_kW));&#xD;
	data_winterWeekBatteriesDemand_kW.add(energyModel.t_h, max(0, v_batteryPowerElectric_kW));&#xD;
	data_winterWeekNaturalGasDemand_kW.add(energyModel.t_h, max(0, v_currentPowerMethane_kW));&#xD;
	data_winterWeekDieselDemand_kW.add(energyModel.t_h, max(0, v_currentPowerDiesel_kW));&#xD;
	data_winterWeekHydrogenDemand_kW.add(energyModel.t_h, max(0, v_currentPowerHydrogen_kW));&#xD;
	&#xD;
	data_winterWeekPVGeneration_kW.add(energyModel.t_h, v_pvProductionElectric_kW);&#xD;
	data_winterWeekWindGeneration_kW.add(energyModel.t_h, v_windProductionElectric_kW);&#xD;
	data_winterWeekBatteriesSupply_kW.add(energyModel.t_h, max(0, -v_batteryPowerElectric_kW));&#xD;
	data_winterWeekV2GSupply_kW.add(energyModel.t_h, max(0, -v_evChargingPowerElectric_kW));&#xD;
	data_winterWeekNaturalGasSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerMethane_kW));&#xD;
	data_winterWeekHydrogenSupply_kW.add(energyModel.t_h, max(0, -v_currentPowerHydrogen_kW));&#xD;
	&#xD;
	acc_winterElectricityBalance_kW.addStep(v_currentPowerElectricity_kW);&#xD;
	acc_winterMethaneBalance_kW.addStep(v_currentPowerMethane_kW);&#xD;
	acc_winterHydrogenBalance_kW.addStep(v_currentPowerHydrogen_kW);&#xD;
	acc_winterDieselBalance_kW.addStep(v_currentPowerDiesel_kW);&#xD;
	acc_winterHeatBalance_kW.addStep(v_currentPowerHeat_kW);&#xD;
	acc_winterTotalImport_kW.addStep(currentImport_kW);&#xD;
	acc_winterTotalExport_kW.addStep(currentExport_kW);&#xD;
	&#xD;
	acc_winterEnergyProduction_kW.addStep(v_currentEnergyProduction_kW);&#xD;
	acc_winterEnergyConsumption_kW.addStep(v_currentEnergyConsumption_kW);&#xD;
	acc_winterEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	acc_winterElectricityProduction_kW.addStep(v_currentElectricityProduction_kW);&#xD;
	acc_winterElectricityConsumption_kW.addStep(v_currentElectricityConsumption_kW);&#xD;
	//acc_winterHeatProduction_kW.addStep(v_currentEnergyProductionHeat_kW);	&#xD;
	&#xD;
}&#xD;
&#xD;
// Daytime totals. Use overal-total minus daytime total to get nighttime totals.&#xD;
&#xD;
if(energyModel.t_h % 24 &gt; 6 &amp;&amp; energyModel.t_h % 24 &lt; 18) { // Daytime totals. Use overal-total minus daytime total to get nighttime totals.&#xD;
	&#xD;
	v_daytimeTotalImport_MWh += currentImport_MWh;&#xD;
	v_daytimeTotalExport_MWh += currentExport_MWh;&#xD;
	v_daytimeEnergyConsumed_MWh += v_currentEnergyConsumption_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_daytimeEnergyProduced_MWh += v_currentEnergyProduction_kW / 1000 * energyModel.p_timeStep_h;&#xD;
		&#xD;
	v_daytimeMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_daytimeDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_daytimeHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;&#xD;
	v_daytimeHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;&#xD;
	&#xD;
	v_daytimeElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_daytimeElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		&#xD;
	v_daytimeElectricityExport_MWh += max(0,-v_electricityVolume_kWh) /1000;	&#xD;
	v_daytimeElectricityImport_MWh += max(0,v_electricityVolume_kWh) /1000;&#xD;
	&#xD;
} &#xD;
// Weekday totals. Use overal-totals minus weekday totals to get weekend totals.&#xD;
if ((energyModel.t_h+(energyModel.v_dayOfWeek1jan - 1)*24) % (24*7) &lt; (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h&#xD;
	&#xD;
	v_weekdayTotalImport_MWh += currentImport_MWh;&#xD;
	v_weekdayTotalExport_MWh += currentExport_MWh;&#xD;
&#xD;
	v_weekdayEnergyConsumed_MWh += v_currentEnergyConsumption_kW * energyModel.p_timeStep_h/1000;&#xD;
	v_weekdayEnergyProduced_MWh += v_currentEnergyProduction_kW * energyModel.p_timeStep_h/1000;&#xD;
	&#xD;
	v_weekdayMethaneImport_MWh += v_currentPowerMethane_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_weekdayDieselImport_MWh += v_currentPowerDiesel_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_weekdayHydrogenImport_MWh += max(0, v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;&#xD;
	v_weekdayHydrogenExport_MWh += max(0, -v_currentPowerHydrogen_kW) / 1000 * energyModel.p_timeStep_h;&#xD;
	&#xD;
	v_weekdayElectricityConsumed_MWh += v_currentElectricityConsumption_kW / 1000 * energyModel.p_timeStep_h;&#xD;
	v_weekdayElectricityProduced_MWh += v_currentElectricityProduction_kW / 1000 * energyModel.p_timeStep_h;		&#xD;
	v_weekdayElectricityExport_MWh += max(0,-v_electricityVolume_kWh) /1000;&#xD;
	v_weekdayElectricityImport_MWh += max(0,v_electricityVolume_kWh) /1000;	&#xD;
} &#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1731081139333</Id>
						<Name>f_calculateKPIs</Name>
						<X>660</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Cumulative KPIs of each grid connection individually&#xD;
f_getCumulativeIndividualGCValues();&#xD;
&#xD;
//Costumer delivery and feedin&#xD;
v_totalCustomerFeedIn_MWh = acc_totalCustomerFeedIn_kW.getIntegral_kWh() / 1000;&#xD;
v_totalCustomerDelivery_MWh = acc_totalCustomerDelivery_kW.getIntegral_kWh() / 1000;&#xD;
v_totalOwnElectricityProduction_MWh = acc_totalOwnElectricityProduction_kW.getIntegral_kWh() / 1000;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1739970817879</Id>
						<Name>f_collectGridConnectionRapidRunData</Name>
						<X>970</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Make collective profiles, electricity per timestep, other energy carriers per day!&#xD;
&#xD;
for (GridConnection gc : c_memberGridConnections) {&#xD;
	// Totals&#xD;
	v_rapidRunData.am_totalBalanceAccumulators_kW.add(gc.v_rapidRunData.am_totalBalanceAccumulators_kW);&#xD;
	v_rapidRunData.am_dailyAverageConsumptionAccumulators_kW.add(gc.v_rapidRunData.am_dailyAverageConsumptionAccumulators_kW);&#xD;
	v_rapidRunData.am_dailyAverageProductionAccumulators_kW.add(gc.v_rapidRunData.am_dailyAverageProductionAccumulators_kW);&#xD;
	v_rapidRunData.acc_dailyAverageEnergyProduction_kW.add(gc.v_rapidRunData.acc_dailyAverageEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAverageFinalEnergyConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_totalEnergyCurtailed_kW.add(gc.v_rapidRunData.acc_totalEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_totalPrimaryEnergyProductionHeatpumps_kW.add(gc.v_rapidRunData.acc_totalPrimaryEnergyProductionHeatpumps_kW);&#xD;
	&#xD;
	// Daytime&#xD;
	v_rapidRunData.acc_daytimeElectricityConsumption_kW.add(gc.v_rapidRunData.acc_daytimeElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_daytimeElectricityProduction_kW.add(gc.v_rapidRunData.acc_daytimeElectricityProduction_kW);&#xD;
	v_rapidRunData.acc_daytimeEnergyProduction_kW.add(gc.v_rapidRunData.acc_daytimeEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_daytimeFinalEnergyConsumption_kW.add(gc.v_rapidRunData.acc_daytimeFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.am_daytimeImports_kW.add(gc.v_rapidRunData.am_daytimeImports_kW);&#xD;
	v_rapidRunData.am_daytimeExports_kW.add(gc.v_rapidRunData.am_daytimeExports_kW);	&#xD;
	&#xD;
	// Weekend&#xD;
	v_rapidRunData.acc_weekendElectricityConsumption_kW.add(gc.v_rapidRunData.acc_weekendElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_weekendElectricityProduction_kW.add(gc.v_rapidRunData.acc_weekendElectricityProduction_kW);&#xD;
	v_rapidRunData.acc_weekendEnergyProduction_kW.add(gc.v_rapidRunData.acc_weekendEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_weekendFinalEnergyConsumption_kW.add(gc.v_rapidRunData.acc_weekendFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.am_weekendImports_kW.add(gc.v_rapidRunData.am_weekendImports_kW);&#xD;
	v_rapidRunData.am_weekendExports_kW.add(gc.v_rapidRunData.am_weekendExports_kW);	&#xD;
	&#xD;
	// Summerweek&#xD;
	v_rapidRunData.am_summerWeekBalanceAccumulators_kW.add(gc.v_rapidRunData.am_summerWeekBalanceAccumulators_kW);&#xD;
	v_rapidRunData.am_summerWeekConsumptionAccumulators_kW.add(gc.v_rapidRunData.am_summerWeekConsumptionAccumulators_kW);&#xD;
	v_rapidRunData.am_summerWeekProductionAccumulators_kW.add(gc.v_rapidRunData.am_summerWeekProductionAccumulators_kW);&#xD;
	v_rapidRunData.acc_summerWeekEnergyProduction_kW.add(gc.v_rapidRunData.acc_summerWeekEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekFinalEnergyConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekEnergyCurtailed_kW.add(gc.v_rapidRunData.acc_summerWeekEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.add(gc.v_rapidRunData.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW);&#xD;
	&#xD;
	// Winterweek&#xD;
	v_rapidRunData.am_winterWeekBalanceAccumulators_kW.add(gc.v_rapidRunData.am_winterWeekBalanceAccumulators_kW);&#xD;
	v_rapidRunData.am_winterWeekConsumptionAccumulators_kW.add(gc.v_rapidRunData.am_winterWeekConsumptionAccumulators_kW);&#xD;
	v_rapidRunData.am_winterWeekProductionAccumulators_kW.add(gc.v_rapidRunData.am_winterWeekProductionAccumulators_kW);&#xD;
	v_rapidRunData.acc_winterWeekEnergyProduction_kW.add(gc.v_rapidRunData.acc_winterWeekEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekFinalEnergyConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekEnergyCurtailed_kW.add(gc.v_rapidRunData.acc_winterWeekEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.add(gc.v_rapidRunData.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW);&#xD;
}&#xD;
&#xD;
f_collectAssetSpecificEnergyFlows_rapidRun();&#xD;
&#xD;
// This is only true because we have no customers and only members of the Coop for this implementation&#xD;
acc_totalOwnElectricityProduction_kW = v_rapidRunData.am_dailyAverageProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
//acc_summerWeekOwnElectricityProduction_kW = am_summerWeekProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
//acc_winterWeekOwnElectricityProduction_kW = am_winterWeekProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
&#xD;
&#xD;
//Calculate cumulative asset capacities&#xD;
f_getTotalInstalledCapacityOfAssets_rapidRun();&#xD;
&#xD;
//Recalculate SOC ts for energycoop&#xD;
f_recalculateSOC_rapidrun();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1739974426481</Id>
						<Name>f_initializeCustomCoop</Name>
						<X>960</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>c_memberGridConnections.addAll(gcList);&#xD;
&#xD;
//Basic initialization&#xD;
f_initialize();&#xD;
&#xD;
//Collect live datasets&#xD;
f_collectGridConnectionLiveData();&#xD;
&#xD;
boolean allGCHaveRapidRun = true;&#xD;
for(GridConnection GC : c_memberGridConnections){&#xD;
	if(GC.v_rapidRunData == null){&#xD;
		allGCHaveRapidRun = false;&#xD;
	}&#xD;
}&#xD;
if(allGCHaveRapidRun){&#xD;
	//Create rapid run data class used to collect rapid run data of other gc&#xD;
	v_rapidRunData = new J_RapidRunData(this);&#xD;
	v_rapidRunData.initializeAccumulators(energyModel.p_runEndTime_h - energyModel.p_runStartTime_h, energyModel.p_timeStep_h, EnumSet.copyOf(v_activeEnergyCarriers), EnumSet.copyOf(v_activeConsumptionEnergyCarriers), EnumSet.copyOf(v_activeProductionEnergyCarriers));&#xD;
	v_rapidRunData.connectionMetaData = v_liveConnectionMetaData.getClone();&#xD;
	v_rapidRunData.assetsMetaData = v_liveAssetsMetaData.getClone();&#xD;
	&#xD;
	//Collect current totals&#xD;
	f_collectGridConnectionRapidRunData();&#xD;
	&#xD;
	//Calculate KPIs&#xD;
	f_calculateKPIs();&#xD;
}&#xD;
&#xD;
f_connectCoopBattery();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740059187265</Id>
						<Name>f_getGroupContractDeliveryCapacity_kW</Name>
						<X>660</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>DataSet data_netbelastingDuurkromme_kW = v_rapidRunData.getLoadDurationCurves(energyModel).ds_loadDurationCurveTotal_kW;&#xD;
int arraySize = data_netbelastingDuurkromme_kW.size();&#xD;
if (arraySize &lt; 8760/energyModel.p_timeStep_h){&#xD;
	traceln("GroupContractDeliveryCapacity is zero because simulation is less than a full year long!");&#xD;
	return 0.0;&#xD;
} else {&#xD;
	return max(0,data_netbelastingDuurkromme_kW.getY(roundToInt(0.25*35/energyModel.p_timeStep_h)));&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740059261369</Id>
						<Name>f_getGroupContractFeedinCapacity_kW</Name>
						<X>660</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>DataSet data_netbelastingDuurkromme_kW = v_rapidRunData.getLoadDurationCurves(energyModel).ds_loadDurationCurveTotal_kW;&#xD;
int arraySize = data_netbelastingDuurkromme_kW.size();&#xD;
if (arraySize &lt; 8760/energyModel.p_timeStep_h){&#xD;
	traceln("GroupContractDeliveryCapacity is zero because simulation is less than a full year long!");&#xD;
	return 0.0;&#xD;
} else {&#xD;
	return -min(0,data_netbelastingDuurkromme_kW.getY(arraySize-roundToInt(0.25*35/energyModel.p_timeStep_h)));&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740475013848</Id>
						<Name>f_getCumulativeIndividualGCValues</Name>
						<X>1420</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Self consumption and sufficiency&#xD;
v_cumulativeIndividualSelfconsumptionElectricity_MWh = 0;&#xD;
v_cumulativeIndividualSelfconsumptionElectricity_fr = 0;&#xD;
v_cumulativeIndividualSelfSufficiencyElectricity_fr = 0;&#xD;
&#xD;
v_cumulativeIndividualSelfconsumptionEnergy_MWh = 0;&#xD;
v_cumulativeIndividualSelfconsumptionEnergy_fr = 0;&#xD;
v_cumulativeIndividualSelfSufficiencyEnergy_fr = 0;&#xD;
&#xD;
//Max peaks&#xD;
v_cumulativeIndividualPeakDelivery_kW = 0;&#xD;
v_cumulativeIndividualPeakFeedin_kW = 0;&#xD;
&#xD;
//Loop over membered grid connections&#xD;
for(GridConnection GC : c_memberGridConnections){&#xD;
	if(GC.v_isActive){&#xD;
		//Add self consumption of gc individually&#xD;
		v_cumulativeIndividualSelfconsumptionElectricity_MWh += GC.v_rapidRunData.getTotalElectricitySelfConsumed_MWh();&#xD;
		v_cumulativeIndividualSelfconsumptionEnergy_MWh += GC.v_rapidRunData.getTotalEnergySelfConsumed_MWh();&#xD;
		&#xD;
		//Add all peaks for member grid connections&#xD;
		v_cumulativeIndividualPeakDelivery_kW += GC.v_rapidRunData.getPeakDelivery_kW();&#xD;
		v_cumulativeIndividualPeakFeedin_kW += GC.v_rapidRunData.getPeakFeedin_kW();&#xD;
	}	&#xD;
}&#xD;
&#xD;
//Add all max peaks of GC&#xD;
&#xD;
//Do this also for the 'child' coops&#xD;
for(Agent a :  c_coopMembers ) { // Take 'behind the meter' production and consumption!&#xD;
	if (a instanceof EnergyCoop) {&#xD;
		EnergyCoop EC = (EnergyCoop)a;&#xD;
		EC.f_getCumulativeIndividualGCValues();&#xD;
		v_cumulativeIndividualSelfconsumptionElectricity_MWh = EC.v_cumulativeIndividualSelfconsumptionElectricity_MWh;&#xD;
		v_cumulativeIndividualPeakDelivery_kW  = EC.v_cumulativeIndividualPeakDelivery_kW;&#xD;
		v_cumulativeIndividualPeakFeedin_kW  = EC.v_cumulativeIndividualPeakFeedin_kW;&#xD;
	}&#xD;
}&#xD;
&#xD;
v_cumulativeIndividualSelfconsumptionElectricity_fr = v_rapidRunData.getTotalElectricityProduced_MWh() &gt; 0 ? v_cumulativeIndividualSelfconsumptionElectricity_MWh / v_rapidRunData.getTotalElectricityProduced_MWh() : 0;&#xD;
v_cumulativeIndividualSelfSufficiencyElectricity_fr = v_rapidRunData.getTotalElectricityConsumed_MWh()  &gt; 0 ? v_cumulativeIndividualSelfconsumptionElectricity_MWh / v_rapidRunData.getTotalElectricityConsumed_MWh() : 0;&#xD;
&#xD;
v_cumulativeIndividualSelfconsumptionEnergy_fr = v_rapidRunData.getTotalEnergyProduced_MWh() &gt; 0 ? v_cumulativeIndividualSelfconsumptionEnergy_MWh / v_rapidRunData.getTotalEnergyProduced_MWh() : 0;&#xD;
v_cumulativeIndividualSelfSufficiencyEnergy_fr = v_rapidRunData.getTotalEnergyConsumed_MWh() &gt; 0 ? v_cumulativeIndividualSelfconsumptionEnergy_MWh / v_rapidRunData.getTotalEnergyConsumed_MWh() : 0;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740480839774</Id>
						<Name>f_getTotalInstalledCapacityOfAssets_rapidRun</Name>
						<X>990</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Collect rapid run asset totals&#xD;
v_rapidRunData.assetsMetaData.totalInstalledWindPower_kW = 0.0;&#xD;
v_rapidRunData.assetsMetaData.totalInstalledPVPower_kW = 0.0;&#xD;
v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh = 0.0;&#xD;
&#xD;
//Add all battery storage capacities of gc&#xD;
for(GridConnection GC : c_memberGridConnections){&#xD;
	v_rapidRunData.assetsMetaData.totalInstalledWindPower_kW += GC.v_rapidRunData.assetsMetaData.totalInstalledWindPower_kW;&#xD;
	v_rapidRunData.assetsMetaData.totalInstalledPVPower_kW += GC.v_rapidRunData.assetsMetaData.totalInstalledPVPower_kW;&#xD;
	v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh += GC.v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
&#xD;
//Do this also for the 'child' coops&#xD;
for(Agent a :  c_coopMembers ) { // Take 'behind the meter' production and consumption!&#xD;
	if (a instanceof EnergyCoop) {&#xD;
		EnergyCoop EC = (EnergyCoop)a;&#xD;
		EC.f_getTotalInstalledCapacityOfAssets_rapidRun();&#xD;
		v_rapidRunData.assetsMetaData.totalInstalledWindPower_kW += EC.v_rapidRunData.assetsMetaData.totalInstalledWindPower_kW;&#xD;
		v_rapidRunData.assetsMetaData.totalInstalledPVPower_kW += EC.v_rapidRunData.assetsMetaData.totalInstalledPVPower_kW;&#xD;
		v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh += EC.v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1740492770316</Id>
						<Name>f_getAllChildMemberGridConnections</Name>
						<Description>Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node.</Description>
						<X>60</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return new ArrayList(f_getAllChildMemberGridConnections_recursion(new HashSet&lt;GridConnection&gt;()));</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>HashSet&lt;GridConnection&gt;</ReturnType>
						<Id>1740492770320</Id>
						<Name>f_getAllChildMemberGridConnections_recursion</Name>
						<Description>Recursion Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node. For basic use should be called with an empty list!</Description>
						<X>80</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>allMemberGridConnections</Name>
							<Type>HashSet&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>//Add to collection&#xD;
allMemberGridConnections.addAll(this.c_memberGridConnections);&#xD;
&#xD;
//Recursive loop (repeat this function till bottom)&#xD;
List&lt;Agent&gt; childCoops = findAll(c_coopMembers, coopMember -&gt; coopMember instanceof EnergyCoop);&#xD;
&#xD;
if(childCoops.size() == 0){&#xD;
	return allMemberGridConnections;&#xD;
}&#xD;
else{&#xD;
	for(Agent childCoop : childCoops){&#xD;
		((EnergyCoop)childCoop).f_getAllChildMemberGridConnections_recursion(allMemberGridConnections);&#xD;
	}&#xD;
	return allMemberGridConnections;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1740493169961</Id>
						<Name>f_getAllChildCustomerGridConnections</Name>
						<X>60</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return new ArrayList(f_getAllChildCustomerGridConnections_recursion(new HashSet&lt;GridConnection&gt;()));</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>HashSet&lt;GridConnection&gt;</ReturnType>
						<Id>1740493169963</Id>
						<Name>f_getAllChildCustomerGridConnections_recursion</Name>
						<X>80</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>allCustomerGridConnections</Name>
							<Type>HashSet&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>//Add to collection&#xD;
allCustomerGridConnections.addAll(this.c_customerGridConnections);&#xD;
&#xD;
//Recursive loop (repeat this function till bottom)&#xD;
List&lt;Agent&gt; childCoops = findAll(c_coopCustomers, coopCustomer -&gt; coopCustomer instanceof EnergyCoop);&#xD;
if(childCoops.size() == 0){&#xD;
	return allCustomerGridConnections;&#xD;
}&#xD;
else{&#xD;
	for(Agent childCoop : childCoops){&#xD;
		((EnergyCoop)childCoop).f_getAllChildCustomerGridConnections_recursion(allCustomerGridConnections);&#xD;
	}&#xD;
	return allCustomerGridConnections;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740502128178</Id>
						<Name>f_collectAssetSpecificEnergyFlows_rapidRun</Name>
						<X>990</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GridConnection gc : c_memberGridConnections) {&#xD;
	v_rapidRunData.acc_dailyAverageBaseloadElectricityConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageBaseloadElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageHeatPumpElectricityConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageHeatPumpElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageElectricVehicleConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageElectricVehicleConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageBatteriesConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageBatteriesConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageElectricCookingConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageElectricCookingConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageElectrolyserElectricityConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageElectrolyserElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAverageDistrictHeatingConsumption_kW.add(gc.v_rapidRunData.acc_dailyAverageDistrictHeatingConsumption_kW);&#xD;
	v_rapidRunData.acc_dailyAveragePVProduction_kW.add(gc.v_rapidRunData.acc_dailyAveragePVProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAverageWindProduction_kW.add(gc.v_rapidRunData.acc_dailyAverageWindProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAveragePTProduction_kW.add(gc.v_rapidRunData.acc_dailyAveragePTProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAverageV2GProduction_kW.add(gc.v_rapidRunData.acc_dailyAverageV2GProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAverageBatteriesProduction_kW.add(gc.v_rapidRunData.acc_dailyAverageBatteriesProduction_kW);&#xD;
	v_rapidRunData.acc_dailyAverageCHPElectricityProduction_kW.add(gc.v_rapidRunData.acc_dailyAverageCHPElectricityProduction_kW);&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.add(gc.v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh);&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekBaseloadElectricityConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekBaseloadElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekHeatPumpElectricityConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekHeatPumpElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekElectricVehicleConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekElectricVehicleConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekBatteriesConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekBatteriesConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekElectricCookingConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekElectricCookingConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekElectrolyserElectricityConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekElectrolyserElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekDistrictHeatingConsumption_kW.add(gc.v_rapidRunData.acc_summerWeekDistrictHeatingConsumption_kW);&#xD;
	v_rapidRunData.acc_summerWeekPVProduction_kW.add(gc.v_rapidRunData.acc_summerWeekPVProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekWindProduction_kW.add(gc.v_rapidRunData.acc_summerWeekWindProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekPTProduction_kW.add(gc.v_rapidRunData.acc_summerWeekPTProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekV2GProduction_kW.add(gc.v_rapidRunData.acc_summerWeekV2GProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekBatteriesProduction_kW.add(gc.v_rapidRunData.acc_summerWeekBatteriesProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekCHPElectricityProduction_kW.add(gc.v_rapidRunData.acc_summerWeekCHPElectricityProduction_kW	);&#xD;
	v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.add(gc.v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh);&#xD;
&#xD;
	v_rapidRunData.acc_winterWeekBaseloadElectricityConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekBaseloadElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekHeatPumpElectricityConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekHeatPumpElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekElectricVehicleConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekElectricVehicleConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekBatteriesConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekBatteriesConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekElectricCookingConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekElectricCookingConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekElectrolyserElectricityConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekElectrolyserElectricityConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekDistrictHeatingConsumption_kW.add(gc.v_rapidRunData.acc_winterWeekDistrictHeatingConsumption_kW);&#xD;
	v_rapidRunData.acc_winterWeekPVProduction_kW.add(gc.v_rapidRunData.acc_winterWeekPVProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekWindProduction_kW.add(gc.v_rapidRunData.acc_winterWeekWindProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekPTProduction_kW.add(gc.v_rapidRunData.acc_winterWeekPTProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekV2GProduction_kW.add(gc.v_rapidRunData.acc_winterWeekV2GProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekBatteriesProduction_kW.add(gc.v_rapidRunData.acc_winterWeekBatteriesProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekCHPElectricityProduction_kW.add(gc.v_rapidRunData.acc_winterWeekCHPElectricityProduction_kW);&#xD;
	v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.add(gc.v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1740502128180</Id>
						<Name>f_collectGridConnectionLiveData</Name>
						<X>970</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ArrayList&lt;GridConnection&gt; gcList = f_getAllChildMemberGridConnections();&#xD;
&#xD;
int liveWeekSize = gcList.get(0).v_liveData.data_gridCapacityDemand_kW.size();&#xD;
&#xD;
for (int i=0; i &lt; liveWeekSize; i++){&#xD;
	&#xD;
	double timeAxisValue = gcList.get(0).v_liveData.data_gridCapacityDemand_kW.getX(i); // we get the X value from a random dataset &#xD;
	&#xD;
	// Demand&#xD;
	J_FlowsMap fm_demand_kW = new J_FlowsMap();&#xD;
	&#xD;
	double electricityDemandCapacityLiveWeek_kW = 0;&#xD;
	double electricitySupplyCapacityLiveWeek_kW = 0;&#xD;
	double netLoadLiveWeek_kW = 0;&#xD;
	&#xD;
	double baseloadElectricityDemandLiveWeek_kW = 0;&#xD;
	double electricityForHeatDemandLiveWeek_kW = 0;&#xD;
	double electricityForTransportDemandLiveWeek_kW = 0;&#xD;
	double petroleumProductsDemandLiveWeek_kW = 0;&#xD;
	double naturalGasDemandLiveWeek_kW = 0;&#xD;
	double electricityForStorageDemandLiveWeek_kW = 0;&#xD;
	double electricityForHydrogenDemandLiveWeek_kW = 0;&#xD;
	double electricityForCookingConsumptionLiveWeek_kW = 0;&#xD;
	&#xD;
	double districtHeatingDemandLiveWeek_kW = 0;&#xD;
	&#xD;
	// Supply&#xD;
	J_FlowsMap fm_supply_kW = new J_FlowsMap();&#xD;
&#xD;
	double PVElectricitySupplyLiveWeek_kW = 0;&#xD;
	double windElectricitySupplyLiveWeek_kW = 0;&#xD;
	double PTHeatSupplyLiveWeek_kW = 0;&#xD;
	double storageElectricitySupplyLiveWeek_kW = 0;&#xD;
	double V2GElectricitySupplyLiveWeek_kW = 0;&#xD;
	double hydrogenSupplyLiveWeek_kW = 0;&#xD;
	double CHPElectricitySupplyLiveWeek_kW = 0;&#xD;
	&#xD;
	//Other&#xD;
	double batteryStoredEnergyLiveWeek_MWh = 0;&#xD;
	&#xD;
	for (GridConnection gc : gcList){&#xD;
		for (OL_EnergyCarriers EC_consumption : gc.v_activeConsumptionEnergyCarriers) {&#xD;
			fm_demand_kW.addFlow( EC_consumption, gc.v_liveData.dsm_liveDemand_kW.get(EC_consumption).getY(i));&#xD;
		}&#xD;
		for (OL_EnergyCarriers EC_production : gc.v_activeProductionEnergyCarriers) {&#xD;
			fm_supply_kW.addFlow( EC_production, gc.v_liveData.dsm_liveSupply_kW.get(EC_production).getY(i));&#xD;
		}&#xD;
		&#xD;
		electricityDemandCapacityLiveWeek_kW += gc.v_liveData.data_gridCapacityDemand_kW.getY(i);&#xD;
		electricitySupplyCapacityLiveWeek_kW += gc.v_liveData.data_gridCapacitySupply_kW.getY(i);&#xD;
		netLoadLiveWeek_kW  += gc.v_liveData.data_liveElectricityBalance_kW.getY(i);&#xD;
	&#xD;
		baseloadElectricityDemandLiveWeek_kW  += gc.v_liveData.data_baseloadElectricityDemand_kW.getY(i);&#xD;
		electricityForHeatDemandLiveWeek_kW  += gc.v_liveData.data_heatPumpElectricityDemand_kW.getY(i);&#xD;
		electricityForTransportDemandLiveWeek_kW += gc.v_liveData.data_electricVehicleDemand_kW.getY(i);&#xD;
		electricityForStorageDemandLiveWeek_kW  += gc.v_liveData.data_batteryCharging_kW.getY(i);&#xD;
		electricityForHydrogenDemandLiveWeek_kW  += gc.v_liveData.data_hydrogenElectricityDemand_kW.getY(i);&#xD;
		electricityForCookingConsumptionLiveWeek_kW += gc.v_liveData.data_cookingElectricityDemand_kW.getY(i);&#xD;
		districtHeatingDemandLiveWeek_kW += gc.v_liveData.data_districtHeatDelivery_kW.getY(i);&#xD;
		&#xD;
		// Supply&#xD;
		windElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_windGeneration_kW.getY(i);&#xD;
		PVElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_PVGeneration_kW.getY(i);&#xD;
		PTHeatSupplyLiveWeek_kW += gc.v_liveData.data_PTGeneration_kW.getY(i);&#xD;
		storageElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_batteryDischarging_kW.getY(i);&#xD;
		V2GElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_V2GSupply_kW.getY(i);&#xD;
		CHPElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_CHPElectricityProductionLiveWeek_kW.getY(i);&#xD;
		&#xD;
		//Other &#xD;
		batteryStoredEnergyLiveWeek_MWh += 	gc.v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getY(i);&#xD;
	}&#xD;
	&#xD;
	for (OL_EnergyCarriers EC_consumption : v_activeConsumptionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveDemand_kW.get(EC_consumption).add(timeAxisValue, roundToDecimal(fm_demand_kW.get(EC_consumption), 3));&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC_production : v_activeProductionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveSupply_kW.get(EC_production).add(timeAxisValue, roundToDecimal(fm_supply_kW.get(EC_production), 3));&#xD;
	}&#xD;
	&#xD;
		&#xD;
	v_liveData.data_gridCapacityDemand_kW.add(timeAxisValue, electricityDemandCapacityLiveWeek_kW);&#xD;
	v_liveData.data_gridCapacitySupply_kW.add(timeAxisValue, electricitySupplyCapacityLiveWeek_kW);&#xD;
	v_liveData.data_liveElectricityBalance_kW.add(timeAxisValue, netLoadLiveWeek_kW);&#xD;
	&#xD;
	v_liveData.data_baseloadElectricityDemand_kW.add(timeAxisValue, roundToDecimal(baseloadElectricityDemandLiveWeek_kW, 3));&#xD;
	v_liveData.data_heatPumpElectricityDemand_kW.add(timeAxisValue, roundToDecimal(electricityForHeatDemandLiveWeek_kW, 3));&#xD;
	v_liveData.data_electricVehicleDemand_kW.add(timeAxisValue, roundToDecimal(electricityForTransportDemandLiveWeek_kW, 3));&#xD;
	v_liveData.data_batteryCharging_kW.add(timeAxisValue, roundToDecimal(electricityForStorageDemandLiveWeek_kW, 3));&#xD;
	v_liveData.data_hydrogenElectricityDemand_kW.add(timeAxisValue, roundToDecimal(electricityForHydrogenDemandLiveWeek_kW, 3));&#xD;
	v_liveData.data_cookingElectricityDemand_kW.add(timeAxisValue, roundToDecimal(electricityForCookingConsumptionLiveWeek_kW, 3));&#xD;
	v_liveData.data_districtHeatDelivery_kW.add(timeAxisValue, roundToDecimal(districtHeatingDemandLiveWeek_kW, 3));&#xD;
	&#xD;
	// Supply&#xD;
	v_liveData.data_PVGeneration_kW.add(timeAxisValue, roundToDecimal(PVElectricitySupplyLiveWeek_kW, 3));&#xD;
	v_liveData.data_windGeneration_kW.add(timeAxisValue, roundToDecimal(windElectricitySupplyLiveWeek_kW, 3));&#xD;
	v_liveData.data_PTGeneration_kW.add(timeAxisValue, roundToDecimal(PTHeatSupplyLiveWeek_kW, 3));&#xD;
	v_liveData.data_batteryDischarging_kW.add(timeAxisValue, roundToDecimal(storageElectricitySupplyLiveWeek_kW, 3));&#xD;
	v_liveData.data_V2GSupply_kW.add(timeAxisValue, roundToDecimal(V2GElectricitySupplyLiveWeek_kW, 3));&#xD;
	v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(timeAxisValue, roundToDecimal(CHPElectricitySupplyLiveWeek_kW, 3));&#xD;
	&#xD;
	//Stored&#xD;
	v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(timeAxisValue, batteryStoredEnergyLiveWeek_MWh);&#xD;
}&#xD;
&#xD;
&#xD;
//Calculate cumulative asset capacities&#xD;
f_getTotalInstalledCapacityOfAssets_live();&#xD;
&#xD;
//Recalculate SOC ts for energycoop&#xD;
f_recalculateSOCDataSet_live();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741626527076</Id>
						<Name>f_rapidRunDataLogging</Name>
						<X>689.2</X>
						<Y>239.2</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// EnergyCoop specific&#xD;
acc_totalOwnElectricityProduction_kW.addStep( v_currentOwnElectricityProduction_kW );&#xD;
acc_totalCustomerDelivery_kW.addStep( v_currentCustomerDelivery_kW );&#xD;
acc_totalCustomerFeedIn_kW.addStep( v_currentCustomerFeedIn_kW );&#xD;
&#xD;
// Copied from GridConnection&#xD;
//v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) / p_contractedDeliveryCapacity_kW ));&#xD;
&#xD;
double currentImport_kW = 0.0;&#xD;
double currentExport_kW = 0.0;&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
	double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
	v_rapidRunData.am_totalBalanceAccumulators_kW.get(EC).addStep(  currentBalance_kW );&#xD;
	&#xD;
	if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
		currentImport_kW += max( 0, currentBalance_kW );&#xD;
	}&#xD;
	if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
		currentExport_kW += max( 0, -currentBalance_kW );&#xD;
	}&#xD;
}&#xD;
&#xD;
// Daytime totals. Use overal-total minus daytime total to get nighttime totals.&#xD;
if(energyModel.b_isDaytime) { &#xD;
	&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
&#xD;
		if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
		}&#xD;
		if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_daytimeElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_daytimeElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );	&#xD;
	v_rapidRunData.acc_daytimeEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_daytimeFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);	&#xD;
	v_rapidRunData.acc_daytimePrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
}&#xD;
&#xD;
// Weekend totals. Use overal-totals minus weekend totals to get weekday totals.&#xD;
if (!energyModel.b_isWeekday) { // &#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
&#xD;
		if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_weekendImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
		}&#xD;
		if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_weekendExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_weekendElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_weekendFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_weekendPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
}&#xD;
&#xD;
//========== SUMMER WEEK ==========//&#xD;
if (energyModel.b_isSummerWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
			&#xD;
	v_rapidRunData.acc_summerWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_rapidRunData.acc_summerWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_summerWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
	v_rapidRunData.acc_summerWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
	v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}&#xD;
	else{&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}		&#xD;
}&#xD;
&#xD;
//========== WINTER WEEK ==========// &#xD;
if (energyModel.b_isWinterWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_winterWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_rapidRunData.acc_winterWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_winterWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
	v_rapidRunData.acc_winterWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
	v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}&#xD;
	else{&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}			&#xD;
	&#xD;
}&#xD;
&#xD;
&#xD;
//========== TOTALS / DAILY AVERAGES ==========//&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
}&#xD;
v_rapidRunData.acc_dailyAverageEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
v_rapidRunData.acc_dailyAverageFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
v_rapidRunData.acc_totalEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
v_rapidRunData.acc_totalPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);&#xD;
&#xD;
v_rapidRunData.acc_dailyAverageBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
v_rapidRunData.acc_dailyAverageDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
&#xD;
v_rapidRunData.acc_dailyAveragePVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAveragePTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
v_rapidRunData.acc_dailyAverageV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh);&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
}&#xD;
else{&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep(0);	&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1742569887460</Id>
						<Name>f_connectCoopBattery</Name>
						<X>970</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>GCGridBattery coopBattery = findFirst(energyModel.GridBatteries, bat -&gt; bat.p_batteryAlgorithm instanceof J_BatteryManagementPeakShaving &amp;&amp; ((J_BatteryManagementPeakShaving)bat.p_batteryAlgorithm).getTargetType() == OL_ResultScope.ENERGYCOOP &amp;&amp; ((J_BatteryManagementPeakShaving)bat.p_batteryAlgorithm).getTarget() == null);&#xD;
&#xD;
if(coopBattery != null){&#xD;
	//Reset previous state&#xD;
	coopBattery.v_previousPowerElectricity_kW = 0;&#xD;
	&#xD;
	//Connect to coop&#xD;
	coopBattery.c_parentCoops.add(this);&#xD;
	c_memberGridConnections.add(coopBattery);&#xD;
	v_liveAssetsMetaData.hasBattery = true;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744211126429</Id>
						<Name>f_recalculateSOC_rapidrun</Name>
						<X>990</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double[] dailyAverageBatteriesSOC_fr = new double[v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.getLength()];&#xD;
double[] summerWeekBatteriesSOC_fr = new double[v_rapidRunData.ts_summerWeekBatteriesSOC_fr.getLength()];&#xD;
double[] winterWeekBatteriesSOC_fr = new double[v_rapidRunData.ts_winterWeekBatteriesSOC_fr.getLength()];&#xD;
&#xD;
double totalInstalledBatteryStorageCapacity_MWh = v_rapidRunData.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
&#xD;
//Total&#xD;
for(int i = 0; i &lt; v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.getLength() ; i++){&#xD;
	if(totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		dailyAverageBatteriesSOC_fr[i] = v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.getY(i)/totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	else{&#xD;
		dailyAverageBatteriesSOC_fr[i] = 0;&#xD;
	}&#xD;
}&#xD;
&#xD;
//Summerweek SOC&#xD;
for(int i = 0; i &lt; v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.getLength() ; i++){&#xD;
	if(totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		summerWeekBatteriesSOC_fr[i] = v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.getY(i)/totalInstalledBatteryStorageCapacity_MWh;	&#xD;
	}&#xD;
	else{&#xD;
		summerWeekBatteriesSOC_fr[i] = 0;	&#xD;
	}&#xD;
}&#xD;
&#xD;
//Winterweek SOC&#xD;
for(int i = 0; i &lt; v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.getLength() ; i++){&#xD;
	if(totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		winterWeekBatteriesSOC_fr[i] = v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.getY(i)/totalInstalledBatteryStorageCapacity_MWh;	&#xD;
	}&#xD;
	else{&#xD;
		winterWeekBatteriesSOC_fr[i] = 0;	&#xD;
	}&#xD;
}&#xD;
&#xD;
v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.setTimeSeries(dailyAverageBatteriesSOC_fr);&#xD;
v_rapidRunData.ts_summerWeekBatteriesSOC_fr.setTimeSeries(summerWeekBatteriesSOC_fr);&#xD;
v_rapidRunData.ts_winterWeekBatteriesSOC_fr.setTimeSeries(winterWeekBatteriesSOC_fr);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744211359139</Id>
						<Name>f_getTotalInstalledCapacityOfAssets_live</Name>
						<X>990</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Collect live asset totals&#xD;
v_liveAssetsMetaData.totalInstalledWindPower_kW = 0.0;&#xD;
v_liveAssetsMetaData.totalInstalledPVPower_kW = 0.0;&#xD;
v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh = 0.0;&#xD;
&#xD;
//Add all battery storage capacities of gc&#xD;
for(GridConnection GC : c_memberGridConnections){&#xD;
	v_liveAssetsMetaData.totalInstalledWindPower_kW += GC.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
	v_liveAssetsMetaData.totalInstalledPVPower_kW += GC.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
	v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += GC.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
&#xD;
//Do this also for the 'child' coops&#xD;
for(Agent a :  c_coopMembers ) { // Take 'behind the meter' production and consumption!&#xD;
	if (a instanceof EnergyCoop) {&#xD;
		EnergyCoop EC = (EnergyCoop)a;&#xD;
		EC.f_getTotalInstalledCapacityOfAssets_live();&#xD;
		v_liveAssetsMetaData.totalInstalledWindPower_kW += EC.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
		v_liveAssetsMetaData.totalInstalledPVPower_kW += EC.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
		v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += EC.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1744271942642</Id>
						<Name>f_recalculateSOCDataSet_live</Name>
						<X>990</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double totalInstalledBatteryStorageCapacity_MWh = v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
&#xD;
&#xD;
double currentSOC = 0;&#xD;
int liveWeekSize = v_liveData.data_batteryStoredEnergyLiveWeek_MWh.size();&#xD;
&#xD;
for (int i=0; i &lt; liveWeekSize; i++){&#xD;
	if(totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		currentSOC = v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getY(i)/totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	else{&#xD;
		currentSOC = 0;&#xD;
	}&#xD;
	v_liveData.data_batterySOC_fr.add(v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getX(i), roundToDecimal(currentSOC, 3));&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751294580400</Id>
						<Name>f_updateLiveDataSets1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1660</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (energyModel.v_isRapidRun){&#xD;
	f_rapidRunDataLogging();&#xD;
} else {&#xD;
	//Current timestep&#xD;
	double currentTime_h = energyModel.t_h-energyModel.p_runStartTime_h;&#xD;
	&#xD;
	//Energy carrier flows&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, fm_currentConsumptionFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Electricity balance&#xD;
	v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
	&#xD;
	&#xD;
	//Total demand and supply&#xD;
	v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
	v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
	&#xD;
	&#xD;
	//Live capacity datasets&#xD;
	v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	&#xD;
	//// Gather specific electricity flows from corresponding energy assets&#xD;
	&#xD;
	//Baseload electricity&#xD;
	v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, v_fixedConsumptionElectric_kW);&#xD;
	&#xD;
	//Cooking&#xD;
	v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, v_electricHobConsumption_kW);&#xD;
	&#xD;
	//Hydrogen elec consumption&#xD;
	v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, max(0, v_hydrogenElectricityConsumption_kW));&#xD;
	&#xD;
	//Heatpump elec consumption&#xD;
	v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, max(0, v_heatPumpElectricityConsumption_kW));&#xD;
	&#xD;
	//EVs&#xD;
	v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, max(0,v_evChargingPowerElectric_kW));&#xD;
	v_liveData.data_V2GSupply_kW.add(currentTime_h, max(0, -v_evChargingPowerElectric_kW));&#xD;
	&#xD;
	//Batteries&#xD;
	v_liveData.data_batteryCharging_kW.add(currentTime_h, max(0, v_batteryPowerElectric_kW));		&#xD;
	v_liveData.data_batteryDischarging_kW.add(currentTime_h, max(0, -v_batteryPowerElectric_kW));	&#xD;
	v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, v_batteryStoredEnergy_kWh/1000);&#xD;
	double currentSOC = 0;&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		currentSOC = (v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	v_liveData.data_batterySOC_fr.add(currentTime_h, currentSOC);&#xD;
	&#xD;
	//CHP production&#xD;
	v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, v_CHPProductionElectric_kW);&#xD;
	&#xD;
	//PV production&#xD;
	v_liveData.data_PVGeneration_kW.add(currentTime_h, v_pvProductionElectric_kW);&#xD;
	&#xD;
	//Wind production&#xD;
	v_liveData.data_windGeneration_kW.add(currentTime_h, v_windProductionElectric_kW);	&#xD;
	&#xD;
	//District heating&#xD;
	v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, max(0,fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT)));	&#xD;
&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751300044792</Id>
						<Name>f_collectGridConnectionLiveData1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1660</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ArrayList&lt;GridConnection&gt; gcList = f_getAllChildMemberGridConnections();&#xD;
&#xD;
int liveWeekSize = gcList.get(0).v_liveData.data_gridCapacityDemand_kW.size();&#xD;
&#xD;
for (int i=0; i &lt; liveWeekSize; i++){&#xD;
	&#xD;
	double timeAxisValue = gcList.get(0).v_liveData.data_gridCapacityDemand_kW.getX(i); // we get the X value from a random dataset &#xD;
	&#xD;
	// Demand&#xD;
	J_FlowsMap fm_demand_kW = new J_FlowsMap();&#xD;
	&#xD;
	double electricityDemandCapacityLiveWeek_kW = 0;&#xD;
	double electricitySupplyCapacityLiveWeek_kW = 0;&#xD;
	double netLoadLiveWeek_kW = 0;&#xD;
	&#xD;
	double baseloadElectricityDemandLiveWeek_kW = 0;&#xD;
	double electricityForHeatDemandLiveWeek_kW = 0;&#xD;
	double electricityForTransportDemandLiveWeek_kW = 0;&#xD;
	double petroleumProductsDemandLiveWeek_kW = 0;&#xD;
	double naturalGasDemandLiveWeek_kW = 0;&#xD;
	double electricityForStorageDemandLiveWeek_kW = 0;&#xD;
	double electricityForHydrogenDemandLiveWeek_kW = 0;&#xD;
	double electricityForCookingConsumptionLiveWeek_kW = 0;&#xD;
	&#xD;
	double districtHeatingDemandLiveWeek_kW = 0;&#xD;
	&#xD;
	// Supply&#xD;
	J_FlowsMap fm_supply_kW = new J_FlowsMap();&#xD;
&#xD;
	double windElectricitySupplyLiveWeek_kW = 0;&#xD;
	double PVElectricitySupplyLiveWeek_kW = 0;&#xD;
	double storageElectricitySupplyLiveWeek_kW = 0;&#xD;
	double V2GElectricitySupplyLiveWeek_kW = 0;&#xD;
	double hydrogenSupplyLiveWeek_kW = 0;&#xD;
	double CHPElectricitySupplyLiveWeek_kW = 0;&#xD;
	&#xD;
	//Other&#xD;
	double batteryStoredEnergyLiveWeek_MWh = 0;&#xD;
	&#xD;
	for (GridConnection gc : gcList){&#xD;
		for (OL_EnergyCarriers EC_consumption : gc.v_activeConsumptionEnergyCarriers) {&#xD;
			fm_demand_kW.addFlow( EC_consumption, gc.v_liveData.dsm_liveDemand_kW.get(EC_consumption).getY(i));&#xD;
		}&#xD;
		for (OL_EnergyCarriers EC_production : gc.v_activeProductionEnergyCarriers) {&#xD;
			fm_supply_kW.addFlow( EC_production, gc.v_liveData.dsm_liveSupply_kW.get(EC_production).getY(i));&#xD;
		}&#xD;
		&#xD;
		electricityDemandCapacityLiveWeek_kW += gc.v_liveData.data_gridCapacityDemand_kW.getY(i);&#xD;
		electricitySupplyCapacityLiveWeek_kW += gc.v_liveData.data_gridCapacitySupply_kW.getY(i);&#xD;
		netLoadLiveWeek_kW  += gc.v_liveData.data_liveElectricityBalance_kW.getY(i);&#xD;
	&#xD;
		baseloadElectricityDemandLiveWeek_kW  += gc.v_liveData.data_baseloadElectricityDemand_kW.getY(i);&#xD;
		electricityForHeatDemandLiveWeek_kW  += gc.v_liveData.data_heatPumpElectricityDemand_kW.getY(i);&#xD;
		electricityForTransportDemandLiveWeek_kW += gc.v_liveData.data_electricVehicleDemand_kW.getY(i);&#xD;
		electricityForStorageDemandLiveWeek_kW  += gc.v_liveData.data_batteryCharging_kW.getY(i);&#xD;
		electricityForHydrogenDemandLiveWeek_kW  += gc.v_liveData.data_hydrogenElectricityDemand_kW.getY(i);&#xD;
		electricityForCookingConsumptionLiveWeek_kW += gc.v_liveData.data_cookingElectricityDemand_kW.getY(i);&#xD;
		districtHeatingDemandLiveWeek_kW += gc.v_liveData.data_districtHeatDelivery_kW.getY(i);&#xD;
		&#xD;
		// Supply&#xD;
		windElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_windGeneration_kW.getY(i);&#xD;
		PVElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_PVGeneration_kW.getY(i);&#xD;
		storageElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_batteryDischarging_kW.getY(i);&#xD;
		V2GElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_V2GSupply_kW.getY(i);&#xD;
		CHPElectricitySupplyLiveWeek_kW  += gc.v_liveData.data_CHPElectricityProductionLiveWeek_kW.getY(i);&#xD;
		&#xD;
		//Other &#xD;
		batteryStoredEnergyLiveWeek_MWh += 	gc.v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getY(i);&#xD;
	}&#xD;
	&#xD;
	for (OL_EnergyCarriers EC_consumption : v_activeConsumptionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveDemand_kW.get(EC_consumption).add(timeAxisValue, fm_demand_kW.get(EC_consumption));&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC_production : v_activeProductionEnergyCarriers) {&#xD;
		v_liveData.dsm_liveSupply_kW.get(EC_production).add(timeAxisValue, fm_supply_kW.get(EC_production));&#xD;
	}&#xD;
	&#xD;
		&#xD;
	v_liveData.data_gridCapacityDemand_kW.add(timeAxisValue, electricityDemandCapacityLiveWeek_kW);&#xD;
	v_liveData.data_gridCapacitySupply_kW.add(timeAxisValue, electricitySupplyCapacityLiveWeek_kW);&#xD;
	v_liveData.data_liveElectricityBalance_kW.add(timeAxisValue, netLoadLiveWeek_kW);&#xD;
	&#xD;
	v_liveData.data_baseloadElectricityDemand_kW.add(timeAxisValue, baseloadElectricityDemandLiveWeek_kW);&#xD;
	v_liveData.data_heatPumpElectricityDemand_kW.add(timeAxisValue, electricityForHeatDemandLiveWeek_kW);&#xD;
	v_liveData.data_electricVehicleDemand_kW.add(timeAxisValue, electricityForTransportDemandLiveWeek_kW);&#xD;
	v_liveData.data_batteryCharging_kW.add(timeAxisValue, electricityForStorageDemandLiveWeek_kW);&#xD;
	v_liveData.data_hydrogenElectricityDemand_kW.add(timeAxisValue, electricityForHydrogenDemandLiveWeek_kW);&#xD;
	v_liveData.data_cookingElectricityDemand_kW.add(timeAxisValue, electricityForCookingConsumptionLiveWeek_kW);&#xD;
	v_liveData.data_districtHeatDelivery_kW.add(timeAxisValue, districtHeatingDemandLiveWeek_kW);&#xD;
	&#xD;
	// Supply&#xD;
	v_liveData.data_windGeneration_kW.add(timeAxisValue, windElectricitySupplyLiveWeek_kW);&#xD;
	v_liveData.data_PVGeneration_kW.add(timeAxisValue, PVElectricitySupplyLiveWeek_kW);&#xD;
	v_liveData.data_batteryDischarging_kW.add(timeAxisValue, storageElectricitySupplyLiveWeek_kW);&#xD;
	v_liveData.data_V2GSupply_kW.add(timeAxisValue, V2GElectricitySupplyLiveWeek_kW);&#xD;
	v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(timeAxisValue, CHPElectricitySupplyLiveWeek_kW);&#xD;
	&#xD;
	//Stored&#xD;
	v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(timeAxisValue, batteryStoredEnergyLiveWeek_MWh);&#xD;
}&#xD;
&#xD;
&#xD;
//Calculate cumulative asset capacities&#xD;
f_getTotalInstalledCapacityOfAssets_live();&#xD;
&#xD;
//Recalculate SOC ts for energycoop&#xD;
f_recalculateSOCDataSet_live();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751300243591</Id>
						<Name>f_recalculateSOCDataSet_live1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1660</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double totalInstalledBatteryStorageCapacity_MWh = v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
&#xD;
&#xD;
double currentSOC = 0;&#xD;
int liveWeekSize = v_liveData.data_batteryStoredEnergyLiveWeek_MWh.size();&#xD;
&#xD;
for (int i=0; i &lt; liveWeekSize; i++){&#xD;
	if(totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		currentSOC = v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getY(i)/totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	else{&#xD;
		currentSOC = 0;&#xD;
	}&#xD;
	v_liveData.data_batterySOC_fr.add(v_liveData.data_batteryStoredEnergyLiveWeek_MWh.getX(i), currentSOC);&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1660731375011</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>180</X>
						<Y>-150</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1660736357874</Id>
						<Name>superConnection</Name>
						<Description>Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>230</X>
						<Y>-30</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1660736357876</Id>
						<Name>subConnectionsElectricity</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>430</X>
						<Y>-130</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1679493814923</Id>
						<Name>subConnectionsMethane</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>430</X>
						<Y>-100</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1679493824998</Id>
						<Name>subConnectionsHydrogen</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>430</X>
						<Y>-70</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1679493837529</Id>
						<Name>subConnectionsHeat</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>430</X>
						<Y>-40</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660731826095</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660731375015</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1751294560330</Id>
								<Name>rect_save</Name>
								<X>1643</X>
								<Y>64</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>297</Width>
								<Height>106</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1740491441996</Id>
								<Name>rect_energyBalanceMonitor</Name>
								<X>0</X>
								<Y>980</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-7876870</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>840</Width>
								<Height>720</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<BarChart>
								<Id>1692631026123</Id>
								<Name>ch_coopBalance</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>2520</X>
								<Y>-20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>false</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011892587</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1692691200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>390</Width>
								<Height>390</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>310</Width>
									<Height>300</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<DataItem>
									<Id>1692631027262</Id>
									<Expression>v_balanceMembers_eur</Expression>
									<Color>-3137392</Color>
									<Title>Inkomsten leden</Title>
								</DataItem>
								<DataItem>
									<Id>1692631063902</Id>
									<Expression>v_balanceElectricityDelivery_eur</Expression>
									<Color>-32944</Color>
									<Title>Inkomsten EPEX</Title>
								</DataItem>
								<DataItem>
									<Id>1692631086718</Id>
									<Expression>-v_assetDepreciation_eur</Expression>
									<Color>-13447886</Color>
									<Title>Afschrijving assets</Title>
								</DataItem>
								<DataItem>
									<Id>1692631175228</Id>
									<Expression>-p_yearlyOperationalCosts_eur</Expression>
									<Color>-9404272</Color>
									<Title>OPEX</Title>
								</DataItem>
								<ScaleFromExpression>0</ScaleFromExpression>
								<ScaleToExpression>1</ScaleToExpression>
								<ScaleType>AUTO</ScaleType>
								<Bars>
									<Direction>UP</Direction>
									<RelativeWidth>0.8</RelativeWidth>
								</Bars>
							</BarChart>
							<Text>
								<Id>1723034834835</Id>
								<Name>txt_productionEnergyBalanceMonitor_electricity</Name>
								<X>78</X>
								<Y>1309</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1723034834837</Id>
								<Name>txt_consumptionEnergyBalanceMonitor</Name>
								<X>530</X>
								<Y>1090</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1723034834841</Id>
								<Name>txt_consumptionOrProduction_electricity</Name>
								<X>48</X>
								<Y>1139</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption or production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1723034834843</Id>
								<Name>txt_electricityEnergyBalanceMonitor</Name>
								<X>108</X>
								<Y>1061</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>Arial</Name>
									<Size>14</Size>
									<Style>2</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1740403817351</Id>
								<Name>txt_cumulativeIndividualGCValues</Name>
								<X>1410</X>
								<Y>520</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Cumulative individual GC values</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1740490188581</Id>
								<Name>text8</Name>
								<X>400</X>
								<Y>1010</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Energy balance monitor</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1740491352854</Id>
								<Name>txt_otherEnergyBalanceMonitor</Name>
								<X>520</X>
								<Y>1060</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other energy types</Text>
								<Font>
									<Name>Arial</Name>
									<Size>14</Size>
									<Style>2</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1740491671178</Id>
								<Name>txt_consumptionEnergyBalanceMonitor_electricity</Name>
								<X>90</X>
								<Y>1090</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1740491692081</Id>
								<Name>txt_consumptionOrProduction_energy</Name>
								<X>530</X>
								<Y>1180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption or production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1740491726747</Id>
								<Name>txt_productionEnergyBalanceMonitor_energy</Name>
								<X>530</X>
								<Y>1230</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1740491824448</Id>
								<Name>txt_otherEnergyBalanceMonitor_electricity</Name>
								<X>100</X>
								<Y>1420</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1741856471603</Id>
								<Name>button_viewData</Name>
								<X>240</X>
								<Y>-90</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>energyModel.energyDataViewer.f_fillEnergyDataViewer(this);
energyModel.energyDataViewer.viewArea.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>View Data</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1751294560328</Id>
								<Name>txt_save</Name>
								<X>1653</X>
								<Y>74</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Bewaren (neg dataset bug)</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1741860694288</Id>
						<Name>va_coop</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1705600400154</Id>
				<Name>EnergyDataViewer</Name>
				<Import>import java.util.EnumSet;</Import>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1705600400160</Id>
					<Name>1705600400160</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089989</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1705651200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1705600400157</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1705600400161</CurrentLevel>
				<ConnectionsId>1705600400155</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1741792546547</Id>
						<Name>v_totalEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546549</Id>
						<Name>v_totalEnergyImport_MWh</Name>
						<X>686</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546551</Id>
						<Name>v_totalEnergyExport_MWh</Name>
						<X>686</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546553</Id>
						<Name>v_totalTimeOverloaded_h</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1206</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546555</Id>
						<Name>v_gridCapacityFeedIn_kW</Name>
						<X>1216</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546557</Id>
						<Name>v_gridCapacityDelivery_kW</Name>
						<X>1216</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546559</Id>
						<Name>v_dataElectricityBaseloadConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546561</Id>
						<Name>v_dataElectricityForHeatConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546563</Id>
						<Name>v_dataElectricityForTransportConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546565</Id>
						<Name>v_dataElectricityForStorageConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546567</Id>
						<Name>v_dataDistrictHeatConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546569</Id>
						<Name>v_dataWindElectricityProductionLiveWeek_kW</Name>
						<X>206</X>
						<Y>385</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546571</Id>
						<Name>v_dataPVElectricityProductionLiveWeek_kW</Name>
						<X>206</X>
						<Y>365</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546573</Id>
						<Name>v_dataStorageElectricityProductionLiveWeek_kW</Name>
						<X>206</X>
						<Y>405</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546575</Id>
						<Name>v_dataV2GElectricityProductionLiveWeek_kW</Name>
						<X>206</X>
						<Y>425</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546577</Id>
						<Name>v_dataDistrictHeatProductionLiveWeek_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>206</X>
						<Y>515</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546579</Id>
						<Name>v_dataElectricityForHydrogenConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546581</Id>
						<Name>v_summerWeekEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546583</Id>
						<Name>v_summerWeekEnergyImport_MWh</Name>
						<X>686</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546585</Id>
						<Name>v_summerWeekEnergyExport_MWh</Name>
						<X>686</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546587</Id>
						<Name>v_summerWeekElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546589</Id>
						<Name>v_dataNetLoadYear_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1206</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double[]</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546591</Id>
						<Name>v_totalElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546593</Id>
						<Name>v_totalElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546595</Id>
						<Name>v_rooftopPVPotential_kW</Name>
						<X>1726</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546597</Id>
						<Name>v_windPotential_kW</Name>
						<X>1726</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546599</Id>
						<Name>data_dailyAverageFinalEnergyConsumption_kW</Name>
						<X>206</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546601</Id>
						<Name>v_dataElectricityBaseloadConsumptionYear_kW</Name>
						<X>206</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546603</Id>
						<Name>v_dataElectricityForHeatConsumptionYear_kW</Name>
						<X>206</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546605</Id>
						<Name>v_dataElectricityForTransportConsumptionYear_kW</Name>
						<X>206</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546607</Id>
						<Name>v_dataElectricityForStorageConsumptionYear_kW</Name>
						<X>206</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546609</Id>
						<Name>v_dataElectricityWindProductionYear_kW</Name>
						<X>206</X>
						<Y>1005</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546611</Id>
						<Name>v_dataElectricityPVProductionYear_kW</Name>
						<X>206</X>
						<Y>985</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546613</Id>
						<Name>v_dataElectricityStorageProductionYear_kW</Name>
						<X>206</X>
						<Y>1025</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546615</Id>
						<Name>v_dataElectricityV2GProductionYear_kW</Name>
						<X>206</X>
						<Y>1045</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546617</Id>
						<Name>v_dataDistrictHeatProductionYear_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>206</X>
						<Y>1125</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546619</Id>
						<Name>v_dataDistrictHeatConsumptionYear_kW</Name>
						<X>206</X>
						<Y>900</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546621</Id>
						<Name>v_dataElectricityForHydrogenConsumptionYear_kW</Name>
						<X>206</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546623</Id>
						<Name>v_individualSelfSufficiencyElectricity_fr</Name>
						<X>1726</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546625</Id>
						<Name>v_dataElectricityBaseloadConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546627</Id>
						<Name>v_dataElectricityForHeatConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546629</Id>
						<Name>v_dataElectricityForTransportConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546631</Id>
						<Name>v_dataElectricityForStorageConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546633</Id>
						<Name>v_dataDistrictHeatConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546635</Id>
						<Name>v_dataElectricityForHydrogenConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546637</Id>
						<Name>v_dataElectricityBaseloadConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>1920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546639</Id>
						<Name>v_dataElectricityForHeatConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>1940</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546641</Id>
						<Name>v_dataElectricityForTransportConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>1960</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546643</Id>
						<Name>v_dataElectricityForStorageConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>1980</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546645</Id>
						<Name>v_dataDistrictHeatConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546647</Id>
						<Name>v_dataElectricityForHydrogenConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546649</Id>
						<Name>v_dataElectricityWindProductionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546651</Id>
						<Name>v_dataElectricityPVProductionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546653</Id>
						<Name>v_dataElectricityStorageProductionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546655</Id>
						<Name>v_dataElectricityV2GProductionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546657</Id>
						<Name>v_dataDistrictHeatProductionSummerWeek_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>206</X>
						<Y>1690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546659</Id>
						<Name>v_dataElectricityWindProductionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546661</Id>
						<Name>v_dataElectricityPVProductionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546663</Id>
						<Name>v_dataElectricityStorageProductionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546665</Id>
						<Name>v_dataElectricityV2GProductionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546667</Id>
						<Name>v_dataDistrictHeatProductionWinterWeek_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>206</X>
						<Y>2340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546669</Id>
						<Name>v_dataNetbelastingDuurkrommeYear_kW</Name>
						<X>1206</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546671</Id>
						<Name>v_dataNetbelastingDuurkrommeSummer_kW</Name>
						<X>1206</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546673</Id>
						<Name>v_dataNetbelastingDuurkrommeWinter_kW</Name>
						<X>1206</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546675</Id>
						<Name>v_dataNetbelastingDuurkrommeDaytime_kW</Name>
						<X>1206</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546677</Id>
						<Name>v_dataNetbelastingDuurkrommeNighttime_kW</Name>
						<X>1206</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546679</Id>
						<Name>v_dataNetbelastingDuurkrommeWeekend_kW</Name>
						<X>1206</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546681</Id>
						<Name>v_dataNetbelastingDuurkrommeWeekday_kW</Name>
						<X>1206</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546683</Id>
						<Name>v_individualSelfconsumptionElectricity_fr</Name>
						<X>1726</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546685</Id>
						<Name>v_dataNetbelastingDuurkrommeYearVorige_kW</Name>
						<X>1206</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546687</Id>
						<Name>v_dataElectricityFeedInCapacityLiveWeek_kW</Name>
						<X>206</X>
						<Y>605</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546689</Id>
						<Name>v_dataElectricityDeliveryCapacityLiveWeek_kW</Name>
						<X>206</X>
						<Y>585</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546719</Id>
						<Name>v_dataNetLoadLiveWeek_kW</Name>
						<X>206</X>
						<Y>565</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546721</Id>
						<Name>v_dataNetLoadSummerWeek_kW</Name>
						<X>206</X>
						<Y>1750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546723</Id>
						<Name>v_dataNetLoadWinterWeek_kW</Name>
						<X>206</X>
						<Y>2400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546727</Id>
						<Name>v_totalEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546729</Id>
						<Name>v_totalEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546731</Id>
						<Name>v_annualOverloadDurationDelivery_hr</Name>
						<X>686</X>
						<Y>415</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546733</Id>
						<Name>v_annualOverloadDurationFeedin_hr</Name>
						<X>686</X>
						<Y>435</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546735</Id>
						<Name>v_totalEnergyConsumptionForDistrictHeating_MWh</Name>
						<X>686</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546737</Id>
						<Name>v_totalPrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>686</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546739</Id>
						<Name>fm_totalImports_MWh</Name>
						<X>686</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546741</Id>
						<Name>fm_totalExports_MWh</Name>
						<X>686</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546743</Id>
						<Name>fm_summerWeekImports_MWh</Name>
						<X>686</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546745</Id>
						<Name>fm_summerWeekExports_MWh</Name>
						<X>686</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546747</Id>
						<Name>fm_winterWeekImports_MWh</Name>
						<X>686</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546749</Id>
						<Name>fm_winterWeekExports_MWh</Name>
						<X>686</X>
						<Y>970</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546751</Id>
						<Name>v_totalElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546753</Id>
						<Name>v_summerWeekEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546755</Id>
						<Name>v_summerWeekEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546757</Id>
						<Name>v_summerWeekElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546759</Id>
						<Name>v_summerWeekElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546761</Id>
						<Name>v_winterWeekEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546763</Id>
						<Name>v_winterWeekEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546765</Id>
						<Name>v_winterWeekEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546767</Id>
						<Name>v_winterWeekElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546769</Id>
						<Name>v_winterWeekElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546771</Id>
						<Name>v_winterWeekElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546773</Id>
						<Name>v_winterWeekEnergyImport_MWh</Name>
						<X>686</X>
						<Y>990</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546775</Id>
						<Name>v_winterWeekEnergyExport_MWh</Name>
						<X>686</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546777</Id>
						<Name>v_daytimeEnergyImport_MWh</Name>
						<X>686</X>
						<Y>1470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546779</Id>
						<Name>v_daytimeEnergyExport_MWh</Name>
						<X>686</X>
						<Y>1490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546781</Id>
						<Name>fm_daytimeImports_MWh</Name>
						<X>686</X>
						<Y>1430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546783</Id>
						<Name>fm_daytimeExports_MWh</Name>
						<X>686</X>
						<Y>1450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546785</Id>
						<Name>v_daytimeEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>1355</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546787</Id>
						<Name>v_daytimeEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>1335</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546789</Id>
						<Name>v_daytimeEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1375</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546791</Id>
						<Name>v_daytimeElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>1275</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546793</Id>
						<Name>v_daytimeElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>1255</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546795</Id>
						<Name>v_daytimeElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1295</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546797</Id>
						<Name>v_nighttimeEnergyImport_MWh</Name>
						<X>686</X>
						<Y>1750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546799</Id>
						<Name>v_nighttimeEnergyExport_MWh</Name>
						<X>686</X>
						<Y>1770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546801</Id>
						<Name>v_nighttimeEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>1640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546803</Id>
						<Name>v_nighttimeEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>1620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546805</Id>
						<Name>v_nighttimeEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546807</Id>
						<Name>v_weekdayEnergyImport_MWh</Name>
						<X>686</X>
						<Y>2100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546809</Id>
						<Name>v_weekdayEnergyExport_MWh</Name>
						<X>686</X>
						<Y>2120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546811</Id>
						<Name>v_weekdayEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>1995</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546813</Id>
						<Name>v_weekdayEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>1975</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546815</Id>
						<Name>v_weekdayEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>2015</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546817</Id>
						<Name>v_weekendEnergyImport_MWh</Name>
						<X>686</X>
						<Y>2390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546819</Id>
						<Name>v_weekendEnergyExport_MWh</Name>
						<X>686</X>
						<Y>2410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546821</Id>
						<Name>v_weekendEnergyConsumed_MWh</Name>
						<X>686</X>
						<Y>2285</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546823</Id>
						<Name>v_weekendEnergyProduced_MWh</Name>
						<X>686</X>
						<Y>2265</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546825</Id>
						<Name>v_weekendEnergySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>2305</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546827</Id>
						<Name>v_nighttimeElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>1559</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546829</Id>
						<Name>v_weekdayElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>1915</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546831</Id>
						<Name>v_weekendElectricityConsumed_MWh</Name>
						<X>686</X>
						<Y>2205</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546833</Id>
						<Name>v_nighttimeElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>1540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546835</Id>
						<Name>v_nighttimeElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1577</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546837</Id>
						<Name>v_weekdayElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>1895</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546839</Id>
						<Name>v_weekdayElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>1935</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546841</Id>
						<Name>v_weekendElectricityProduced_MWh</Name>
						<X>686</X>
						<Y>2185</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546843</Id>
						<Name>v_weekendElectricitySelfConsumed_MWh</Name>
						<X>686</X>
						<Y>2225</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546845</Id>
						<Name>fm_nighttimeImports_MWh</Name>
						<X>686</X>
						<Y>1710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546847</Id>
						<Name>fm_nighttimeExports_MWh</Name>
						<X>686</X>
						<Y>1730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546849</Id>
						<Name>fm_weekdayImports_MWh</Name>
						<X>686</X>
						<Y>2060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546851</Id>
						<Name>fm_weekdayExports_MWh</Name>
						<X>686</X>
						<Y>2080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546853</Id>
						<Name>fm_weekendImports_MWh</Name>
						<X>686</X>
						<Y>2350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546855</Id>
						<Name>fm_weekendExports_MWh</Name>
						<X>686</X>
						<Y>2370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546857</Id>
						<Name>dsm_dailyAverageConsumptionDataSets_kW</Name>
						<X>206</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546859</Id>
						<Name>dsm_dailyAverageProductionDataSets_kW</Name>
						<X>206</X>
						<Y>1105</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546861</Id>
						<Name>dsm_summerWeekConsumptionDataSets_kW</Name>
						<X>206</X>
						<Y>1430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546863</Id>
						<Name>dsm_summerWeekProductionDataSets_kW</Name>
						<X>206</X>
						<Y>1670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546865</Id>
						<Name>dsm_winterWeekConsumptionDataSets_kW</Name>
						<X>206</X>
						<Y>2080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546867</Id>
						<Name>dsm_winterWeekProductionDataSets_kW</Name>
						<X>206</X>
						<Y>2320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546869</Id>
						<Name>dsm_liveConsumption_kW</Name>
						<X>206</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546871</Id>
						<Name>dsm_liveProduction_kW</Name>
						<X>206</X>
						<Y>495</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_DataSetMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_DataSetMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546873</Id>
						<Name>v_totalEnergyCurtailed_MWh</Name>
						<X>1726</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546875</Id>
						<Name>v_totalWindGeneration_MWh</Name>
						<X>1726</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546877</Id>
						<Name>v_totalPVGeneration_MWh</Name>
						<X>1726</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546879</Id>
						<Name>v_dataElectricityForCookingConsumptionYear_kW</Name>
						<X>206</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546881</Id>
						<Name>v_dataElectricityForCookingConsumptionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546883</Id>
						<Name>v_dataElectricityForCookingConsumptionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546885</Id>
						<Name>v_dataElectricityForCookingConsumptionLiveWeek_kW</Name>
						<X>206</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546887</Id>
						<Name>v_activeProductionEnergyCarriers</Name>
						<X>606</X>
						<Y>-30</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546889</Id>
						<Name>v_activeConsumptionEnergyCarriers</Name>
						<X>606</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546891</Id>
						<Name>b_isRealDeliveryCapacityAvailable</Name>
						<X>1216</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546893</Id>
						<Name>b_isRealFeedinCapacityAvailable</Name>
						<X>1216</X>
						<Y>380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546895</Id>
						<Name>b_hasHeatGridConnection</Name>
						<X>1726</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546897</Id>
						<Name>v_dataCHPElectricityProductionLiveWeek_kW</Name>
						<X>206</X>
						<Y>445</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546899</Id>
						<Name>v_dataElectricityCHPProductionYear_kW</Name>
						<X>206</X>
						<Y>1065</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546901</Id>
						<Name>v_dataElectricityCHPProductionSummerWeek_kW</Name>
						<X>206</X>
						<Y>1610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546903</Id>
						<Name>v_dataElectricityCHPProductionWinterWeek_kW</Name>
						<X>206</X>
						<Y>2260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546905</Id>
						<Name>b_hasElectrolyser</Name>
						<X>1726</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546907</Id>
						<Name>b_hasCHP</Name>
						<X>1726</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546909</Id>
						<Name>b_hasPV</Name>
						<X>1726</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546911</Id>
						<Name>b_hasWindturbine</Name>
						<X>1726</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546913</Id>
						<Name>b_hasV2G</Name>
						<X>1726</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546915</Id>
						<Name>b_hasBattery</Name>
						<X>1726</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546917</Id>
						<Name>b_hasElectricHeating</Name>
						<X>1726</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546919</Id>
						<Name>b_hasElectricTransport</Name>
						<X>1726</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546921</Id>
						<Name>b_hasElectricCooking</Name>
						<X>1726</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546923</Id>
						<Name>v_totalWindEnergyCurtailed_MWh</Name>
						<X>1726</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546925</Id>
						<Name>v_totalPVEnergyCurtailed_MWh</Name>
						<X>1726</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546927</Id>
						<Name>v_rooftopPVInstalled_kW</Name>
						<X>1726</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546929</Id>
						<Name>v_windInstalled_kW</Name>
						<X>1726</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546931</Id>
						<Name>v_dataBatterySOCLiveWeek_fr</Name>
						<X>196</X>
						<Y>635</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
							<InitialValue Class="CodeValue">
								<Code>new DataSet(672)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546933</Id>
						<Name>v_dataBatterySOCYear_fr</Name>
						<X>186</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
							<InitialValue Class="CodeValue">
								<Code>new DataSet(roundToInt((energyModel.p_runEndTime_h - energyModel.p_runStartTime_h)/24))</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546935</Id>
						<Name>v_dataBatterySOCSummerWeek_fr</Name>
						<X>206</X>
						<Y>1790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
							<InitialValue Class="CodeValue">
								<Code>new DataSet(672)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546937</Id>
						<Name>v_dataBatterySOCWinterWeek_fr</Name>
						<X>206</X>
						<Y>2440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
							<InitialValue Class="CodeValue">
								<Code>new DataSet(672)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546939</Id>
						<Name>v_batteryStorageCapacityInstalled_MWh</Name>
						<X>1726</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546941</Id>
						<Name>v_numberOfGridconnections</Name>
						<X>1106</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546943</Id>
						<Name>v_individualSelfSufficiencyEnergy_fr</Name>
						<X>1726</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546945</Id>
						<Name>v_individualSelfconsumptionEnergy_fr</Name>
						<X>1726</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546947</Id>
						<Name>v_individualPeakDelivery_kW</Name>
						<X>1726</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546949</Id>
						<Name>v_individualPeakFeedin_kW</Name>
						<X>1726</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546951</Id>
						<Name>v_gridCapacityDelivery_groupcontract_kW</Name>
						<X>1216</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546953</Id>
						<Name>v_gridCapacityFeedin_groupcontract_kW</Name>
						<X>1216</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741792546955</Id>
						<Name>v_engineAgent</Name>
						<X>436</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>Agent</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741958031736</Id>
						<Name>v_gridCapacityFeedIn_kW_rapidRun</Name>
						<X>1215</X>
						<Y>475</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741958031738</Id>
						<Name>v_gridCapacityDelivery_kW_rapidRun</Name>
						<X>1215</X>
						<Y>455</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067237799</Id>
						<Name>v_summerWeekPrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>685</X>
						<Y>910</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067333060</Id>
						<Name>v_winterWeekPrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>685</X>
						<Y>1195</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067347245</Id>
						<Name>v_daytimePrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>685</X>
						<Y>1515</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067361421</Id>
						<Name>v_nighttimePrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>686</X>
						<Y>1805</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067393031</Id>
						<Name>v_weekdayPrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>686</X>
						<Y>2148</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1743067406399</Id>
						<Name>v_weekendPrimaryEnergyProductionHeatpumps_MWh</Name>
						<X>686</X>
						<Y>2442</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1741792546958</Id>
						<Name>p_areaType</Name>
						<X>166</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GISObjectType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1741792546956</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1741792546961</Id>
						<Name>p_name</Name>
						<X>306</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1741792546959</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546529</Id>
						<Name>f_initializeMaps</Name>
						<X>936</X>
						<Y>-10</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// FlowsMaps&#xD;
fm_totalImports_MWh = new J_FlowsMap();&#xD;
fm_totalExports_MWh = new J_FlowsMap();&#xD;
fm_summerWeekImports_MWh = new J_FlowsMap();&#xD;
fm_summerWeekExports_MWh = new J_FlowsMap();&#xD;
fm_winterWeekImports_MWh = new J_FlowsMap();&#xD;
fm_winterWeekExports_MWh = new J_FlowsMap();&#xD;
fm_daytimeImports_MWh = new J_FlowsMap();&#xD;
fm_daytimeExports_MWh = new J_FlowsMap();&#xD;
fm_nighttimeImports_MWh = new J_FlowsMap();&#xD;
fm_nighttimeExports_MWh = new J_FlowsMap();&#xD;
fm_weekdayImports_MWh = new J_FlowsMap();&#xD;
fm_weekdayExports_MWh = new J_FlowsMap();&#xD;
fm_weekendImports_MWh = new J_FlowsMap();&#xD;
fm_weekendExports_MWh = new J_FlowsMap();&#xD;
&#xD;
// DataSetMaps&#xD;
dsm_liveConsumption_kW = new J_DataSetMap();&#xD;
dsm_liveProduction_kW = new J_DataSetMap();&#xD;
dsm_dailyAverageConsumptionDataSets_kW = new J_DataSetMap();&#xD;
dsm_dailyAverageProductionDataSets_kW = new J_DataSetMap();&#xD;
dsm_summerWeekConsumptionDataSets_kW = new J_DataSetMap();&#xD;
dsm_summerWeekProductionDataSets_kW = new J_DataSetMap();&#xD;
dsm_winterWeekConsumptionDataSets_kW = new J_DataSetMap();&#xD;
dsm_winterWeekProductionDataSets_kW = new J_DataSetMap();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546531</Id>
						<Name>f_updatePreviousTotalsGC</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1246</X>
						<Y>-90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GridConnection GC : energyModel.f_getGridConnections()){	&#xD;
	J_previousTotals previousTotals = c_previousTotals_GC.get(GC);&#xD;
	&#xD;
	previousTotals.setPreviousTotalImports_MWh(GC.fm_totalImports_MWh);&#xD;
	previousTotals.setPreviousTotalExports_MWh(GC.fm_totalExports_MWh);&#xD;
	&#xD;
	previousTotals.setPreviousTotalConsumedEnergy_MWh(GC.v_totalEnergyConsumed_MWh);&#xD;
	previousTotals.setPreviousTotalProducedEnergy_MWh(GC.v_totalEnergyProduced_MWh);&#xD;
	previousTotals.setPreviousSelfConsumedEnergy_MWh(GC.v_totalEnergySelfConsumed_MWh);&#xD;
	previousTotals.setPreviousImportedEnergy_MWh(GC.v_totalEnergyImport_MWh);&#xD;
	previousTotals.setPreviousExportedEnergy_MWh(GC.v_totalEnergyExport_MWh);&#xD;
	previousTotals.setPreviousSelfConsumedElectricity_MWh(GC.v_totalElectricitySelfConsumed_MWh);&#xD;
	previousTotals.setPreviousElectricityConsumed_MWh(GC.v_totalElectricityConsumed_MWh);&#xD;
	&#xD;
	//Overload&#xD;
	previousTotals.setPreviousOverloadDurationDelivery_hr(GC.v_totalOverloadDurationDelivery_hr);&#xD;
	previousTotals.setPreviousOverloadDurationFeedin_hr(GC.v_totalOverloadDurationFeedin_hr);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546533</Id>
						<Name>f_fillEnergyDataViewer</Name>
						<X>1226</X>
						<Y>-250</Y>
						<Label>
							<X>9</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>v_engineAgent = data.getRapidRunData().parentAgent;&#xD;
//Number of connected gcs&#xD;
//v_numberOfGridconnections = 1;&#xD;
&#xD;
//Set active energyCarriers&#xD;
v_activeConsumptionEnergyCarriers = data.getLiveData().activeConsumptionEnergyCarriers;&#xD;
v_activeProductionEnergyCarriers = data.getLiveData().activeProductionEnergyCarriers;&#xD;
&#xD;
//Update active asset booleans&#xD;
f_updateLiveActiveAssetBooleans(data);&#xD;
&#xD;
//Update variables&#xD;
f_updateVariables(data);&#xD;
&#xD;
//Update variables&#xD;
f_updateLiveDatasets(data);&#xD;
&#xD;
//Update variables&#xD;
f_updateWeeklyDatasets(data);&#xD;
&#xD;
//Update variables&#xD;
f_updateYearlyDatasets(data);&#xD;
&#xD;
//Get duurkromme&#xD;
f_updateLoadDurationCurve(data);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546535</Id>
						<Name>f_updateVariables</Name>
						<X>1246</X>
						<Y>-230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>//Grid capacity&#xD;
v_gridCapacityDelivery_kW = data.getLiveData().connectionMetaData.contractedDeliveryCapacity_kW;&#xD;
v_gridCapacityFeedIn_kW = data.getLiveData().connectionMetaData.contractedFeedinCapacity_kW;&#xD;
&#xD;
v_gridCapacityDelivery_kW_rapidRun = data.getRapidRunData().connectionMetaData.contractedDeliveryCapacity_kW;&#xD;
v_gridCapacityFeedIn_kW_rapidRun = data.getRapidRunData().connectionMetaData.contractedFeedinCapacity_kW;&#xD;
//area.v_gridCapacityDelivery_groupcontract_kW = GC.p_contractedDeliveryCapacity_kW;&#xD;
//area.v_gridCapacityFeedin_groupcontract_kW = GC.p_contractedFeedinCapacity_kW;&#xD;
&#xD;
b_isRealDeliveryCapacityAvailable = data.getLiveData().connectionMetaData.contractedDeliveryCapacityKnown;&#xD;
b_isRealFeedinCapacityAvailable = data.getLiveData().connectionMetaData.contractedFeedinCapacityKnown;&#xD;
&#xD;
//Installed Asset variables&#xD;
v_batteryStorageCapacityInstalled_MWh = data.getLiveData().assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
&#xD;
// KPIs for individual vs collective plots &#xD;
v_individualSelfconsumptionElectricity_fr = data.getRapidRunData().getTotalElectricitySelfConsumed_MWh()/data.getRapidRunData().getTotalElectricityConsumed_MWh();&#xD;
v_individualSelfSufficiencyElectricity_fr = data.getRapidRunData().getTotalElectricitySelfConsumed_MWh()/data.getRapidRunData().getTotalElectricityProduced_MWh();&#xD;
&#xD;
v_individualSelfconsumptionEnergy_fr = data.getRapidRunData().getTotalEnergySelfConsumed_MWh()/data.getRapidRunData().getTotalEnergyConsumed_MWh();&#xD;
v_individualSelfSufficiencyEnergy_fr = data.getRapidRunData().getTotalEnergySelfConsumed_MWh()/data.getRapidRunData().getTotalEnergyProduced_MWh();&#xD;
&#xD;
v_individualPeakDelivery_kW = data.getRapidRunData().getPeakDelivery_kW();&#xD;
v_individualPeakFeedin_kW = data.getRapidRunData().getPeakFeedin_kW();&#xD;
&#xD;
//========== TOTALS ==========//&#xD;
fm_totalImports_MWh.clear();&#xD;
fm_totalExports_MWh.clear();&#xD;
&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeConsumptionEnergyCarriers) {&#xD;
	fm_totalImports_MWh.put( energyCarrier, data.getRapidRunData().getTotalImport_MWh(energyCarrier) );&#xD;
}&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeProductionEnergyCarriers) {&#xD;
	fm_totalExports_MWh.put( energyCarrier, data.getRapidRunData().getTotalExport_MWh(energyCarrier) );&#xD;
}&#xD;
&#xD;
v_totalEnergyImport_MWh = data.getRapidRunData().getTotalEnergyImport_MWh();&#xD;
v_totalEnergyExport_MWh = data.getRapidRunData().getTotalEnergyExport_MWh();&#xD;
&#xD;
v_totalEnergyConsumed_MWh = data.getRapidRunData().getTotalEnergyConsumed_MWh();&#xD;
v_totalEnergyProduced_MWh = data.getRapidRunData().getTotalEnergyProduced_MWh();&#xD;
v_totalEnergySelfConsumed_MWh = data.getRapidRunData().getTotalEnergySelfConsumed_MWh();&#xD;
&#xD;
v_totalElectricityConsumed_MWh = data.getRapidRunData().getTotalElectricityConsumed_MWh();&#xD;
v_totalElectricityProduced_MWh = data.getRapidRunData().getTotalElectricityProduced_MWh();&#xD;
v_totalElectricitySelfConsumed_MWh = data.getRapidRunData().getTotalElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_annualOverloadDurationDelivery_hr = data.getRapidRunData().getTotalOverloadDurationDelivery_hr();&#xD;
v_annualOverloadDurationFeedin_hr = data.getRapidRunData().getTotalOverloadDurationFeedin_hr();&#xD;
&#xD;
v_totalEnergyConsumptionForDistrictHeating_MWh = data.getRapidRunData().getTotalDistrictHeatingConsumption_MWh();&#xD;
v_totalPrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getTotalPrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
//========== SUMMER/WINTER WEEK ==========//&#xD;
fm_summerWeekImports_MWh.clear();&#xD;
fm_winterWeekImports_MWh.clear();&#xD;
fm_summerWeekExports_MWh.clear();&#xD;
fm_winterWeekExports_MWh.clear();&#xD;
&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeConsumptionEnergyCarriers) {&#xD;
	fm_summerWeekImports_MWh.put( energyCarrier, data.getRapidRunData().getSummerWeekImport_MWh(energyCarrier) );&#xD;
	fm_winterWeekImports_MWh.put( energyCarrier, data.getRapidRunData().getWinterWeekImport_MWh(energyCarrier) );&#xD;
}&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeProductionEnergyCarriers) {&#xD;
	fm_summerWeekExports_MWh.put( energyCarrier, data.getRapidRunData().getSummerWeekExport_MWh(energyCarrier) );&#xD;
	fm_winterWeekExports_MWh.put( energyCarrier, data.getRapidRunData().getWinterWeekExport_MWh(energyCarrier) );&#xD;
}&#xD;
&#xD;
v_summerWeekEnergyImport_MWh = data.getRapidRunData().getSummerWeekEnergyImport_MWh();&#xD;
v_summerWeekEnergyExport_MWh = data.getRapidRunData().getSummerWeekEnergyExport_MWh();&#xD;
&#xD;
v_summerWeekEnergyConsumed_MWh = data.getRapidRunData().getSummerWeekEnergyConsumed_MWh();&#xD;
v_summerWeekEnergyProduced_MWh = data.getRapidRunData().getSummerWeekEnergyProduced_MWh();&#xD;
v_summerWeekEnergySelfConsumed_MWh = data.getRapidRunData().getSummerWeekEnergySelfConsumed_MWh();&#xD;
&#xD;
v_summerWeekElectricityConsumed_MWh = data.getRapidRunData().getSummerWeekElectricityConsumed_MWh();&#xD;
v_summerWeekElectricityProduced_MWh = data.getRapidRunData().getSummerWeekElectricityProduced_MWh();&#xD;
v_summerWeekElectricitySelfConsumed_MWh = data.getRapidRunData().getSummerWeekElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_summerWeekPrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getSummerWeekPrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
v_winterWeekEnergyImport_MWh = data.getRapidRunData().getWinterWeekEnergyImport_MWh();&#xD;
v_winterWeekEnergyExport_MWh = data.getRapidRunData().getWinterWeekEnergyExport_MWh();&#xD;
&#xD;
v_winterWeekEnergyConsumed_MWh = data.getRapidRunData().getWinterWeekEnergyConsumed_MWh();&#xD;
v_winterWeekEnergyProduced_MWh = data.getRapidRunData().getWinterWeekEnergyProduced_MWh();&#xD;
v_winterWeekEnergySelfConsumed_MWh = data.getRapidRunData().getWinterWeekEnergySelfConsumed_MWh();&#xD;
&#xD;
v_winterWeekElectricityConsumed_MWh = data.getRapidRunData().getWinterWeekElectricityConsumed_MWh();&#xD;
v_winterWeekElectricityProduced_MWh = data.getRapidRunData().getWinterWeekElectricityProduced_MWh();&#xD;
v_winterWeekElectricitySelfConsumed_MWh = data.getRapidRunData().getWinterWeekElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_winterWeekPrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getWinterWeekPrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
//========== DAY/NIGHT ==========//&#xD;
fm_daytimeImports_MWh.clear();&#xD;
fm_nighttimeImports_MWh.clear();&#xD;
fm_daytimeExports_MWh.clear();&#xD;
fm_nighttimeExports_MWh.clear();&#xD;
&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeConsumptionEnergyCarriers) {&#xD;
	fm_daytimeImports_MWh.put( energyCarrier, data.getRapidRunData().getDaytimeImport_MWh(energyCarrier) );&#xD;
	fm_nighttimeImports_MWh.put( energyCarrier, data.getRapidRunData().getNighttimeImport_MWh(energyCarrier) );&#xD;
}&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeProductionEnergyCarriers) {&#xD;
	fm_daytimeExports_MWh.put( energyCarrier, data.getRapidRunData().getDaytimeExport_MWh(energyCarrier) );&#xD;
	fm_nighttimeExports_MWh.put( energyCarrier, data.getRapidRunData().getNighttimeExport_MWh(energyCarrier) );&#xD;
}&#xD;
&#xD;
v_daytimeEnergyImport_MWh = data.getRapidRunData().getDaytimeEnergyImport_MWh();&#xD;
v_daytimeEnergyExport_MWh = data.getRapidRunData().getDaytimeEnergyExport_MWh();&#xD;
&#xD;
v_daytimeEnergyConsumed_MWh = data.getRapidRunData().getDaytimeEnergyConsumed_MWh();&#xD;
v_daytimeEnergyProduced_MWh = data.getRapidRunData().getDaytimeEnergyProduced_MWh();&#xD;
v_daytimeEnergySelfConsumed_MWh = data.getRapidRunData().getDaytimeEnergySelfConsumed_MWh();&#xD;
&#xD;
v_daytimeElectricityConsumed_MWh = data.getRapidRunData().getDaytimeElectricityConsumed_MWh();&#xD;
v_daytimeElectricityProduced_MWh = data.getRapidRunData().getDaytimeElectricityProduced_MWh();&#xD;
v_daytimeElectricitySelfConsumed_MWh = data.getRapidRunData().getDaytimeElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_daytimePrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getDaytimePrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
v_nighttimeEnergyImport_MWh = data.getRapidRunData().getNighttimeEnergyImport_MWh();&#xD;
v_nighttimeEnergyExport_MWh = data.getRapidRunData().getNighttimeEnergyExport_MWh();&#xD;
&#xD;
v_nighttimeEnergyConsumed_MWh = data.getRapidRunData().getNighttimeEnergyConsumed_MWh();&#xD;
v_nighttimeEnergyProduced_MWh = data.getRapidRunData().getNighttimeEnergyProduced_MWh();&#xD;
v_nighttimeEnergySelfConsumed_MWh = data.getRapidRunData().getNighttimeEnergySelfConsumed_MWh();&#xD;
&#xD;
v_nighttimeElectricityConsumed_MWh = data.getRapidRunData().getNighttimeElectricityConsumed_MWh();&#xD;
v_nighttimeElectricityProduced_MWh = data.getRapidRunData().getNighttimeElectricityProduced_MWh();&#xD;
v_nighttimeElectricitySelfConsumed_MWh = data.getRapidRunData().getNighttimeElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_nighttimePrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getNighttimePrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
//========== WEEK/WEEKEND ==========//&#xD;
fm_weekdayImports_MWh.clear();&#xD;
fm_weekendImports_MWh.clear();&#xD;
fm_weekdayExports_MWh.clear();&#xD;
fm_weekendExports_MWh.clear();&#xD;
&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeConsumptionEnergyCarriers) {&#xD;
	fm_weekdayImports_MWh.put( energyCarrier, data.getRapidRunData().getWeekdayImport_MWh(energyCarrier) );&#xD;
	fm_weekendImports_MWh.put( energyCarrier, data.getRapidRunData().getWeekendImport_MWh(energyCarrier) );&#xD;
}&#xD;
for (OL_EnergyCarriers energyCarrier : v_activeProductionEnergyCarriers) {&#xD;
	fm_weekdayExports_MWh.put( energyCarrier, data.getRapidRunData().getWeekdayExport_MWh(energyCarrier) );&#xD;
	fm_weekendExports_MWh.put( energyCarrier, data.getRapidRunData().getWeekendExport_MWh(energyCarrier) );&#xD;
}&#xD;
&#xD;
v_weekdayEnergyImport_MWh = data.getRapidRunData().getWeekdayEnergyImport_MWh();&#xD;
v_weekdayEnergyExport_MWh = data.getRapidRunData().getWeekdayEnergyExport_MWh();&#xD;
&#xD;
v_weekdayEnergyConsumed_MWh = data.getRapidRunData().getWeekdayEnergyConsumed_MWh();&#xD;
v_weekdayEnergyProduced_MWh = data.getRapidRunData().getWeekdayEnergyProduced_MWh();&#xD;
v_weekdayEnergySelfConsumed_MWh = data.getRapidRunData().getWeekdayEnergySelfConsumed_MWh();&#xD;
&#xD;
v_weekdayElectricityConsumed_MWh = data.getRapidRunData().getWeekdayElectricityConsumed_MWh();&#xD;
v_weekdayElectricityProduced_MWh = data.getRapidRunData().getWeekdayElectricityProduced_MWh();&#xD;
v_weekdayElectricitySelfConsumed_MWh = data.getRapidRunData().getWeekdayElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_weekdayPrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getWeekdayPrimaryEnergyProductionHeatpumps_MWh();&#xD;
&#xD;
v_weekendEnergyImport_MWh = data.getRapidRunData().getWeekendEnergyImport_MWh();&#xD;
v_weekendEnergyExport_MWh = data.getRapidRunData().getWeekendEnergyExport_MWh();&#xD;
&#xD;
v_weekendEnergyConsumed_MWh = data.getRapidRunData().getWeekendEnergyConsumed_MWh();&#xD;
v_weekendEnergyProduced_MWh = data.getRapidRunData().getWeekendEnergyProduced_MWh();&#xD;
v_weekendEnergySelfConsumed_MWh = data.getRapidRunData().getWeekendEnergySelfConsumed_MWh();&#xD;
&#xD;
v_weekendElectricityConsumed_MWh = data.getRapidRunData().getWeekendElectricityConsumed_MWh();&#xD;
v_weekendElectricityProduced_MWh = data.getRapidRunData().getWeekendElectricityProduced_MWh();&#xD;
v_weekendElectricitySelfConsumed_MWh = data.getRapidRunData().getWeekendElectricitySelfConsumed_MWh();&#xD;
&#xD;
v_weekendPrimaryEnergyProductionHeatpumps_MWh = data.getRapidRunData().getWeekendPrimaryEnergyProductionHeatpumps_MWh();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546537</Id>
						<Name>f_updateLiveDatasets</Name>
						<X>1246</X>
						<Y>-210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>//Datasets for live charts&#xD;
//========== CONSUMPTION ==========//&#xD;
dsm_liveConsumption_kW = data.getLiveData().dsm_liveDemand_kW;&#xD;
v_dataElectricityBaseloadConsumptionLiveWeek_kW = data.getLiveData().data_baseloadElectricityDemand_kW;&#xD;
v_dataElectricityForHeatConsumptionLiveWeek_kW = data.getLiveData().data_heatPumpElectricityDemand_kW;&#xD;
v_dataElectricityForTransportConsumptionLiveWeek_kW = data.getLiveData().data_electricVehicleDemand_kW;&#xD;
v_dataElectricityForStorageConsumptionLiveWeek_kW = data.getLiveData().data_batteryCharging_kW;&#xD;
v_dataElectricityForHydrogenConsumptionLiveWeek_kW = data.getLiveData().data_hydrogenElectricityDemand_kW;&#xD;
v_dataElectricityForCookingConsumptionLiveWeek_kW = data.getLiveData().data_cookingElectricityDemand_kW;&#xD;
v_dataDistrictHeatConsumptionLiveWeek_kW = data.getLiveData().data_districtHeatDelivery_kW;&#xD;
&#xD;
//========== PRODUCTION ==========//&#xD;
dsm_liveProduction_kW = data.getLiveData().dsm_liveSupply_kW;&#xD;
v_dataWindElectricityProductionLiveWeek_kW = data.getLiveData().data_windGeneration_kW;&#xD;
v_dataPVElectricityProductionLiveWeek_kW = data.getLiveData().data_PVGeneration_kW;&#xD;
v_dataStorageElectricityProductionLiveWeek_kW = data.getLiveData().data_batteryDischarging_kW;&#xD;
v_dataV2GElectricityProductionLiveWeek_kW = data.getLiveData().data_V2GSupply_kW;&#xD;
v_dataCHPElectricityProductionLiveWeek_kW = data.getLiveData().data_CHPElectricityProductionLiveWeek_kW;&#xD;
&#xD;
//SOC&#xD;
v_dataBatterySOCLiveWeek_fr.reset();&#xD;
for (int i = 0; i &lt; data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.size(); i++) {&#xD;
    // Get the x and y values from the source dataset&#xD;
    double x = data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.getX(i);&#xD;
    double y = data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.getY(i);&#xD;
    &#xD;
    // Modify the y value (e.g., divide it by 2)&#xD;
    double SOC = v_batteryStorageCapacityInstalled_MWh &gt; 0 ? y / v_batteryStorageCapacityInstalled_MWh : 0;&#xD;
    &#xD;
    // Add the new x and y values to the target dataset&#xD;
    v_dataBatterySOCLiveWeek_fr.add(x, SOC);&#xD;
}&#xD;
&#xD;
//Total&#xD;
v_dataNetLoadLiveWeek_kW = data.getLiveData().data_liveElectricityBalance_kW;&#xD;
&#xD;
//Capacity&#xD;
v_dataElectricityDeliveryCapacityLiveWeek_kW = data.getLiveData().data_gridCapacityDemand_kW;&#xD;
v_dataElectricityFeedInCapacityLiveWeek_kW = data.getLiveData().data_gridCapacitySupply_kW;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546539</Id>
						<Name>f_updateWeeklyDatasets</Name>
						<X>1246</X>
						<Y>-190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>//========== SUMMER WEEK ==========//&#xD;
// Consumption&#xD;
double summerWeekStartTime_h = energyModel.p_startOfSummerWeek_h - energyModel.p_runStartTime_h;&#xD;
dsm_summerWeekConsumptionDataSets_kW = data.getRapidRunData().am_summerWeekConsumptionAccumulators_kW.getDataSetMap(summerWeekStartTime_h);&#xD;
v_dataElectricityBaseloadConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekBaseloadElectricityConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityForHeatConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekHeatPumpElectricityConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityForTransportConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekElectricVehicleConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityForStorageConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekBatteriesConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityForCookingConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekElectricCookingConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityForHydrogenConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekElectrolyserElectricityConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataDistrictHeatConsumptionSummerWeek_kW = data.getRapidRunData().acc_summerWeekDistrictHeatingConsumption_kW.getDataSet(summerWeekStartTime_h);&#xD;
&#xD;
// Production&#xD;
dsm_summerWeekProductionDataSets_kW = data.getRapidRunData().am_summerWeekProductionAccumulators_kW.getDataSetMap(summerWeekStartTime_h);&#xD;
v_dataElectricityWindProductionSummerWeek_kW = data.getRapidRunData().acc_summerWeekWindProduction_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityPVProductionSummerWeek_kW = data.getRapidRunData().acc_summerWeekPVProduction_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityStorageProductionSummerWeek_kW = data.getRapidRunData().acc_summerWeekBatteriesProduction_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityV2GProductionSummerWeek_kW = data.getRapidRunData().acc_summerWeekV2GProduction_kW.getDataSet(summerWeekStartTime_h);&#xD;
v_dataElectricityCHPProductionSummerWeek_kW = data.getRapidRunData().acc_summerWeekCHPElectricityProduction_kW.getDataSet(summerWeekStartTime_h);&#xD;
&#xD;
// Other&#xD;
v_dataNetLoadSummerWeek_kW = data.getRapidRunData().am_summerWeekBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getDataSet(summerWeekStartTime_h);&#xD;
&#xD;
DataSet summerWeekBatteryStorage = data.getRapidRunData().ts_summerWeekBatteriesStoredEnergy_MWh.getDataSet(summerWeekStartTime_h);&#xD;
v_dataBatterySOCSummerWeek_fr.reset();&#xD;
for (int i = 0; i &lt; summerWeekBatteryStorage.size(); i++) {&#xD;
    // Get the x and y values from the source dataset&#xD;
    double x = summerWeekBatteryStorage.getX(i);&#xD;
    double y = summerWeekBatteryStorage.getY(i);&#xD;
    &#xD;
    // Modify the y value (e.g., divide it by 2)&#xD;
    double SOC = v_batteryStorageCapacityInstalled_MWh &gt; 0 ? y / v_batteryStorageCapacityInstalled_MWh : 0;&#xD;
    &#xD;
    // Add the new x and y values to the target dataset&#xD;
    v_dataBatterySOCSummerWeek_fr.add(x, SOC);&#xD;
}&#xD;
&#xD;
//========== WINTER WEEK ==========//&#xD;
// Consumption&#xD;
double winterWeekStartTime_h = energyModel.p_startOfWinterWeek_h - energyModel.p_runStartTime_h;&#xD;
dsm_winterWeekConsumptionDataSets_kW = data.getRapidRunData().am_winterWeekConsumptionAccumulators_kW.getDataSetMap(winterWeekStartTime_h);&#xD;
v_dataElectricityBaseloadConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekBaseloadElectricityConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityForHeatConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekHeatPumpElectricityConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityForTransportConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekElectricVehicleConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityForStorageConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekBatteriesConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityForCookingConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekElectricCookingConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityForHydrogenConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekElectrolyserElectricityConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataDistrictHeatConsumptionWinterWeek_kW = data.getRapidRunData().acc_winterWeekDistrictHeatingConsumption_kW.getDataSet(winterWeekStartTime_h);&#xD;
&#xD;
// Production&#xD;
dsm_winterWeekProductionDataSets_kW = data.getRapidRunData().am_winterWeekProductionAccumulators_kW.getDataSetMap(winterWeekStartTime_h);&#xD;
v_dataElectricityWindProductionWinterWeek_kW = data.getRapidRunData().acc_winterWeekWindProduction_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityPVProductionWinterWeek_kW = data.getRapidRunData().acc_winterWeekPVProduction_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityStorageProductionWinterWeek_kW = data.getRapidRunData().acc_winterWeekBatteriesProduction_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityV2GProductionWinterWeek_kW = data.getRapidRunData().acc_winterWeekV2GProduction_kW.getDataSet(winterWeekStartTime_h);&#xD;
v_dataElectricityCHPProductionWinterWeek_kW = data.getRapidRunData().acc_winterWeekCHPElectricityProduction_kW.getDataSet(winterWeekStartTime_h);&#xD;
&#xD;
// Other&#xD;
v_dataNetLoadWinterWeek_kW = data.getRapidRunData().am_winterWeekBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getDataSet(winterWeekStartTime_h);&#xD;
&#xD;
DataSet winterWeekBatteryStorage = data.getRapidRunData().ts_winterWeekBatteriesStoredEnergy_MWh.getDataSet(winterWeekStartTime_h);&#xD;
v_dataBatterySOCWinterWeek_fr.reset();&#xD;
for (int i = 0; i &lt; winterWeekBatteryStorage.size(); i++) {&#xD;
    // Get the x and y values from the source dataset&#xD;
    double x = winterWeekBatteryStorage.getX(i);&#xD;
    double y = winterWeekBatteryStorage.getY(i);&#xD;
    &#xD;
    // Modify the y value (e.g., divide it by 2)&#xD;
    double SOC = v_batteryStorageCapacityInstalled_MWh &gt; 0 ? y / v_batteryStorageCapacityInstalled_MWh : 0;&#xD;
    &#xD;
    // Add the new x and y values to the target dataset&#xD;
    v_dataBatterySOCWinterWeek_fr.add(x, SOC);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546541</Id>
						<Name>f_updateYearlyDatasets</Name>
						<X>1246</X>
						<Y>-170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>//Datasets for yearly profiles chart&#xD;
//Demand&#xD;
double startTime_h = energyModel.p_runStartTime_h;&#xD;
dsm_dailyAverageConsumptionDataSets_kW = data.getRapidRunData().am_dailyAverageConsumptionAccumulators_kW.getDataSetMap(startTime_h);&#xD;
dsm_dailyAverageProductionDataSets_kW = data.getRapidRunData().am_dailyAverageProductionAccumulators_kW.getDataSetMap(startTime_h);&#xD;
v_dataElectricityBaseloadConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageBaseloadElectricityConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityForHeatConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageHeatPumpElectricityConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityForTransportConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageElectricVehicleConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityForStorageConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageBatteriesConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityForHydrogenConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageElectrolyserElectricityConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityForCookingConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageElectricCookingConsumption_kW.getDataSet(startTime_h);&#xD;
v_dataDistrictHeatConsumptionYear_kW = data.getRapidRunData().acc_dailyAverageDistrictHeatingConsumption_kW.getDataSet(startTime_h);&#xD;
data_dailyAverageFinalEnergyConsumption_kW = data.getRapidRunData().acc_dailyAverageFinalEnergyConsumption_kW.getDataSet(startTime_h);&#xD;
&#xD;
//Supply&#xD;
v_dataElectricityWindProductionYear_kW = data.getRapidRunData().acc_dailyAverageWindProduction_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityPVProductionYear_kW = data.getRapidRunData().acc_dailyAveragePVProduction_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityStorageProductionYear_kW = data.getRapidRunData().acc_dailyAverageBatteriesProduction_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityV2GProductionYear_kW = data.getRapidRunData().acc_dailyAverageV2GProduction_kW.getDataSet(startTime_h);&#xD;
v_dataElectricityCHPProductionYear_kW = data.getRapidRunData().acc_dailyAverageCHPElectricityProduction_kW.getDataSet(startTime_h);&#xD;
&#xD;
DataSet totalBatteryStorage = data.getRapidRunData().ts_dailyAverageBatteriesStoredEnergy_MWh.getDataSet(startTime_h);&#xD;
v_dataBatterySOCYear_fr.reset();&#xD;
for (int i = 0; i &lt; totalBatteryStorage.size(); i++) {&#xD;
    // Get the x and y values from the source dataset&#xD;
    double x = totalBatteryStorage.getX(i);&#xD;
    double y = totalBatteryStorage.getY(i);&#xD;
    &#xD;
    // Modify the y value (e.g., divide it by 2)&#xD;
    double SOC = v_batteryStorageCapacityInstalled_MWh &gt; 0 ? y / v_batteryStorageCapacityInstalled_MWh : 0;&#xD;
    &#xD;
    // Add the new x and y values to the target dataset&#xD;
    v_dataBatterySOCYear_fr.add(x, SOC);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546543</Id>
						<Name>f_addTimeStepLiveDataSetsGC</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1246</X>
						<Y>-110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>//Update SOC live plot&#xD;
double batteryStoredEnergyLiveWeek_MWh = 0;&#xD;
int i = max(0, data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.size() - 1);&#xD;
batteryStoredEnergyLiveWeek_MWh = data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.getY(i);	&#xD;
double timeAxisValue = data.getLiveData().data_batteryStoredEnergyLiveWeek_MWh.getX(i);&#xD;
double SOC = v_batteryStorageCapacityInstalled_MWh &gt; 0 ? batteryStoredEnergyLiveWeek_MWh / v_batteryStorageCapacityInstalled_MWh : 0;&#xD;
v_dataBatterySOCLiveWeek_.add(timeAxisValue, SOC); &#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741792546545</Id>
						<Name>f_updateLoadDurationCurve</Name>
						<X>1246</X>
						<Y>-150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>J_LoadDurationCurves ldc = data.getRapidRunData().getLoadDurationCurves(energyModel);&#xD;
&#xD;
v_dataNetbelastingDuurkrommeYear_kW = ldc.ds_loadDurationCurveTotal_kW;&#xD;
v_dataNetbelastingDuurkrommeYearVorige_kW = ldc.ds_previousLoadDurationCurveTotal_kW;&#xD;
&#xD;
v_dataNetbelastingDuurkrommeSummer_kW = ldc.ds_loadDurationCurveSummer_kW;&#xD;
v_dataNetbelastingDuurkrommeWinter_kW = ldc.ds_loadDurationCurveWinter_kW;&#xD;
v_dataNetbelastingDuurkrommeDaytime_kW = ldc.ds_loadDurationCurveDaytime_kW;&#xD;
v_dataNetbelastingDuurkrommeNighttime_kW = ldc.ds_loadDurationCurveNighttime_kW;&#xD;
v_dataNetbelastingDuurkrommeWeekend_kW = ldc.ds_loadDurationCurveWeekend_kW;&#xD;
v_dataNetbelastingDuurkrommeWeekday_kW = ldc.ds_loadDurationCurveWeekday_kW;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741858724892</Id>
						<Name>f_updateLiveActiveAssetBooleans</Name>
						<X>1246</X>
						<Y>-130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>data</Name>
							<Type>I_EnergyData</Type>
						</Parameter>
						<Body>b_hasElectricHeating = data.getLiveData().assetsMetaData.hasElectricHeating;&#xD;
b_hasElectricTransport = data.getLiveData().assetsMetaData.hasElectricTransport;&#xD;
b_hasPV = data.getLiveData().assetsMetaData.hasPV;&#xD;
b_hasWindturbine = data.getLiveData().assetsMetaData.hasWindturbine;&#xD;
b_hasBattery = data.getLiveData().assetsMetaData.hasBattery;&#xD;
b_hasHeatGridConnection = data.getLiveData().assetsMetaData.hasHeatGridConnection;&#xD;
b_hasCHP = data.getLiveData().assetsMetaData.hasCHP;&#xD;
b_hasV2G = data.getLiveData().assetsMetaData.hasV2G;&#xD;
b_hasElectricCooking = data.getLiveData().assetsMetaData.hasElectricCooking;</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1705600400155</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1741695593845</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1705600400161</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Text>
								<Id>1741792546446</Id>
								<Name>t_profiles</Name>
								<X>316</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Profiles</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546449</Id>
								<Name>t_totals</Name>
								<X>796</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Totals</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546451</Id>
								<Name>txt_liveWeek</Name>
								<X>151</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Live Week</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546453</Id>
								<Name>txt_year</Name>
								<X>151</X>
								<Y>650</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Year</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546455</Id>
								<Name>txt_summerWeek</Name>
								<X>146</X>
								<Y>1200</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Summer Week
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546457</Id>
								<Name>txt_winterWeek</Name>
								<X>146</X>
								<Y>1850</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Winter Week
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546459</Id>
								<Name>txt_yearTotals</Name>
								<X>646</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Year</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546461</Id>
								<Name>txt_SummerWinterWeekTotals</Name>
								<X>616</X>
								<Y>620</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Summer / Winter</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546463</Id>
								<Name>t_belastingduurkromme</Name>
								<X>1286</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Belastingduurkromme
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546465</Id>
								<Name>t_gn</Name>
								<X>1246</X>
								<Y>320</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>GridNode &amp; Capacity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546467</Id>
								<Name>t_other</Name>
								<X>1766</X>
								<Y>40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546469</Id>
								<Name>txt_liveWeekProduction</Name>
								<X>161</X>
								<Y>315</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546471</Id>
								<Name>txt_liveWeekProductionElectricity</Name>
								<X>181</X>
								<Y>335</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546473</Id>
								<Name>txt_liveWeekProductionOther</Name>
								<X>186</X>
								<Y>465</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546475</Id>
								<Name>txt_liveWeekConsumption</Name>
								<X>156</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546477</Id>
								<Name>txt_liveWeekProductionElectricity1</Name>
								<X>176</X>
								<Y>80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546479</Id>
								<Name>txt_liveWeekProductionOther1</Name>
								<X>186</X>
								<Y>240</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546481</Id>
								<Name>txt_yearProduction</Name>
								<X>166</X>
								<Y>935</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546483</Id>
								<Name>txt_yearProductionElectricity</Name>
								<X>176</X>
								<Y>955</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546485</Id>
								<Name>txt_yearConsumption</Name>
								<X>166</X>
								<Y>670</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546487</Id>
								<Name>txt_yearConsumptionElectricity</Name>
								<X>181</X>
								<Y>690</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546489</Id>
								<Name>txt_yearConsumptionOther</Name>
								<X>181</X>
								<Y>850</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546491</Id>
								<Name>txt_yearProductionOther</Name>
								<X>186</X>
								<Y>1075</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546493</Id>
								<Name>txt_liveWeekNet</Name>
								<X>166</X>
								<Y>535</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Net Load Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546495</Id>
								<Name>txt_summerWeekConsumption</Name>
								<X>166</X>
								<Y>1220</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546497</Id>
								<Name>txt_summerWeekConsumptionElectricity</Name>
								<X>186</X>
								<Y>1240</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546499</Id>
								<Name>txt_summerWeekConsumptionOther</Name>
								<X>186</X>
								<Y>1400</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546501</Id>
								<Name>txt_summerWeekProduction</Name>
								<X>166</X>
								<Y>1480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546503</Id>
								<Name>txt_summerWeekProductionOther</Name>
								<X>186</X>
								<Y>1640</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546505</Id>
								<Name>txt_summerWeekProductionElectricity</Name>
								<X>186</X>
								<Y>1500</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546507</Id>
								<Name>txt_summerWeekNet</Name>
								<X>176</X>
								<Y>1720</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Net Load Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546509</Id>
								<Name>txt_winterWeekConsumption</Name>
								<X>166</X>
								<Y>1870</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546511</Id>
								<Name>txt_winterWeekConsumptionElectricity</Name>
								<X>186</X>
								<Y>1890</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546513</Id>
								<Name>txt_winterWeekConsumptionOther</Name>
								<X>186</X>
								<Y>2050</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546515</Id>
								<Name>txt_winterWeekProduction</Name>
								<X>166</X>
								<Y>2130</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546517</Id>
								<Name>txt_winterWeekProductionOther</Name>
								<X>186</X>
								<Y>2290</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546519</Id>
								<Name>txt_winterWeekProductionElectricity</Name>
								<X>186</X>
								<Y>2150</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546521</Id>
								<Name>txt_summerWeekNet1</Name>
								<X>176</X>
								<Y>2370</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Net Load Electricity</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546523</Id>
								<Name>txt_DayNightTotals</Name>
								<X>626</X>
								<Y>1210</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Day / Night</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546525</Id>
								<Name>txt_WeekdayWeekendTotals</Name>
								<X>626</X>
								<Y>1850</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Weekday / Weekend</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1741792546527</Id>
								<Name>t_activeAssetBooleans</Name>
								<X>1716</X>
								<Y>510</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Active Asset booleans</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1741860356570</Id>
								<Name>button_back</Name>
								<X>270</X>
								<Y>-100</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>if (v_engineAgent != null) {
	if (v_engineAgent instanceof GridConnection) {
		((GridConnection)v_engineAgent).va_gridConnection.navigateTo();
	}
	else if (v_engineAgent instanceof EnergyCoop) {
		((EnergyCoop)v_engineAgent).va_coop.navigateTo();	
	}
	else if (v_engineAgent instanceof EnergyModel) {
		((EnergyModel)v_engineAgent).va_engine.navigateTo();	
	}
}</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Back to Agent</LabelText>
								</ExtendedProperties>
							</Control>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1741855056296</Id>
						<Name>viewArea</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658477103140</Id>
				<Name>EnergyModel</Name>
				<AdditionalClassCode>public OL_ResultScope getScope(){return OL_ResultScope.ENERGYMODEL;}&#xD;
public J_RapidRunData getRapidRunData(){return v_rapidRunData;}&#xD;
public J_LiveData getLiveData(){return v_liveData;}&#xD;
public J_RapidRunData getPreviousRapidRunData(){return v_previousRunData;}</AdditionalClassCode>
				<Import>import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.type.TypeReference;
import java.io.FileOutputStream;
import java.util.stream.Stream;
import java.util.Dictionary.*;
import java.util.Hashtable.*;
import java.util.*;
import java.util.stream.Collectors;

import java.io.*;
import java.io.File;
import java.io.IOException;
import java.util.Date;  
import java.time.LocalDate;
import java.time.DayOfWeek;
import java.text.SimpleDateFormat;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;

//Possibility to turn of traceln
import java.io.OutputStream;
import java.io.PrintStream;

//Curves
import com.anylogic.engine.markup.AbstractCurve;
import com.anylogic.engine.markup.GISMarkupSegment;
import com.anylogic.engine.markup.GISPoint;
//import zero_engine.OL_EnergyCarriers;
//import zero_engine.OL_EnergyCarriers;
import com.querydsl.core.types.dsl.TimeExpression;
//import zero_engine.J_EAStorageElectric;
//import zero_engine.J_EAConsumption;</Import>
				<Implements>I_EnergyData</Implements>
				<StartupCode>v_liveData = new J_LiveData(this);
v_liveConnectionMetaData = new J_ConnectionMetaData(this);
v_liveAssetsMetaData = new J_AssetsMetaData(this);
v_liveData.connectionMetaData = v_liveConnectionMetaData;
v_liveData.assetsMetaData = v_liveAssetsMetaData;</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658477103138</Id>
					<Name>1658477103138</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>false</AutoCreate>
					<Id>1658477089988</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>p_timeStep_h</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658477103136</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658477103139</CurrentLevel>
				<ConnectionsId>1658477103135</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1659356181110</Id>
						<Name>pp_windProduction_fr</Name>
						<Description>Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour</Description>
						<X>-850</X>
						<Y>153</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfilePointer</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659356201846</Id>
						<Name>v_currentWindPowerNormalized_r</Name>
						<X>1220</X>
						<Y>65</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659356216131</Id>
						<Name>v_currentSolarPowerNormalized_r</Name>
						<X>1220</X>
						<Y>85</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659364131698</Id>
						<Name>v_currentAmbientTemperature_degC</Name>
						<X>1220</X>
						<Y>45</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1663238634515</Id>
						<Name>v_timeStepsElapsed</Name>
						<X>677</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666879575045</Id>
						<Name>v_gridNodePeakLoadElectricityMSLS_kW</Name>
						<Description>Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666879592543</Id>
						<Name>v_gridNodePeakLoadElectricityHSMS_kW</Name>
						<Description>Absolute piekbelasting(en) HSMS-node(s) over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022</Description>
						<X>-480</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666979598282</Id>
						<Name>v_totalBatteryChargeAmount_MWh</Name>
						<X>-480</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666979615893</Id>
						<Name>v_totalBatteryDischargeAmount_MWh</Name>
						<X>-480</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669026980656</Id>
						<Name>v_totalBatteryEnergyUsed_MWh</Name>
						<X>-480</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1671636172718</Id>
						<Name>v_WindYieldForecast_fr</Name>
						<X>960</X>
						<Y>398</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1671636200983</Id>
						<Name>v_SolarYieldForecast_fr</Name>
						<X>960</X>
						<Y>418</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1671638019875</Id>
						<Name>v_epexForecast_eurpkWh</Name>
						<X>960</X>
						<Y>458</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674039544084</Id>
						<Name>v_MSLSnodePeakPositiveLoadElectricity_kW</Name>
						<Description>Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674039545764</Id>
						<Name>v_MSLSnodePeakNegativeLoadElectricity_kW</Name>
						<Description>Absolute piekbelastingen MSLS-nodes over de modelrun opgeteld voor externe berekening netinfrastructuurkosten.

@author: JorritvandenHouten
@since: 27-10-2022</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676968233773</Id>
						<Name>v_totalEnergyCurtailed_MWh</Name>
						<X>560</X>
						<Y>1190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1678980412868</Id>
						<Name>v_cumulativeGridCapacityMSLS_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1678980423977</Id>
						<Name>v_cumulativeGridCapacityHSMS_kW</Name>
						<X>-480</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1678980746805</Id>
						<Name>v_gridOverloadKPI_pct</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1683718894234</Id>
						<Name>v_timeSeriesRuntime_ms</Name>
						<X>677</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1683718916458</Id>
						<Name>v_gridNodesRuntime_ms</Name>
						<X>677</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1683718921466</Id>
						<Name>v_gridConnectionsRuntime_ms</Name>
						<X>677</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1683718924632</Id>
						<Name>v_incentivesRuntime_ms</Name>
						<X>677</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1683718924634</Id>
						<Name>v_financialsRuntime_ms</Name>
						<X>677</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1690290329895</Id>
						<Name>hourOfYearPerMonth</Name>
						<X>676</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new int[] {0, 744, 1392, 2136, 2856, 3600, 4320, 5064, 5808, 6528, 7272, 7992}</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1690290329902</Id>
						<Name>v_hourOfYearStart</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>676</X>
						<Y>411</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1695655479591</Id>
						<Name>v_totalEnergyChargedOutsideModel_MWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696863807573</Id>
						<Name>v_modelSelfSufficiency_fr</Name>
						<X>1380</X>
						<Y>1080</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696863821721</Id>
						<Name>v_modelSelfConsumption_fr</Name>
						<X>1380</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1697554735224</Id>
						<Name>v_isRapidRun</Name>
						<X>950</X>
						<Y>108</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1698924487994</Id>
						<Name>v_batteryStoredEnergyDeltaSinceStart_MWh</Name>
						<X>-480</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1698929546080</Id>
						<Name>v_totalEnergyProduced_MWh</Name>
						<X>560</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1699277193134</Id>
						<Name>t_h</Name>
						<X>677</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1700556115968</Id>
						<Name>v_totalEnergySelfConsumed_MWh</Name>
						<X>560</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1700725227193</Id>
						<Name>v_currentFinalEnergyConsumption_kW</Name>
						<X>80</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1700725244568</Id>
						<Name>v_currentPrimaryEnergyProduction_kW</Name>
						<X>80</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1700725502196</Id>
						<Name>v_currentEnergyCurtailed_kW</Name>
						<X>80</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701699259425</Id>
						<Name>v_currentEnergyImport_kW</Name>
						<X>80</X>
						<Y>1221</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701699273727</Id>
						<Name>v_currentEnergyExport_kW</Name>
						<X>80</X>
						<Y>1241</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701786316417</Id>
						<Name>v_currentElectricityImport_kW</Name>
						<X>80</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701786316419</Id>
						<Name>v_currentElectricityExport_kW</Name>
						<X>80</X>
						<Y>1280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701965985318</Id>
						<Name>v_gridOverloadDuration_h</Name>
						<X>-480</X>
						<Y>900</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702377382300</Id>
						<Name>v_deltaThermalEnergySinceStart_MWh</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>940</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1702536957687</Id>
						<Name>v_avgGridLoad_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-480</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704795167515</Id>
						<Name>v_totalElectricityConsumed_MWh</Name>
						<X>560</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704795167517</Id>
						<Name>v_totalElectricityProduced_MWh</Name>
						<X>560</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704815333011</Id>
						<Name>v_totalElectricitySelfConsumed_MWh</Name>
						<X>560</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705422009185</Id>
						<Name>v_currentPrimaryEnergyProductionHeatpumps_kW</Name>
						<X>80</X>
						<Y>1180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1707233056349</Id>
						<Name>v_individualSelfConsumption_fr</Name>
						<X>1380</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708951590474</Id>
						<Name>v_collectiveSelfConsumption_fr</Name>
						<X>1380</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708951616508</Id>
						<Name>v_individualSelfSufficiency_fr</Name>
						<X>1380</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1712842800772</Id>
						<Name>v_dayOfWeek1jan</Name>
						<X>680</X>
						<Y>688</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715074195578</Id>
						<Name>v_kpiCalcsRuntime_ms</Name>
						<X>677</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718883144081</Id>
						<Name>v_electricityYieldForecast_fr</Name>
						<X>960</X>
						<Y>438</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721228298986</Id>
						<Name>v_currentDLRfactor_fr</Name>
						<X>1220</X>
						<Y>115</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>1.0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721228965491</Id>
						<Name>v_minDLRfactor_fr</Name>
						<X>1434</X>
						<Y>115</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721228970137</Id>
						<Name>v_maxDLRfactor_fr</Name>
						<X>1604</X>
						<Y>115</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>1</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722498503201</Id>
						<Name>acc_totalDLRfactor_f</Name>
						<X>560</X>
						<Y>970</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, p_timeStep_h, 8760);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727107003296</Id>
						<Name>pp_PVProduction35DegSouth_fr</Name>
						<Description>Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour</Description>
						<X>-850</X>
						<Y>113</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfilePointer</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727784890604</Id>
						<Name>pf_windProduction_fr</Name>
						<X>-850</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfileForecaster</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1727784892429</Id>
						<Name>pf_PVProduction35DegSouth_fr</Name>
						<X>-850</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfileForecaster</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729088545879</Id>
						<Name>pf_dayAheadElectricityPricing_eurpMWh</Name>
						<X>-850</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfileForecaster</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729088545881</Id>
						<Name>pp_dayAheadElectricityPricing_eurpMWh</Name>
						<X>-850</X>
						<Y>173</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfilePointer</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730452122313</Id>
						<Name>fm_currentBalanceFlows_kW</Name>
						<X>80</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730457670958</Id>
						<Name>v_totalEnergyImport_MWh</Name>
						<X>560</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730457670960</Id>
						<Name>v_totalEnergyExport_MWh</Name>
						<X>560</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730459808621</Id>
						<Name>v_totalEnergyConsumed_MWh</Name>
						<X>560</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730479615156</Id>
						<Name>fm_currentConsumptionFlows_kW</Name>
						<X>80</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730479616638</Id>
						<Name>fm_currentProductionFlows_kW</Name>
						<X>80</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731422680250</Id>
						<Name>b_isDaytime</Name>
						<X>680</X>
						<Y>738</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731422698257</Id>
						<Name>b_isWeekday</Name>
						<X>680</X>
						<Y>758</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731422704613</Id>
						<Name>b_isSummerWeek</Name>
						<X>680</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731422714256</Id>
						<Name>b_isWinterWeek</Name>
						<X>680</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731422900385</Id>
						<Name>b_isLastTimeStepOfDay</Name>
						<X>680</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731423522698</Id>
						<Name>t_hourOfDay</Name>
						<X>730</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731576444065</Id>
						<Name>v_activeEnergyCarriers</Name>
						<X>960</X>
						<Y>548</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733478626642</Id>
						<Name>v_activeConsumptionEnergyCarriers</Name>
						<X>980</X>
						<Y>588</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733478626644</Id>
						<Name>v_activeProductionEnergyCarriers</Name>
						<X>980</X>
						<Y>568</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741277544181</Id>
						<Name>v_previousRunData</Name>
						<X>80</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
							<InitialValue Class="CodeValue">
								<Code>null</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872284288</Id>
						<Name>v_rapidRunData</Name>
						<X>80</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872284290</Id>
						<Name>v_liveData</Name>
						<X>80</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_LiveData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741872284292</Id>
						<Name>v_liveAssetsMetaData</Name>
						<X>100</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_AssetsMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741943984271</Id>
						<Name>v_liveConnectionMetaData</Name>
						<X>100</X>
						<Y>752</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ConnectionMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1744272354153</Id>
						<Name>p_startOfWinterWeek_h</Name>
						<X>680</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1744272373654</Id>
						<Name>p_startOfSummerWeek_h</Name>
						<X>680</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749206124686</Id>
						<Name>pp_PVProduction15DegEastWest_fr</Name>
						<Description>Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour</Description>
						<X>-850</X>
						<Y>133</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfilePointer</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749206126234</Id>
						<Name>pp_ambientTemperature_degC</Name>
						<Description>Fraction of yearly demand in MWh per hour, multiplied by demand in MWh per year = MW for that hour</Description>
						<X>-850</X>
						<Y>93</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfilePointer</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749206255808</Id>
						<Name>pf_PVProduction15DegEastWest_fr</Name>
						<X>-850</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfileForecaster</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749206262291</Id>
						<Name>pf_ambientTemperature_degC</Name>
						<X>-850</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ProfileForecaster</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658496701675</Id>
						<Name>p_timeStep_h</Name>
						<Description>Model timestep in uren. Kan in experimenten aangepast worden naar wens.

@since: Sprint 6
@author: Gillis</Description>
						<X>-401</X>
						<Y>79</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.25</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1658496701673</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658752734133</Id>
						<Name>b_parallelizeConnectionOwners</Name>
						<Description>Schakelaar om optionele visualisatie-agent te creëren.

@since: Sprint 6
@author: Jorrit</Description>
						<X>-401</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1658752734131</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1659521098545</Id>
						<Name>p_undergroundTemperature_degC</Name>
						<Description>Constante ondergrondtemperatuur voor gebruik in bijv. loss-functions voor heatStorage en efficientieberekeningen van bodemwarmtepompen. Per modelrun ingelezen vanuit externe database en gelinkte excelsheet.

@since: Sprint 6
@author: Jorrit</Description>
						<X>-401</X>
						<Y>99</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1659521098543</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1663577621793</Id>
						<Name>b_parallelizeGridConnections</Name>
						<Description>Boolean om paralelle berekening van gridconnections aan te zetten.

@since: Sprint 6
@author: Gillis</Description>
						<X>-401</X>
						<Y>119</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1663577621791</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1671636582218</Id>
						<Name>p_forecastTime_h</Name>
						<Description>Model timestep in uren. Kan in experimenten aangepast worden naar wens.

@since: Sprint 6
@author: Gillis</Description>
						<X>960</X>
						<Y>478</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>18</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1671636582216</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1699275323339</Id>
						<Name>p_winterWeekNumber</Name>
						<X>680</X>
						<Y>598</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>49</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1699275323337</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1699275323347</Id>
						<Name>p_summerWeekNumber</Name>
						<X>680</X>
						<Y>618</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>18</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1699275323345</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1699290370683</Id>
						<Name>p_plotInterval_h</Name>
						<X>680</X>
						<Y>638</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>168</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1699290370681</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1701855537716</Id>
						<Name>p_truckTripsCsv</Name>
						<X>-400</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>TextFile</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1701855537714</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1701855572858</Id>
						<Name>p_householdTripsCsv</Name>
						<X>-400</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>TextFile</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1701855572856</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1701855585052</Id>
						<Name>p_cookingPatternCsv</Name>
						<X>-400</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>TextFile</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1701855585050</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1712844009289</Id>
						<Name>p_year</Name>
						<X>680</X>
						<Y>668</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2023</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1712844009287</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1715864755905</Id>
						<Name>avgc_data</Name>
						<X>-400</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_AVGC_data</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1715864755903</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721289658523</Id>
						<Name>b_enableDLR</Name>
						<Description>Schakelaar om optionele visualisatie-agent te creëren.

@since: Sprint 6
@author: Jorrit</Description>
						<X>-401</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1721289658521</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1724587724718</Id>
						<Name>p_gridNodeTimeSeriesExcel</Name>
						<X>1360</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ExcelFile</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1724587724716</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1731439789362</Id>
						<Name>p_runStartTime_h</Name>
						<X>950</X>
						<Y>128</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1731439789360</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1731439835898</Id>
						<Name>p_runEndTime_h</Name>
						<X>950</X>
						<Y>148</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>8760</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1731439835896</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1731588224262</Id>
						<Name>b_isInitialized</Name>
						<X>-400</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1731588224260</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1741868549911</Id>
						<Name>b_storePreviousRapidRunData</Name>
						<Description>Schakelaar om optionele visualisatie-agent te creëren.

@since: Sprint 6
@author: Jorrit</Description>
						<X>-400</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>true</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1741868549909</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1743087797088</Id>
						<Name>p_regionName</Name>
						<X>360</X>
						<Y>-50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1743087797086</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1663238323139</Id>
						<Name>c_connectionOwners</Name>
						<X>90</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>ConnectionOwner</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1663251681035</Id>
						<Name>c_gridNodesTopLevel</Name>
						<X>379</X>
						<Y>108</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1663252052482</Id>
						<Name>c_gridNodesNotTopLevel</Name>
						<X>379</X>
						<Y>128</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1663312177330</Id>
						<Name>c_gridConnections</Name>
						<X>90</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1663336485480</Id>
						<Name>c_gridNodesHeat</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>379</X>
						<Y>148</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664953351408</Id>
						<Name>c_productionAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>379</X>
						<Y>208</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAProduction</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1665492426842</Id>
						<Name>c_ambientDependentAssets</Name>
						<X>379</X>
						<Y>248</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1666978650654</Id>
						<Name>c_energyAssets</Name>
						<X>379</X>
						<Y>186</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1667553304068</Id>
						<Name>c_timesOfNodePeakLoads_h</Name>
						<X>-480</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>String</ElementClass>
							<ValueElementClass>Double</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1669725679330</Id>
						<Name>c_gridConnectionOverload_fr</Name>
						<X>-480</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>String</ElementClass>
							<ValueElementClass>Double</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1692799535493</Id>
						<Name>c_storageAssets</Name>
						<X>379</X>
						<Y>228</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAStorage</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1692871551713</Id>
						<Name>c_EVs</Name>
						<X>379</X>
						<Y>268</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAEV</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1703256089183</Id>
						<Name>c_actors</Name>
						<X>91</X>
						<Y>518</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Actor</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1716453161218</Id>
						<Name>c_subGridConnections</Name>
						<Description>A subGridConnections are a subset of (children of) of GridConnections that are "part" of another GC and thus are not counted towards the totals.</Description>
						<X>90</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1716885030303</Id>
						<Name>c_gridNodeExecutionList</Name>
						<X>380</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1717756420421</Id>
						<Name>c_GISBuildingClusters</Name>
						<X>380</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Building</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1718895986988</Id>
						<Name>c_gridNodeExecutionListReverse</Name>
						<X>380</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722584740368</Id>
						<Name>c_pausedGridConnections</Name>
						<Description>A paused GridConnection is removed from the collection c_gridConnections and stored in here. Paused GridConnections are not operated or counted towards totals.</Description>
						<X>90</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1727099354305</Id>
						<Name>c_profiles</Name>
						<X>-850</X>
						<Y>73</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_ProfilePointer</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1727779411251</Id>
						<Name>c_forecasts</Name>
						<X>-850</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_ProfileForecaster</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1749650197321</Id>
						<Name>c_chargerProfiles</Name>
						<X>-580</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>List&lt;J_ChargingSession&gt;</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1674058522977</Id>
						<Name>pauseEvent</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1040</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="occuresOnce">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089987</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1674115200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>8168</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>pauseSimulation();</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664894248130</Id>
						<Name>f_updatePricesForNextTimestep</Name>
						<X>677</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>t_h</Name>
							<Type>double</Type>
						</Parameter>
						<Body>// Update the dayaheadprice&#xD;
nationalEnergyMarket.f_updateEnergyPrice();&#xD;
&#xD;
//&#xD;
for (EnergySupplier e : pop_energySuppliers) {&#xD;
	e.f_updateEnergyPrice();&#xD;
}&#xD;
for (GridOperator g : pop_gridOperators) {&#xD;
	if( g.p_hasCongestionPricing ){&#xD;
		g.f_updateCongestionTariff();&#xD;
	}&#xD;
}&#xD;
for (EnergyCoop e : pop_energyCoops) {&#xD;
	//e.f_updateEnergyPrice();&#xD;
	//e.f_updateOtherIncentives();&#xD;
	//e.f_setPriceBandsExperiment();&#xD;
	e.f_updateIncentives();&#xD;
}&#xD;
&#xD;
for (GridNode GN : c_gridNodeExecutionListReverse) {&#xD;
	GN.f_propagateNodalPricing();&#xD;
}&#xD;
&#xD;
&#xD;
/*if (p_parallelize) {&#xD;
	c_connectionOwners.parallelStream().forEach(co -&gt; co.f_updateIncentives());	&#xD;
} else {*/&#xD;
	for (ConnectionOwner c : pop_connectionOwners) {&#xD;
		c.f_updateIncentives();&#xD;
	}&#xD;
//}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664952601107</Id>
						<Name>f_updateTimeseries</Name>
						<X>677</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>t_h</Name>
							<Type>double</Type>
						</Parameter>
						<Body>b_isDaytime = t_h % 24 &gt; 6 &amp;&amp; t_h % 24 &lt; 18;&#xD;
b_isWeekday = (t_h+(v_dayOfWeek1jan-1)*24) % (24*7) &lt; (24*5);&#xD;
b_isSummerWeek = (t_h % 8760) &gt;= p_startOfSummerWeek_h &amp;&amp; (t_h % 8760) &lt; p_startOfSummerWeek_h + 24*7;&#xD;
b_isWinterWeek = (t_h % 8760) &gt;= p_startOfWinterWeek_h &amp;&amp; (t_h % 8760) &lt; p_startOfWinterWeek_h + 24*7;&#xD;
b_isLastTimeStepOfDay = t_h % 24 == (24-p_timeStep_h);&#xD;
t_hourOfDay = t_h % 24; // Assumes modelrun starts at midnight.&#xD;
&#xD;
&#xD;
v_currentAmbientTemperature_degC = pp_ambientTemperature_degC.getCurrentValue();&#xD;
c_profiles.forEach(p -&gt; p.updateValue(t_h));&#xD;
v_currentWindPowerNormalized_r = pp_windProduction_fr.getCurrentValue();&#xD;
v_currentSolarPowerNormalized_r = pp_PVProduction35DegSouth_fr.getCurrentValue();&#xD;
//v_currentCookingDemand_fr = tf_cooking_demand(t_h);&#xD;
&#xD;
if (b_enableDLR) {&#xD;
	v_currentDLRfactor_fr = 1 + max(-0.1,v_currentWindPowerNormalized_r * 0.025*(30-v_currentAmbientTemperature_degC) + 0.5 - v_currentSolarPowerNormalized_r);&#xD;
	//v_currentDLRfactor_fr = 1 + uniform(-0.1, 1.0);&#xD;
	v_minDLRfactor_fr = min (v_minDLRfactor_fr, v_currentDLRfactor_fr);&#xD;
	v_maxDLRfactor_fr = max (v_maxDLRfactor_fr, v_currentDLRfactor_fr);&#xD;
	acc_totalDLRfactor_f.addStep( v_currentDLRfactor_fr);&#xD;
	/*if (v_currentDLRfactor_fr &lt; 0.5) {&#xD;
		traceln("v_currentDLRfactor_fr is invalid! %s", v_currentDLRfactor_fr);&#xD;
		pauseSimulation();&#xD;
	}*/&#xD;
}&#xD;
//traceln("Current DLR factor: %s, ", v_currentDLRfactor_fr);&#xD;
//traceln("Time hour " + time(HOUR) + ", t_h " + t_h + ", fleet demand " + v_currentLogisticsFleetEDemand_fr);&#xD;
&#xD;
//Update ambient dependent assets&#xD;
f_updateAmbientDependentAssets();&#xD;
&#xD;
// Update forecasts,  the relevant profile pointers are already updated above&#xD;
c_forecasts.forEach(f -&gt; f.updateForecast(t_h));&#xD;
v_SolarYieldForecast_fr = pf_PVProduction35DegSouth_fr.getForecast();&#xD;
v_WindYieldForecast_fr = pf_windProduction_fr.getForecast();&#xD;
// The ElectricityYieldForecast assumes solar and wind forecasts have the same forecast time&#xD;
if ( v_liveAssetsMetaData.totalInstalledPVPower_kW + v_liveAssetsMetaData.totalInstalledWindPower_kW &gt; 0 ) {&#xD;
	v_electricityYieldForecast_fr = (v_SolarYieldForecast_fr * v_liveAssetsMetaData.totalInstalledPVPower_kW + v_WindYieldForecast_fr * v_liveAssetsMetaData.totalInstalledWindPower_kW) / (v_liveAssetsMetaData.totalInstalledPVPower_kW + v_liveAssetsMetaData.totalInstalledWindPower_kW);&#xD;
}&#xD;
&#xD;
v_epexForecast_eurpkWh = 0.001*pf_dayAheadElectricityPricing_eurpMWh.getForecast();&#xD;
&#xD;
for (GridNode GN : c_gridNodeExecutionList) {&#xD;
	GN.f_updateForecasts();&#xD;
}&#xD;
&#xD;
// And price forecast! &#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665051878402</Id>
						<Name>f_calculateGridnodeFlows</Name>
						<X>677</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>t_h</Name>
							<Type>double</Type>
						</Parameter>
						<Body>v_currentElectricityImport_kW = 0;&#xD;
v_currentElectricityExport_kW = 0;&#xD;
&#xD;
for(GridNode n : c_gridNodeExecutionList) {&#xD;
	n.f_calculateEnergyBalance();&#xD;
}&#xD;
&#xD;
for(GridNode n : c_gridNodesTopLevel) {&#xD;
	if (n.p_energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
		v_currentElectricityImport_kW += max(0, n.v_currentLoad_kW );&#xD;
		v_currentElectricityExport_kW += max(0, -n.v_currentLoad_kW );&#xD;
	}&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665051962956</Id>
						<Name>f_calculateActorFlows</Name>
						<X>677</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>t_h</Name>
							<Type>double</Type>
						</Parameter>
						<Body>/*&#xD;
if (b_parallelizeConnectionOwners) {&#xD;
	c_connectionOwners.parallelStream().forEach(co -&gt; co.f_updateFinances());&#xD;
} else {&#xD;
	for (ConnectionOwner c : pop_connectionOwners) {&#xD;
		c.f_updateFinances();&#xD;
	}&#xD;
}&#xD;
*/&#xD;
&#xD;
for (EnergyCoop h : pop_energyCoops) {&#xD;
	h.f_calculateEnergyBalance();&#xD;
}&#xD;
/*for (EnergySupplier e : pop_energySuppliers) {&#xD;
	e.f_updateFinances();&#xD;
}*/&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666879523873</Id>
						<Name>f_sumGridNodeLoads</Name>
						<Description>Bereken belasting per netvlak in het model (elektriciteit, absolute waarde) voor kosten-berekeningen gebied buiten het model.

@author: Jorrit
@since: 27-10-2022</Description>
						<X>960</X>
						<Y>268</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Bereken belasting per netvlak in het model (elektriciteit, absolute waarde) voor kosten-berekeningen gebied.&#xD;
&#xD;
// Reset totals in case a full year simulation was already run before...&#xD;
v_gridNodePeakLoadElectricityHSMS_kW = 0;&#xD;
//v_totalElectricityImport_MWh = 0;&#xD;
//v_totalElectricityExport_MWh = 0;&#xD;
c_timesOfNodePeakLoads_h.clear();&#xD;
v_cumulativeGridCapacityHSMS_kW = 0;&#xD;
v_gridOverloadDuration_h = 0;&#xD;
&#xD;
//v_totalHeatProduced_MWh = 0;&#xD;
&#xD;
for(GridNode h : c_gridNodesTopLevel ) {&#xD;
//	v_gridNodePeakLoadElectricityHSMS_kW = max(v_gridNodePeakLoadElectricityHSMS_kW,abs(h.v_peakLoadFilteredElectricity_kW));&#xD;
	v_gridNodePeakLoadElectricityHSMS_kW += abs(h.v_peakLoadFilteredElectricity_kW);&#xD;
	&#xD;
	//v_totalElectricityImport_MWh += h.v_electricityDrawn_kWh / 1000.0;&#xD;
	//v_totalElectricityExport_MWh += h.v_electricityDelivered_kWh / 1000.0;&#xD;
	//c_timesOfNodePeakLoads_h.put(h.p_gridNodeID, h.v_timeOfPeakLoadFiltered_h);&#xD;
	v_cumulativeGridCapacityHSMS_kW += h.p_capacity_kW;&#xD;
	&#xD;
	v_gridOverloadDuration_h += h.v_totalTimeOverloaded_h;&#xD;
}&#xD;
&#xD;
//v_avgGridLoad_fr = sum(c_gridNodesTopLevel, GN-&gt;GN.v_averageAbsoluteLoadElectricity_kW)/v_cumulativeGridCapacityHSMS_kW;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666978595555</Id>
						<Name>f_sumBatteryUse</Name>
						<X>960</X>
						<Y>308</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_totalBatteryDischargeAmount_MWh = 0;&#xD;
v_totalBatteryChargeAmount_MWh = 0;&#xD;
//v_totalBatteryInstalledCapacity_MWh = 0;&#xD;
v_totalBatteryEnergyUsed_MWh = 0;&#xD;
&#xD;
for(J_EA ea : c_energyAssets) { // Single loop of all assets without using c_EVs and c_storageAssets&#xD;
	if( ea instanceof J_EAStorageElectric ) {&#xD;
		J_EAStorageElectric e = (J_EAStorageElectric)ea;&#xD;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;&#xD;
	}&#xD;
	&#xD;
	if( ea instanceof J_EAEV ) {&#xD;
		J_EAEV e = (J_EAEV)ea;&#xD;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;&#xD;
	}&#xD;
}&#xD;
&#xD;
/*&#xD;
for(J_EAStorage es : c_storageAssets ) {&#xD;
	if( es instanceof J_EAStorageElectric ) {&#xD;
		J_EAStorageElectric e = (J_EAStorageElectric)es;&#xD;
		v_totalBatteryDischargeAmount_MWh += e.getTotalDischargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryChargeAmount_MWh += e.getTotalChargeAmount_kWh() / 1000;&#xD;
		v_totalBatteryInstalledCapacity_MWh += e.getStorageCapacity_kWh() / 1000;&#xD;
		v_totalBatteryEnergyUsed_MWh += e.getEnergyUsed_kWh() / 1000;&#xD;
		//traceln( ((J_EAStorageElectric)e.j_ea).getStorageCapacity() / 1000 );&#xD;
	}&#xD;
}&#xD;
for(J_EAEV ev : c_EVs ) {&#xD;
	v_totalBatteryDischargeAmount_MWh += ev.getTotalDischargeAmount_kWh() / 1000;&#xD;
	v_totalBatteryChargeAmount_MWh += ev.getTotalChargeAmount_kWh() / 1000;&#xD;
	v_totalBatteryInstalledCapacity_MWh += ev.getStorageCapacity_kWh() / 1000;&#xD;
	v_totalBatteryEnergyUsed_MWh += ev.getEnergyUsed_kWh() / 1000;&#xD;
	//traceln( ((J_EAStorageElectric)e.j_ea).getStorageCapacity() / 1000 );&#xD;
}&#xD;
*/&#xD;
&#xD;
v_batteryStoredEnergyDeltaSinceStart_MWh = v_totalBatteryChargeAmount_MWh - v_totalBatteryDischargeAmount_MWh - v_totalBatteryEnergyUsed_MWh;&#xD;
if (v_batteryStoredEnergyDeltaSinceStart_MWh == Double.NaN) {&#xD;
	v_batteryStoredEnergyDeltaSinceStart_MWh = 0;&#xD;
}&#xD;
traceln("Electricity delta in batteries (including EVs): "+ v_batteryStoredEnergyDeltaSinceStart_MWh + " MWh");</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1668528129020</Id>
						<Name>f_calculateGridConnectionFlows</Name>
						<X>677</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>t_h</Name>
							<Type>double</Type>
						</Parameter>
						<Body>fm_currentProductionFlows_kW.clear();&#xD;
fm_currentConsumptionFlows_kW.clear();&#xD;
fm_currentBalanceFlows_kW.clear();&#xD;
&#xD;
&#xD;
v_currentFinalEnergyConsumption_kW = 0;&#xD;
v_currentPrimaryEnergyProduction_kW = 0;&#xD;
v_currentEnergyCurtailed_kW = 0;&#xD;
v_currentPrimaryEnergyProductionHeatpumps_kW = 0;&#xD;
&#xD;
if (b_parallelizeGridConnections) {&#xD;
	c_gridConnections.parallelStream().forEach(gc -&gt; gc.f_calculateEnergyBalance());&#xD;
	for(GridConnection gc : c_gridConnections) { // Can't do this in parallel due to different threads writing to the same values!&#xD;
		&#xD;
		fm_currentBalanceFlows_kW.addFlows(gc.fm_currentBalanceFlows_kW);&#xD;
		fm_currentProductionFlows_kW.addFlows(gc.fm_currentProductionFlows_kW);&#xD;
		fm_currentConsumptionFlows_kW.addFlows(gc.fm_currentConsumptionFlows_kW);&#xD;
&#xD;
		v_currentFinalEnergyConsumption_kW += gc.v_currentFinalEnergyConsumption_kW;&#xD;
		v_currentPrimaryEnergyProduction_kW += gc.v_currentPrimaryEnergyProduction_kW;&#xD;
		v_currentEnergyCurtailed_kW += gc.v_currentEnergyCurtailed_kW;&#xD;
		v_currentPrimaryEnergyProductionHeatpumps_kW += gc.v_currentPrimaryEnergyProductionHeatpumps_kW;&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	for(GridConnection gc : c_gridConnections) {&#xD;
		gc.f_calculateEnergyBalance();&#xD;
		&#xD;
		fm_currentBalanceFlows_kW.addFlows(gc.fm_currentBalanceFlows_kW);&#xD;
		fm_currentProductionFlows_kW.addFlows(gc.fm_currentProductionFlows_kW);&#xD;
		fm_currentConsumptionFlows_kW.addFlows(gc.fm_currentConsumptionFlows_kW);&#xD;
		&#xD;
		v_currentFinalEnergyConsumption_kW += gc.v_currentFinalEnergyConsumption_kW;&#xD;
		v_currentPrimaryEnergyProduction_kW += gc.v_currentPrimaryEnergyProduction_kW;&#xD;
		v_currentEnergyCurtailed_kW += gc.v_currentEnergyCurtailed_kW;&#xD;
		v_currentPrimaryEnergyProductionHeatpumps_kW += gc.v_currentPrimaryEnergyProductionHeatpumps_kW;&#xD;
	}&#xD;
}&#xD;
&#xD;
for (GridConnection gc : c_subGridConnections) {&#xD;
	gc.f_calculateEnergyBalance();&#xD;
}&#xD;
&#xD;
v_currentEnergyImport_kW = 0.0;&#xD;
v_currentEnergyExport_kW = 0.0;&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
	double netFlow_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
	v_currentEnergyImport_kW += max( 0, netFlow_kW );&#xD;
	v_currentEnergyExport_kW += max( 0, -netFlow_kW );&#xD;
}&#xD;
&#xD;
/*&#xD;
if (v_isRapidRun) {	&#xD;
	if (v_timeStepsElapsed == 0) {&#xD;
		heatDemandProfile.setCellValue("Tijd (uren)", "Sheet1", 1, 1);&#xD;
		heatDemandProfile.setCellValue("Datum", "Sheet1", 1, 2);&#xD;
		heatDemandProfile.setCellValue("Energie Behoefte (kWh)", "Sheet1", 1, 3);&#xD;
	}&#xD;
	&#xD;
	heatDemandProfile.setCellValue(t_h, "Sheet1", v_timeStepsElapsed+2, 1);&#xD;
	&#xD;
	double unix_time = (1672531200.0 + t_h * 60 * 60 ) / 86400.0 + 25569.0; // 1672531200 is 1 jan 2023 GMT+1&#xD;
	heatDemandProfile.setCellValue(unix_time, "Sheet1", v_timeStepsElapsed+2, 2);&#xD;
&#xD;
	double totalHeatDemand_kW = sum(c_gridConnections,x-&gt;x.fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
	heatDemandProfile.setCellValue(totalHeatDemand_kW, "Sheet1", v_timeStepsElapsed + 2, 3);&#xD;
}&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="private" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671636439933</Id>
						<Name>f_initializeForecasts</Name>
						<X>710</X>
						<Y>108</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>pf_ambientTemperature_degC = new J_ProfileForecaster(null, pp_ambientTemperature_degC, p_forecastTime_h, t_h, p_timeStep_h);&#xD;
c_forecasts.add(pf_ambientTemperature_degC);&#xD;
&#xD;
pf_PVProduction35DegSouth_fr = new J_ProfileForecaster(null, pp_PVProduction35DegSouth_fr, p_forecastTime_h, t_h, p_timeStep_h);&#xD;
c_forecasts.add(pf_PVProduction35DegSouth_fr);&#xD;
&#xD;
pf_PVProduction15DegEastWest_fr = new J_ProfileForecaster(null, pp_PVProduction15DegEastWest_fr, p_forecastTime_h, t_h, p_timeStep_h);&#xD;
c_forecasts.add(pf_PVProduction15DegEastWest_fr);&#xD;
&#xD;
pf_windProduction_fr = new J_ProfileForecaster(null, pp_windProduction_fr, p_forecastTime_h, t_h, p_timeStep_h);&#xD;
c_forecasts.add(pf_windProduction_fr);&#xD;
&#xD;
pf_dayAheadElectricityPricing_eurpMWh = new J_ProfileForecaster(null, pp_dayAheadElectricityPricing_eurpMWh, p_forecastTime_h, t_h, p_timeStep_h);&#xD;
c_forecasts.add(pf_dayAheadElectricityPricing_eurpMWh);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696521316832</Id>
						<Name>f_runRapidSimulation</Name>
						<X>950</X>
						<Y>48</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>pauseSimulation();&#xD;
&#xD;
traceln(" ");&#xD;
traceln("*** Running headless simulation *** ");&#xD;
traceln(" ");&#xD;
&#xD;
double startTime1 = System.currentTimeMillis();&#xD;
&#xD;
&#xD;
// Store and reset model states...&#xD;
&#xD;
for (J_EA EA : c_energyAssets) {&#xD;
	EA.storeStatesAndReset();		&#xD;
}&#xD;
&#xD;
for (GridConnection GC : c_gridConnections) {&#xD;
	if (GC.v_rapidRunData != null) {&#xD;
		if (b_storePreviousRapidRunData) {&#xD;
			GC.v_previousRunData = GC.v_rapidRunData.getClone();&#xD;
		}&#xD;
	} else {&#xD;
		GC.v_rapidRunData = new J_RapidRunData(GC);&#xD;
		GC.v_rapidRunData.initializeAccumulators(p_runEndTime_h - p_runStartTime_h, p_timeStep_h, GC.v_activeEnergyCarriers, GC.v_activeConsumptionEnergyCarriers, GC.v_activeProductionEnergyCarriers); //f_initializeAccumulators();&#xD;
	}&#xD;
	GC.f_resetStates();&#xD;
	GC.v_rapidRunData.assetsMetaData = GC.v_liveAssetsMetaData.getClone();&#xD;
	GC.v_rapidRunData.connectionMetaData = GC.v_liveConnectionMetaData.getClone();&#xD;
&#xD;
	//GC.c_tripTrackers.forEach(tt-&gt;tt.storeAndResetState());&#xD;
	//GC.c_tripTrackers.forEach(tt-&gt;tt.setStartIndex(p_runStartTime_h));&#xD;
	//GC.c_tripTrackers.forEach(tt-&gt;tt.prepareNextActivity(p_runStartTime_h*60));&#xD;
	&#xD;
	GC.c_tripTrackers.forEach(tt-&gt;{&#xD;
		tt.storeAndResetState();&#xD;
		tt.setStartIndex(p_runStartTime_h);&#xD;
		tt.prepareNextActivity(p_runStartTime_h*60);&#xD;
		});&#xD;
	if (GC instanceof GCHouse) {&#xD;
		if (((GCHouse)GC).p_cookingTracker != null) {&#xD;
			((GCHouse)GC).p_cookingTracker.storeAndResetState();&#xD;
		}&#xD;
	}&#xD;
}&#xD;
for (GridConnection GC : c_subGridConnections) {&#xD;
	GC.f_resetStates();&#xD;
}&#xD;
&#xD;
for (GridNode GN : pop_gridNodes) {&#xD;
	GN.f_resetStates();&#xD;
}&#xD;
&#xD;
for (ConnectionOwner CO : pop_connectionOwners) {&#xD;
	CO.f_resetStates();&#xD;
}&#xD;
&#xD;
for (EnergyCoop EC : pop_energyCoops) {&#xD;
	if (EC.v_rapidRunData != null) {&#xD;
		if (b_storePreviousRapidRunData) {&#xD;
			EC.v_previousRunData = EC.v_rapidRunData.getClone();&#xD;
		}&#xD;
	} else {&#xD;
		EC.v_rapidRunData = new J_RapidRunData(EC);&#xD;
		&#xD;
		EC.v_rapidRunData.initializeAccumulators(p_runEndTime_h - p_runStartTime_h, p_timeStep_h, EC.v_activeEnergyCarriers, EC.v_activeConsumptionEnergyCarriers, EC.v_activeProductionEnergyCarriers);&#xD;
	}&#xD;
	EC.f_resetStates();&#xD;
	EC.v_rapidRunData.assetsMetaData = EC.v_liveAssetsMetaData.getClone();&#xD;
	EC.v_rapidRunData.connectionMetaData = EC.v_liveConnectionMetaData.getClone();&#xD;
}&#xD;
&#xD;
&#xD;
//t_h=v_runStartTime_h;&#xD;
int v_timeStepsElapsed_live = v_timeStepsElapsed;&#xD;
v_timeStepsElapsed=0;&#xD;
&#xD;
c_profiles.forEach(p -&gt; p.updateValue(p_runStartTime_h));&#xD;
c_forecasts.forEach(p -&gt; p.initializeForecast(p_runStartTime_h)); &#xD;
//c_forecasts.parallelStream().forEach(p -&gt; p.initializeForecast(p_runStartTime_h)); &#xD;
&#xD;
// When adding actors, also reset their states! Not used yet for Drechtsteden...&#xD;
&#xD;
&#xD;
if (v_rapidRunData != null) {&#xD;
	if (b_storePreviousRapidRunData) {&#xD;
		v_previousRunData = v_rapidRunData.getClone();&#xD;
	}&#xD;
} else {&#xD;
	v_rapidRunData = new J_RapidRunData(this);&#xD;
	v_rapidRunData.initializeAccumulators(p_runEndTime_h - p_runStartTime_h, p_timeStep_h, v_activeEnergyCarriers, v_activeConsumptionEnergyCarriers, v_activeProductionEnergyCarriers); //f_initializeAccumulators();	&#xD;
}&#xD;
&#xD;
f_resetAnnualValues();&#xD;
v_rapidRunData.assetsMetaData = v_liveAssetsMetaData.getClone();	&#xD;
v_rapidRunData.connectionMetaData = v_liveConnectionMetaData.getClone();&#xD;
&#xD;
&#xD;
v_isRapidRun = true;&#xD;
&#xD;
//Run energy calculations loop&#xD;
for(t_h = p_runStartTime_h; t_h &lt; p_runEndTime_h; t_h += p_timeStep_h){&#xD;
	// Update time-series for model-wide variables (such as temps, wind, etc.)&#xD;
	double startTime = System.currentTimeMillis();&#xD;
	f_updateTimeseries(t_h);&#xD;
	v_timeSeriesRuntime_ms += (System.currentTimeMillis()-startTime);&#xD;
	&#xD;
	// Operate assets on each gridConnection&#xD;
	startTime = System.currentTimeMillis();&#xD;
	f_calculateGridConnectionFlows(t_h);&#xD;
	v_gridConnectionsRuntime_ms += (System.currentTimeMillis()-startTime);&#xD;
	&#xD;
	// Calculate grid node flows&#xD;
	startTime = System.currentTimeMillis();&#xD;
	f_calculateGridnodeFlows(t_h);&#xD;
	v_gridNodesRuntime_ms += (System.currentTimeMillis()-startTime);&#xD;
	&#xD;
	// Financial accounting of energy flows&#xD;
	startTime = System.currentTimeMillis();&#xD;
	f_calculateActorFlows(t_h);&#xD;
	v_financialsRuntime_ms += (System.currentTimeMillis()-startTime);&#xD;
	&#xD;
	// Update elektriciteitsprijzen&#xD;
	startTime = System.currentTimeMillis();&#xD;
	f_updatePricesForNextTimestep(t_h);&#xD;
	v_incentivesRuntime_ms += (System.currentTimeMillis()-startTime);&#xD;
&#xD;
&#xD;
	/*// Update time-series for model-wide variables (such as temps, wind, etc.)&#xD;
	f_updateTimeseries(t_h);&#xD;
	&#xD;
	// Operate assets on each gridConnection&#xD;
	f_calculateGridConnectionFlows(t_h);&#xD;
	&#xD;
	// Calculate grid node flows&#xD;
	f_calculateGridnodeFlows(t_h);&#xD;
	&#xD;
	// Financial accounting of energy flows&#xD;
	f_calculateFinancialFlows(t_h);&#xD;
	&#xD;
	// Update elektriciteitsprijzen&#xD;
	f_updatePricesForNextTimestep(t_h);&#xD;
	*/&#xD;
	f_rapidRunDataLogging();&#xD;
	&#xD;
	v_timeStepsElapsed++;&#xD;
}	&#xD;
//traceln("HVMV overloaded hours: %s", c_gridNodesHSMS.get(0).v_totalTimeOverloaded_h);&#xD;
double startTime = System.currentTimeMillis();&#xD;
&#xD;
if( p_gridNodeTimeSeriesExcel != null){&#xD;
	f_writeGridNodeTimeseriesToExcel();&#xD;
}&#xD;
&#xD;
f_calculateKPIs();&#xD;
v_kpiCalcsRuntime_ms = (System.currentTimeMillis()-startTime);&#xD;
traceln("---FINISHED YEAR MODEL RUN----");&#xD;
&#xD;
//numberOfRuns++;&#xD;
&#xD;
//Return model to previous state to continue simulation run&#xD;
v_timeStepsElapsed = v_timeStepsElapsed_live;&#xD;
t_h = p_runStartTime_h + v_timeStepsElapsed * p_timeStep_h;&#xD;
&#xD;
for (J_EA EA : c_energyAssets) {&#xD;
	EA.restoreStates();		&#xD;
}&#xD;
for (GridNode GN : pop_gridNodes) {&#xD;
	//GN.f_resetStates();&#xD;
}&#xD;
for (GridConnection GC : c_gridConnections) {&#xD;
	//GC.f_resetStates();&#xD;
	GC.f_resetStatesAfterRapidRun();&#xD;
	GC.c_tripTrackers.forEach(tt-&gt;{&#xD;
		tt.restoreState();&#xD;
		tt.prepareNextActivity((t_h-p_runStartTime_h)*60);&#xD;
		});	&#xD;
	//GC.c_tripTrackers.forEach(tt-&gt;tt.prepareNextActivity((t_h-p_runStartTime_h)*60));&#xD;
	if (GC instanceof GCHouse) {&#xD;
		if (((GCHouse)GC).p_cookingTracker != null) {&#xD;
			((GCHouse)GC).p_cookingTracker.restoreState();&#xD;
		}&#xD;
	}	&#xD;
}&#xD;
&#xD;
f_setInitialValues();&#xD;
&#xD;
v_isRapidRun = false;&#xD;
&#xD;
double duration = System.currentTimeMillis() - startTime1;&#xD;
&#xD;
traceln("*** headless run duration: "+ duration/1000 + " s ***");&#xD;
&#xD;
//t_h = time(HOUR) + v_hourOfYearStart;&#xD;
&#xD;
&#xD;
traceln("Live-sim t_h after rapidRun: %s", t_h);&#xD;
c_profiles.forEach(p -&gt; p.updateValue(t_h)); &#xD;
c_forecasts.forEach(p -&gt; p.initializeForecast(t_h)); &#xD;
//c_forecasts.parallelStream().forEach(p -&gt; p.initializeForecast(t_h)); &#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1698922757486</Id>
						<Name>f_calculateKPIs</Name>
						<Description>Executed on simulation end to export data.

@author: JorritvandenHouten
@since: Sprint 6</Description>
						<X>950</X>
						<Y>248</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for(GridConnection g: c_gridConnections){ // &#xD;
	    c_gridConnectionOverload_fr.put(g.p_gridConnectionID, g.v_maxConnectionLoad_fr);&#xD;
}	&#xD;
&#xD;
pop_gridNodes.forEach(gn -&gt; gn.f_calculateKPIs()); // This concerns a relatively small collection, so no need for parallelStream.&#xD;
&#xD;
f_sumGridNodeLoads();&#xD;
f_sumBatteryUse();&#xD;
&#xD;
pop_energyCoops.forEach(ec -&gt; ec.f_calculateKPIs()); // Must go after f_sumGridNodeLoads() because it uses total electricity export!&#xD;
&#xD;
// Totals from accumulators:&#xD;
v_totalElectricityConsumed_MWh = v_rapidRunData.getTotalElectricityConsumed_MWh(); //am_dailyAverageConsumptionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_kWh() / 1000;&#xD;
v_totalElectricityProduced_MWh= v_rapidRunData.getTotalElectricityProduced_MWh(); //am_dailyAverageProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_kWh() / 1000;&#xD;
&#xD;
v_totalEnergyConsumed_MWh = v_rapidRunData.getTotalEnergyConsumed_MWh();//acc_dailyAverageEnergyConsumption_kW.getIntegral_kWh() / 1000;&#xD;
v_totalEnergyProduced_MWh = v_rapidRunData.getTotalEnergyProduced_MWh();//acc_dailyAverageEnergyProduction_kW.getIntegral_kWh() / 1000;&#xD;
v_totalEnergyImport_MWh = v_rapidRunData.am_totalBalanceAccumulators_kW.totalIntegralPos_kWh()/1000;&#xD;
v_totalEnergyExport_MWh = -v_rapidRunData.am_totalBalanceAccumulators_kW.totalIntegralNeg_kWh()/1000;&#xD;
v_totalEnergyCurtailed_MWh = v_rapidRunData.getTotalEnergyCurtailed_MWh();//acc_totalEnergyCurtailed_kW.getIntegral_kWh() / 1000;&#xD;
//v_totalPrimaryEnergyProductionHeatpumps_MWh = acc_totalPrimaryEnergyProductionHeatpumps_kW.getIntegral_kWh() / 1000;&#xD;
&#xD;
// Electricity self consumption&#xD;
v_individualSelfSufficiency_fr = sum(c_gridConnections, gc -&gt; gc.v_rapidRunData.getTotalElectricitySelfConsumed_MWh()) / v_totalElectricityConsumed_MWh;&#xD;
v_individualSelfConsumption_fr = sum(c_gridConnections, gc -&gt; gc.v_rapidRunData.getTotalElectricitySelfConsumed_MWh()) / v_totalElectricityProduced_MWh;&#xD;
v_totalElectricitySelfConsumed_MWh = v_rapidRunData.getTotalElectricitySelfConsumed_MWh();// max(0, v_totalElectricityConsumed_MWh - fm_totalImports_MWh.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
v_collectiveSelfConsumption_fr = v_totalElectricitySelfConsumed_MWh / v_totalElectricityProduced_MWh;&#xD;
&#xD;
//Tracelns&#xD;
traceln("");&#xD;
traceln("__--** Totals **--__");&#xD;
traceln("Energy consumed: "+ v_totalEnergyConsumed_MWh + " MWh");&#xD;
traceln("Energy produced: "+ v_totalEnergyProduced_MWh + " MWh");&#xD;
traceln("Energy import: "+ v_totalEnergyImport_MWh + " MWh");&#xD;
traceln("Energy export: "+ v_totalEnergyExport_MWh + " MWh");&#xD;
&#xD;
// *** Total energy balance ***&#xD;
double deltaThermalEnergySinceStart_MWh = 0;&#xD;
double totalAmbientHeating_MWh = 0;&#xD;
double totalEnergyCurtailed_MWh = 0;&#xD;
double totalEnergyProduced_MWh = 0;&#xD;
double totalEnergyUsed_MWh = 0;&#xD;
double totalEnergyChargedOutsideModel_MWh = 0;&#xD;
double totalHeatProduced_MWh = 0;&#xD;
for (J_EA e : c_energyAssets) {&#xD;
	if (((GridConnection) e.getParentAgent()).v_isActive ) {&#xD;
		double EnergyUsed_kWh = e.getEnergyUsed_kWh();&#xD;
		if (EnergyUsed_kWh &gt; 0) {&#xD;
			if( e instanceof J_EAConversionGasCHP ) {&#xD;
				totalEnergyUsed_MWh += EnergyUsed_kWh/1000;&#xD;
				//electricityProduced_kWh = ((J_EAConversionGasCHP)e).getElectricityProduced_kWh();&#xD;
				//electricityProduced_MWh += electricityProduced_kWh/1000;&#xD;
			} else {&#xD;
				totalEnergyUsed_MWh += EnergyUsed_kWh/1000;&#xD;
			}&#xD;
			if ( e instanceof J_EABuilding ) {&#xD;
				totalEnergyProduced_MWh += ((J_EABuilding)e).energyAbsorbed_kWh/1000;&#xD;
				deltaThermalEnergySinceStart_MWh += (((J_EABuilding)e).getCurrentTemperature() - ((J_EABuilding)e).getInitialTemperature_degC())*((J_EABuilding)e).getHeatCapacity_JpK()/3.6e9;&#xD;
				deltaThermalEnergySinceStart_MWh += ((J_EABuilding)e).getRemainingHeatBufferHeat_kWh() / 1000;&#xD;
			}&#xD;
		} else {&#xD;
			totalEnergyProduced_MWh -= EnergyUsed_kWh/1000;&#xD;
			if ( e instanceof J_EABuilding ) {&#xD;
				traceln("Building has produced more energy than it has used?? Is lossfactor too low?");&#xD;
				traceln("Lossfactor: %s", ((J_EABuilding)e).lossFactor_WpK);&#xD;
			}&#xD;
		}&#xD;
		if (e instanceof J_EAStorageHeat) { // includes J_EABuilding&#xD;
			totalAmbientHeating_MWh += ((J_EAStorageHeat)e).energyAbsorbed_kWh/1000;&#xD;
			totalHeatProduced_MWh += ((J_EAStorageHeat)e).energyAbsorbed_kWh/1000;						&#xD;
		}&#xD;
		if (e instanceof J_EAEV) {&#xD;
			totalEnergyChargedOutsideModel_MWh += ((J_EAEV)e).getEnergyChargedOutsideModelArea_kWh()/1000;&#xD;
		}&#xD;
		if (e instanceof J_EAConversionHeatPump) {&#xD;
			totalHeatProduced_MWh -= EnergyUsed_kWh/1000;						&#xD;
		}&#xD;
	}&#xD;
}&#xD;
double v_totalDeltaStoredEnergy_MWh = v_batteryStoredEnergyDeltaSinceStart_MWh + deltaThermalEnergySinceStart_MWh; // Positive number means more energy stored at the end of the simulation. &#xD;
&#xD;
//Total selfconsumption, selfsufficiency&#xD;
v_totalEnergySelfConsumed_MWh = v_totalEnergyConsumed_MWh - (v_totalEnergyImport_MWh + max(0,-v_totalDeltaStoredEnergy_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.&#xD;
//v_totalSelfConsumedEnergy_MWh = totalEnergyUsed_MWh - (v_totalImportedEnergy_MWh + max(0,-v_totalDeltaStoredEnergy_MWh)); // Putting positive delta-stored energy here assumes this energy was imported as opposed to self-produced. Putting negative delta-stored energy here assumes this energy was self-consumed, as opposed to exported.&#xD;
&#xD;
// Export and production-based selfconsumption&#xD;
if ( v_totalEnergyProduced_MWh &gt; 0 ){&#xD;
	v_modelSelfConsumption_fr = v_totalEnergySelfConsumed_MWh / v_totalEnergyProduced_MWh;&#xD;
}&#xD;
traceln("");&#xD;
traceln("Total energy absorbed from environment by buildings: %s MWh", totalAmbientHeating_MWh);&#xD;
traceln("Delta thermal stored energy since start: %s MWh", deltaThermalEnergySinceStart_MWh);&#xD;
traceln("Total energy from vehicles charging outside the model scope: %s MWh", totalEnergyChargedOutsideModel_MWh);&#xD;
&#xD;
traceln("Energy selfconsumption: " + v_modelSelfConsumption_fr*100 + "%");&#xD;
double totalElectricitySelfConsumption_fr = 0;&#xD;
&#xD;
/*if ( v_totalElectricityProduced_MWh &gt; 0 ){&#xD;
	totalElectricitySelfConsumption_fr = 1 - fm_totalExports_MWh.get(OL_EnergyCarriers.ELECTRICITY)/v_totalElectricityProduced_MWh;&#xD;
}*/&#xD;
&#xD;
//v_modelSelfSufficiency_fr = 1 - (v_totalElectricityImport_MWh + max(0,v_totalMethaneImport_MWh - v_totalMethaneExport_MWh) + max(0,v_totalHydrogenImport_MWh - v_totalHydrogenExport_MWh) + v_totalDieselImport_MWh - v_batteryStoredEnergyDeltaSinceStart_MWh - deltaThermalEnergySinceStart_MWh) / v_totalEnergyUsed_MWh;&#xD;
v_modelSelfSufficiency_fr = v_totalEnergySelfConsumed_MWh / v_totalEnergyConsumed_MWh; // Calculation based on (total_consumption - total_import) / total_consumption. Positive delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. &#xD;
//v_modelSelfSufficiency_fr = v_totalSelfConsumedEnergy_MWh / totalEnergyUsed_MWh; // Calculation based on (total_consumption - total_import) / total_consumption. Positive delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. &#xD;
&#xD;
traceln("Energy selfsufficiency (via import calc): %s %%", v_modelSelfSufficiency_fr*100);&#xD;
//double totalSelfSufficiency_fr_check = (v_totalEnergyProduced_MWh - (v_totalElectricityExport_MWh + max(0,v_totalMethaneExport_MWh-v_totalMethaneImport_MWh) + max(0,v_totalHydrogenExport_MWh-v_totalHydrogenImport_MWh)))/v_totalEnergyUsed_MWh; // Calculation based on (total_production - total_export) / total_consumption&#xD;
//double totalSelfSufficiency_fr_check = v_totalSelfConsumedEnergyCheck_MWh / totalEnergyUsed_MWh; // Calculation based on (total_production - total_export) / total_consumption. Negative delta-stored energy is contained in v_totalSelfConsumedEnergy_MWh. &#xD;
&#xD;
// Remaining difference due to different temps of houses start vs end?&#xD;
traceln("");&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
	traceln("Import " + EC.toString() + ": " + v_rapidRunData.getTotalImport_MWh(EC) + " MWh");&#xD;
	traceln("Export " + EC.toString() + ": " + v_rapidRunData.getTotalExport_MWh(EC) + " MWh");&#xD;
}&#xD;
&#xD;
traceln("");&#xD;
traceln("__--** Checks **--__");&#xD;
&#xD;
traceln("Check energy used from array and from energy assets: %s MWh", ( v_totalEnergyConsumed_MWh - totalEnergyUsed_MWh) );&#xD;
traceln("Check energy produced from array and from energy assets: %s MWh", ( v_totalEnergyProduced_MWh - totalEnergyProduced_MWh) );&#xD;
&#xD;
double energyBalanceCheck_MWh = v_totalEnergyImport_MWh + v_totalEnergyProduced_MWh - (v_totalEnergyExport_MWh + v_totalEnergyConsumed_MWh + v_totalDeltaStoredEnergy_MWh);&#xD;
traceln("Check on energy balance is: " + energyBalanceCheck_MWh + " MWh, must be zero!");&#xD;
traceln("");&#xD;
&#xD;
if ( Math.abs(energyBalanceCheck_MWh) &gt; 1e-6 ) {&#xD;
	traceln("");&#xD;
	String warningString = String.format("__--** WARNING!!!! **--__");&#xD;
	String errorString = String.format("ENERGY BALANCE ERROR EXCEEDING TOLERANCE!! Error: %s MWh", energyBalanceCheck_MWh);&#xD;
	traceln(warningString);&#xD;
	//traceln(red, errorString);&#xD;
	System.err.println(errorString);&#xD;
	traceln(warningString);&#xD;
	traceln("");&#xD;
&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1699958741073</Id>
						<Name>f_resetAnnualValues</Name>
						<X>950</X>
						<Y>88</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_rapidRunData.resetAccumulators(p_runEndTime_h - p_runStartTime_h, p_timeStep_h, v_activeEnergyCarriers, v_activeConsumptionEnergyCarriers, v_activeProductionEnergyCarriers); //f_initializeAccumulators();&#xD;
&#xD;
// Others&#xD;
acc_totalDLRfactor_f.reset();&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1701162826549</Id>
						<Name>f_runTimestep</Name>
						<X>950</X>
						<Y>68</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>t_h = p_runStartTime_h + v_timeStepsElapsed * p_timeStep_h;// + v_hourOfYearStart);// % 8760;&#xD;
&#xD;
// Reduce startdate after one year, loop all dat&#xD;
if(t_h-p_runStartTime_h!=0.0 &amp;&amp; (t_h-p_runStartTime_h) % 8760 == 0.0) {&#xD;
	Date startDate = getExperiment().getEngine().getStartDate();&#xD;
	startDate.setYear(startDate.getYear()-1);&#xD;
	getExperiment().getEngine().setStartDate(startDate);&#xD;
	traceln("Reduced anylogic date by one year, looping all data");&#xD;
}&#xD;
&#xD;
// Update tijdreeksen in leesbare variabelen&#xD;
f_updateTimeseries(t_h);&#xD;
&#xD;
// Operate assets on each gridConnection&#xD;
f_calculateGridConnectionFlows(t_h);&#xD;
&#xD;
// Calculate grid node flows&#xD;
f_calculateGridnodeFlows(t_h);&#xD;
&#xD;
// Financial accounting of energy flows&#xD;
f_calculateActorFlows(t_h);&#xD;
&#xD;
// Update elektriciteitsprijzen&#xD;
f_updatePricesForNextTimestep(t_h);&#xD;
&#xD;
f_updateLiveData();&#xD;
&#xD;
v_timeStepsElapsed ++;&#xD;
</Body>
					</Function>
					<Function AccessType="private" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716884712799</Id>
						<Name>f_buildGridNodeTree</Name>
						<X>710</X>
						<Y>68</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize top level grid values&#xD;
double topLevelElectricGridCapacity_kW = 0;&#xD;
boolean topLevelGridCapacitiesKnown = true;&#xD;
&#xD;
// First make all links between GridNodes&#xD;
for( GridNode GN : pop_gridNodes ) {&#xD;
	GN.f_connectToParentNode();&#xD;
}&#xD;
&#xD;
// Then build execution order list&#xD;
for( GridNode GN : pop_gridNodes ) {&#xD;
	GridNode parentNode = findFirst(pop_gridNodes, p-&gt;p.p_gridNodeID.equals(GN.p_parentNodeID)); // Works as long as p_gridNodeID is not null. p_parentNodeID can be null no problemo.&#xD;
	//if (GN.p_parentNodeID == null) {&#xD;
	if (parentNode == null) {&#xD;
		f_gridNodeRecursiveAdd(GN);&#xD;
		c_gridNodesTopLevel.add(GN);&#xD;
		if(GN.p_energyCarrier == OL_EnergyCarriers.ELECTRICITY){&#xD;
			topLevelElectricGridCapacity_kW +=GN.p_capacity_kW;&#xD;
			if(!GN.p_realCapacityAvailable){&#xD;
				topLevelGridCapacitiesKnown = false;&#xD;
			}&#xD;
		}&#xD;
	} else {&#xD;
		c_gridNodesNotTopLevel.add(GN);	&#xD;
		if (GN.p_gridNodeID.equals(parentNode.p_parentNodeID)) {&#xD;
			traceln("Throwing exception because of circular dependency between gridNodes! GridNode %s and parentNode %s", GN.p_gridNodeID, parentNode.p_gridNodeID);&#xD;
			throw new RuntimeException("Exception: circular GridNode dependency, only tree-topology supported");&#xD;
		}&#xD;
	}&#xD;
}&#xD;
c_gridNodeExecutionListReverse = c_gridNodeExecutionList;&#xD;
Collections.reverse(c_gridNodeExecutionList);&#xD;
&#xD;
//Set cumulative toplevel grid values as energyModel values&#xD;
v_liveConnectionMetaData.physicalCapacity_kW = topLevelElectricGridCapacity_kW;&#xD;
v_liveConnectionMetaData.contractedDeliveryCapacity_kW = topLevelElectricGridCapacity_kW;&#xD;
v_liveConnectionMetaData.contractedFeedinCapacity_kW = topLevelElectricGridCapacity_kW;&#xD;
v_liveConnectionMetaData.physicalCapacityKnown = topLevelGridCapacitiesKnown;&#xD;
v_liveConnectionMetaData.contractedDeliveryCapacityKnown = topLevelGridCapacitiesKnown;&#xD;
v_liveConnectionMetaData.contractedFeedinCapacityKnown = topLevelGridCapacitiesKnown;&#xD;
&#xD;
//traceln("Grid Node execution list: %s", c_gridNodeExecutionList );</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716886716306</Id>
						<Name>f_gridNodeRecursiveAdd</Name>
						<X>730</X>
						<Y>88</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>GN</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Body>c_gridNodeExecutionList.add(GN);&#xD;
for (GridNode GNchild : GN.c_connectedGridNodes) {&#xD;
	f_gridNodeRecursiveAdd(GNchild);&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1716890117265</Id>
						<Name>f_getActiveGridConnections</Name>
						<X>1360</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ArrayList&lt;GridConnection&gt; copyOfGridConnectionList = new ArrayList&lt;&gt;(c_gridConnections);&#xD;
copyOfGridConnectionList.removeAll(Arrays.asList(pop_gridConnections)); // Remove all default gridconnections (no flex control, only used for gridnode profile)&#xD;
return copyOfGridConnectionList;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716893898501</Id>
						<Name>f_initializeEngine</Name>
						<X>680</X>
						<Y>48</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// What if this function is accidently called twice? Need to start with a clean sheet?&#xD;
if (b_isInitialized) {&#xD;
	throw new RuntimeException("Error: Engine was initalized a second time.");&#xD;
}&#xD;
// Initialize time and date&#xD;
//v_hourOfYearStart=hourOfYearPerMonth[getMonth()] + (getDayOfMonth()-1)*24;&#xD;
t_h = p_runStartTime_h;&#xD;
&#xD;
LocalDate localDate = LocalDate.of(p_year, 1, 1);&#xD;
v_dayOfWeek1jan = DayOfWeek.from(localDate).getValue();&#xD;
p_startOfWinterWeek_h = roundToInt(24 * (p_winterWeekNumber * 7 + (8-v_dayOfWeek1jan)%7)); // Week 49 is winterweek.&#xD;
p_startOfSummerWeek_h = roundToInt(24 * (p_summerWeekNumber * 7 + (8-v_dayOfWeek1jan)%7)); // Week 18 is summerweek.&#xD;
&#xD;
&#xD;
Date startDate = date();&#xD;
&#xD;
startDate.setYear(p_year-1900);&#xD;
&#xD;
int monthIdx = 0;&#xD;
while ( t_h &gt; hourOfYearPerMonth[monthIdx] ) {&#xD;
	monthIdx++;&#xD;
	if (monthIdx==hourOfYearPerMonth.length){&#xD;
		break;&#xD;
	}	&#xD;
}&#xD;
&#xD;
int dayOfMonth = 1+(int)((t_h - hourOfYearPerMonth[monthIdx])/24.0);&#xD;
traceln("Day of month start: %s", dayOfMonth);&#xD;
traceln("Month of year start: %s", monthIdx);&#xD;
startDate.setMonth(monthIdx);&#xD;
startDate.setDate(dayOfMonth);&#xD;
traceln("Startdate: %s", startDate);&#xD;
//startDate.set&#xD;
getExperiment().getEngine().setStartDate(startDate); &#xD;
&#xD;
&#xD;
//traceln("Day of the week on january 1st %s: %s, int value: %s", p_year, DayOfWeek.from(localDate).name(), v_dayOfWeek1jan);&#xD;
&#xD;
// Initialize all agents in the correct order, creating all connections. What about setting initial values? And how about repeated simulations?&#xD;
&#xD;
f_buildGridNodeTree();&#xD;
c_gridConnections.forEach(GC -&gt; GC.f_initialize());&#xD;
&#xD;
pop_connectionOwners.forEach(CO -&gt; CO.f_initialize());&#xD;
pop_energyCoops.forEach(EC -&gt; EC.f_initialize()); // Not yet robust when there is no supplier initialized!&#xD;
&#xD;
&#xD;
&#xD;
// Initializing Live Data Class&#xD;
v_liveAssetsMetaData.updateActiveAssetData(c_gridConnections);&#xD;
v_liveData.activeConsumptionEnergyCarriers = v_activeConsumptionEnergyCarriers;&#xD;
v_liveData.activeProductionEnergyCarriers = v_activeProductionEnergyCarriers;&#xD;
v_liveData.activeEnergyCarriers = v_activeEnergyCarriers;&#xD;
&#xD;
// Loop over populations to check v_ispaused&#xD;
f_initializePause();&#xD;
&#xD;
for (GridNode GN : c_gridNodeExecutionList) {&#xD;
	GN.f_initializeGridnode();&#xD;
}&#xD;
&#xD;
v_liveData.connectionMetaData.contractedDeliveryCapacityKnown = false;&#xD;
v_liveData.connectionMetaData.contractedFeedinCapacityKnown = false;&#xD;
v_liveData.connectionMetaData.physicalCapacityKnown = false;&#xD;
&#xD;
f_initializeForecasts();&#xD;
&#xD;
f_initializeLiveDataSets();&#xD;
&#xD;
//f_initializeAccumulators();&#xD;
&#xD;
// Use parallelisation?&#xD;
if (c_gridConnections.size() &gt; 100) {&#xD;
	b_parallelizeGridConnections = true;&#xD;
}&#xD;
if (pop_connectionOwners.size() &gt; 500 &amp;&amp; b_parallelizeGridConnections) {&#xD;
	b_parallelizeConnectionOwners = true;&#xD;
}&#xD;
&#xD;
// set initial values&#xD;
f_setInitialValues();&#xD;
&#xD;
&#xD;
b_isInitialized = true;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;ConnectionOwner&gt;</ReturnType>
						<Id>1716897568717</Id>
						<Name>f_getConnectionOwners</Name>
						<X>1360</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return c_connectionOwners;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1716899946694</Id>
						<Name>f_getTopLevelGridCapacity_kW</Name>
						<X>1360</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return v_liveConnectionMetaData.physicalCapacity_kW;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;J_EA&gt;</ReturnType>
						<Id>1717058801652</Id>
						<Name>f_getEnergyAssets</Name>
						<X>1360</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return c_energyAssets;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridNode&gt;</ReturnType>
						<Id>1718289616227</Id>
						<Name>f_getGridNodesTopLevel</Name>
						<X>1360</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return this.c_gridNodesTopLevel;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridNode&gt;</ReturnType>
						<Id>1718289761647</Id>
						<Name>f_getGridNodesNotTopLevel</Name>
						<X>1360</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return this.c_gridNodesNotTopLevel;</Body>
					</Function>
					<Function AccessType="private" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722853692644</Id>
						<Name>f_setInitialValues</Name>
						<Description>Function to set initial states at start of simulation.</Description>
						<X>710</X>
						<Y>148</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Starting prices&#xD;
c_gridConnections.forEach(GC -&gt; GC.v_electricityPriceLowPassed_eurpkWh = c_gridNodesTopLevel.get(0).v_currentParentNodalPrice_eurpkWh); // Initialize filtered prices for gridConnections, hoping to prevent or reduce initial settling excursions&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722590514591</Id>
						<Name>f_initializePause</Name>
						<Description>Function to initialize the paused gridconnections.</Description>
						<X>710</X>
						<Y>128</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GridConnection GC : EnergyProductionSites) {&#xD;
	if (!GC.v_isActive) {&#xD;
		GC.f_setActive(false);&#xD;
	}&#xD;
}&#xD;
for (GridConnection GC : EnergyConversionSites) {&#xD;
	if (!GC.v_isActive) {&#xD;
		GC.f_setActive(false);&#xD;
	}&#xD;
}&#xD;
for (GridConnection GC : GridBatteries) {&#xD;
	if (!GC.v_isActive) {&#xD;
		GC.f_setActive(false);&#xD;
	}&#xD;
}&#xD;
for (GridConnection GC : PublicChargers) {&#xD;
	if (!GC.v_isActive) {&#xD;
		GC.f_setActive(false);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1724575401400</Id>
						<Name>f_writeGridNodeTimeseriesToExcel</Name>
						<Description>This function writes the load on each gridnode for each timestep to excel</Description>
						<X>1360</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Start writing trafoloads to excel!");&#xD;
&#xD;
int columnIndex = 2;&#xD;
//int rowIndex = roundToInt(4 * t_h ) + 2;&#xD;
&#xD;
int arraySize = v_rapidRunData.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW().length;&#xD;
traceln("ArraySize: %s", arraySize);&#xD;
for (int i = 0; i &lt; arraySize ; i++) {&#xD;
	p_gridNodeTimeSeriesExcel.setCellValue((i) * p_timeStep_h, "TrafoData", i+2, 1);&#xD;
}&#xD;
&#xD;
for(GridNode gn : pop_gridNodes){&#xD;
	p_gridNodeTimeSeriesExcel.setCellValue(gn.p_gridNodeID, "TrafoData", 1, columnIndex);&#xD;
	double[] loadArray = gn.acc_annualElectricityBalance_kW.getTimeSeries_kW();&#xD;
	for (int i = 0; i &lt; arraySize ; i++ ) {		&#xD;
		p_gridNodeTimeSeriesExcel.setCellValue(loadArray[i], "TrafoData", i+2, columnIndex);&#xD;
	}&#xD;
	columnIndex++;&#xD;
}&#xD;
&#xD;
//p_gridNodeTimeSeriesExcel.writeFile(force);;&#xD;
&#xD;
traceln("Finished writing trafoloads to excel!");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1727106160366</Id>
						<Name>f_addProfile</Name>
						<X>-740</X>
						<Y>72</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>profile</Name>
							<Type>J_ProfilePointer</Type>
						</Parameter>
						<Body>c_profiles.add(profile);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1727167397666</Id>
						<Name>f_getPausedGridConnections</Name>
						<X>1360</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return c_pausedGridConnections;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>J_ProfilePointer</ReturnType>
						<Id>1727193246625</Id>
						<Name>f_findProfile</Name>
						<X>-600</X>
						<Y>72</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>assetName</Name>
							<Type>String</Type>
						</Parameter>
						<Body>J_ProfilePointer profilePointer = findFirst(c_profiles, p -&gt; p.name.equals(assetName));&#xD;
//traceln("J_EAConsumption with name %s found profile asset: %s", assetName, profilePointer);&#xD;
if (profilePointer == null) {    		&#xD;
	throw new RuntimeException(String.format("Consumption or production asset without valid profile!") );&#xD;
}&#xD;
return profilePointer;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1731329529733</Id>
						<Name>f_updateLiveData</Name>
						<X>678</X>
						<Y>343</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Current time&#xD;
double currentTime_h = t_h-p_runStartTime_h;&#xD;
&#xD;
//Energy carrier flows&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentConsumptionFlows_kW.get(EC), 3));&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentProductionFlows_kW.get(EC) , 3));&#xD;
}&#xD;
&#xD;
//Totals&#xD;
v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, sum(c_gridNodesTopLevel.stream().filter(x -&gt; x.p_energyCarrier == OL_EnergyCarriers.ELECTRICITY).toList(), x -&gt; x.v_currentLoad_kW));&#xD;
&#xD;
//Grid capacity&#xD;
v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
&#xD;
////Specific assets&#xD;
&#xD;
//Demand&#xD;
&#xD;
//Base load electricity&#xD;
v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt;x.v_fixedConsumptionElectric_kW), 3));&#xD;
&#xD;
//Heatpump consumption (electric)&#xD;
v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt;x.v_heatPumpElectricityConsumption_kW), 3));&#xD;
&#xD;
//Hydrogen electricity consumption&#xD;
v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt;x.v_hydrogenElectricityConsumption_kW), 3));&#xD;
&#xD;
//EV chargings&#xD;
v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x -&gt; max(0,x.v_evChargingPowerElectric_kW)), 3));&#xD;
&#xD;
//Battery charging&#xD;
v_liveData.data_batteryCharging_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x -&gt; max(0, x.v_batteryPowerElectric_kW)), 3));&#xD;
&#xD;
//Electric Cooking &#xD;
v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt; x.v_electricHobConsumption_kW), 3));&#xD;
&#xD;
//District heating&#xD;
v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x -&gt; x.v_districtHeatDelivery_kW), 3));&#xD;
&#xD;
//Supply&#xD;
&#xD;
//PV&#xD;
v_liveData.data_PVGeneration_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt;x.v_pvProductionElectric_kW), 3));&#xD;
&#xD;
//Wind&#xD;
v_liveData.data_windGeneration_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections,x-&gt;x.v_windProductionElectric_kW), 3));&#xD;
&#xD;
//PT&#xD;
v_liveData.data_PTGeneration_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x-&gt;x.v_ptProductionHeat_kW), 3));&#xD;
&#xD;
//Battery discharge&#xD;
v_liveData.data_batteryDischarging_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections, x -&gt; max(0, -x.v_batteryPowerElectric_kW)), 3));&#xD;
&#xD;
//V2G&#xD;
v_liveData.data_V2GSupply_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections,x-&gt;max(0,-x.v_evChargingPowerElectric_kW)), 3));&#xD;
&#xD;
//CHP&#xD;
v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, roundToDecimal(sum(c_gridConnections,x-&gt;x.v_CHPProductionElectric_kW), 3));&#xD;
&#xD;
//Other&#xD;
&#xD;
//Battery storage&#xD;
double currentBatteryStoredEnergy_MWh = sum(c_gridConnections, x-&gt;x.v_batteryStoredEnergy_kWh/1000);&#xD;
v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, currentBatteryStoredEnergy_MWh);&#xD;
&#xD;
double currentSOC = 0;&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	currentSOC = currentBatteryStoredEnergy_MWh/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
v_liveData.data_batterySOC_fr.add(currentTime_h, roundToDecimal(currentSOC, 3));&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1731573713521</Id>
						<Name>f_initializeLiveDataSets</Name>
						<X>80</X>
						<Y>800</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_liveData.dsm_liveDemand_kW.createEmptyDataSets(v_activeEnergyCarriers, (int) (168 / p_timeStep_h));&#xD;
v_liveData.dsm_liveSupply_kW.createEmptyDataSets(v_activeEnergyCarriers, (int) (168 / p_timeStep_h));</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>EnergyCoop</ReturnType>
						<Id>1739958854535</Id>
						<Name>f_addEnergyCoop</Name>
						<X>1680</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>gcList</Name>
							<Type>ArrayList&lt;GridConnection&gt;</Type>
						</Parameter>
						<Body>// Add energyCoop&#xD;
EnergyCoop energyCoop = add_pop_energyCoops();&#xD;
energyCoop.p_actorID = "Custom Coop for filtered GC list";&#xD;
// Connect GCs, connectionOwners and energyCoop and gather data&#xD;
/*for(GridConnection gc : gcList) {&#xD;
	if(gc.p_owner == null) {&#xD;
		throw new RuntimeException("Can't add gridConnection without a connectionOwner to EnergyCoop!");&#xD;
	} else {&#xD;
		gc.p_owner.p_actorGroup = "member";&#xD;
		gc.p_owner.p_coopParent = energyCoop;&#xD;
		gc.p_owner.f_initialize();&#xD;
	}&#xD;
}*/&#xD;
// Initialisation, collecting data and calculating KPIs.&#xD;
energyCoop.f_initializeCustomCoop(gcList);&#xD;
&#xD;
// Adding this coop to the list of coops in the GC&#xD;
gcList.forEach(gc -&gt; gc.c_parentCoops.add(energyCoop));&#xD;
&#xD;
// Return energyCoop to caller &#xD;
return energyCoop;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>EnergyCoop</ReturnType>
						<Id>1739972940581</Id>
						<Name>f_removeEnergyCoop</Name>
						<X>1680</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>energyCoop</Name>
							<Type>EnergyCoop</Type>
						</Parameter>
						<Body>// Connect GCs, connectionOwners and energyCoop and gather data&#xD;
for(Agent CO : energyCoop.c_coopCustomers){&#xD;
	if(CO instanceof ConnectionOwner){&#xD;
		((ConnectionOwner)CO).p_coopParent = null;&#xD;
		((ConnectionOwner)CO).f_initialize();	&#xD;
	}&#xD;
}&#xD;
&#xD;
for(Agent CO : energyCoop.c_coopMembers){&#xD;
	if(CO instanceof ConnectionOwner){&#xD;
		((ConnectionOwner)CO).p_coopParent = null;&#xD;
		((ConnectionOwner)CO).f_initialize();	&#xD;
	}&#xD;
}&#xD;
&#xD;
// Removing this coop from the list of coops in the GC&#xD;
for (GridConnection GC : energyCoop.f_getAllChildMemberGridConnections()) {&#xD;
	GC.c_parentCoops.remove(energyCoop);&#xD;
	if(GC instanceof GCGridBattery &amp;&amp; GC.p_batteryAlgorithm instanceof J_BatteryManagementPeakShaving &amp;&amp; ((J_BatteryManagementPeakShaving)GC.p_batteryAlgorithm).getTargetType() == OL_ResultScope.ENERGYCOOP){&#xD;
		((J_BatteryManagementPeakShaving)GC.p_batteryAlgorithm).setTarget(null);&#xD;
		((J_BatteryManagementPeakShaving)GC.p_batteryAlgorithm).setTargetType( OL_ResultScope.ENERGYCOOP );&#xD;
		GC.f_setActive(false);&#xD;
	}&#xD;
}&#xD;
&#xD;
// Remove energyCoop from pop_energyCoops.&#xD;
remove_pop_energyCoops(energyCoop);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>EnergyCoop</ReturnType>
						<Id>1740056275008</Id>
						<Name>f_addConsumptionEnergyCarrier</Name>
						<X>1680</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>EC</Name>
							<Type>OL_EnergyCarriers</Type>
						</Parameter>
						<Body>v_activeEnergyCarriers.add(EC);&#xD;
v_activeConsumptionEnergyCarriers.add(EC);&#xD;
&#xD;
DataSet dsDemand = new DataSet( (int)(168 / p_timeStep_h) );&#xD;
&#xD;
double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
for (double t = startTime; t &lt;= endTime; t += p_timeStep_h) {&#xD;
	dsDemand.add( t, 0);&#xD;
}&#xD;
v_liveData.dsm_liveDemand_kW.put( EC, dsDemand);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741622740564</Id>
						<Name>f_rapidRunDataLogging</Name>
						<X>677</X>
						<Y>321</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Further Subdivision of asset types within energy carriers&#xD;
double v_fixedConsumptionElectric_kW = sum(c_gridConnections, x-&gt;x.v_fixedConsumptionElectric_kW);&#xD;
double v_heatPumpElectricityConsumption_kW = sum(c_gridConnections, x-&gt;x.v_heatPumpElectricityConsumption_kW);&#xD;
double v_evChargingPowerElectric_kW = sum(c_gridConnections, x-&gt;max(0,x.v_evChargingPowerElectric_kW));&#xD;
double currentBatteriesConsumption_kW = sum(c_gridConnections, x-&gt;max(0,x.v_batteryPowerElectric_kW));&#xD;
double v_hydrogenElectricityConsumption_kW = sum(c_gridConnections, x-&gt;x.v_hydrogenElectricityConsumption_kW);&#xD;
double v_electricHobConsumption_kW = sum(c_gridConnections, x-&gt;x.v_electricHobConsumption_kW);&#xD;
double v_districtHeatDelivery_kW = sum(c_gridConnections, x-&gt;x.v_districtHeatDelivery_kW);&#xD;
&#xD;
double v_pvProductionElectric_kW = sum(c_gridConnections, x-&gt;x.v_pvProductionElectric_kW);&#xD;
double v_windProductionElectric_kW = sum(c_gridConnections, x-&gt;x.v_windProductionElectric_kW);&#xD;
double v_ptProductionHeat_kW = sum(c_gridConnections, x-&gt;x.v_ptProductionHeat_kW);&#xD;
double currentBatteriesProduction_kW = sum(c_gridConnections, x-&gt;max(0,-x.v_batteryPowerElectric_kW));&#xD;
double currentV2GProduction_kW = sum(c_gridConnections, x-&gt; max(0, -x.v_evChargingPowerElectric_kW));&#xD;
double v_CHPProductionElectric_kW = sum(c_gridConnections, x-&gt;x.v_CHPProductionElectric_kW);&#xD;
&#xD;
double currentStoredEnergyBatteries_MWh = sum(c_gridConnections, x-&gt;x.v_batteryStoredEnergy_kWh)/1000;&#xD;
&#xD;
//v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) / p_contractedDeliveryCapacity_kW ));&#xD;
&#xD;
//double currentImport_kW = 0.0;&#xD;
//double currentExport_kW = 0.0;&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
	double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
	//currentImport_kW += max( 0, currentBalance_kW );&#xD;
	//currentExport_kW += max( 0, -currentBalance_kW );&#xD;
	v_rapidRunData.am_totalBalanceAccumulators_kW.get(EC).addStep(  currentBalance_kW );&#xD;
}&#xD;
&#xD;
// Daytime totals. Use overal-total minus daytime total to get nighttime totals.&#xD;
if(b_isDaytime) { &#xD;
	&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
		&#xD;
		if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
		}&#xD;
		if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_daytimeElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_daytimeElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );	&#xD;
	v_rapidRunData.acc_daytimeEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_daytimeFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);	&#xD;
	v_rapidRunData.acc_daytimePrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
&#xD;
}&#xD;
&#xD;
// Weekend totals. Use overal-totals minus weekend totals to get weekday totals.&#xD;
if (!b_isWeekday) { // &#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
		if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_weekendImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
		}&#xD;
		if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_weekendExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_weekendElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_weekendFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_weekendPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
&#xD;
}&#xD;
&#xD;
&#xD;
//========== SUMMER WEEK ==========//&#xD;
if (b_isSummerWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
			&#xD;
	v_rapidRunData.acc_summerWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.physicalCapacity_kW );&#xD;
	v_rapidRunData.acc_summerWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.physicalCapacity_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesConsumption_kW.addStep( currentBatteriesConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_summerWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );	&#xD;
	v_rapidRunData.acc_summerWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesProduction_kW.addStep( currentBatteriesProduction_kW );&#xD;
	v_rapidRunData.acc_summerWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
&#xD;
	v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.addStep(currentStoredEnergyBatteries_MWh);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep(currentStoredEnergyBatteries_MWh/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}&#xD;
	else{&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}&#xD;
}&#xD;
&#xD;
//========== WINTER WEEK ==========// &#xD;
if (b_isWinterWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_winterWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.physicalCapacity_kW );&#xD;
	v_rapidRunData.acc_winterWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.physicalCapacity_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesConsumption_kW.addStep(currentBatteriesConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_winterWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );	&#xD;
	v_rapidRunData.acc_winterWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesProduction_kW.addStep( currentBatteriesProduction_kW );&#xD;
	v_rapidRunData.acc_winterWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
&#xD;
	v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.addStep(currentStoredEnergyBatteries_MWh);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep(currentStoredEnergyBatteries_MWh/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}		&#xD;
	else{&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//========== TOTALS / DAILY AVERAGES ==========//&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
}&#xD;
v_rapidRunData.acc_dailyAverageEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
v_rapidRunData.acc_dailyAverageFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
v_rapidRunData.acc_totalEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
v_rapidRunData.acc_totalPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);&#xD;
&#xD;
v_rapidRunData.acc_dailyAverageBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesConsumption_kW.addStep( currentBatteriesConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
v_rapidRunData.acc_dailyAverageDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
&#xD;
v_rapidRunData.acc_dailyAveragePVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAveragePTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
v_rapidRunData.acc_dailyAverageV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesProduction_kW.addStep( currentBatteriesProduction_kW );&#xD;
v_rapidRunData.acc_dailyAverageCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
&#xD;
v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.addStep(currentStoredEnergyBatteries_MWh);&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep(currentStoredEnergyBatteries_MWh/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
}&#xD;
else{&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep(0);	&#xD;
}	&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1741710906926</Id>
						<Name>f_updateActiveAssetsMetaData</Name>
						<X>80</X>
						<Y>950</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
//Update main area&#xD;
v_liveAssetsMetaData.updateActiveAssetData(f_getActiveGridConnections());&#xD;
&#xD;
//Update coop&#xD;
if(pop_energyCoops.size()&gt;0){&#xD;
	pop_energyCoops.get(pop_energyCoops.size()-1).v_liveAssetsMetaData.updateActiveAssetData(pop_energyCoops.get(pop_energyCoops.size()-1).f_getAllChildMemberGridConnections());&#xD;
}	&#xD;
&#xD;
//Update grid connection active asset data&#xD;
for(GridConnection GC : f_getActiveGridConnections()){&#xD;
	GC.v_liveAssetsMetaData.updateActiveAssetData(new ArrayList&lt;&gt;(List.of(GC)));&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>EnergyCoop</ReturnType>
						<Id>1746021439807</Id>
						<Name>f_addProductionEnergyCarrier</Name>
						<X>1680</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>EC</Name>
							<Type>OL_EnergyCarriers</Type>
						</Parameter>
						<Body>v_activeEnergyCarriers.add(EC);&#xD;
v_activeProductionEnergyCarriers.add(EC);&#xD;
&#xD;
DataSet dsSupply = new DataSet( (int)(168 / p_timeStep_h) );&#xD;
double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
for (double t = startTime; t &lt;= endTime; t += p_timeStep_h) {&#xD;
	dsSupply.add( t, 0);&#xD;
}&#xD;
v_liveData.dsm_liveSupply_kW.put( EC, dsSupply);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751294470738</Id>
						<Name>f_updateLiveData1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>910</X>
						<Y>-140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Current time&#xD;
double currentTime_h = t_h-p_runStartTime_h;&#xD;
&#xD;
//Energy carrier flows&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, fm_currentConsumptionFlows_kW.get(EC) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, fm_currentProductionFlows_kW.get(EC) );&#xD;
}&#xD;
&#xD;
//Totals&#xD;
v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, sum(c_gridNodesTopLevel.stream().filter(x -&gt; x.p_energyCarrier == OL_EnergyCarriers.ELECTRICITY).toList(), x -&gt; x.v_currentLoad_kW));&#xD;
&#xD;
//Grid capacity&#xD;
v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.physicalCapacity_kW);&#xD;
&#xD;
////Specific assets&#xD;
&#xD;
//Demand&#xD;
&#xD;
//Base load electricity&#xD;
v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, sum(c_gridConnections, x-&gt;x.v_fixedConsumptionElectric_kW));&#xD;
&#xD;
//Heatpump consumption (electric)&#xD;
v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, sum(c_gridConnections, x-&gt;x.v_heatPumpElectricityConsumption_kW));&#xD;
&#xD;
//Hydrogen electricity consumption&#xD;
v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, sum(c_gridConnections, x-&gt;x.v_hydrogenElectricityConsumption_kW));&#xD;
&#xD;
//EV chargings&#xD;
v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, sum(c_gridConnections, x -&gt; max(0,x.v_evChargingPowerElectric_kW)));&#xD;
&#xD;
//Battery charging&#xD;
v_liveData.data_batteryCharging_kW.add(currentTime_h, sum(c_gridConnections, x -&gt; max(0, x.v_batteryPowerElectric_kW)));&#xD;
&#xD;
//Electric Cooking &#xD;
v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, sum(c_gridConnections, x-&gt; x.v_electricHobConsumption_kW));&#xD;
&#xD;
//District heating&#xD;
v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, sum(c_gridConnections, x -&gt; x.v_districtHeatDelivery_kW));&#xD;
&#xD;
//Supply&#xD;
&#xD;
//PV&#xD;
v_liveData.data_PVGeneration_kW.add(currentTime_h, sum(c_gridConnections, x-&gt;x.v_pvProductionElectric_kW));&#xD;
&#xD;
//Wind&#xD;
v_liveData.data_windGeneration_kW.add(currentTime_h, sum(c_gridConnections,x-&gt;x.v_windProductionElectric_kW));&#xD;
&#xD;
//Battery discharge&#xD;
v_liveData.data_batteryDischarging_kW.add(currentTime_h, sum(c_gridConnections, x -&gt; max(0, -x.v_batteryPowerElectric_kW)));&#xD;
&#xD;
//V2G&#xD;
v_liveData.data_V2GSupply_kW.add(currentTime_h, sum(c_gridConnections,x-&gt;max(0,-x.v_evChargingPowerElectric_kW)));&#xD;
&#xD;
//CHP&#xD;
v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, sum(c_gridConnections,x-&gt;x.v_CHPProductionElectric_kW));&#xD;
&#xD;
//Other&#xD;
&#xD;
//Battery storage&#xD;
double currentBatteryStoredEnergy_MWh = sum(c_gridConnections, x-&gt;x.v_batteryStoredEnergy_kWh/1000);&#xD;
v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, currentBatteryStoredEnergy_MWh);&#xD;
&#xD;
double currentSOC = 0;&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	currentSOC = currentBatteryStoredEnergy_MWh/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
v_liveData.data_batterySOC_fr.add(currentTime_h, currentSOC);&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751886925823</Id>
						<Name>f_updateAmbientDependentAssets</Name>
						<X>700</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Update environmental conditions for relevant energy assets&#xD;
for( J_EA e : c_ambientDependentAssets ) {&#xD;
	if( e instanceof J_EAStorageHeat) { // includes J_EABuilding&#xD;
		switch(((J_EAStorageHeat) e).getAmbientTempType()){&#xD;
			case FIXED:&#xD;
				//Do nothing, use preset ambient temp&#xD;
				break;&#xD;
			case AMBIENT_AIR:&#xD;
				((J_EAStorageHeat)e).updateAmbientTemperature( v_currentAmbientTemperature_degC );&#xD;
				break;&#xD;
			case BUILDING:&#xD;
				new RuntimeException("AmbientTempType 'BUILDING' is not supported yet for J_EAStorageHeat!");&#xD;
				/*&#xD;
				GridConnection parentGC = (GridConnection)e.getParentAgent();&#xD;
				if(parentGC.p_BuildingThermalAsset == null){&#xD;
					new RuntimeException("GC has heat storage with AmbientTempType 'Building', with no J_EABuilding present");&#xD;
				}&#xD;
				else{&#xD;
					((J_EAStorageHeat)e).updateAmbientTemperature(parentGC.p_BuildingThermalAsset.getCurrentTemperature());&#xD;
				}&#xD;
				*/&#xD;
				break;&#xD;
			case HEAT_GRID:&#xD;
				// Do Nothing, keep fixed temp for now&#xD;
				//new RuntimeException("AmbientTempType 'HEAT_GRID' is not supported yet for J_EAStorageHeat!");&#xD;
				break;&#xD;
			case HEAT_STORAGE:&#xD;
				new RuntimeException("AmbientTempType 'HEAT_STORAGE' is not supported yet for J_EAStorageHeat!");&#xD;
				break;&#xD;
		}	&#xD;
	}&#xD;
	if (e instanceof J_EAConversionHeatPump) {&#xD;
			switch(((J_EAConversionHeatPump) e).getAmbientTempType()){&#xD;
			case FIXED:&#xD;
				//Do nothing, use preset ambient temp&#xD;
				break;&#xD;
			case AMBIENT_AIR:&#xD;
				((J_EAConversionHeatPump)e).updateAmbientTemperature( v_currentAmbientTemperature_degC );&#xD;
				break;&#xD;
			case BUILDING:&#xD;
				new RuntimeException("AmbientTempType 'BUILDING' is not supported yet for J_EAConversionHeatPump!");&#xD;
				/*&#xD;
				GridConnection parentGC = (GridConnection)e.getParentAgent();&#xD;
				if(parentGC.p_BuildingThermalAsset == null){&#xD;
					new RuntimeException("GC has heatpump with AmbientTempType 'Building', with no J_EABuilding present");&#xD;
				}&#xD;
				else{&#xD;
					((J_EAConversionHeatPump)e).updateAmbientTemperature(parentGC.p_BuildingThermalAsset.getCurrentTemperature());&#xD;
				}&#xD;
				*/&#xD;
				break;&#xD;
			case HEAT_GRID:&#xD;
				new RuntimeException("AmbientTempType 'HEAT_GRID' is not supported yet for J_EAConversionHeatPump!");&#xD;
				break;&#xD;
			case HEAT_STORAGE:&#xD;
				new RuntimeException("AmbientTempType 'HEAT_STORAGE' is not supported yet for J_EAConversionHeatPump!");&#xD;
				break;&#xD;
			}		&#xD;
	}&#xD;
	if( e instanceof J_EABuilding ) {&#xD;
		((J_EABuilding)e).updateSolarRadiation(v_currentSolarPowerNormalized_r*1000);&#xD;
	}&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1658477103135</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1696520909218</Id>
						<Name>connections1</Name>
						<X>40</X>
						<Y>-180</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<EmbeddedObjects>
					<EmbeddedObject>
						<Id>1658477403183</Id>
						<Name>pop_gridNodes</Name>
						<X>380</X>
						<Y>50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GridNode</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GridNode</ClassName>
								<ItemName>1658477288306</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridNodeID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeID</Name>
							</Parameter>
							<Parameter>
								<Name>p_nodeType</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyCarrier</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_transportBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerGridOperator</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridNodeOwnerID</Name>
							</Parameter>
							<Parameter>
								<Name>b_transportBufferValid</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>gisRegion</Name>
							</Parameter>
							<Parameter>
								<Name>p_description</Name>
							</Parameter>
							<Parameter>
								<Name>p_realCapacityAvailable</Name>
							</Parameter>
							<Parameter>
								<Name>p_nodeStatus</Name>
							</Parameter>
							<Parameter>
								<Name>p_uniqueColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_localNodalPricingFactor_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultFillColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_localNodalPricingTreshold_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_originalCapacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_hasProfileData</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089986</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1658477403184</Id>
						<Name>pop_gridConnections</Name>
						<X>90</X>
						<Y>45</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GridConnection</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GridConnection</ClassName>
								<ItemName>1658499438201</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089985</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1658499722957</Id>
						<Name>energyDataViewer</Name>
						<X>377</X>
						<Y>362</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyDataViewer</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>EnergyDataViewer</ClassName>
								<ItemName>1705600400160</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_areaType</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>0</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089984</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1658752704931</Id>
						<Name>pop_subTenants</Name>
						<Description>Optionele visualisatie-agent met eenvoudige visuals voor model inspectie, monitoring en debugging. Kan aangezet worden met de parameter b_addKpiVisuals, maar model draait ook zonder.

@since: Sprint 6
@author: Jorrit</Description>
						<X>90</X>
						<Y>450</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>A_SubTenant</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>A_SubTenant</ClassName>
								<ItemName>1658752695709</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_mainTenantID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_connectedGridConnection</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089983</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660730126216</Id>
						<Name>pop_connectionOwners</Name>
						<X>90</X>
						<Y>350</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>ConnectionOwner</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>ConnectionOwner</ClassName>
								<ItemName>1660224852392</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_coopParent</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorContractList</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacityTariffApplicable</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacityPrice_eur</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacityLevel_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_congestionTariffApplicable</Name>
							</Parameter>
							<Parameter>
								<Name>p_connectionCapacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_electricitySupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_nfatoStart_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_nfatoEnd_h</Name>
							</Parameter>
							<Parameter>
								<Name>p_nfatoLvl_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridOperator</Name>
							</Parameter>
							<Parameter>
								<Name>p_methaneSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_hydrogenSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_connectionOwnerType</Name>
							</Parameter>
							<Parameter>
								<Name>p_connectionOwnerIndexNr</Name>
							</Parameter>
							<Parameter>
								<Name>p_detailedCompany</Name>
							</Parameter>
							<Parameter>
								<Name>b_hasPrivateUI</Name>
							</Parameter>
							<Parameter>
								<Name>p_energySupplierID</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyCoopID</Name>
							</Parameter>
							<Parameter>
								<Name>b_dataSharingAgreed</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089982</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660731786332</Id>
						<Name>pop_energySuppliers</Name>
						<X>90</X>
						<Y>370</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergySupplier</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>EnergySupplier</ClassName>
								<ItemName>1660731377982</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentActorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentActor</Name>
							</Parameter>
							<Parameter>
								<Name>p_fixedElectricityPrice_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_fixedHeatPrice_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_fixedMethanePrice_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_fixedHydrogenPrice_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_variableElectricityPriceOverNational_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_fixedFeedinTariff_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_salderenActive</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089981</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660731820965</Id>
						<Name>pop_energyCoops</Name>
						<X>90</X>
						<Y>390</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyCoop</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>EnergyCoop</ClassName>
								<ItemName>1660731375014</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_actorContractList</Name>
							</Parameter>
							<Parameter>
								<Name>p_connectionCapacity_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridNodeUnderResponsibility</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentActorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_electricitySupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_CoopParent</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridOperator</Name>
							</Parameter>
							<Parameter>
								<Name>p_methaneSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_hydrogenSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatSupplier</Name>
							</Parameter>
							<Parameter>
								<Name>p_yearlyOperationalCosts_eur</Name>
							</Parameter>
							<Parameter>
								<Name>p_applyKostprijsPlus</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089980</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660731850501</Id>
						<Name>pop_gridOperators</Name>
						<X>90</X>
						<Y>430</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GridOperator</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GridOperator</ClassName>
								<ItemName>1660731380913</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentActorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentActor</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacitypricing_households_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_capacitypricing_households_eur</Name>
							</Parameter>
							<Parameter>
								<Name>p_hasCapacityPricing</Name>
							</Parameter>
							<Parameter>
								<Name>p_hasCongestionPricing</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>1</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089979</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660731876775</Id>
						<Name>nationalEnergyMarket</Name>
						<X>90</X>
						<Y>590</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>NationalEnergyMarket</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>NationalEnergyMarket</ClassName>
								<ItemName>1660731384413</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>false</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialSpeedCode Class="CodeUnitValue">
							<Code>0</Code>
							<Unit Class="SpeedUnits">MPS</Unit>
						</InitialSpeedCode>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>SPECIFIED_NUMBER</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089978</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1660731999276</Id>
						<Name>pop_governmentLayer</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>90</X>
						<Y>410</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GovernmentLayer</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GovernmentLayer</ClassName>
								<ItemName>1660731364523</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_actorID</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorType</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorSubgroup</Name>
							</Parameter>
							<Parameter>
								<Name>p_actorGroup</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089977</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1663772677806</Id>
						<Name>Houses</Name>
						<X>90</X>
						<Y>65</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCHouse</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCHouse</ClassName>
								<ItemName>1663772408665</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_minEVChargeTarget_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_householdEV</Name>
							</Parameter>
							<Parameter>
								<Name>p_minChargingPower_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_smartChargingPowerAttenuation_fr</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_hasElectricHob</Name>
							</Parameter>
							<Parameter>
								<Name>p_smartHeatingEnabled</Name>
							</Parameter>
							<Parameter>
								<Name>p_pricelevelLowDifFromAvg_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_pricelevelHighDifFromAvg_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingKickinTreshold_degC</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_bouwjaar</Name>
							</Parameter>
							<Parameter>
								<Name>p_hasAdditionalInsulation</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_eigenOprit</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingMethod</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_airco</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089976</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1663774441970</Id>
						<Name>DistrictHeatingSystems</Name>
						<X>90</X>
						<Y>105</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCDistrictHeating</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCDistrictHeating</ClassName>
								<ItemName>1663773810343</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_residualHeatLTSource</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHheatStorage</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089975</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1663774461816</Id>
						<Name>EnergyProductionSites</Name>
						<X>90</X>
						<Y>145</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCEnergyProduction</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCEnergyProduction</ClassName>
								<ItemName>1663773842877</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_isSliderGC</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089974</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1663774484695</Id>
						<Name>EnergyConversionSites</Name>
						<X>90</X>
						<Y>185</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCEnergyConversion</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCEnergyConversion</ClassName>
								<ItemName>1663773857866</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_conversionEfficiency</Name>
							</Parameter>
							<Parameter>
								<Name>p_productionNominal_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_conversionEfficiencyFC</Name>
							</Parameter>
							<Parameter>
								<Name>p_productionNominalFC_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_productionMinimumFC_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_powerNominalFC_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyProductionNominalFC_kWh_Nm3</Name>
							</Parameter>
							<Parameter>
								<Name>p_inputPressureFC_Bar</Name>
							</Parameter>
							<Parameter>
								<Name>p_loadChangeTimeMinMaxFC_s</Name>
							</Parameter>
							<Parameter>
								<Name>p_startUpTimeIdleFC_s</Name>
							</Parameter>
							<Parameter>
								<Name>p_startUpTimeShutdownFC_s</Name>
							</Parameter>
							<Parameter>
								<Name>p_electricityPriceMinForProfitFC_eurpkWh</Name>
							</Parameter>
							<Parameter>
								<Name>p_minProductionRatio</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>b_forecast_lastWeekBased</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089973</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1663774484696</Id>
						<Name>UtilityConnections</Name>
						<X>90</X>
						<Y>165</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCUtility</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCUtility</ClassName>
								<ItemName>1672138285225</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089972</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1665480562790</Id>
						<Name>Industries</Name>
						<X>90</X>
						<Y>85</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCIndustry</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCIndustry</ClassName>
								<ItemName>1665480522862</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089971</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1666957373353</Id>
						<Name>GridBatteries</Name>
						<X>90</X>
						<Y>125</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCGridBattery</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCGridBattery</ClassName>
								<ItemName>1666956363817</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_isSliderGC</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089970</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1676382641979</Id>
						<Name>pop_GIS_Buildings</Name>
						<X>377</X>
						<Y>422</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GIS_Building</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GIS_Building</ClassName>
								<ItemName>1676382560900</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_status</Name>
							</Parameter>
							<Parameter>
								<Name>p_useType</Name>
							</Parameter>
							<Parameter>
								<Name>p_buildingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_buildingYear</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_floors</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_pandcluster_nr</Name>
							</Parameter>
							<Parameter>
								<Name>p_uniek_pand</Name>
							</Parameter>
							<Parameter>
								<Name>p_pand_nr</Name>
							</Parameter>
							<Parameter>
								<Name>p_pandNaam</Name>
							</Parameter>
							<Parameter>
								<Name>gisRegion</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISObjectType</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISRegion_coords</Name>
							</Parameter>
							<Parameter>
								<Name>p_id</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultFillColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineWidth</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineStyle</Name>
							</Parameter>
							<Parameter>
								<Name>p_pandNaam</Name>
							</Parameter>
							<Parameter>
								<Name>p_annotation</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089969</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1676382641980</Id>
						<Name>pop_GIS_Objects</Name>
						<X>377</X>
						<Y>382</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GIS_Object</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GIS_Object</ClassName>
								<ItemName>1667726338855</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>gisRegion</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISObjectType</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISRegion_coords</Name>
							</Parameter>
							<Parameter>
								<Name>p_id</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultFillColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineWidth</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineStyle</Name>
							</Parameter>
							<Parameter>
								<Name>p_annotation</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089968</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1676382641981</Id>
						<Name>pop_GIS_Parcels</Name>
						<X>377</X>
						<Y>400</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GIS_Parcel</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GIS_Parcel</ClassName>
								<ItemName>1660572036694</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>gisRegion</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISObjectType</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISRegion_coords</Name>
							</Parameter>
							<Parameter>
								<Name>p_id</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultFillColor</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineWidth</Name>
							</Parameter>
							<Parameter>
								<Name>p_defaultLineStyle</Name>
							</Parameter>
							<Parameter>
								<Name>p_annotation</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089967</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1717960182623</Id>
						<Name>PublicChargers</Name>
						<X>90</X>
						<Y>205</Y>
						<Label>
							<X>16</X>
							<Y>1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCPublicCharger</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCPublicCharger</ClassName>
								<ItemName>1717956409512</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gisregion</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbOfChargers</Name>
							</Parameter>
							<Parameter>
								<Name>p_maxChargingPower_kW</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingVehicleType</Name>
							</Parameter>
							<Parameter>
								<Name>p_CPOName</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_isInitialCharger</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingProfileName</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_isInitialCharger1</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingProfileName1</Name>
							</Parameter>
							<Parameter>
								<Name>chargingSessionSocket1</Name>
							</Parameter>
							<Parameter>
								<Name>chargingSessionSocket2</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargerAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_isChargingCentre</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089966</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
					<EmbeddedObject>
						<Id>1718797587108</Id>
						<Name>Neighborhoods</Name>
						<X>90</X>
						<Y>226</Y>
						<Label>
							<X>15</X>
							<Y>-1</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>GCNeighborhood</ClassName>
						</ActiveObjectClass>
						<GenericParameterSubstitute>
							<GenericParameterSubstituteReference>
								<PackageName>zero_engine</PackageName>
								<ClassName>GCNeighborhood</ClassName>
								<ItemName>1718724980089</ItemName>
							</GenericParameterSubstituteReference>
						</GenericParameterSubstitute>
						<Parameters>
							<Parameter>
								<Name>p_gridConnectionCategory</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionType</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectricID</Name>
							</Parameter>
							<Parameter>
								<Name>p_gridConnectionID</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeatID</Name>
							</Parameter>
							<Parameter>
								<Name>p_BuildingThermalAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_ownerID</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingType</Name>
							</Parameter>
							<Parameter>
								<Name>p_chargingAttitudeVehicles</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_electrolyserOperationMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_gasBuffer</Name>
							</Parameter>
							<Parameter>
								<Name>p_cookingTracker</Name>
							</Parameter>
							<Parameter>
								<Name>p_energyLabel</Name>
							</Parameter>
							<Parameter>
								<Name>p_DHWAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_longitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_latitude</Name>
							</Parameter>
							<Parameter>
								<Name>p_floorSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_GISPoint</Name>
							</Parameter>
							<Parameter>
								<Name>p_owner</Name>
							</Parameter>
							<Parameter>
								<Name>p_roofSurfaceArea_m2</Name>
							</Parameter>
							<Parameter>
								<Name>p_purposeBAG</Name>
							</Parameter>
							<Parameter>
								<Name>p_name</Name>
							</Parameter>
							<Parameter>
								<Name>p_curtailmentMode</Name>
							</Parameter>
							<Parameter>
								<Name>p_thresholdCOP_hybridHeatpump</Name>
							</Parameter>
							<Parameter>
								<Name>p_address</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbCompaniesTotal</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbHouseholds</Name>
							</Parameter>
							<Parameter>
								<Name>p_municipalityCode</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbServices</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbIndustry</Name>
							</Parameter>
							<Parameter>
								<Name>p_nbAgriculture</Name>
							</Parameter>
							<Parameter>
								<Name>p_ignoreGridCapacityBattery</Name>
							</Parameter>
							<Parameter>
								<Name>p_chpAsset</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeHeat</Name>
							</Parameter>
							<Parameter>
								<Name>p_parentNodeElectric</Name>
							</Parameter>
							<Parameter>
								<Name>p_heatingManagement</Name>
							</Parameter>
							<Parameter>
								<Name>p_batteryAlgorithm</Name>
							</Parameter>
						</Parameters>
						<ReplicationFlag>true</ReplicationFlag>
						<Replication Class="CodeValue">
							<Code>100</Code>
						</Replication>
						<CollectionType>ARRAY_LIST_BASED</CollectionType>
						<InEnvironment>true</InEnvironment>
						<InitialLocationType>XYZ</InitialLocationType>
						<XCode Class="CodeValue">
							<Code>0</Code>
						</XCode>
						<YCode Class="CodeValue">
							<Code>0</Code>
						</YCode>
						<ZCode Class="CodeValue">
							<Code>0</Code>
						</ZCode>
						<ColumnCode Class="CodeValue">
							<Code>0</Code>
						</ColumnCode>
						<RowCode Class="CodeValue">
							<Code>0</Code>
						</RowCode>
						<LocationNameCode Class="CodeValue">
							<Code>""</Code>
						</LocationNameCode>
						<InitializationType>EMPTY</InitializationType>
						<InitializationDatabaseTableQuery>
							<Id>1658477089965</Id>
							<TableReference/>
						</InitializationDatabaseTableQuery>
						<InitializationDatabaseType>ONE_AGENT_PER_DATABASE_RECORD</InitializationDatabaseType>
						<QuantityColumn/>
					</EmbeddedObject>
				</EmbeddedObjects>
				<Presentation>
					<Level>
						<Id>1658477103139</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1665052211228</Id>
								<Name>rect_parametersAndProfiles</Name>
								<X>-880</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>780</Width>
								<Height>350</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1659709739366</Id>
								<Name>txt_Profiles</Name>
								<X>-861</X>
								<Y>45</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Profiles:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1659709765242</Id>
								<Name>text1</Name>
								<X>-411</X>
								<Y>49</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Parameters:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1665052264314</Id>
								<Name>rect_output</Name>
								<X>-500</X>
								<Y>480</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-3308225</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>400</Width>
								<Height>520</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1665052603927</Id>
								<Name>rectangle2</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>-880</X>
								<Y>0</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16744448</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>359</Width>
								<Height>39</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1665052191319</Id>
								<Name>text3</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>-850</X>
								<Y>9</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16744448</Color>
								<Text>Parameters and generic profiles/data</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1665052678662</Id>
								<Name>rect_output1</Name>
								<X>-500</X>
								<Y>480</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-3308225</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>149</Width>
								<Height>40</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1665052678664</Id>
								<Name>txt_output</Name>
								<X>-465</X>
								<Y>487</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-3308225</Color>
								<Text>Output
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1668602188368</Id>
								<Name>text4</Name>
								<X>80</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Gridconnections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1668602188372</Id>
								<Name>line2</Name>
								<X>60</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1668602207232</Id>
								<Name>text6</Name>
								<X>420</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Infra &amp; assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1668602207235</Id>
								<Name>line3</Name>
								<X>360</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>180</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1668602284894</Id>
								<Name>line4</Name>
								<X>60</X>
								<Y>330</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1668602284900</Id>
								<Name>text7</Name>
								<X>130</X>
								<Y>310</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Actors</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1668602384222</Id>
								<Name>line5</Name>
								<X>60</X>
								<Y>560</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1668602384225</Id>
								<Name>text8</Name>
								<X>150</X>
								<Y>540</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Other populations</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Line>
								<Id>1668602513058</Id>
								<Name>line6</Name>
								<X>1204</X>
								<Y>29</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>460</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1668602513060</Id>
								<Name>text9</Name>
								<X>1384</X>
								<Y>9</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Variables</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1671703651139</Id>
								<Name>line7</Name>
								<X>937</X>
								<Y>530</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1671703651141</Id>
								<Name>text10</Name>
								<X>1027</X>
								<Y>360</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Forecasts</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Line>
								<Id>1690205003572</Id>
								<Name>line8</Name>
								<X>677</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>430</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1690205003577</Id>
								<Name>text11</Name>
								<X>887</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Simulation engine</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Line>
								<Id>1693309354364</Id>
								<Name>line9</Name>
								<X>361</X>
								<Y>340</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>180</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1693309354506</Id>
								<Name>text13</Name>
								<X>387</X>
								<Y>322</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>UI &amp; Visualisation agents</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1697557019965</Id>
								<Name>rapidSimButton</Name>
								<X>947</X>
								<Y>170</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>f_runRapidSimulation();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>Run Rapid Simulation</LabelText>
								</ExtendedProperties>
							</Control>
							<Line>
								<Id>1716890105093</Id>
								<Name>line10</Name>
								<X>1340</X>
								<Y>500</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1716890105095</Id>
								<Name>text12</Name>
								<X>1430</X>
								<Y>480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Getters</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1729238026851</Id>
								<Name>t_selectedEnergyCarriers</Name>
								<X>1040</X>
								<Y>508</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Energy Carriers</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Line>
								<Id>1729238050157</Id>
								<Name>line_selectedEnergyCarriers</Name>
								<X>940</X>
								<Y>378</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1739958834681</Id>
								<Name>line11</Name>
								<X>1660</X>
								<Y>500</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>190</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1739958834683</Id>
								<Name>text14</Name>
								<X>1750</X>
								<Y>480</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Adders</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1741856477946</Id>
								<Name>button_viewData</Name>
								<X>220</X>
								<Y>-60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>energyDataViewer.f_fillEnergyDataViewer(this);
energyDataViewer.viewArea.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>View Data</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1749205921716</Id>
								<Name>txt_Forecasters</Name>
								<X>-860</X>
								<Y>192</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Forecasters:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1751294480528</Id>
								<Name>rect_save</Name>
								<X>890</X>
								<Y>-180</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>190</Width>
								<Height>60</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1751294487833</Id>
								<Name>txt_save</Name>
								<X>900</X>
								<Y>-170</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Bewaren (neg dataset bug)</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
					<Level>
						<Id>1699290897134</Id>
						<Name>level1</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1696520909213</Id>
						<Name>va_engine</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660731377984</Id>
				<Name>EnergySupplier</Name>
				<Folder>1752677829820</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660731377982</Id>
					<Name>1660731377982</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089964</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660731377980</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660731377983</CurrentLevel>
				<ConnectionsId>1660731377979</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1660746837357</Id>
						<Name>v_currentVariableElectricityPrice_eurpkWh</Name>
						<X>70</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660752591616</Id>
						<Name>v_currentBalanceClients_eur</Name>
						<Description>Bank account balance for all energy carriers traded with clients.

@author: Gillis
@since: Sprint 6</Description>
						<X>70</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660804951335</Id>
						<Name>v_totalElectricitySoldToClients_kWh</Name>
						<X>70</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660804979322</Id>
						<Name>v_totalElectricityBoughtFromClients_kWh</Name>
						<X>70</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660805212026</Id>
						<Name>v_currentBalanceNat_eur</Name>
						<X>70</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660805212029</Id>
						<Name>v_totalElectricitySoldToNat_kWh</Name>
						<X>70</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660805212031</Id>
						<Name>v_totalElectricityBoughtFromNat_kWh</Name>
						<X>70</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1660810211679</Id>
						<Name>v_currentNettElectricityVolume_kWh</Name>
						<X>70</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661173036699</Id>
						<Name>v_currentBalanceElectricityClients_eur</Name>
						<Description>Bank account balance for electricity traded with clients.

@author: Jorrit
@since: Sprint 6</Description>
						<X>70</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661173058952</Id>
						<Name>v_currentBalanceHeatClients_eur</Name>
						<Description>Bank account balance for heat traded with clients.

@author: Jorrit
@since: Sprint 6</Description>
						<X>70</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661173096820</Id>
						<Name>v_currentBalanceMethaneClients_eur</Name>
						<Description>Bank account balance for methane
@author: Jorrit
@since: Sprint 6</Description>
						<X>70</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1661174191671</Id>
						<Name>v_currentBalanceHydrogenClients_eur</Name>
						<Description>Bank account balance for hydrogen traded with clients.

@author: Jorrit
@since: Sprint 6</Description>
						<X>70</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675335068922</Id>
						<Name>j_ActorData</Name>
						<X>70</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ActorData</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736336144</Id>
						<Name>p_actorID</Name>
						<Description>Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736336142</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736336147</Id>
						<Name>p_actorType</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-240</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736336145</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736336150</Id>
						<Name>p_parentActorID</Name>
						<Description>Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736336148</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736336153</Id>
						<Name>p_parentActor</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ConnectionOwner</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736336151</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660746260066</Id>
						<Name>p_fixedElectricityPrice_eurpkWh</Name>
						<X>300</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660746260064</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660746283321</Id>
						<Name>p_fixedHeatPrice_eurpkWh</Name>
						<X>300</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660746283319</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660746306858</Id>
						<Name>p_fixedMethanePrice_eurpkWh</Name>
						<X>300</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660746306856</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660746679056</Id>
						<Name>p_fixedHydrogenPrice_eurpkWh</Name>
						<X>300</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660746679054</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660746710965</Id>
						<Name>p_variableElectricityPriceOverNational_eurpkWh</Name>
						<X>300</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660746710963</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1667921811994</Id>
						<Name>p_fixedFeedinTariff_eurpkWh</Name>
						<X>300</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1667921811992</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1671620607517</Id>
						<Name>p_salderenActive</Name>
						<X>300</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1671620607515</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660736336138</Id>
						<Name>f_connectToChild</Name>
						<X>790</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>subConnections.connectTo(ConnectingChildNode);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660736336141</Id>
						<Name>f_connectToParentActor</Name>
						<Description>Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>780</X>
						<Y>-40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_parentActorID != null ) {&#xD;
	ConnectionOwner myParentActor = findFirst(main.pop_connectionOwners, p-&gt;p.p_actorID.equals(p_parentActorID)) ;&#xD;
	if( myParentActor instanceof ConnectionOwner) {&#xD;
		p_parentActor = myParentActor;&#xD;
		superConnection.connectTo(myParentActor);&#xD;
		myParentActor.f_connectToChild(this);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660743197178</Id>
						<Name>f_doEnergyTransaction</Name>
						<X>790</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>transactionVolume_kWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>contractType</Name>
							<Type>OL_ContractType</Type>
						</Parameter>
						<Body>double transactionCostClient_eur = 0;&#xD;
double transactionCostNat_eur = 0;&#xD;
/*switch (contractType) {&#xD;
	case ELECTRICITY_FIXED:&#xD;
			transactionCostClient_eur = transactionVolume_kWh * p_fixedElectricityPrice_eurpkWh;&#xD;
			transactionCostNat_eur = - transactionVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;&#xD;
			v_totalElectricitySoldToClients_kWh += max(0,transactionVolume_kWh);&#xD;
			v_totalElectricityBoughtFromClients_kWh -= min(0,transactionVolume_kWh);&#xD;
			v_currentNettElectricityVolume_kWh += transactionVolume_kWh;&#xD;
			v_currentBalanceElectricityClients_eur += transactionCostClient_eur;&#xD;
		break;&#xD;
	case ELECTRICITY_VARIABLE:&#xD;
			transactionCostClient_eur = transactionVolume_kWh * (p_variableElectricityPriceOverNational_eurpkWh + v_currentVariableElectricityPrice_eurpkWh);&#xD;
			transactionCostNat_eur = - transactionVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;&#xD;
			v_currentBalanceElectricityClients_eur += transactionCostClient_eur;&#xD;
		break;&#xD;
	case HEAT_FIXED:&#xD;
			transactionCostClient_eur = transactionVolume_kWh * p_fixedHeatPrice_eurpkWh;&#xD;
			transactionCostNat_eur = - transactionVolume_kWh * 0;&#xD;
			v_currentBalanceHeatClients_eur += transactionCostClient_eur;&#xD;
		break;&#xD;
	case METHANE_FIXED:&#xD;
			transactionCostClient_eur = transactionVolume_kWh * p_fixedMethanePrice_eurpkWh;&#xD;
			transactionCostNat_eur = - transactionVolume_kWh * 0;&#xD;
			v_currentBalanceMethaneClients_eur += transactionCostClient_eur;&#xD;
		break;&#xD;
	case HYDROGEN_FIXED:&#xD;
			transactionCostClient_eur = transactionVolume_kWh * p_fixedHydrogenPrice_eurpkWh;&#xD;
			transactionCostNat_eur = - transactionVolume_kWh * 0;&#xD;
			v_currentBalanceHydrogenClients_eur += transactionCostClient_eur;&#xD;
		break;&#xD;
	default:&#xD;
		throw new IllegalStateException("Invalid contract type: " + contractType);&#xD;
}*/&#xD;
v_currentBalanceClients_eur += transactionCostClient_eur;&#xD;
return transactionCostClient_eur;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660746864022</Id>
						<Name>f_getVariableEnergyPrice</Name>
						<X>790</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return v_currentVariableElectricityPrice_eurpkWh;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660746926252</Id>
						<Name>f_updateEnergyPrice</Name>
						<X>790</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_currentVariableElectricityPrice_eurpkWh = energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000;&#xD;
v_currentNettElectricityVolume_kWh = 0;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660806140354</Id>
						<Name>f_updateFinances</Name>
						<X>790</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_totalElectricityBoughtFromNat_kWh += max(0,v_currentNettElectricityVolume_kWh);&#xD;
v_totalElectricitySoldToNat_kWh -= min(0,v_currentNettElectricityVolume_kWh);&#xD;
v_currentBalanceNat_eur -= v_currentNettElectricityVolume_kWh * v_currentVariableElectricityPrice_eurpkWh;</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1660731377979</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1660736386946</Id>
						<Name>superConnection</Name>
						<Description>Link naar bovenliggende actor, bijv. een Coop, of energySupplier. Gebruikt om lid te worden van een Coop of aangesloten te zijn bij een energieleverancier.

@since: Sprint 6
@author: Gillis</Description>
						<X>240</X>
						<Y>-70</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1660736386948</Id>
						<Name>subConnections</Name>
						<Description>Link naar onderliggende actor of netConnection. Gebruikt om actoren te linken aan netConnection objecten, of actoren aan actoren te linken (bijv. leden van de Coop)

@since: Sprint 6
@author: Gillis</Description>
						<X>240</X>
						<Y>-40</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660731790387</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660731377983</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Line>
								<Id>1667918539063</Id>
								<Name>line4</Name>
								<X>770</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667918539066</Id>
								<Name>text4</Name>
								<X>820</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667918539068</Id>
								<Name>line5</Name>
								<X>760</X>
								<Y>60</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>40</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667918539070</Id>
								<Name>text6</Name>
								<X>740</X>
								<Y>190</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Occuring</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667918539072</Id>
								<Name>line6</Name>
								<X>760</X>
								<Y>130</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>80</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667918539074</Id>
								<Name>text5</Name>
								<X>740</X>
								<Y>90</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Init</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919493893</Id>
								<Name>line</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>-270</X>
								<Y>50</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919493896</Id>
								<Name>text</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>-240</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>ID &amp; connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919510566</Id>
								<Name>line1</Name>
								<X>290</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>240</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919510568</Id>
								<Name>text1</Name>
								<X>380</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Fixed tariffs</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1663773810345</Id>
				<Name>GCDistrictHeating</Name>
				<AdditionalClassCode>/*&#xD;
@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateAssetsDistrictHeating();&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_connectToJ_EA(J_EA j_ea){&#xD;
	f_connectToJ_EA_default(j_ea);&#xD;
	f_connectToJ_EA_DistrictHeating(j_ea);&#xD;
}&#xD;
*/</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1663773810343</Id>
					<Name>1663773810343</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089963</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1663773810341</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1663773810344</CurrentLevel>
				<ConnectionsId>1663773810340</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1664534447977</Id>
						<Name>b_incentiveNationalPrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1664534582189</Id>
						<Name>b_incentiveGridNodePrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1664534594839</Id>
						<Name>b_incentiveCoopPrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>660</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666196152392</Id>
						<Name>v_bufferTemp_degC</Name>
						<X>520</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1677512160570</Id>
						<Name>b_residualHeatLTSource</Name>
						<X>520</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1678448870527</Id>
						<Name>v_chpElectricityPrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1120</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724252832488</Id>
						<Name>b_validLocalBuffer</Name>
						<X>520</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1677500555195</Id>
						<Name>p_residualHeatLTSource</Name>
						<X>480</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAProduction</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1677500555193</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721810038977</Id>
						<Name>p_DHheatStorage</Name>
						<X>480</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAStorageHeat</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1721810038975</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1688462266916</Id>
						<Name>c_electricityPriceList</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1120</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Double</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1663773953770</Id>
						<Name>f_operateAssetsDistrictHeating</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1120</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// District heating system, heating power based on temperature of buffer of heating system. (big or small) Heat transfer from DH_GridConnection to heat NetNode is based on temperature difference between heating-buffer and water in heating network&#xD;
//traceln("Operating District Heating agent = "+ this + " -&gt; DH primary heating asset = " + p_primaryHeatingAsset.j_ea.ownerAsset.toString());&#xD;
//traceln("Operating District Heating agent = "+ this + " -&gt; DH secondary heating asset = " + p_secondaryHeatingAsset.j_ea.ownerAsset.toString());&#xD;
//traceln("DistrictHeating Active!");&#xD;
if(p_primaryHeatingAsset == null){&#xD;
	return;&#xD;
}&#xD;
&#xD;
double tempSetpoint_degC = 0;&#xD;
double minBufferTemp_degC = 0;&#xD;
double maxTempBuffer_degC = 0;&#xD;
double storageTemp_degC = 0;&#xD;
//double DHnetworkTemp_degC = 0;&#xD;
//v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice( v_currentPowerElectricity_kW );&#xD;
v_currentElectricityPriceConsumption_eurpkWh = p_parentNodeElectric.v_currentTotalNodalPrice_eurpkWh;&#xD;
&#xD;
//if (l_ownerActor.getConnectedAgent() instanceof EnergyCoop){&#xD;
	//electricitySurplussCoop_kW = ((EnergyCoop)l_ownerActor.getConnectedAgent()).v_electricitySurplus_kW + v_previousPowerElectricity_kW; // From last timestep! So compensate for own electric power&#xD;
	//traceln("DH function! Electricity surpluss in Coop: " + electricitySurplussCoop_kW + ", own power " + v_previousPowerElectricity_kW,1 );&#xD;
//}	&#xD;
//		((J_EAConversionHeatPump)e.j_ea).updateParameters(main.p_undergroundTemperature_degC, storageTemp_degC); // update heatpump temp levels!&#xD;
double heatTransferToNetwork_kW = max(0, p_parentNodeHeat.v_currentLoad_kW - v_previousPowerHeat_kW);// max( storageTemp_degC - DHnetworkTemp_degC, 0 ) * heatTransferToNetworkCoefficient_kWpK;&#xD;
&#xD;
&#xD;
if( b_validLocalBuffer ) {&#xD;
	tempSetpoint_degC = p_DHheatStorage.getSetTemperature_degC();&#xD;
	v_bufferTemp_degC = p_DHheatStorage.getCurrentTemperature();&#xD;
&#xD;
	//traceln("Thermal storage asset heatCapacity: " + p_DHheatStorage.getHeatCapacity_kW());&#xD;
	double heatingSetpoint_kW = max(0,(tempSetpoint_degC - v_bufferTemp_degC)) * p_DHheatStorage.getHeatCapacity_JpK() / (3.6e6 * energyModel.p_timeStep_h);&#xD;
	//Pair&lt;J_FlowsMap, Double&gt; flowsPair = p_primaryHeatingAsset.f_updateAllFlows( heatingSetpoint_kW / p_primaryHeatingAsset.getCapacityHeat_kW() );&#xD;
	p_primaryHeatingAsset.f_updateAllFlows( heatingSetpoint_kW / p_primaryHeatingAsset.getOutputCapacity_kW() );&#xD;
	double heatingPower_kW = -p_primaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
	&#xD;
	//traceln("Heating setpoint: %s kW, heating power: %s kW", heatingSetpoint_kW, heatingPower_kW);	&#xD;
	p_DHheatStorage.v_powerFraction_fr = ( heatingPower_kW - heatTransferToNetwork_kW ) / p_DHheatStorage.getCapacityHeat_kW();&#xD;
	if ( abs(p_DHheatStorage.v_powerFraction_fr ) &gt; 1) {&#xD;
		traceln("p_DHheatStorage.v_powerFraction_fr greater than 1! %s", p_DHheatStorage.v_powerFraction_fr );&#xD;
	}&#xD;
	p_DHheatStorage.f_updateAllFlows(p_DHheatStorage.v_powerFraction_fr);&#xD;
	//traceln("heatTransferToNetwork_kW: " + heatTransferToNetwork_kW);&#xD;
	//traceln("District heating system temperature: %s degC", p_DHheatStorage.getCurrentTemperature());&#xD;
} else {&#xD;
	//Pair&lt;J_FlowsMap, Double&gt; flowsPair = p_primaryHeatingAsset.f_updateAllFlows(heatTransferToNetwork_kW/p_primaryHeatingAsset.getCapacityHeat_kW()); // heatingasset must be powerful enough every single timestep!&#xD;
	p_primaryHeatingAsset.f_updateAllFlows(heatTransferToNetwork_kW/p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
	if ( 0.00001 &lt; (heatTransferToNetwork_kW + p_primaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.HEAT)) ) {&#xD;
		traceln("Warning! District heating primary heating asset not able to fulfill heat demand! Heatdemand: %s kW, heat produced: %s kW", heatTransferToNetwork_kW, -p_primaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.HEAT) );&#xD;
	}	&#xD;
	//traceln("Primary heating system powerFraction: %s", p_primaryHeatingAsset.v_powerFraction_fr);&#xD;
	//totalHeatingPower_kWth = b_primarySourceTempAboveTargetTemp? p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getHeatCapacity_kW() : 0; // only model net heat flow when temperature levels allow this&#xD;
&#xD;
}&#xD;
&#xD;
//double heatTransferToNetworkCoefficient_kWpK = 10000;&#xD;
//traceln("storageTemp_degC: " + storageTemp_degC + ", DHnetworkTemp_degC: " + DHnetworkTemp_degC);&#xD;
&#xD;
//traceln("storageTemp_degC: "+storageTemp_degC+", network current temp_degC: " + DHnetworkTemp_degC + ", heatTransferToNetwork_kW: "+heatTransferToNetwork_kW);&#xD;
&#xD;
//traceln("totalHeatingPower " +totalHeatingPower_kWth);&#xD;
&#xD;
// Block (passive energy flows if too cold&#xD;
//heatTransferToNetwork_kW = b_storageBelowNetworkTemp? 0 : heatTransferToNetwork_kW;&#xD;
&#xD;
//p_primaryHeatingAsset.f_updateAllFlows( p_primaryHeatingAsset.v_powerFraction_fr );&#xD;
&#xD;
//traceln("District heating " + p_parentNodeHeatID + " storage temperature " + storageTemp_degC + " degC" + ", district heating network temperature " + p_parentNodeHeat.p_transportBuffer.getCurrentTemperature() + " deg C" );&#xD;
&#xD;
//v_currentPowerHeat_kW += p_BuildingThermalAsset.heatConsumption_kW - p_BuildingThermalAsset.heatProduction_kW;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666266296956</Id>
						<Name>f_connectToChildDistrictHeating</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>770</X>
						<Y>-80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>//assetLinks.connectTo(ConnectingChildNode);&#xD;
EnergyAsset EA = (EnergyAsset) ConnectingChildNode;&#xD;
c_energyAssets.add(EA);&#xD;
&#xD;
if (EA.j_ea instanceof J_EAConsumption) {&#xD;
	c_consumptionAssets.add(EA);&#xD;
} else if (EA.j_ea instanceof J_EAProduction ) {&#xD;
	c_productionAssets.add(EA);&#xD;
	if( EA.p_energyAssetType == OL_EnergyAssetType.RESIDUALHEATLT) {&#xD;
		// handle residual heat not as a direct heat source!&#xD;
		p_residualHeatLTSource = EA;&#xD;
	}&#xD;
	else {&#xD;
		c_productionAssets.add(EA);&#xD;
		&#xD;
	}&#xD;
		&#xD;
} else if (EA.j_ea instanceof J_EAStorage ) {&#xD;
	c_storageAssets.add(EA);&#xD;
	if (EA.j_ea instanceof J_EAStorageHeat) {&#xD;
		p_BuildingThermalAsset = EA;&#xD;
	}&#xD;
} else if (EA.j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)EA.j_ea );&#xD;
	&#xD;
	switch (p_heatingType) {&#xD;
		case HEATPUMP_GASPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case GASFIRED:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case HYDROGENFIRED:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHydrogenBurner? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHydrogenBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case GASFIRED_CHPPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasCHP? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case DISTRICT_EBOILER_CHP:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionElectricHeater? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasCHP? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		&#xD;
		case LT_RESIDUAL_HEATPUMP_GASPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHeatPump? EA : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? EA : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		default:&#xD;
			throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);&#xD;
	}&#xD;
	&#xD;
		&#xD;
	//if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater || EA.j_ea instanceof J_EAConversionGasCHP ) {&#xD;
	//	if (p_primaryHeatingAsset == null) {&#xD;
	//		p_primaryHeatingAsset = EA;&#xD;
	//	} else if (p_secondaryHeatingAsset == null) {&#xD;
	//		p_secondaryHeatingAsset = EA;&#xD;
	//	} else {&#xD;
	//		traceln("District Heating gridconnection already has two heating systems!");&#xD;
	//	}&#xD;
	//	//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
	if( ((J_EAConversion)EA.j_ea) instanceof J_EAConversionHeatPump &amp;&amp; ((J_EAConversionHeatPump)EA.j_ea).getAmbientTempType().equals("WATER") ) {&#xD;
		EA.p_linkedSourceEnergyAsset = p_residualHeatLTSource;&#xD;
		((J_EAConversionHeatPump)EA.j_ea).setSourceAssetHeatPower( EA.p_linkedSourceEnergyAsset.j_ea.capacityHeat_kW );&#xD;
	}&#xD;
//}&#xD;
} else {&#xD;
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
/*&#xD;
// create a local list of energyAssets connected to its netConnection Agent for easy reference&#xD;
List&lt;EnergyAsset&gt; connectedEnergyAssets = subConnections.getConnections();&#xD;
&#xD;
int numberOfEnergyAssets = connectedEnergyAssets.size();&#xD;
for( int i = 0; i &lt; numberOfEnergyAssets; i++ ) {&#xD;
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {&#xD;
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));&#xD;
&#xD;
	}&#xD;
}&#xD;
&#xD;
List&lt;EnergyAsset&gt; consumptionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConsumption);&#xD;
List&lt;EnergyAsset&gt; productionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAProduction);&#xD;
List&lt;EnergyAsset&gt; storageAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAStorage);&#xD;
List&lt;EnergyAsset&gt; conversionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConversion);&#xD;
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1677511998575</Id>
						<Name>f_setConfigurationBooleans</Name>
						<X>520</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// one time setting of booleans marking system configuration for use in transparant logic switching&#xD;
b_residualHeatLTSource = p_residualHeatLTSource instanceof J_EAProduction? true : false;&#xD;
&#xD;
// Check if buffer is present and has physically correct parameters&#xD;
if (p_DHheatStorage instanceof J_EAStorageHeat) {&#xD;
	if(p_DHheatStorage.getCapacityHeat_kW() &gt; 0 &amp; p_DHheatStorage.getCapacityHeat_kW()&gt; 0 ) {&#xD;
		b_validLocalBuffer = true;&#xD;
	}&#xD;
}&#xD;
&#xD;
/*&#xD;
// first update parameters of any heatpumps if present // [GH] This logic should only be run once, not every timestep! updateAmbientTemp should also be triggered from main.&#xD;
for(J_EA e : c_energyAssets) {&#xD;
	if(e instanceof J_EAConversionHeatPump) {&#xD;
		if ( ((J_EAConversionHeatPump)e).getAmbientTempType().equals("WATER") &amp;&amp; b_residualHeatLTSource ) {&#xD;
			//traceln("water ambientTempType for LTresidual heat with heatpump check!");&#xD;
			((J_EAConversionHeatPump)e).f_setLinkedVariable(energyModel, "WATER", ((J_EAConversionHeatPump)e).p_linkedSourceEnergyAsset );&#xD;
			e.updateAmbientTemperature( ((J_EAConversionHeatPump)e).p_baseTemperatureReference );&#xD;
		}&#xD;
	}&#xD;
}	&#xD;
*/</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1678448031698</Id>
						<Name>f_operateSmartHeating</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>800</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_chpElectricityPrice = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice(v_currentPowerElectricity_kW, - p_secondaryHeatingAsset.capacityElectric_kW   );&#xD;
v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_chpElectricityPrice - v_electricityPriceLowPassed_eurpkWh );&#xD;
//v_currentPriceLevel = f_getPriceLevel( v_currentElectricityPriceConsumption_eurpkWh );&#xD;
&#xD;
c_electricityPriceList.add( v_chpElectricityPrice );&#xD;
if (c_electricityPriceList.size() &gt; 30) {&#xD;
    c_electricityPriceList.remove(0);&#xD;
}&#xD;
&#xD;
double runningAverage = c_electricityPriceList.stream()&#xD;
        .mapToDouble(Double::doubleValue)&#xD;
        .average()&#xD;
        .orElse(0.0);&#xD;
&#xD;
double variance = c_electricityPriceList.stream()&#xD;
        .mapToDouble(value -&gt; Math.pow(value - runningAverage, 2))&#xD;
        .average()&#xD;
        .orElse(0.0);&#xD;
&#xD;
&#xD;
double standardDeviation = Math.sqrt(variance);&#xD;
double currentDeviation = Math.abs(v_chpElectricityPrice - runningAverage) / standardDeviation;&#xD;
&#xD;
GridNode superNodeElectric = l_parentNodeElectric.getConnectedAgent().superConnection.getConnectedAgent();&#xD;
switch (p_heatingType) {&#xD;
	case GASFIRED_CHPPEAK:&#xD;
		if( v_chpElectricityPrice &gt; (v_electricityPriceLowPassed_eurpkWh + p_pricelevelHighDifFromAvg_eurpkWh) &amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getMaxTemperature_degC() ){&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 1;&#xD;
		}&#xD;
		if ( p_BuildingThermalAsset.getCurrentTemperature() &lt;= p_BuildingThermalAsset.getMinTemperature_degC() ){&#xD;
 			p_primaryHeatingAsset.v_powerFraction_fr = 1; //max(0, (p_primaryHeatingAsset.j_ea.capacityHeat_kW - p_secondaryHeatingAsset.j_ea.capacityHeat_kW * p_secondaryHeatingAsset.v_powerFraction_fr) / p_primaryHeatingAsset.j_ea.capacityHeat_kW );&#xD;
		}&#xD;
	break;&#xD;
	case DISTRICT_EBOILER_CHP:&#xD;
		if ( p_BuildingThermalAsset.getCurrentTemperature() &lt;= p_BuildingThermalAsset.getMinTemperature_degC() ){&#xD;
 			//als minimum temp is bereikt, allebei aan&#xD;
 			traceln("beide aan");&#xD;
 			p_primaryHeatingAsset.v_powerFraction_fr = 1; &#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 1;	&#xD;
		}&#xD;
		//else if ( superNodeElectric.v_currentLoadElectricity_kW &lt; 0 &amp;&amp; p_BuildingThermalAsset.j_ea.getCurrentTemperature() &lt; p_BuildingThermalAsset.j_ea.getMaxTemperature_degC() ){&#xD;
		else if( v_chpElectricityPrice &lt; ( runningAverage - 3.0 * standardDeviation ) &amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0.5;&#xD;
		}&#xD;
		else if( v_chpElectricityPrice &lt; ( runningAverage - 1.0 * standardDeviation ) &amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0.25;&#xD;
		}&#xD;
		else if( v_chpElectricityPrice &gt; ( runningAverage + 4.0 * standardDeviation ) &amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.5;&#xD;
		}&#xD;
		else if( v_chpElectricityPrice &gt; ( runningAverage + 3.0 * standardDeviation ) &amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getMaxTemperature_degC() - 1 ){&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.25;&#xD;
		}		&#xD;
		else if ( p_BuildingThermalAsset.getCurrentTemperature() &lt; p_BuildingThermalAsset.getSetTemperature_degC() ) {&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0.5;&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0.5;&#xD;
		}&#xD;
	break;&#xD;
	default:&#xD;
		traceln("ERROR DISTRICT heating wants to use smart assets but does not have correct heating assets");&#xD;
	break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693302929918</Id>
						<Name>f_connectToJ_EA_DistrictHeating</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1120</X>
						<Y>-20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>if (j_ea instanceof J_EAProduction ) {&#xD;
	//c_productionAssets.add(EA);&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.RESIDUALHEATLT) {&#xD;
		// handle residual heat not as a direct heat source!&#xD;
		p_residualHeatLTSource = (J_EAProduction)j_ea;&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAConversion) {	&#xD;
	switch (p_heatingType) {&#xD;
		case HEATPUMP_GASPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case GASBURNER:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			//p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case HYDROGENBURNER:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHydrogenBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHydrogenBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case GASFIRED_CHPPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		case DISTRICT_EBOILER_CHP:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		&#xD;
		case LT_RESIDUAL_HEATPUMP_GASPEAK:&#xD;
			p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
			p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
		break;&#xD;
		default:&#xD;
			throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);&#xD;
	}&#xD;
	&#xD;
		&#xD;
	//if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater || EA.j_ea instanceof J_EAConversionGasCHP ) {&#xD;
	//	if (p_primaryHeatingAsset == null) {&#xD;
	//		p_primaryHeatingAsset = EA;&#xD;
	//	} else if (p_secondaryHeatingAsset == null) {&#xD;
	//		p_secondaryHeatingAsset = EA;&#xD;
	//	} else {&#xD;
	//		traceln("District Heating gridconnection already has two heating systems!");&#xD;
	//	}&#xD;
	//	//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
	&#xD;
	/*&#xD;
	if( j_ea instanceof J_EAConversionHeatPump &amp;&amp; ((J_EAConversionHeatPump)j_ea).getAmbientTempType().equals("WATER") ) {&#xD;
		((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset = p_residualHeatLTSource;&#xD;
		((J_EAConversionHeatPump)j_ea).setSourceAssetHeatPower( ((J_EAProduction)((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset).getCapacityHeat_kW() );&#xD;
	}&#xD;
	*/&#xD;
	&#xD;
//}&#xD;
} else if (j_ea instanceof J_EAStorageHeat ) {&#xD;
	p_DHheatStorage = (J_EAStorageHeat)j_ea;&#xD;
} else {&#xD;
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");&#xD;
}&#xD;
&#xD;
&#xD;
&#xD;
/*&#xD;
// create a local list of energyAssets connected to its netConnection Agent for easy reference&#xD;
List&lt;EnergyAsset&gt; connectedEnergyAssets = subConnections.getConnections();&#xD;
&#xD;
int numberOfEnergyAssets = connectedEnergyAssets.size();&#xD;
for( int i = 0; i &lt; numberOfEnergyAssets; i++ ) {&#xD;
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {&#xD;
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));&#xD;
&#xD;
	}&#xD;
}&#xD;
&#xD;
List&lt;EnergyAsset&gt; consumptionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConsumption);&#xD;
List&lt;EnergyAsset&gt; productionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAProduction);&#xD;
List&lt;EnergyAsset&gt; storageAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAStorage);&#xD;
List&lt;EnergyAsset&gt; conversionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConversion);&#xD;
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1702369244977</Id>
						<Name>f_calcCheapestHeatingPrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1800</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();&#xD;
boolean isGasCheaper = false;&#xD;
&#xD;
if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {&#xD;
	v_gasHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getMethanePrice();&#xD;
	v_eHeatingCost_eurpkWh_TEMPORARY = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, p_primaryHeatingAsset.getElectricCapacity_kW() ) / HP_COP;&#xD;
	isGasCheaper = v_gasHeatingCost_eurpkWh_TEMPORARY &lt; v_eHeatingCost_eurpkWh_TEMPORARY ? true:false;&#xD;
}	&#xD;
&#xD;
return isGasCheaper;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702369244982</Id>
						<Name>f_heatWithHeatpump</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1780</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
double powerFraction_heatPump_fr = 0; &#xD;
double powerFraction_heatModel_fr = 0;&#xD;
double avgElectricityPrice_eurpkWh = 10;&#xD;
J_EAConversionHeatPump hp = (J_EAConversionHeatPump)p_primaryHeatingAsset;&#xD;
&#xD;
if ( p_smartHeatingEnabled ) {&#xD;
	avgElectricityPrice_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getAveragedElectricityPrice( v_currentPowerElectricity_kW, hp.getElectricCapacity_kW() );&#xD;
	//traceln("avg electircity rprice for HP: " + avgElectricityPrice_eurpkWh);&#xD;
}&#xD;
&#xD;
//heat the house&#xD;
if (v_currentIndoorTemp_degC &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC ) {&#xD;
	powerFraction_heatPump_fr = 1; &#xD;
	powerFraction_heatModel_fr = hp.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();&#xD;
}&#xD;
//also heat the house if the price is cheap, the the house is colder than desired + 1 and the vehicle does not need charging&#xD;
else if( 	p_smartHeatingEnabled &amp;&amp; avgElectricityPrice_eurpkWh &lt; v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh &#xD;
			&amp;&amp; v_currentIndoorTemp_degC &lt; v_tempSetpoint_degC + 1) {&#xD;
	powerFraction_heatPump_fr = 1;&#xD;
	powerFraction_heatModel_fr = hp.getHeatCapacity_kW() / p_heatBuffer.getHeatCapacity_kW();&#xD;
}&#xD;
&#xD;
p_BuildingThermalAsset.v_powerFraction_fr = powerFraction_heatModel_fr;&#xD;
p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_heatPump_fr;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702369244984</Id>
						<Name>f_heatWithHybridHeatpump</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1780</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
// Heatpump and gasburner, switch based on heatpump COP)&#xD;
if (v_currentIndoorTemp_degC &lt; ( v_tempSetpoint_degC - p_heatingKickinTreshold_degC) ) {&#xD;
	&#xD;
	J_EAConversionHeatPump HP = (J_EAConversionHeatPump)p_primaryHeatingAsset;&#xD;
	//HP.updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! &lt;-- waarom dit gebeurt al in de main (peter 21-02-23)&#xD;
	boolean gasCheaper = f_calcCheapestHeatingPrice();&#xD;
	traceln("isGasCheaper: "+gasCheaper);&#xD;
	&#xD;
	if ( gasCheaper ) { // heat with gas&#xD;
		double powerDemand_kW = (v_tempSetpoint_degC - v_currentIndoorTemp_degC) * ((J_EAStorageHeat)p_BuildingThermalAsset).getHeatCapacity_JpK() / 3.6e6;&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
		p_secondaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_secondaryHeatingAsset.getHeatCapacity_kW());&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = p_secondaryHeatingAsset.v_powerFraction_fr * p_secondaryHeatingAsset.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();&#xD;
	} else { // heat with heatpump&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = 1;//min(1,powerDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW());&#xD;
		p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = HP.getHeatCapacity_kW() / p_BuildingThermalAsset.getHeatCapacity_kW();&#xD;
	}&#xD;
}&#xD;
else{&#xD;
	p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
}&#xD;
&#xD;
p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1663773810340</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1663774444750</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1663773810344</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<TimePlot>
								<Id>1678448899357</Id>
								<Name>pl_SOC1</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>1030</X>
								<Y>500</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893244</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1668499200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>15</Code>
										<Unit Class="TimeUnits">MINUTE</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>500</Width>
								<Height>280</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>420</Width>
									<Height>160</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>60</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>current electricity price</Title>
									<Id>1678448899351</Id>
									<Expression>my_dataset</Expression>
									<Color>-32944</Color>
									<Expression2>v_currentElectricityPriceConsumption_eurpkWh</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>ElectricityPrice LowPassed</Title>
									<Id>1678448899352</Id>
									<Expression>my_dataset8</Expression>
									<Color>-13447886</Color>
									<Expression2>v_electricityPriceLowPassed_eurpkWh</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>CHP full power current price</Title>
									<Id>1658477089962</Id>
									<Expression>my_dataset9</Expression>
									<Color>-9404272</Color>
									<Expression2>v_chpElectricityPrice</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>1000</SamplesToKeep>
								<TimeWindowExpression>48</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
							<TimePlot>
								<Id>1678452019907</Id>
								<Name>pl_SOC2</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>760</X>
								<Y>840</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>false</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893246</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1668499200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>15</Code>
										<Unit Class="TimeUnits">MINUTE</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>500</Width>
								<Height>280</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>420</Width>
									<Height>160</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>60</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Storage temp</Title>
									<Id>1678452019904</Id>
									<Expression>my_dataset9</Expression>
									<Color>-65536</Color>
									<Expression2>v_bufferTemp_degC</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>1000</SamplesToKeep>
								<TimeWindowExpression>48</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1663773857868</Id>
				<Name>GCEnergyConversion</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_override();&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_resetSpecificGCStates(){&#xD;
	f_resetSpecificGCStates_override();&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_resetSpecificGCStatesAfterRapidRun(){&#xD;
	f_resetSpecificGCStatesAfterRapidRun_override();&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_rapidRunDataLogging() {&#xD;
	super.f_rapidRunDataLogging();&#xD;
	//f_fillAnnualDatasets_electrolyser();&#xD;
}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<Import>import java.util.*;</Import>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1663773857866</Id>
					<Name>1663773857866</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089961</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1663773857864</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1663773857867</CurrentLevel>
				<ConnectionsId>1663773857863</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1707149728754</Id>
						<Name>v_hydrogenProductionDeficit_kWh</Name>
						<X>1610</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708448002658</Id>
						<Name>v_electrolyserRegime</Name>
						<Description>Variable that contains the electrolyser regime at the current timestep.

Shutdown.
Standby.
Idle.
Functional. 
FullCapacity.</Description>
						<X>1610</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_ElectrolyserState</Type>
							<InitialValue Class="CodeValue">
								<Code>OL_ElectrolyserState.SHUTDOWN</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708448456203</Id>
						<Name>v_producedOxygen_kg</Name>
						<Description>value of the produced oxygen at the current time step. </Description>
						<X>1610</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708949135932</Id>
						<Name>v_totalDownTimeElectrolyser_hr</Name>
						<X>1610</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1708949154946</Id>
						<Name>v_totalEnergyLossIdle_kWh</Name>
						<X>1610</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1709045630640</Id>
						<Name>v_fuelcellRegime</Name>
						<X>2010</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1709045655596</Id>
						<Name>v_totalDownTimeFC_hr</Name>
						<X>2010</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715597878431</Id>
						<Name>v_electricityPriceMaxForProfit_eurpkWh</Name>
						<X>1610</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.10</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715607690911</Id>
						<Name>v_gridNodeCongestionLimit_kW</Name>
						<Description>Congestion limit  of the grid node. If this limit is reached, electrolyser should not be functional.</Description>
						<X>1610</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720522233689</Id>
						<Name>v_hydrogenInStorage_kWh</Name>
						<X>1610</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1707860525999</Id>
						<Name>p_conversionEfficiency</Name>
						<X>1610</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1707860525997</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1707860642684</Id>
						<Name>p_productionNominal_Nm3</Name>
						<X>1610</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658477089960</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216547</Id>
						<Name>p_conversionEfficiencyFC</Name>
						<X>2010</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216545</Id>
								<Label>p_fuelCellConversionEfficiency</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216581</Id>
						<Name>p_productionNominalFC_Nm3</Name>
						<X>2010</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216579</Id>
								<Label>p_productionNominalFC_Nm3</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216603</Id>
						<Name>p_productionMinimumFC_Nm3</Name>
						<X>2010</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216601</Id>
								<Label>p_productionMinimumFC_Nm3</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216633</Id>
						<Name>p_powerNominalFC_kW</Name>
						<X>2010</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216631</Id>
								<Label>p_powerNominalFC_kW</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216658</Id>
						<Name>p_energyProductionNominalFC_kWh_Nm3</Name>
						<X>2010</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216656</Id>
								<Label>p_EnergyProductionNominalFC_kWh_Nm3</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216687</Id>
						<Name>p_inputPressureFC_Bar</Name>
						<X>2010</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216685</Id>
								<Label>p_inputPressureFC_Bar</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216711</Id>
						<Name>p_loadChangeTimeMinMaxFC_s</Name>
						<Description>The time it takes for the electrolyser to shift from minimum to maximum production in seconds</Description>
						<X>2010</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216709</Id>
								<Label>p_loadChangeTimeMinMaxFC_s</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216759</Id>
						<Name>p_startUpTimeIdleFC_s</Name>
						<X>2010</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216757</Id>
								<Label>p_startUpTimeIdleFC_s</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216780</Id>
						<Name>p_startUpTimeShutdownFC_s</Name>
						<X>2010</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709045216778</Id>
								<Label>p_startUpTimeShutdownFC_s</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709045216801</Id>
						<Name>p_electricityPriceMinForProfitFC_eurpkWh</Name>
						<X>2010</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.05</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1709045216799</Id>
								<Label>p_electricityPriceMinForProfitFC_eurpkWh</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709733732105</Id>
						<Name>p_minProductionRatio</Name>
						<Description>ratio of the nominal power of the electrolyser for minimum production</Description>
						<X>1610</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709733732103</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1717070647695</Id>
						<Name>b_forecast_lastWeekBased</Name>
						<X>1600</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>true</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1717070647693</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1716916299738</Id>
						<Name>c_forecast_RES_kW</Name>
						<X>1610</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Double</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1716993724806</Id>
						<Name>c_forecast_gridNodePowerFlow_kW</Name>
						<X>1610</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>Double</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707149702398</Id>
						<Name>f_manageElektrolyserOUD</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1610</X>
						<Y>-40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ElektrolyserAsset</Name>
							<Type>J_EAConversionElektrolyser</Type>
						</Parameter>
						<Body>if (ElektrolyserAsset.getElectricCapacity_kW()&gt;0) {&#xD;
	&#xD;
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); &#xD;
	double availableElectricPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW;&#xD;
	double excessElectricPower_kW = -(v_currentPowerElectricity_kW + v_allowedCapacity_kW); // Should at least draw this much power to stay within connection limits. Doesn't account for a battery!&#xD;
	double eta_r = ElektrolyserAsset.getEta_r();&#xD;
	double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay&#xD;
	double ProductionSetpoint_kW = ElektrolyserAsset.getElectricCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power&#xD;
	double elektrolyserSetpointElectric_kW = 0;&#xD;
	&#xD;
	if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.BALANCE) {&#xD;
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours&#xD;
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;&#xD;
	&#xD;
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");&#xD;
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());&#xD;
	} else if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.PRICE) {&#xD;
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {&#xD;
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();&#xD;
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW&#xD;
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW&#xD;
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);&#xD;
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh&#xD;
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	&#xD;
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;&#xD;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;&#xD;
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");&#xD;
	}	&#xD;
	&#xD;
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)&#xD;
	elektrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(elektrolyserSetpointElectric_kW,excessElectricPower_kW));&#xD;
	&#xD;
	double[] flowsArray = ElektrolyserAsset.f_updateAllFlows(elektrolyserSetpointElectric_kW/ElektrolyserAsset.getElectricCapacity_kW());&#xD;
	&#xD;
	v_conversionPowerElectric_kW += flowsArray[4];&#xD;
	//v_hydrogenElectricityConsumption_kW += flowsArray[4];	&#xD;
	&#xD;
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - ElektrolyserAsset.hydrogenProduction_kW;	// Update hydrogen production deficit&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707149769851</Id>
						<Name>f_operateFlexAssets_overwriteOUD</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1610</X>
						<Y>-20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for( J_EA v : c_conversionAssets ){&#xD;
	if (v instanceof J_EAConversionElektrolyser) {&#xD;
		f_manageElektrolyser((J_EAConversionElektrolyser)v);&#xD;
	}&#xD;
	if (v instanceof J_EAConversionCurtailer) {&#xD;
		// Must go last! &#xD;
	} /*else {		&#xD;
		v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;&#xD;
		v_conversionPowerElectric_kW += v.electricityConsumption_kW - v.electricityProduction_kW;&#xD;
		v_currentPowerMethane_kW += v.methaneConsumption_kW - v.methaneProduction_kW;&#xD;
		v_currentPowerHydrogen_kW += v.hydrogenConsumption_kW - v.hydrogenProduction_kW;&#xD;
		v_currentPowerHeat_kW += v.heatConsumption_kW - v.heatProduction_kW;&#xD;
		v_currentPowerDiesel_kW += v.dieselConsumption_kW;&#xD;
	} */&#xD;
}&#xD;
&#xD;
// Determine EV charging&#xD;
f_manageCharging();&#xD;
//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;&#xD;
&#xD;
// Operate battery&#xD;
if (p_batteryAsset != null){&#xD;
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();&#xD;
	if( p_batteryOperationMode == OL_BatteryOperationMode.BALANCE) {&#xD;
		f_batteryManagementBalanceCoop( v_batterySOC_fr );&#xD;
	}&#xD;
	else {&#xD;
		f_batteryManagementPrice( v_batterySOC_fr );&#xD;
	}&#xD;
	p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);&#xD;
	//v_batteryPowerElectric_kW = p_batteryAsset.electricityConsumption_kW - p_batteryAsset.electricityProduction_kW;&#xD;
	//v_currentPowerElectricity_kW += v_batteryPowerElectric_kW;&#xD;
}&#xD;
&#xD;
// Operate curtailer. Must be the last asset to run!!&#xD;
&#xD;
if (p_curtailer != null){&#xD;
	f_manageCurtailer(p_curtailer);&#xD;
	//v_currentPowerElectricity_kW += p_curtailer.electricityConsumption_kW;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707149801187</Id>
						<Name>f_batteryManagementBalanceCoop</Name>
						<Description>Regeling voor balancering van Coop-load.

@author: Gillis Hommen
@since: 28-12-2022</Description>
						<X>1230</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ((p_batteryAsset).getStorageCapacity_kWh() != 0){&#xD;
	if( p_owner != null ) {&#xD;
		if( p_owner.p_coopParent instanceof EnergyCoop ) {&#xD;
			//traceln("Hello?");&#xD;
//			v_previousPowerElectricity_kW = p_batteryAsset.v_powerFraction_fr * p_batteryAsset.j_ea.getElectricCapacity_kW();&#xD;
			v_previousPowerElectricity_kW = p_batteryAsset.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
			//traceln("Previous battery power: " + v_previousPowerElectricity_kW);&#xD;
			double currentCoopElectricitySurplus_kW = p_owner.p_coopParent.v_electricitySurplus_kW + v_previousPowerElectricity_kW;&#xD;
			//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentCoopElectricitySurplus_kW - v_electricityPriceLowPassed_eurpkWh );&#xD;
			&#xD;
			double CoopConnectionCapacity_kW = 0.9*p_owner.p_coopParent.v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay&#xD;
			double availableChargePower_kW = CoopConnectionCapacity_kW + currentCoopElectricitySurplus_kW; // Max battery charging power within grid capacity&#xD;
			double availableDischargePower_kW = currentCoopElectricitySurplus_kW - CoopConnectionCapacity_kW; // Max discharging power within grid capacity&#xD;
			double SOC_setp_fr = 0.5;			&#xD;
			if (energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW &gt; 10000) {&#xD;
				SOC_setp_fr = 0.95 - 0.95 * energyModel.v_WindYieldForecast_fr - 0.9*energyModel.v_SolarYieldForecast_fr;&#xD;
				//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");&#xD;
			} else {&#xD;
				SOC_setp_fr = (0.5 + 0.35 * Math.sin(2*Math.PI*(energyModel.t_h-10)/24))*(1-0.8*energyModel.v_WindYieldForecast_fr); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. &#xD;
			}&#xD;
			double FeedbackGain_kWpSOC = 1.5 * p_batteryAsset.getCapacityElectric_kW(); // How strongly to aim for SOC setpoint&#xD;
			double FeedforwardGain_kWpKw = 0.1; // Feedforward based on current surpluss in Coop&#xD;
			double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.&#xD;
			double chargeSetpoint_kW = 0;&#xD;
			chargeSetpoint_kW = FeedforwardGain_kWpKw * (currentCoopElectricitySurplus_kW - chargeOffset_kW) + (SOC_setp_fr - p_batteryAsset.getCurrentStateOfCharge_fr()) * FeedbackGain_kWpSOC;&#xD;
			chargeSetpoint_kW = min(max(chargeSetpoint_kW, availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!&#xD;
			p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW())); // Convert to powerFraction and limit power&#xD;
			//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1707149873038</Id>
						<Name>f_manageCurtailer</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1350</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>CurtailerAsset</Name>
							<Type>J_EAConversionCurtailer</Type>
						</Parameter>
						<Body>//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());&#xD;
if (CurtailerAsset.getElectricCapacity_kW()&gt;0) {&#xD;
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);&#xD;
	CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.getElectricCapacity_kW());&#xD;
	&#xD;
	/*if ( curtailerSetpointElectric_kW &gt; 0 ) {&#xD;
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");&#xD;
	}*/&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1708089250229</Id>
						<Name>f_manageElectrolyser</Name>
						<X>1610</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ElectrolyserAsset</Name>
							<Type>J_EAConversionElectrolyser</Type>
						</Parameter>
						<Body>&#xD;
if (ElectrolyserAsset.getInputCapacity_kW()&gt;0) {&#xD;
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); &#xD;
	&#xD;
	double v_allowedDeliveryCapacity_kW = v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
	double v_allowedFeedinCapacity_kW = v_liveConnectionMetaData.contractedFeedinCapacity_kW;&#xD;
	double availableElectricPower_kW = max(0, v_allowedDeliveryCapacity_kW - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
	double excessElectricPower_kW = max(0, - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - v_allowedFeedinCapacity_kW);&#xD;
	&#xD;
	double eta_r = ElectrolyserAsset.getEta_r();&#xD;
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay&#xD;
	double ProductionSetpoint_kW = ElectrolyserAsset.getInputCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power&#xD;
	double electrolyserSetpointElectric_kW = 0;&#xD;
	&#xD;
	&#xD;
	//Electrolyser output based on current and future regime&#xD;
	electrolyserSetpointElectric_kW = f_electrolyserRegime(electrolyserSetpointElectric_kW, excessElectricPower_kW, ElectrolyserAsset);&#xD;
	&#xD;
	data_liveWeekElectrolyserPower_kW.add(energyModel.t_h, electrolyserSetpointElectric_kW);&#xD;
		&#xD;
	/*&#xD;
	if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.BALANCE) {&#xD;
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours&#xD;
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;&#xD;
	&#xD;
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");&#xD;
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());&#xD;
	} else if (p_elektrolyserOperationMode==OL_ElektrolyserOperationMode.PRICE) {&#xD;
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {&#xD;
		ConnectionOwner ownerActor = (ConnectionOwner)l_ownerActor.getConnectedAgent();&#xD;
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW&#xD;
		double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW&#xD;
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);&#xD;
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh&#xD;
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	&#xD;
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;&#xD;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getElectricCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;&#xD;
		elektrolyserSetpointElectric_kW = random()*ElektrolyserAsset.getElectricCapacity_kW();&#xD;
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");&#xD;
	}	&#xD;
	*/&#xD;
	&#xD;
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)&#xD;
	electrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(electrolyserSetpointElectric_kW, excessElectricPower_kW));&#xD;
	&#xD;
	&#xD;
	&#xD;
	//Output&#xD;
	//double[] flowsArray = ElectrolyserAsset.f_updateAllFlows(electrolyserSetpointElectric_kW/ElectrolyserAsset.getElectricCapacity_kW());&#xD;
	//Pair&lt;J_FlowsMap, Double&gt; flowsPair = ElectrolyserAsset.f_updateAllFlows(electrolyserSetpointElectric_kW/ElectrolyserAsset.getCapacityElectric_kW());&#xD;
	ElectrolyserAsset.f_updateAllFlows(electrolyserSetpointElectric_kW/ElectrolyserAsset.getInputCapacity_kW());&#xD;
		&#xD;
	v_conversionPowerElectric_kW += ElectrolyserAsset.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
	v_hydrogenElectricityConsumption_kW += ElectrolyserAsset.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
	&#xD;
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - max(0,-ElectrolyserAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN));	// Update hydrogen production deficit	&#xD;
	&#xD;
	&#xD;
	// This variable is reset after a rapidrun, but not saved before running the headless simulation.&#xD;
	v_hydrogenInStorage_kWh -= ElectrolyserAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN) * energyModel.p_timeStep_h;&#xD;
	&#xD;
	/*if (b_useHydrogenLocally) {&#xD;
		List&lt;GridConnection&gt; receivingGCs = findAll(energyModel.c_gridConnections, gc -&gt; gc.b_useHydrogenLocally &amp;&amp; gc != this);&#xD;
		//traceln("hydrogen reveicing gcs: %s", receivingGCs);&#xD;
		for (GridConnection gc : receivingGCs) {&#xD;
			&#xD;
			gc.v_hydrogenInStorage_kWh += energyModel.p_timeStep_h * flowsArray[2] / receivingGCs.size();					&#xD;
		}&#xD;
	}*/&#xD;
&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1708089644411</Id>
						<Name>f_operateFlexAssets_override</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for( J_EA v : c_conversionAssets ){&#xD;
	if (v instanceof J_EAConversionElectrolyser) {&#xD;
		f_manageElectrolyser((J_EAConversionElectrolyser)v);&#xD;
	}&#xD;
}&#xD;
&#xD;
// Determine EV charging&#xD;
f_manageCharging();&#xD;
&#xD;
// Operate battery&#xD;
f_manageBattery();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1708447959640</Id>
						<Name>f_electrolyserRegime</Name>
						<X>1620</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>elektrolyserSetpointElectric_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>excessElectricPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>ElectrolyserAsset</Name>
							<Type>J_EAConversionElectrolyser</Type>
						</Parameter>
						<Body>double solar_forecast_kW;&#xD;
double wind_forecast_kW;&#xD;
&#xD;
double forecast_time_h = ElectrolyserAsset.getStartUpTimeStandby_h()+ 2*energyModel.p_timeStep_h;&#xD;
&#xD;
//Get current limitation values&#xD;
//Pair&lt;J_FlowsMap, Double&gt; flowsPair = ElectrolyserAsset.getLastFlows();&#xD;
J_FlowsMap flowsMap = ElectrolyserAsset.getLastFlows();&#xD;
double previousElectrolyserConsumption_kW = max(0,flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
double currentGridNodePowerFlow_kW = this.p_parentNodeElectric.v_currentLoad_kW - previousElectrolyserConsumption_kW;&#xD;
data_liveWeekGridNoderPowerFlow_kW.add(energyModel.t_h, this.p_parentNodeElectric.v_currentLoad_kW);&#xD;
&#xD;
&#xD;
switch (p_electrolyserOperationMode){&#xD;
&#xD;
	case PRICE:&#xD;
		f_electrolyserRegimeControl_Price(excessElectricPower_kW, ElectrolyserAsset);&#xD;
	break;&#xD;
	case BALANCE:&#xD;
		f_electrolyserRegimeControl_Balance(currentGridNodePowerFlow_kW, forecast_time_h, ElectrolyserAsset);&#xD;
	break;	&#xD;
	case ALWAYS_IDLE:&#xD;
		f_electrolyserRegimeControl_AlwaysIdle(currentGridNodePowerFlow_kW, ElectrolyserAsset);&#xD;
	break;&#xD;
}&#xD;
&#xD;
switch (ElectrolyserAsset.getState()){&#xD;
&#xD;
	case SHUTDOWN:&#xD;
		elektrolyserSetpointElectric_kW = 0;&#xD;
		&#xD;
		if(energyModel.v_isRapidRun){&#xD;
		v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + energyModel.p_timeStep_h;&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case STANDBY: &#xD;
		elektrolyserSetpointElectric_kW = 0;&#xD;
		&#xD;
		if(energyModel.v_isRapidRun){&#xD;
		v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + energyModel.p_timeStep_h;&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case IDLE: &#xD;
		elektrolyserSetpointElectric_kW = 0.025*ElectrolyserAsset.getInputCapacity_kW(); // 1 - 5 percent of nominal load to keep it warm!&#xD;
		&#xD;
		if(energyModel.v_isRapidRun){&#xD;
			v_totalDownTimeElectrolyser_hr = v_totalDownTimeElectrolyser_hr + energyModel.p_timeStep_h;&#xD;
			v_totalEnergyLossIdle_kWh = v_totalEnergyLossIdle_kWh + elektrolyserSetpointElectric_kW*energyModel.p_timeStep_h;&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case FUNCTIONAL:&#xD;
		switch (p_electrolyserOperationMode){&#xD;
		&#xD;
			case PRICE:&#xD;
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getInputCapacity_kW()*p_minProductionRatio;&#xD;
			break;&#xD;
			&#xD;
			case BALANCE:&#xD;
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getInputCapacity_kW()*p_minProductionRatio;&#xD;
			break;&#xD;
			case ALWAYS_IDLE:&#xD;
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getInputCapacity_kW()*p_minProductionRatio;&#xD;
			break;&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case FULLCAPACITY:&#xD;
		switch (p_electrolyserOperationMode){&#xD;
		&#xD;
			case PRICE:&#xD;
				elektrolyserSetpointElectric_kW = ElectrolyserAsset.getInputCapacity_kW();&#xD;
			break;&#xD;
			&#xD;
			case BALANCE:&#xD;
				elektrolyserSetpointElectric_kW = min(ElectrolyserAsset.getInputCapacity_kW(), abs(v_gridNodeCongestionLimit_kW - currentGridNodePowerFlow_kW));&#xD;
			break;&#xD;
			case ALWAYS_IDLE:&#xD;
				elektrolyserSetpointElectric_kW = min(ElectrolyserAsset.getInputCapacity_kW(), abs(v_gridNodeCongestionLimit_kW - currentGridNodePowerFlow_kW));&#xD;
			break;&#xD;
		}&#xD;
	break;&#xD;
}&#xD;
&#xD;
&#xD;
return elektrolyserSetpointElectric_kW;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1708448673879</Id>
						<Name>f_electrolyserRegimeControl_Price</Name>
						<Description>Function that defines the regime of the hydrogen plant of the next timestep. </Description>
						<X>1630</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>excessElectricPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>ElectrolyserAsset</Name>
							<Type>J_EAConversionElectrolyser</Type>
						</Parameter>
						<Body>ConnectionOwner ownerActor = p_owner;&#xD;
//double currentElectricityPriceCharge_eurpkWh = ownerActor.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW&#xD;
double currentElectricityPriceEPEX_eurpkWh = energyModel.v_epexForecast_eurpkWh;&#xD;
&#xD;
switch (ElectrolyserAsset.getState()){&#xD;
&#xD;
	case SHUTDOWN:&#xD;
		if (currentElectricityPriceEPEX_eurpkWh &lt; v_electricityPriceMaxForProfit_eurpkWh){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.SHUTDOWN);&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case STANDBY: &#xD;
		if (currentElectricityPriceEPEX_eurpkWh &lt; v_electricityPriceMaxForProfit_eurpkWh){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState( OL_ElectrolyserState.STANDBY);&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case IDLE: &#xD;
		if (currentElectricityPriceEPEX_eurpkWh &lt; v_electricityPriceMaxForProfit_eurpkWh){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FUNCTIONAL);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case FUNCTIONAL:&#xD;
		if (currentElectricityPriceEPEX_eurpkWh &lt; v_electricityPriceMaxForProfit_eurpkWh){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case FULLCAPACITY:&#xD;
		if (currentElectricityPriceEPEX_eurpkWh &lt; v_electricityPriceMaxForProfit_eurpkWh){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FUNCTIONAL);&#xD;
		}&#xD;
	break;&#xD;
}&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1709045117969</Id>
						<Name>f_manageFuelCell</Name>
						<X>2020</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
//if (FuelCellAsset.getElectricCapacity_kW()&gt;0) {&#xD;
&#xD;
&#xD;
//}&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715611921617</Id>
						<Name>f_electrolyserRegimeControl_Balance</Name>
						<X>1630</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentGridNodePowerFlow_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>forecast_time_h</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>ElectrolyserAsset</Name>
							<Type>J_EAConversionElectrolyser</Type>
						</Parameter>
						<Body>double solar_forecast_kW;&#xD;
double wind_forecast_kW;&#xD;
&#xD;
//Initialize limitation values&#xD;
if (c_forecast_RES_kW.size() == 0){&#xD;
		&#xD;
	for(int i = energyModel.v_timeStepsElapsed; i &lt; energyModel.v_timeStepsElapsed + roundToInt(forecast_time_h/energyModel.p_timeStep_h); i++){&#xD;
		solar_forecast_kW = - energyModel.pp_PVProduction35DegSouth_fr.getValue(energyModel.t_h + i*energyModel.p_timeStep_h) * energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
		wind_forecast_kW = - energyModel.pp_windProduction_fr.getValue(energyModel.t_h + i*energyModel.p_timeStep_h) * energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
		&#xD;
		c_forecast_RES_kW.add(solar_forecast_kW + wind_forecast_kW);&#xD;
		&#xD;
		c_forecast_gridNodePowerFlow_kW.add(currentGridNodePowerFlow_kW - c_forecast_RES_kW.get(0) + solar_forecast_kW + wind_forecast_kW);&#xD;
		&#xD;
	}&#xD;
}&#xD;
&#xD;
//Get future limitation values&#xD;
else if(energyModel.v_timeStepsElapsed &lt; (8760-forecast_time_h)/energyModel.p_timeStep_h){&#xD;
	&#xD;
	//Get current RES production&#xD;
	double currentRESProduction_kW = c_forecast_RES_kW.get(0);&#xD;
	&#xD;
	//Update forecast array RES&#xD;
	c_forecast_RES_kW.remove(0);&#xD;
	&#xD;
	solar_forecast_kW = - energyModel.pp_PVProduction35DegSouth_fr.getValue(energyModel.t_h + forecast_time_h) * energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
	wind_forecast_kW = - energyModel.pp_windProduction_fr.getValue(energyModel.t_h + forecast_time_h) * energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
	&#xD;
	c_forecast_RES_kW.add(solar_forecast_kW + wind_forecast_kW); &#xD;
	&#xD;
	//Update forecast array Grid node power flow&#xD;
	c_forecast_gridNodePowerFlow_kW.remove(0);&#xD;
	&#xD;
	//Get past grid node power flow and weather (last week) if last week forecast prediction is selected.&#xD;
	if (b_forecast_lastWeekBased &amp;&amp; data_liveWeekElectrolyserPower_kW.size() &gt; 672 - roundToInt(forecast_time_h/energyModel.p_timeStep_h)){ // Use last week to create the forecast	&#xD;
	&#xD;
		double lastWeekGridNodePowerFlow_kW = data_liveWeekGridNoderPowerFlow_kW.getY(roundToInt(forecast_time_h/energyModel.p_timeStep_h)) - data_liveWeekElectrolyserPower_kW.getY(roundToInt(forecast_time_h/energyModel.p_timeStep_h));&#xD;
		double solar_lastWeek_kW = - energyModel.pp_PVProduction35DegSouth_fr.getValue(energyModel.t_h + forecast_time_h - 168) * energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
		double wind_lastWeek_kW = - energyModel.pp_windProduction_fr.getValue(energyModel.t_h + forecast_time_h - 168) * energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
			&#xD;
		c_forecast_gridNodePowerFlow_kW.add(lastWeekGridNodePowerFlow_kW - solar_lastWeek_kW - wind_lastWeek_kW + solar_forecast_kW + wind_forecast_kW);&#xD;
	}&#xD;
	else{//use current power flow to predict forecast&#xD;
		c_forecast_gridNodePowerFlow_kW.add(currentGridNodePowerFlow_kW - currentRESProduction_kW + c_forecast_RES_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-1));&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
//Set state based on current state and forecast.&#xD;
switch (ElectrolyserAsset.getState()){&#xD;
&#xD;
	case SHUTDOWN: //Not ready to be powerd up and complete shut down (when broken, maintenance, etc.)&#xD;
	&#xD;
	break;&#xD;
&#xD;
	case STANDBY: // Ready to be powered on, but no electricity consumption.&#xD;
		//Check if electrolyser will be able to be functional at least two time steps when powering up, if so: power_up = true.&#xD;
		if (c_forecast_gridNodePowerFlow_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-2) &lt; v_gridNodeCongestionLimit_kW &amp;&amp; c_forecast_gridNodePowerFlow_kW.get(roundToInt(forecast_time_h/energyModel.p_timeStep_h)-1) &lt; v_gridNodeCongestionLimit_kW){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.POWER_UP);&#xD;
			ElectrolyserAsset.setRemainingPowerUpDuration_timesteps(roundToInt(ElectrolyserAsset.getStartUpTimeStandby_h()/energyModel.p_timeStep_h));&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case POWER_UP:&#xD;
		if(ElectrolyserAsset.getRemainingPowerUpDuration_timesteps() == 0){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case IDLE: // Ready to start producting hydrogen, heated up, so consuming electricity, but not producing hydrogen yet.&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FUNCTIONAL);&#xD;
		}&#xD;
		else{&#xD;
			boolean power_down = true;&#xD;
			for(int i = 0; i &lt; c_forecast_gridNodePowerFlow_kW.size() - 2; i++){&#xD;
				if (c_forecast_gridNodePowerFlow_kW.get(i) &lt; v_gridNodeCongestionLimit_kW){&#xD;
					power_down = false;&#xD;
				}&#xD;
			}&#xD;
		&#xD;
			//Set mode based on power down or not.&#xD;
			if (power_down){&#xD;
				ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.STANDBY);&#xD;
			}&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case FUNCTIONAL: // Producing hydrogen at minimum possible amount (to make sure system is working correctly, no leaks).&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case FULLCAPACITY:	// Producing hydrogen as much as possible.&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717066943639</Id>
						<Name>f_resetSpecificGCStates_override</Name>
						<X>1230</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Reset variables &#xD;
v_totalDownTimeElectrolyser_hr = 0;&#xD;
v_totalEnergyLossIdle_kWh = 0;&#xD;
v_producedOxygen_kg = 0;&#xD;
v_hydrogenInStorage_kWh = 0;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717068271650</Id>
						<Name>f_resetSpecificGCStatesAfterRapidRun_override</Name>
						<X>1250</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Rest forecast collections&#xD;
c_forecast_RES_kW.clear();&#xD;
c_forecast_gridNodePowerFlow_kW.clear();&#xD;
&#xD;
&#xD;
//Reset dataset&#xD;
data_liveWeekElectrolyserPower_kW.reset();&#xD;
data_liveWeekGridNoderPowerFlow_kW.reset();&#xD;
&#xD;
//Reset variables&#xD;
v_hydrogenProductionDeficit_kWh = 0;&#xD;
v_hydrogenInStorage_kWh = 0;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717139694847</Id>
						<Name>f_electrolyserRegimeControl_AlwaysIdle</Name>
						<X>1610</X>
						<Y>-110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentGridNodePowerFlow_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>ElectrolyserAsset</Name>
							<Type>J_EAConversionElectrolyser</Type>
						</Parameter>
						<Body>switch (ElectrolyserAsset.getState()){&#xD;
&#xD;
	case SHUTDOWN: //Not ready to be powerd up and complete shut down (when broken, maintenance, etc.)&#xD;
	break;&#xD;
&#xD;
	case STANDBY: // Ready to be powered on, but no electricity consumption.&#xD;
		ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.POWER_UP);&#xD;
	break;&#xD;
	&#xD;
	case POWER_UP:&#xD;
		ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
	break;&#xD;
&#xD;
	case IDLE: // Ready to start producting hydrogen, heated up, so consuming electricity, but not producing hydrogen yet.&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FUNCTIONAL);&#xD;
		}&#xD;
	break;&#xD;
&#xD;
	case FUNCTIONAL: // Producing hydrogen at minimum possible amount (to make sure system is working correctly, no leaks).&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
	&#xD;
	case FULLCAPACITY:	// Producing hydrogen as much as possible.&#xD;
		if ( currentGridNodePowerFlow_kW &lt; v_gridNodeCongestionLimit_kW ){&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.FULLCAPACITY);&#xD;
		}&#xD;
		else{&#xD;
			ElectrolyserAsset.setElectrolyserState(OL_ElectrolyserState.IDLE);&#xD;
		}&#xD;
	break;&#xD;
}&#xD;
</Body>
					</Function>
				</Functions>
				<AnalysisData>
					<DataSet>
						<Id>1717063231444</Id>
						<Name>data_liveWeekElectrolyserPower_kW</Name>
						<X>1610</X>
						<Y>390</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011893317</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1717142400000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>false</FreezeXAxis>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1717069403489</Id>
						<Name>data_liveWeekGridNoderPowerFlow_kW</Name>
						<X>1600</X>
						<Y>540</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011893319</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1717142400000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>false</FreezeXAxis>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
				</AnalysisData>
				<AgentLinks>
					<AgentLink>
						<Id>1663773857863</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1663774487514</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1663773857867</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1707149618071</Id>
								<Name>rectangle4</Name>
								<X>1580</X>
								<Y>20</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-14774017</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>350</Width>
								<Height>490</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1709045045153</Id>
								<Name>rectangle5</Name>
								<X>1980</X>
								<Y>20</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-65281</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>280</Width>
								<Height>490</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1709045095108</Id>
								<Name>text11</Name>
								<X>2000</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>H2 FuelCell functionality</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1712934875018</Id>
								<Name>textH2elec1</Name>
								<X>1600</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>H2 electrolyser functionality</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1663773842879</Id>
				<Name>GCEnergyProduction</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1663773842877</Id>
					<Name>1663773842877</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089959</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1663773842875</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1663773842878</CurrentLevel>
				<ConnectionsId>1663773842874</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1671113514350</Id>
						<Name>v_hydrogenProductionDeficit_kWh</Name>
						<X>1120</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1728385990273</Id>
						<Name>p_isSliderGC</Name>
						<X>270</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1728385990271</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671111800831</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>800</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for( J_EA v : c_conversionAssets ){&#xD;
	if (v instanceof J_EAConversionElektrolyser) {&#xD;
		f_manageElektrolyser((J_EAConversionElektrolyser)v);&#xD;
	}&#xD;
}&#xD;
&#xD;
f_manageCharging();&#xD;
&#xD;
f_manageBattery();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671112355094</Id>
						<Name>f_manageElektrolyser</Name>
						<X>800</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ElektrolyserAsset</Name>
							<Type>J_EAConversionElektrolyser</Type>
						</Parameter>
						<Body>if (ElektrolyserAsset.getInputCapacity_kW()&gt;0) {&#xD;
	&#xD;
	//double availableCapacityFromBatteries_kW = p_batteryAsset == null ? 0 : ((J_EAStorageElectric)p_batteryAsset.j_ea).getCapacityAvailable_kW(); &#xD;
	double availableElectricPower_kW = v_liveConnectionMetaData.contractedDeliveryCapacity_kW - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
	double excessElectricPower_kW = -(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) + v_liveConnectionMetaData.contractedFeedinCapacity_kW); // Should at least draw this much power to stay within connection limits. Doesn't account for a battery!&#xD;
	double eta_r = ElektrolyserAsset.getEta_r();&#xD;
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay&#xD;
	double ProductionSetpoint_kW = ElektrolyserAsset.getInputCapacity_kW() * 0.30 * eta_r; // Aim for average production power of xx% of elektrolyser peak power&#xD;
	double elektrolyserSetpointElectric_kW = 0;&#xD;
	&#xD;
	if (p_electrolyserOperationMode==OL_ElectrolyserOperationMode.BALANCE) {&#xD;
		double FeedbackGain_kWpkWh = 1.0/24; // Try to recover deficit in 24 hours&#xD;
		elektrolyserSetpointElectric_kW = ProductionSetpoint_kW/eta_r + v_hydrogenProductionDeficit_kWh * FeedbackGain_kWpkWh /eta_r ;&#xD;
	&#xD;
		//traceln("Elektrolyser electric power setpoint: " + elektrolyserSetpointElectric_kW + " kW");&#xD;
		//traceln("Elektrolyser power fraction: " + elektrolyserSetpointElectric_kW/ElektrolyserAsset.j_ea.getElectricCapacity_kW());&#xD;
	} else if (p_electrolyserOperationMode==OL_ElectrolyserOperationMode.PRICE) {&#xD;
		//if(l_ownerActor.getConnectedAgent() instanceof ConnectionOwner) {&#xD;
		//double currentElectricityPriceCharge_eurpkWh = ownerActor.v_priceBandsDelivery.ceilingEntry(100.0).getValue(); // query price at 1kW&#xD;
		double currentElectricityPriceCharge_eurpkWh = p_owner.f_getElectricityPrice(-excessElectricPower_kW); // query price at 1kW&#xD;
		//traceln("Current electricity price for electrolyser: " + currentElectricityPriceCharge_eurpkWh);&#xD;
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		double deficitGain_eurpkWh = 1.0/1000000; // When SOC-error is 100%, adjust WTP price by 1 eurpkWh&#xD;
		double priceGain_peur = 5; // How strongly to ramp up power with price-delta's	&#xD;
		double WTP_eurpkWh = v_electricityPriceLowPassed_eurpkWh + deficitGain_eurpkWh * v_hydrogenProductionDeficit_kWh;&#xD;
		elektrolyserSetpointElectric_kW = max(0,ElektrolyserAsset.getInputCapacity_kW()*(WTP_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_peur)  ;&#xD;
		//traceln("WTP hydrogen production is " + roundToDecimal(WTP_eurpkWh,3) + " eurpkWh is higher than electricity price " + roundToDecimal(currentElectricityPriceCharge_eurpkWh,3) + " eurpkWh, so produce! Setpoint power: " + round(elektrolyserSetpointElectric_kW) + " kW");&#xD;
	}	&#xD;
	&#xD;
	// Limit elektrolyser power to available electric power on connection (assuming it is last in merit!)&#xD;
	elektrolyserSetpointElectric_kW = min(availableElectricPower_kW,max(elektrolyserSetpointElectric_kW,excessElectricPower_kW));&#xD;
	&#xD;
	ElektrolyserAsset.f_updateAllFlows(elektrolyserSetpointElectric_kW/ElektrolyserAsset.getInputCapacity_kW());&#xD;
	&#xD;
	v_hydrogenProductionDeficit_kWh += ProductionSetpoint_kW - max(0,-ElektrolyserAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN));	// Update hydrogen production deficit&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1663773842874</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1663774465365</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1663773842878</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1666956363819</Id>
				<Name>GCGridBattery</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1666956363817</Id>
					<Name>1666956363817</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089958</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1667030400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1666956363815</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1666956363818</CurrentLevel>
				<ConnectionsId>1666956363814</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1724948346123</Id>
						<Name>v_electricityPriceMaxForProfit_eurpkWh</Name>
						<X>1540</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.05</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724948346126</Id>
						<Name>v_gridNodeCongestionLimit_kW</Name>
						<Description>Congestion limit  of the grid node. If this limit is reached, electrolyser should not be functional.</Description>
						<X>1540</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1732029220158</Id>
						<Name>p_isSliderGC</Name>
						<X>270</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1732029220156</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666956397906</Id>
						<Name>f_connectToChild_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>770</X>
						<Y>-150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>//assetLinks.connectTo(ConnectingChildNode);&#xD;
EnergyAsset EA = (EnergyAsset) ConnectingChildNode;&#xD;
c_energyAssets.add(EA);&#xD;
&#xD;
if (EA.j_ea instanceof J_EAConsumption) {&#xD;
	//c_consumptionAssets.add(EA);&#xD;
} else if (EA.j_ea instanceof J_EAProduction ) {&#xD;
	//c_productionAssets.add(EA);&#xD;
} else if (EA.j_ea instanceof J_EAStorage ) {&#xD;
	//c_storageAssets.add(EA);&#xD;
	if (EA.j_ea instanceof J_EAStorageHeat) {&#xD;
		//p_BuildingThermalAsset = EA;&#xD;
	}&#xD;
	else if(EA.j_ea instanceof J_EAStorageElectric &amp;&amp; ((J_EAStorageElectric)EA.j_ea).getStorageCapacity_kWh() !=0) {&#xD;
		//p_batteryAsset = EA;&#xD;
	}&#xD;
} else if (EA.j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)EA.j_ea);&#xD;
	if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater ) {&#xD;
		if (p_primaryHeatingAsset == null) {&#xD;
			p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;&#xD;
		} else if (p_secondaryHeatingAsset == null) {&#xD;
			p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea;&#xD;
		} else {&#xD;
			traceln("District Heating gridconnection already has two heating systems!");&#xD;
		}&#xD;
		//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
	}&#xD;
} else {&#xD;
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");&#xD;
}&#xD;
&#xD;
&#xD;
/*&#xD;
// create a local list of energyAssets connected to its netConnection Agent for easy reference&#xD;
List&lt;EnergyAsset&gt; connectedEnergyAssets = subConnections.getConnections();&#xD;
&#xD;
int numberOfEnergyAssets = connectedEnergyAssets.size();&#xD;
for( int i = 0; i &lt; numberOfEnergyAssets; i++ ) {&#xD;
	if( connectedEnergyAssets.get(i) instanceof EnergyAsset ) {&#xD;
		c_connectedEnergyAssets.add(connectedEnergyAssets.get(i));&#xD;
&#xD;
	}&#xD;
}&#xD;
&#xD;
List&lt;EnergyAsset&gt; consumptionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConsumption);&#xD;
List&lt;EnergyAsset&gt; productionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAProduction);&#xD;
List&lt;EnergyAsset&gt; storageAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAStorage);&#xD;
List&lt;EnergyAsset&gt; conversionAssets = filter(c_connectedEnergyAssets, b -&gt; b.j_ea instanceof J_EAConversion);&#xD;
traceln("NetConnection connecting to " + numberOfEnergyAssets + " EnergyAssets");&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666956527771</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(energyModel.t_h == 0){ // Load at gridnode is not known yet (due to time step delay)&#xD;
	p_batteryAsset.v_powerFraction_fr = 0;&#xD;
	return;&#xD;
}&#xD;
&#xD;
f_manageBattery();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666967854749</Id>
						<Name>f_operateFixedConsumptionAssets_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>910</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for(EnergyAsset e : c_consumptionAssets) {&#xD;
	if( e.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_CONSUMPTION_PROFILE ) {&#xD;
		e.f_updateElectricityFlows( main.v_currentBuildingOtherElectricityDemand_fr );&#xD;
	}&#xD;
	else {&#xD;
		traceln("Grid battery has other consumption assets than 'other electricity consumption'");&#xD;
		e.v_powerFraction_fr = 0;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1688369593905</Id>
						<Name>f_calculateEnergyBalance_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>840</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_previousPowerElectricity_kW = v_currentPowerElectricity_kW;&#xD;
v_currentPowerElectricity_kW = 0;&#xD;
v_currentPowerMethane_kW = 0;&#xD;
v_currentPowerHydrogen_kW = 0;&#xD;
v_currentPowerHeat_kW = 0;&#xD;
v_currentPowerDiesel_kW = 0;&#xD;
&#xD;
v_currentElectricityConsumption_kW = 0;&#xD;
v_currentElectricityProduction_kW = 0;&#xD;
v_currentEnergyConsumption_kW = 0;&#xD;
v_currentEnergyProduction_kW = 0;&#xD;
v_currentEnergyCurtailed_kW = 0;&#xD;
&#xD;
&#xD;
// Categorical power flows&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
v_electricHobConsumption_kW = 0;&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_windProductionElectric_kW = 0;&#xD;
v_pvProductionElectric_kW = 0;&#xD;
v_conversionPowerElectric_kW = 0;&#xD;
&#xD;
&#xD;
f_operateFixedAssets();&#xD;
f_operateFlexAssets();&#xD;
f_curtailment();&#xD;
f_connectionMetering();&#xD;
&#xD;
//v_electricityTotalsCheck_kWh = v_electricityConsumedFixedProfile_kWh + v_electricityConvertedToX_kWh + v_electricityChargedByEVs_kWh  + v_electricityDeliveredToGrid_kWh &#xD;
//- v_electricityProducedPV_kWh - v_electricityProducedWind_kWh - v_electricityDrawnFromGrid_kWh - v_xConvertedToElectricity_kWh + v_electricityChargedByBattery_kWh - v_electricityDischargedByBattery_kWh;&#xD;
&#xD;
/*&#xD;
// Total Energy Use and Production&#xD;
v_totalEnergyUsed_kWh = 0;&#xD;
v_totalEnergyProduced_kWh = 0;&#xD;
for (EnergyAsset EA : c_energyAssets ) {&#xD;
	double energyUse_kWh=EA.j_ea.getEnergyUsed_kWh();&#xD;
	if (EA.j_ea instanceof J_EAConversionCurtailer) {&#xD;
		v_totalEnergyProduced_kWh -= max(0, energyUse_kWh);&#xD;
	} else {&#xD;
		v_totalEnergyUsed_kWh += max(0, energyUse_kWh);&#xD;
		v_totalEnergyProduced_kWh -= min(0, energyUse_kWh);&#xD;
	}&#xD;
}&#xD;
&#xD;
v_selfConsumption_fr = 1 - (v_electricityDeliveredToGrid_kWh + v_heatDelivered_kWh + v_methaneDelivered_kWh + v_hydrogenDelivered_kWh + v_dieselDelivered_kWh ) / v_totalEnergyProduced_kWh; // Doesn't make sense to sum different energy carriers!&#xD;
v_selfSufficiency_fr = 1 - (v_electricityDrawnFromGrid_kWh + v_heatDrawn_kWh + v_methaneDrawn_kWh + v_hydrogenDrawn_kWh + v_dieselDrawn_kWh) / v_totalEnergyUsed_kWh; // Need to account for energy in storages&#xD;
v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(v_currentPowerElectricity_kW / v_allowedCapacity_kW ));&#xD;
*/&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1709827456110</Id>
						<Name>f_manageCurtailer</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>800</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>CurtailerAsset</Name>
							<Type>J_EAConversionCurtailer</Type>
						</Parameter>
						<Body>//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());&#xD;
if (CurtailerAsset.getElectricCapacity_kW()&gt;0) {&#xD;
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);&#xD;
	double[] flowsArray = CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.getElectricCapacity_kW());&#xD;
	v_conversionPowerElectric_kW = flowsArray[4] - flowsArray[0];&#xD;
	/*if ( curtailerSetpointElectric_kW &gt; 0 ) {&#xD;
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");&#xD;
	}*/&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1666956363814</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1666957377035</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1666956363818</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<TimePlot>
								<Id>1682065741241</Id>
								<Name>SOC_plot</Name>
								<X>520</X>
								<Y>560</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893340</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1682150400000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>energyModel.p_timeStep_h</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>510</Width>
								<Height>270</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>430</Width>
									<Height>180</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>SOC</Title>
									<Id>1658477089957</Id>
									<Expression>my_dataset</Expression>
									<Color>-10496</Color>
									<Expression2>p_batteryAsset != null ? p_batteryAsset.getCurrentStateOfCharge_fr() : 0</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>192</SamplesToKeep>
								<TimeWindowExpression>100</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
							</TimePlot>
							<Rectangle>
								<Id>1724948353249</Id>
								<Name>rectangle4</Name>
								<X>1450</X>
								<Y>20</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>600</Width>
								<Height>180</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1724948367410</Id>
								<Name>txt_whateverthisis</Name>
								<X>1450</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Adjusted by sliders in batUI: find the correct ones and adjust those instead TODO!!!</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1663772408667</Id>
				<Name>GCHouse</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_connectToJ_EA(J_EA j_ea){&#xD;
	f_connectToJ_EA_default(j_ea);&#xD;
	f_connectTo_J_EA_House(j_ea);&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_removeTheJ_EA(J_EA j_ea){&#xD;
	f_removeTheJ_EA_default(j_ea);&#xD;
	f_removeTheJ_EA_house(j_ea);&#xD;
}&#xD;
&#xD;
/*@Override&#xD;
public void f_operateFixedConsumptionAssets(){&#xD;
	f_operateFixedConsumptionAssets_overwrite();&#xD;
}*/&#xD;
&#xD;
@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}&#xD;
&#xD;
@Override &#xD;
public void f_manageCharging(){&#xD;
	f_manageCharging_overwrite();&#xD;
}&#xD;
&#xD;
/*@Override &#xD;
public void f_chargeOnPrice(double a, double b){&#xD;
	f_chargeOnPrice_overwrite(a,b);&#xD;
}*/&#xD;
&#xD;
@Override&#xD;
public void f_simpleCharging(){&#xD;
	f_simpleCharging_overwrite();&#xD;
}&#xD;
</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1663772408665</Id>
					<Name>1663772408665</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089956</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1663772408663</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1663772408666</CurrentLevel>
				<ConnectionsId>1663772408662</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1674397034293</Id>
						<Name>v_vehicleSOC_fr</Name>
						<X>1260</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674414939371</Id>
						<Name>v_vehicleChargingNeed</Name>
						<X>1260</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_EVChargingNeed</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674899648649</Id>
						<Name>v_hpPreviousConsumptionLevel</Name>
						<X>2010</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674900257329</Id>
						<Name>v_dailyHPConsumption_kWh</Name>
						<X>2010</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675025488988</Id>
						<Name>v_currentPriceLevel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1230</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>OL_priceLevels</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1677597726836</Id>
						<Name>v_copHeatpump</Name>
						<X>2020</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1690363061408</Id>
						<Name>v_electricHobConsumption_kWh</Name>
						<Description>This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information</Description>
						<X>150</X>
						<Y>1520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447485797</Id>
						<Name>v_gasHeatingCost_eurpkWh_TEMPORARY</Name>
						<X>1460</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447485799</Id>
						<Name>v_eHeatingCost_eurpkWh_TEMPORARY</Name>
						<X>1460</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555064</Id>
						<Name>v_tempSetpoint_degC</Name>
						<X>1460</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>19</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555067</Id>
						<Name>v_currentIndoorTemp_degC</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1460</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>20</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555069</Id>
						<Name>v_dayTempSetpoint_degC</Name>
						<X>1460</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>18</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555071</Id>
						<Name>v_nightTempSetpoint_degC</Name>
						<X>1460</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>18</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555073</Id>
						<Name>v_heatingOn_time</Name>
						<X>1460</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>8</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1704447555075</Id>
						<Name>v_heatingOff_time</Name>
						<X>1460</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>23</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674464900101</Id>
						<Name>p_minEVChargeTarget_fr</Name>
						<X>570</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.3</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1674464900099</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675032836511</Id>
						<Name>p_householdEV</Name>
						<X>600</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAEV</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1675032836509</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675169216646</Id>
						<Name>p_minChargingPower_kW</Name>
						<X>570</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2.0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1675169216644</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1678703448389</Id>
						<Name>p_smartChargingPowerAttenuation_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>250</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>2.0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1678703448387</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702369144256</Id>
						<Name>p_hasElectricHob</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>570</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1702369144254</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702369144261</Id>
						<Name>p_smartHeatingEnabled</Name>
						<X>570</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1702369144259</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702369144264</Id>
						<Name>p_pricelevelLowDifFromAvg_eurpkWh</Name>
						<X>570</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1702369144262</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702369144267</Id>
						<Name>p_pricelevelHighDifFromAvg_eurpkWh</Name>
						<X>570</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1702369144265</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702369144270</Id>
						<Name>p_heatingKickinTreshold_degC</Name>
						<Description>[degrees]</Description>
						<X>570</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1702369144268</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1717323052486</Id>
						<Name>p_bouwjaar</Name>
						<X>50</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1717323052484</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1717417303620</Id>
						<Name>p_hasAdditionalInsulation</Name>
						<X>50</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1717417303618</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1722350833847</Id>
						<Name>p_eigenOprit</Name>
						<X>250</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1722350833845</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726685123865</Id>
						<Name>p_cookingMethod</Name>
						<X>250</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_HouseholdCookingMethod</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_HouseholdCookingMethod.NONE</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1726685123863</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749653249111</Id>
						<Name>p_airco</Name>
						<X>1240</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAAirco</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749653249109</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1674899601674</Id>
						<Name>e_measureHeatpump</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2010</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089954</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1674979200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0.99</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>if( p_primaryHeatingAsset.j_ea instanceof J_EAConversionHeatPump ){&#xD;
	v_dailyHPConsumption_kWh = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).totalElectricityConsumed_kWh - v_hpPreviousConsumptionLevel;&#xD;
	v_hpPreviousConsumptionLevel = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).totalElectricityConsumed_kWh;&#xD;
}</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664441996771</Id>
						<Name>f_manageHeatingAssets_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>920</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_hotwaterDemand_kW = p_DHWAsset != null ? p_DHWAsset.getLastFlows().get(OL_EnergyCarriers.HEAT) : 0;&#xD;
&#xD;
//Check if there is hot water being produced by the pt&#xD;
double ptProduction_kW = 0; //NEEDS TO BE A LOCAL&#xD;
for (J_EA j_ea : c_ptAssets) {&#xD;
	ptProduction_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
}&#xD;
v_hotwaterDemand_kW = max(0, v_hotwaterDemand_kW - ptProduction_kW); // Need to do this, because pt has already compensated the hot water demand in the gc flows, so just need to update this value&#xD;
&#xD;
if(p_heatBuffer != null){&#xD;
	double chargeSetpoint_kW = -fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
	p_heatBuffer.v_powerFraction_fr = chargeSetpoint_kW / p_heatBuffer.getCapacityHeat_kW();&#xD;
	p_heatBuffer.f_updateAllFlows(p_heatBuffer.v_powerFraction_fr);&#xD;
&#xD;
	if(v_hotwaterDemand_kW &gt; 0){//Only if the current pt production, wasnt enough, adjust the hotwater demand with the buffer, cause then the buffer will have discharged&#xD;
		double heatBufferDischarge_kW = -p_heatBuffer.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
		v_hotwaterDemand_kW = max(0, v_hotwaterDemand_kW - heatBufferDischarge_kW);&#xD;
	}&#xD;
}&#xD;
&#xD;
setHeatingTargetTemp();&#xD;
 &#xD;
switch (p_heatingType) {	&#xD;
	case GASBURNER:&#xD;
		f_heatWithGasburner( );&#xD;
		break;&#xD;
	case HEATPUMP_AIR:&#xD;
		f_heatWithHeatpump( );&#xD;
		break;&#xD;
	case HEATPUMP_GASPEAK:&#xD;
		f_heatWithHybridHeatpump();&#xD;
		break;&#xD;
	case HEATPUMP_BOILERPEAK:&#xD;
		traceln("House " + p_gridConnectionID + " has an unsupported heating asset!");&#xD;
		break;&#xD;
	case DISTRICTHEAT:&#xD;
		f_heatWithDistrictHeat();&#xD;
		break;&#xD;
	case LT_DISTRICTHEAT:&#xD;
		f_heatWithLTDistrictHeat();&#xD;
		break;&#xD;
	default:&#xD;
		traceln("Unsupported heatingtype in household");&#xD;
		break;&#xD;
}&#xD;
&#xD;
f_manageCookingTracker();&#xD;
f_manageAirco();&#xD;
&#xD;
if (p_BuildingThermalAsset != null &amp;&amp; p_primaryHeatingAsset != null) {&#xD;
	p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);&#xD;
	p_BuildingThermalAsset.f_updateAllFlows(p_BuildingThermalAsset.v_powerFraction_fr);&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664963959146</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double availablePowerAtPrice_kW = v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
if (p_owner != null){&#xD;
	v_currentElectricityPriceConsumption_eurpkWh = p_owner.f_getElectricityPrice( fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
	availablePowerAtPrice_kW = p_owner.f_getAvailablePowerAtPrice( fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
} else {&#xD;
	//v_currentElectricityPriceConsumption_eurpkWh = 0.3;&#xD;
}&#xD;
&#xD;
f_manageHeating();&#xD;
&#xD;
if( p_householdEV != null){&#xD;
	double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); &#xD;
	double availableChargingCapacity = v_liveConnectionMetaData.contractedDeliveryCapacity_kW + availableCapacityFromBatteries - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
	//f_maxPowerCharging( max(0, availableChargingCapacity));&#xD;
	f_manageCharging();&#xD;
	//v_currentPowerElectricity_kW += v_evChargingPowerElectric_kW;&#xD;
}&#xD;
&#xD;
/* // What's this doing here?? Seems like duplicate code.&#xD;
if( p_batteryAsset != null){&#xD;
	switch (p_batteryOperationMode){&#xD;
		case HOUSEHOLD_LOAD:&#xD;
			f_batteryManagementBalance(v_batterySOC_fr);&#xD;
		break;&#xD;
		case PRICE:&#xD;
			f_batteryManagementPrice(v_batterySOC_fr);&#xD;
		break;&#xD;
		default:&#xD;
		break;&#xD;
	}&#xD;
	p_batteryAsset.f_updateAllFlows(p_batteryAsset.v_powerFraction_fr);&#xD;
	v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();&#xD;
}&#xD;
*/ &#xD;
f_manageChargers();&#xD;
&#xD;
f_manageBattery();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665498948452</Id>
						<Name>f_connectToChild_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>820</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingParentNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>//assetLinks.connectTo(ConnectingParentNode);&#xD;
EnergyAsset EA = (EnergyAsset) ConnectingParentNode;&#xD;
J_EA j_instance = EA.j_ea;&#xD;
&#xD;
//dont add asset to list if it is not a tangible asset (i.e. a heating model for buildings) [GH] How is this not a tangible asset??&#xD;
//if(! (j_instance instanceof J_EAStorageHeat &amp;&amp; ((J_EAStorageHeat)j_instance).heatStorageType == OL_EAStorageTypes.HEATMODEL_BUILDING)) {&#xD;
	c_energyAssets.add(EA);&#xD;
//}&#xD;
&#xD;
if (j_instance instanceof J_EAConsumption) {&#xD;
	//c_consumptionAssets.add(EA);&#xD;
	if( EA.p_energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION ){&#xD;
	 	//p_DHWAsset = EA;&#xD;
 	}&#xD;
 	else if (EA.j_ea instanceof J_EADieselVehicle) {&#xD;
		//c_vehicleAssets.add( EA );&#xD;
		//c_dieselVehicles.add( EA );&#xD;
		//c_vehicleAssets.get( v_vehicleIndex ).v_powerFraction_fr = 1; // what's this??&#xD;
		/*if (c_mobilityTrackers.size() == 0) {&#xD;
			MobilityTracker m = main.add_mobilityTrackers();&#xD;
			c_mobilityTrackers.add( m );&#xD;
			m.p_gridConnection = this;&#xD;
			m.p_mobilityPatternType = OL_MobilityPatternType.PRIVATE_VEHICLE;&#xD;
			m.p_vehicleIndex = v_vehicleIndex;&#xD;
			m.p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );&#xD;
			m.p_vehicleInstance = (J_EADieselVehicle)EA.j_ea;&#xD;
			//m.p_vehicleInstance = (J_EADieselVehicle)m.p_vehicleInstance;&#xD;
			&#xD;
			m.f_getData();&#xD;
		} else {&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleIndex = v_vehicleIndex;&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleInstance = (J_EADieselVehicle)EA.j_ea;&#xD;
		}&#xD;
		((J_EADieselVehicle)EA.j_ea).setMobilityTracker( c_mobilityTrackers.get(v_vehicleIndex) );&#xD;
		*/&#xD;
	&#xD;
		//v_vehicleIndex ++;&#xD;
	}&#xD;
 } &#xD;
else if (j_instance instanceof J_EAProduction ) {&#xD;
	//c_productionAssets.add(EA);&#xD;
	if (EA.p_energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
		v_hasPV = true;&#xD;
		traceln("PV system connected to House!");&#xD;
	}&#xD;
} &#xD;
else if (j_instance instanceof J_EAStorage ) {&#xD;
	//traceln("storage asset type connecting to House: " + j_instance);&#xD;
	if (j_instance instanceof J_EABuilding) {&#xD;
		&#xD;
		//p_BuildingThermalAsset = EA;&#xD;
&#xD;
		if ( p_isolationLabel != null &amp; p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available&#xD;
			double lossFactor_WpK2 = main.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_isolationLabel.name()).path("lossFactor_WpK").doubleValue();&#xD;
			double heatCapacity_JpK2 = main.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_isolationLabel.name()).path("heatCapacity_JpK").doubleValue();&#xD;
			((J_EABuilding)EA.j_ea).lossFactor_WpK = lossFactor_WpK2;&#xD;
			((J_EABuilding)EA.j_ea).heatCapacity_JpK = heatCapacity_JpK2;&#xD;
			traceln("House thermal model updated!");&#xD;
			traceln("House type: %s, energy label: %s", p_gridConnectionType, p_isolationLabel);&#xD;
			traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);&#xD;
		}&#xD;
		//traceln( "Household heat model has kWh: " + ((J_EAStorageHeat) j_instance).getStorageCapacity());&#xD;
	}	&#xD;
	else if (j_instance instanceof J_EAEV) {&#xD;
		//c_storageAssets.add(EA);&#xD;
		//c_vehicleAssets.add( j_instance );&#xD;
		//EA.v_powerFraction_fr = 1;&#xD;
		/*if (c_mobilityTrackers.size() == 0) {&#xD;
			MobilityTracker m = main.add_mobilityTrackers();&#xD;
			c_mobilityTrackers.add( m );&#xD;
			m.p_vehicleIndex = v_vehicleIndex;&#xD;
			m.p_gridConnection = this;&#xD;
			m.p_energyAsset = EA;&#xD;
			m.p_vehicleInstance = (J_EAEV)EA.j_ea;&#xD;
&#xD;
			m.p_mobilityPatternType = PRIVATE_VEHICLE;&#xD;
			m.f_getData();&#xD;
		} else {&#xD;
			traceln("Vehicle index in House " + p_gridConnectionID + " is: " + v_vehicleIndex);&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleIndex = v_vehicleIndex;&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );&#xD;
			c_mobilityTrackers.get(v_vehicleIndex).p_vehicleInstance = EA.j_ea;&#xD;
		}	&#xD;
		((J_EAEV)EA.j_ea).setMobilityTracker( c_mobilityTrackers.get(v_vehicleIndex) );&#xD;
		*/&#xD;
		//p_householdEV = EA;&#xD;
		//v_vehicleIndex ++;&#xD;
	}&#xD;
	else if(j_instance instanceof J_EAStorageElectric &amp;&amp; ((J_EAStorageElectric)j_instance).getStorageCapacity_kWh() !=0) {&#xD;
		//p_batteryAsset = EA;&#xD;
		//c_storageAssets.add(EA);&#xD;
		v_batterySOC_fr = p_batteryAsset.getCurrentStateOfCharge();&#xD;
	}&#xD;
	else if ( j_instance instanceof J_EAStorageHeat ) {&#xD;
			if ( ((J_EAStorageHeat)j_instance).heatStorageType == OL_EAStorageTypes.HEATBUFFER ) {&#xD;
				//c_storageAssets.add(EA);&#xD;
				//p_heatBuffer = EA;				&#xD;
			//traceln( "Heatbuffer has kWH: " +((J_EAStorageHeat) j_instance).getStorageCapacity());		&#xD;
			}&#xD;
	} &#xD;
	else{&#xD;
		traceln(getName() + "storage asset create that cannot be identified (i.e. its not an EV and not an heatstorage");&#xD;
	}&#xD;
} &#xD;
else if (j_instance instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)EA.j_ea );&#xD;
	if (EA.p_energyAssetType == OL_EnergyAssetType.GAS_BURNER || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet || EA.j_ea instanceof J_EAConversionElectricHeater ) {&#xD;
		switch (p_heatingType) {&#xD;
        	case HEATPUMP_AIR:&#xD;
        		p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;&#xD;
        	break;&#xD;
        	case HEATPUMP_GASPEAK:&#xD;
				p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;&#xD;
	            p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;&#xD;
            break;&#xD;
            case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!&#xD;
                p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;                                          &#xD;
            break;&#xD;
            case GASBURNER:&#xD;
                p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)EA.j_ea : p_primaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; EA.j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)EA.j_ea : p_secondaryHeatingAsset;&#xD;
            break;&#xD;
            case DISTRICTHEAT:&#xD;
                if( EA.j_ea instanceof J_EAConversionHeatDeliverySet ){&#xD;
					p_primaryHeatingAsset = (J_EAConversion)EA.j_ea;&#xD;
				}&#xD;
				else {&#xD;
					p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea;&#xD;
					// set water/water heatpump source energy-asset&#xD;
					//if( EA.j_ea instanceof J_EAConversionHeatPump &amp;&amp; ((J_EAConversionHeatPump)EA.j_ea).getAmbientTempType().equals("WATER") &amp;&amp; p_primaryHeatingAsset.j_ea instanceof J_EAConversionHeatDeliverySet ) {&#xD;
					if( EA.j_ea instanceof J_EAConversionHeatPump ){	&#xD;
						//EA.p_linkedSourceEnergyAsset = p_primaryHeatingAsset; Still need to rebuild link with class-based energy assets!!&#xD;
						//EA.j_ea.updateAmbientTemperature( EA.p_linkedSourceEnergyAsset.j_ea.getCurrentTemperature() );&#xD;
					}&#xD;
				}	&#xD;
            break;&#xD;
            default: throw new IllegalStateException("Invalid DistrictHeating HeatingType: " + p_heatingType);&#xD;
      	}&#xD;
    }&#xD;
	else if ( EA.p_energyAssetType == OL_EnergyAssetType.GAS_PIT){&#xD;
		//f_connectToJ_EA(EA.j_ea);&#xD;
		//p_hasElectricHob = false;&#xD;
	}&#xD;
	else if (EA.p_energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {&#xD;
		//f_connectToJ_EA(EA.j_ea);&#xD;
		//p_hasElectricHob = true;&#xD;
	}&#xD;
}&#xD;
&#xD;
else {&#xD;
	traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1669203453155</Id>
						<Name>f_createThermalStorageModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>820</X>
						<Y>-210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>OL_EAPresetStorageAssets isolationLevel;&#xD;
switch(p_isolationLabel) {&#xD;
	case A:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_A;&#xD;
	break;&#xD;
	case B:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_B;&#xD;
	break;&#xD;
	case C:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_C;&#xD;
	break;&#xD;
	case D:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_D;&#xD;
	break;&#xD;
	case E:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_E;&#xD;
	break;&#xD;
	case F:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_F;&#xD;
	break;&#xD;
	case G:&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_G;&#xD;
	break;&#xD;
	default:&#xD;
		traceln("f_createPresetStorageHeat: house without invalid label, label set to C");&#xD;
		isolationLevel = OL_EAPresetStorageAssets.House_heatmodel_C;&#xD;
	break;&#xD;
}&#xD;
&#xD;
//Get preset input from DB&#xD;
List&lt; Tuple &gt; data = selectFrom( storage_assets ).where( storage_assets.name.eq( isolationLevel ) ).&#xD;
list();&#xD;
&#xD;
OL_EnergyAssetType assetType = null;&#xD;
String energyAssetPresetName = isolationLevel.toString();&#xD;
double capacityHeat_kW = 0;&#xD;
double lossFactor_WpK = 0;&#xD;
double heatCapacity_JpK = 0;&#xD;
double minTemperature_degC = 0;&#xD;
double maxTemperature_degC = 0;&#xD;
double setTemperature_degC = 0;&#xD;
String ambientTempType = "";&#xD;
&#xD;
&#xD;
for( Tuple tup : data ) {&#xD;
	assetType = tup.get( storage_assets.energy_asset_type );&#xD;
	capacityHeat_kW = tup.get( storage_assets.capacity_heat_kw );&#xD;
	lossFactor_WpK =  tup.get( storage_assets.loss_factor_wpk );&#xD;
	heatCapacity_JpK =  tup.get( storage_assets.heat_capacity_jpk );&#xD;
	minTemperature_degC = tup.get( storage_assets.min_temp_degc);&#xD;
	maxTemperature_degC = tup.get( storage_assets.max_temp_degc);&#xD;
	setTemperature_degC = tup.get( storage_assets.set_temp_degc);&#xD;
	ambientTempType = tup.get( storage_assets.ambient_temp_type);&#xD;
}&#xD;
&#xD;
EnergyAsset e = main.add_pop_energyAssets( null, p_gridConnectionID,  assetType, isolationLevel.toString() );&#xD;
e.j_ea = new J_EAStorageHeat(e, OL_EAStorageTypes.HEATMODEL_BUILDING, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, setTemperature_degC , minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, ambientTempType);&#xD;
e.f_connectToParentNode( this );&#xD;
main.c_storageAssets.add(e);&#xD;
main.c_ambientAirDependentAssets.add(e);&#xD;
&#xD;
// update static ambient temperature once for underground types&#xD;
if( ambientTempType != null &amp;&amp; ambientTempType.equals("GROUND") ) {&#xD;
	e.j_ea.updateAmbientTemperature( main.p_undergroundTemperature_degC );&#xD;
}&#xD;
if( ambientTempType != null &amp;&amp; ambientTempType.equals("AIR") ) {&#xD;
	e.j_ea.updateAmbientTemperature( main.v_currentAmbientTemperature_degC );&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1674402121915</Id>
						<Name>f_chargeOnPrice_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1230</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentElectricityPriceConsumption_eurpkWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>availablePowerOnGC_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>//J_EAEV EV_instance = (J_EAEV)p_householdEV.j_ea;&#xD;
&#xD;
double chargingRatio = 0.0; // needs to be set at zero! &#xD;
double powerAvailableAtPrice_kW = 0;&#xD;
double powerAvailableAtLastLoop_kW = 0;&#xD;
double currentPowerDrawn_kW = v_currentPowerElectricity_kW;&#xD;
boolean continueLoop = true;&#xD;
double maxChargingPower_kW = p_householdEV.getElectricCapacity_kW();&#xD;
ConnectionOwner owner = (ConnectionOwner)l_ownerActor.getConnectedAgent();&#xD;
double electricityPrice_eurpkWh = 0;&#xD;
String lastLoopsPriceLevel = "";&#xD;
OL_priceLevels priceLevel;&#xD;
int index = 0; // purely to not let loop go wild, if something goes wrong&#xD;
&#xD;
&#xD;
if( p_householdEV.getAvailability() &amp;&amp; p_householdEV.chargingNeed != OL_EVChargingNeed.NONE ){&#xD;
	while ( continueLoop &amp;&amp; index &lt; 5 ){	&#xD;
		powerAvailableAtPrice_kW += owner.f_getAvailablePowerAtPrice( currentPowerDrawn_kW );&#xD;
		electricityPrice_eurpkWh = owner.f_getElectricityPrice( currentPowerDrawn_kW );&#xD;
		priceLevel = f_getPriceLevel( electricityPrice_eurpkWh );&#xD;
		&#xD;
		if (powerAvailableAtPrice_kW &gt; p_minChargingPower_kW){ // only charge if there is at least 2 OR 1 kW availablE&#xD;
			// SCENARIO LOW CHARGING NEED -&gt; Only when price is low&#xD;
			if ( p_householdEV.chargingNeed == OL_EVChargingNeed.LOW) { &#xD;
				if( priceLevel == OL_priceLevels.LOW ) {&#xD;
					if (powerAvailableAtPrice_kW &gt;= p_householdEV.getElectricCapacity_kW() / p_smartChargingPowerAttenuation_fr ){&#xD;
						chargingRatio = 1 / p_smartChargingPowerAttenuation_fr;&#xD;
						continueLoop = false;&#xD;
					}&#xD;
					else{&#xD;
						powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;&#xD;
						currentPowerDrawn_kW += powerAvailableAtPrice_kW;&#xD;
						lastLoopsPriceLevel = "low";&#xD;
					}&#xD;
				}&#xD;
				else if ( lastLoopsPriceLevel.equals("low")) {&#xD;
					chargingRatio = min( powerAvailableAtLastLoop_kW, p_householdEV.getElectricCapacity_kW() ) / p_householdEV.getElectricCapacity_kW();&#xD;
					continueLoop = false;&#xD;
				}&#xD;
				else {&#xD;
					continueLoop = false;&#xD;
				}&#xD;
			}&#xD;
			// SCENARIO MEDIUM CHARGING NEED -&gt; Only when price is low or a bit when medium&#xD;
			else if ( p_householdEV.chargingNeed == OL_EVChargingNeed.MEDIUM){&#xD;
				if(  priceLevel == OL_priceLevels.LOW) { &#xD;
					if (powerAvailableAtPrice_kW &gt;= p_householdEV.getElectricCapacity_kW() ){&#xD;
						chargingRatio = 1 ;&#xD;
						continueLoop = false;&#xD;
					}&#xD;
					else{&#xD;
						powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;&#xD;
						currentPowerDrawn_kW += powerAvailableAtPrice_kW;&#xD;
						lastLoopsPriceLevel = "low";&#xD;
					}&#xD;
				}&#xD;
				else if(  priceLevel == OL_priceLevels.MEDIUM ) {   &#xD;
					if( lastLoopsPriceLevel.equals("low") &amp;&amp; powerAvailableAtLastLoop_kW &gt; p_minChargingPower_kW ) { // charge what you can at low (/free) price and a bit on medium price&#xD;
						chargingRatio = powerAvailableAtLastLoop_kW / p_householdEV.getElectricCapacity_kW() + p_householdEV.getElectricCapacity_kW() / 4;&#xD;
						continueLoop = false;&#xD;
&#xD;
					}&#xD;
					else {	//hier zou je nog een extra min() statement bij kunnen zetten die het minimale neemt van de huidige min statment en powerAvailableAtPrice_kW, echter, komt hoogstwaarschijnlijk niet voor (1/4 van laadsnelheid is inprincipe altijd minder dan 2 + 'x' kW.). Ook is het geen ramp om HEEEEEL sporadisch op hoge prijs te laden. &#xD;
						chargingRatio = p_householdEV.getElectricCapacity_kW() / 4 ; //charge slow, if there is no hurry and price is average&#xD;
						continueLoop = false;&#xD;
					}&#xD;
				}&#xD;
				else if (lastLoopsPriceLevel.equals("low") &amp;&amp; powerAvailableAtLastLoop_kW &gt; p_minChargingPower_kW ){&#xD;
					chargingRatio = powerAvailableAtLastLoop_kW / p_householdEV.getElectricCapacity_kW();&#xD;
					continueLoop = false;&#xD;
				}&#xD;
				else{&#xD;
					continueLoop = false;&#xD;
				}&#xD;
			}&#xD;
			// SCENARIO HIGH CHARGING NEED -&gt; charge full power, otherwise the EV will not get full&#xD;
			else {&#xD;
				chargingRatio = 1.0; // Hier kan er boven de gridconnectie geladen worden. Zeker als je 11 kW laders hebt met een warmtepomp erbij&#xD;
				continueLoop = false;&#xD;
			}&#xD;
		}&#xD;
		else { // Als er minder dan 2 kW beschikbaar is in deze prijsband (i.e. huidige loop), ga nog een keer door de loop heen in de volgende prijsband&#xD;
			powerAvailableAtLastLoop_kW = powerAvailableAtPrice_kW;&#xD;
			currentPowerDrawn_kW += powerAvailableAtPrice_kW;&#xD;
		}&#xD;
		index ++;&#xD;
	}&#xD;
}&#xD;
if( p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ //unless the charging need is high, limit the charging speed to grid connection.&#xD;
	chargingRatio = min(1, min( availablePowerOnGC_kW / p_householdEV.getElectricCapacity_kW(), chargingRatio));&#xD;
}&#xD;
p_householdEV.f_updateAllFlows( chargingRatio );&#xD;
v_evChargingPowerElectric_kW += p_householdEV.electricityConsumption_kW - p_householdEV.electricityProduction_kW;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675014184707</Id>
						<Name>f_manageCharging_overwrite</Name>
						<X>920</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); &#xD;
//double availableChargingCapacity = v_allowedCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;&#xD;
double availableChargingCapacity = v_liveConnectionMetaData.contractedDeliveryCapacity_kW + availableCapacityFromBatteries - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
v_vehicleSOC_fr = p_householdEV.getCurrentStateOfCharge_fr();&#xD;
&#xD;
switch (p_chargingAttitudeVehicles) {&#xD;
	case SIMPLE:&#xD;
		f_simpleCharging();&#xD;
	break;&#xD;
	case CHEAP:&#xD;
		f_chargeOnPrice( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));&#xD;
	break;	&#xD;
	case V2G:&#xD;
		//v_currentElectricityPriceConsumption_eurpkWh = ((ConnectionOwner)l_ownerActor.getConnectedAgent()).f_getElectricityPrice(p_connectionCapacity_kW); &#xD;
		//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		f_chargeOnPrice_V2G( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));&#xD;
	break;	&#xD;
	default:&#xD;
		traceln("Incorrect charging mode in household @f_manageCharging_overwrite");&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675033218897</Id>
						<Name>f_simpleCharging_overwrite</Name>
						<Description>Charging when arriving home, not taking grid limits into account</Description>
						<X>940</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
double powerFraction_fr = 0;&#xD;
if( p_householdEV.getCurrentStateOfCharge_fr() &lt; 1 ) {&#xD;
	powerFraction_fr = 1;&#xD;
	/*if ( p_hasSmartFlexAssets ){&#xD;
		ConnectionOwner owner = ((ConnectionOwner)l_ownerActor.getConnectedAgent());&#xD;
		if (! owner.v_currentCongestionType.equals("Overconsumption") &amp;&amp; owner.p_capacityTariffApplicable ){&#xD;
			chargingRatio = min (1, owner.p_capacityLevel_kW / p_householdEV.getElectricCapacity_kW()); // dont charge faster than the congestion level (although with household demand power drawn will be slightly higher)&#xD;
		}&#xD;
	}//*/&#xD;
}&#xD;
&#xD;
p_householdEV.f_updateAllFlows(powerFraction_fr);&#xD;
//v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];//p_householdEV.electricityConsumption_kW - p_householdEV.electricityProduction_kW;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1675034695162</Id>
						<Name>f_determineChargingDemandOfEV</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1230</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//J_EAEV EVinstance = (J_EAEV)p_householdEV;&#xD;
if( p_householdEV != null &amp;&amp; p_chargingAttitudeVehicles == OL_ChargingAttitude.CHEAP ){&#xD;
	if(! p_householdEV.getAvailability() ){ // not at home&#xD;
		p_householdEV.chargingNeed = OL_EVChargingNeed.EV_NOT_AVAILABLE;&#xD;
	}&#xD;
	else if( p_householdEV.getCurrentStateOfCharge() &gt;= 1){ // is full&#xD;
		p_householdEV.chargingNeed = OL_EVChargingNeed.NONE;&#xD;
	}&#xD;
	else { // could use some charging&#xD;
		double chargeNeedForNextTrip_kWh = max(0, p_householdEV.tripTracker.v_energyNeedForNextTrip_kWh + p_householdEV.getStorageCapacity_kWh() * (p_minEVChargeTarget_fr - p_householdEV.getCurrentStateOfCharge()));&#xD;
		double timeToNextTrip_min = p_householdEV.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;&#xD;
		double chargeDeadline_min = floor((p_householdEV.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / p_householdEV.getElectricCapacity_kW()) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;&#xD;
		if ( chargeNeedForNextTrip_kWh == 0) { &#xD;
			p_householdEV.chargingNeed = OL_EVChargingNeed.LOW;&#xD;
		}&#xD;
		else if (energyModel.t_h*60 &lt; chargeDeadline_min ){&#xD;
			//traceln(energyModel.t_h*60 + ", " + chargeDeadline_min);&#xD;
			//traceln(chargeNeedForNextTrip_kWh);&#xD;
			p_householdEV.chargingNeed = OL_EVChargingNeed.MEDIUM;&#xD;
		}&#xD;
		else {&#xD;
			p_householdEV.chargingNeed = OL_EVChargingNeed.HIGH;&#xD;
		}&#xD;
	}&#xD;
	v_vehicleChargingNeed = p_householdEV.chargingNeed;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676477303264</Id>
						<Name>f_heatWithHeatpump</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double powerFraction_heatBuffer_fr = 0;&#xD;
//double powerFraction_heatPump_fr = 0;&#xD;
double avgElectricityPrice_eurpkWh = 10;&#xD;
J_EAConversionHeatPump hp = (J_EAConversionHeatPump)p_primaryHeatingAsset;&#xD;
v_copHeatpump = hp.getCOP();&#xD;
&#xD;
/*&#xD;
if ( p_smartHeatingEnabled ) {&#xD;
	if ( p_owner != null) {&#xD;
		avgElectricityPrice_eurpkWh = p_owner.f_getAveragedElectricityPrice( (fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY)), hp.getInputCapacity_kW() );&#xD;
		//traceln("avg electircity rprice for HP: " + avgElectricityPrice_eurpkWh);&#xD;
	}&#xD;
}&#xD;
&#xD;
//heat the buffer if it requires heat&#xD;
if ( p_heatBuffer != null ){&#xD;
	if ( p_heatBuffer.requiresHeat ){&#xD;
		powerFraction_heatPump_fr = 1;&#xD;
		powerFraction_heatBuffer_fr = hp.getOutputCapacity_kW() / p_heatBuffer.getCapacityHeat_kW() ;&#xD;
		//traceln(getName() + " heat buffer cus of need");&#xD;
	} else if( p_smartHeatingEnabled &amp;&amp; avgElectricityPrice_eurpkWh &lt; v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh&#xD;
		//also heat the buffer if the price is cheap, the buffer has some room and the vehicle does not need charging&#xD;
		&amp;&amp; p_heatBuffer.getCurrentStateOfCharge() &lt; 0.7)&#xD;
	{&#xD;
		if( p_householdEV == null ){&#xD;
			powerFraction_heatPump_fr = 1;&#xD;
			powerFraction_heatBuffer_fr = hp.getOutputCapacity_kW() / p_heatBuffer.getCapacityHeat_kW();&#xD;
		} else if (p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){&#xD;
			powerFraction_heatPump_fr = 1;&#xD;
			//traceln("heat buffer cus cheap");&#xD;
			powerFraction_heatBuffer_fr = hp.getOutputCapacity_kW() / p_heatBuffer.getCapacityHeat_kW();&#xD;
		}&#xD;
	}&#xD;
	//reduce the powerfraction in the buffer with the hot water demand.&#xD;
	powerFraction_heatBuffer_fr += -v_hotwaterDemand_kW / p_heatBuffer.getCapacityHeat_kW();&#xD;
}&#xD;
*/&#xD;
&#xD;
//heat the house&#xD;
//if( powerFraction_heatPump_fr == 0 ){ // Why this check? &lt;- to make sure the heatpump is only used for househeating if it is not ALREADY heating the buffer (Peter)&#xD;
	if (p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC ) {&#xD;
		hp.v_powerFraction_fr = 1;&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = (hp.getOutputCapacity_kW() - v_hotwaterDemand_kW) / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
	} &#xD;
	if (v_hotwaterDemand_kW &gt; p_primaryHeatingAsset.getOutputCapacity_kW() ) {&#xD;
		traceln("Warning! Hotwaterdemand exceeds available heating power of house! Will lead to shortage of heat on GC!");&#xD;
	}&#xD;
	/*&#xD;
	else if( p_smartHeatingEnabled &amp;&amp; avgElectricityPrice_eurpkWh &lt; v_electricityPriceLowPassed_eurpkWh - p_pricelevelLowDifFromAvg_eurpkWh&#xD;
		&amp;&amp; p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC + 1) {&#xD;
		//also heat the house if the price is cheap, the the house is colder than desired + 1 and the vehicle does not need charging&#xD;
		if( p_householdEV == null ){&#xD;
			powerFraction_heatPump_fr = 1;&#xD;
			p_BuildingThermalAsset.v_powerFraction_fr = hp.getOutputCapacity_kW() / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
		} &#xD;
		else if (p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ // only use heatpump if the vehicle is not about to charge&#xD;
			powerFraction_heatPump_fr = 1;&#xD;
			//traceln("heat house cus of cheap");&#xD;
			p_BuildingThermalAsset.v_powerFraction_fr = hp.getOutputCapacity_kW() / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
		}&#xD;
	}*/ &#xD;
	else {&#xD;
		hp.v_powerFraction_fr = v_hotwaterDemand_kW/hp.getOutputCapacity_kW();&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
	}&#xD;
//} &#xD;
/*&#xD;
else {&#xD;
	p_BuildingThermalAsset.v_powerFraction_fr = 0; // Whut?&#xD;
}&#xD;
if ( p_heatBuffer != null ){&#xD;
	p_heatBuffer.v_powerFraction_fr = powerFraction_heatBuffer_fr;&#xD;
	p_heatBuffer.f_updateAllFlows(powerFraction_heatBuffer_fr);&#xD;
}*/&#xD;
//p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_heatPump_fr;&#xD;
//traceln( "heatpump power fraction: " + hp.v_powerFraction_fr );&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676976246060</Id>
						<Name>f_heatWithHybridHeatpump</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump &amp; p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)&#xD;
	J_EAConversionHeatPump HP = (J_EAConversionHeatPump)p_primaryHeatingAsset;&#xD;
	v_copHeatpump = HP.getCOP();&#xD;
	if (p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {&#xD;
		//HP.updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! &lt;-- waarom dit gebeurt al in de main (peter 21-02-23)&#xD;
		boolean gasCheaper = f_calcCheapestHeatingPrice();&#xD;
		if ( gasCheaper ) { // heat with gas&#xD;
			traceln("gas is cheaper");&#xD;
			double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
			p_BuildingThermalAsset.v_powerFraction_fr = (p_secondaryHeatingAsset.v_powerFraction_fr * p_secondaryHeatingAsset.getOutputCapacity_kW() - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
		} else { // heat with heatpump&#xD;
			//double powerDemand_kW = (v_tempSetpoint_degC - houseTemp) * ((J_EAStorageHeat)p_BuildingThermalAsset.j_ea).getHeatCapacity_JpK() / 3.6e6;&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 1;//min(1,powerDemand_kW / p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,v_hotwaterDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
			p_BuildingThermalAsset.v_powerFraction_fr = HP.getOutputCapacity_kW() / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
			traceln("HP is cheaper");&#xD;
		}&#xD;
	} else { // Just supply DHW demand with gas burner&#xD;
		p_secondaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW();&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
		traceln("just DHW");&#xD;
	}&#xD;
	p_secondaryHeatingAsset.f_updateAllFlows( p_secondaryHeatingAsset.v_powerFraction_fr );&#xD;
} else if( p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet &amp;&amp; ( p_secondaryHeatingAsset instanceof J_EAConversionElectricHeater || p_secondaryHeatingAsset instanceof J_EAConversionHeatPump ) &amp;&amp; p_heatBuffer instanceof J_EAStorageHeat ) { // Heat Delivery Set and booster water/water heatpump with buffer for hotwater, )&#xD;
	p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_heatBuffer.v_powerFraction_fr = 0;&#xD;
	&#xD;
	traceln("bivalent DH system with buffer operating mode");&#xD;
	double v_bufferTemp_degC = p_heatBuffer.getCurrentTemperature();&#xD;
	double houseTemperature_degC = p_BuildingThermalAsset.getCurrentTemperature();&#xD;
	&#xD;
	// buffer instead of heatpump! TODO: change to refill buffer! double secondaryDemand_kW = v_hotwaterDemand_kW;&#xD;
	traceln(" thermalstoragetemp "+ p_BuildingThermalAsset.getCurrentTemperature() + ",  v_setpoint_degC " + v_tempSetpoint_degC);&#xD;
	&#xD;
	// 1) w/w heatpump feeds (only) the local heat buffer for tapwater when temperature is beneath buffer setpoint:&#xD;
	boolean b_bufferTempBelowSetpoint = v_bufferTemp_degC &lt; p_heatBuffer.getSetTemperature_degC();&#xD;
	&#xD;
	p_secondaryHeatingAsset.v_powerFraction_fr = b_bufferTempBelowSetpoint ? 1 : 0;&#xD;
	p_secondaryHeatingAsset.f_updateAllFlows( p_secondaryHeatingAsset.v_powerFraction_fr );&#xD;
	&#xD;
	double heatSupplyToBuffer_kW = -p_secondaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
		&#xD;
	// 2) supply tapwater from local heatbuffer on demand, AND take in heat from the heatpump&#xD;
	p_heatBuffer.v_powerFraction_fr = ( - v_hotwaterDemand_kW + heatSupplyToBuffer_kW ) / p_heatBuffer.getCapacityHeat_kW();&#xD;
	p_heatBuffer.f_updateAllFlows( p_heatBuffer.v_powerFraction_fr );&#xD;
	&#xD;
	// 3) heat the house from heat delivery set directly, and take care to add this heat load to the existing heat flow from w/w heatpump consumption!&#xD;
	boolean b_houseTempBelowSetpoint = houseTemperature_degC &lt; v_tempSetpoint_degC? true : false;&#xD;
	&#xD;
	p_primaryHeatingAsset.v_powerFraction_fr += b_houseTempBelowSetpoint? 1 : 0;  // maybe cap for maximum 1?&#xD;
	//p_primaryHeatingAsset.f_updateAllFlows(	p_primaryHeatingAsset.v_powerFraction_fr );&#xD;
	&#xD;
	double heatFlowToHouse_kW = p_primaryHeatingAsset.getOutputCapacity_kW() * p_primaryHeatingAsset.v_powerFraction_fr - p_secondaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
	p_BuildingThermalAsset.v_powerFraction_fr = (heatFlowToHouse_kW / p_BuildingThermalAsset.getCapacityHeat_kW() );&#xD;
	//p_primaryHeatingAsset.v_powerFraction_fr = p_BuildingThermalAsset.j_ea.getCurrentTemperature() &lt; v_tempSetpoint_degC ? 1 : 0;&#xD;
	//traceln("b_primaryOperate = "+ b_primaryOperate + ", GCHouse f_heatWithHybridHeatpump: p_secondaryHeatingAsset.j_ea.capacityHeat_kW = " + p_secondaryHeatingAsset.j_ea.capacityHeat_kW + ". p_secondaryHeatingAsset.j_ea =  "+p_secondaryHeatingAsset.j_ea.toString());&#xD;
	&#xD;
	//boolean b_primaryOperate = houseTemperature_degC &lt; v_tempSetpoint_degC ? true : false;&#xD;
	&#xD;
	&#xD;
	//p_secondaryHeatingAsset.v_powerFraction_fr = secondaryDemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW(); &#xD;
	&#xD;
	&#xD;
	//p_BuildingThermalAsset.v_powerFraction_fr = p_primaryHeatingAsset.j_ea.capacityHeat_kW * p_primaryHeatingAsset.v_powerFraction_fr;&#xD;
&#xD;
	//traceln("GCHouse f_heatwithhybrid... -&gt; p_primaryHeatingAsset.v_powerFraction_fr = " + p_primaryHeatingAsset.v_powerFraction_fr + ", p_secondaryHeatingAsset.v_powerFraction_fr = " + p_secondaryHeatingAsset.v_powerFraction_fr + ", p_BuildingThermalAsset.v_powerFraction_fr" + p_BuildingThermalAsset.v_powerFraction_fr);&#xD;
	//p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);&#xD;
	//p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);&#xD;
	//p_BuildingThermalAsset.f_updateAllFlows(p_BuildingThermalAsset.v_powerFraction_fr);&#xD;
	&#xD;
} else {&#xD;
	traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in house " + p_gridConnectionID);&#xD;
	p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
	p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1677664183773</Id>
						<Name>f_chargeOnPriceSimpler</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1240</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>availablePowerOnGc_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double chargingRatio = 0;&#xD;
if( p_householdEV.getAvailability() &amp;&amp; p_householdEV.chargingNeed != OL_EVChargingNeed.NONE ){	&#xD;
	OL_priceLevels priceLevel = f_getPriceLevel(v_currentAveraged7kWElectricityPrice_eurpkWh);&#xD;
	if ( p_householdEV.chargingNeed == OL_EVChargingNeed.LOW) { &#xD;
		if( priceLevel == OL_priceLevels.LOW ) {&#xD;
			chargingRatio = 1.0;&#xD;
		}&#xD;
	}&#xD;
	else if ( p_householdEV.chargingNeed == OL_EVChargingNeed.MEDIUM){&#xD;
		if ( priceLevel == OL_priceLevels.LOW) { &#xD;
			chargingRatio = 1.0;&#xD;
		}&#xD;
		else if(  priceLevel == OL_priceLevels.MEDIUM ) {&#xD;
			chargingRatio = p_householdEV.capacityElectric_kW / 4;&#xD;
		}&#xD;
	}&#xD;
	// SCENARIO HIGH CHARGING NEED -&gt; charge full power, otherwise the EV will not get full&#xD;
	else {&#xD;
		chargingRatio = 1.0; // Hier kan er boven de gridconnectie geladen worden. Zeker als je 11 kW laders hebt met een warmtepomp erbij&#xD;
	}&#xD;
}&#xD;
if( p_householdEV.chargingNeed != OL_EVChargingNeed.HIGH){ //unless the charging need is high, limit the charging speed to grid connection.&#xD;
	chargingRatio = min(1, min( availablePowerOnGc_kW / p_householdEV.getElectricCapacity_kW(), chargingRatio));&#xD;
}&#xD;
v_evChargingPowerElectric_kW += p_householdEV.ownerAsset.f_updateElectricityFlows( chargingRatio );&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1678708804201</Id>
						<Name>f_batteryManagementLoad</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1240</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double powerfraction_fr = 0;&#xD;
if ( v_currentPowerElectricity_kW &lt; 0 &amp;&amp; p_batteryAsset.getCurrentStateOfCharge() &lt; 1 &amp;&amp; v_currentPriceLevel !=  OL_priceLevels.HIGH ){&#xD;
	powerfraction_fr = 1;&#xD;
}&#xD;
else if( v_currentPowerElectricity_kW &gt; v_currentLoadLowPassed_kW &amp;&amp; p_batteryAsset.getCurrentStateOfCharge() &gt; 0){&#xD;
	powerfraction_fr = -1;&#xD;
}&#xD;
else if ( v_batterySOC_fr &lt; 0.6 &amp;&amp; v_currentPowerElectricity_kW &lt; 1 &amp;&amp; v_currentPriceLevel !=  OL_priceLevels.HIGH){&#xD;
	powerfraction_fr = min( 1, p_batteryAsset.capacityElectric_kW / 2.5);&#xD;
}&#xD;
p_batteryAsset.v_powerFraction_fr = powerfraction_fr;&#xD;
p_batteryAsset.f_updateAllFlows( p_batteryAsset.v_powerFraction_fr );&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693300820997</Id>
						<Name>f_connectTo_J_EA_House</Name>
						<X>1090</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>/*&#xD;
if (j_ea instanceof J_EAConversion) {&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.GAS_BURNER || j_ea instanceof J_EAConversionHeatPump || j_ea instanceof J_EAConversionHeatDeliverySet || j_ea instanceof J_EAConversionElectricHeater ) {&#xD;
		switch (p_heatingType) {&#xD;
        	case HEATPUMP_AIR:&#xD;
        		p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
        		break;&#xD;
        	case HEATPUMP_GASPEAK:&#xD;
				p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
	            p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
            	break;&#xD;
            case HEATPUMP_BOILERPEAK:    // ambigue wat we met boiler bedoelen; eboiler of grootschalige DH_boiler = gasburner!&#xD;
                p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionHeatPump? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionElectricHeater? (J_EAConversion)j_ea : p_secondaryHeatingAsset;                                          &#xD;
            	break;&#xD;
            case GASBURNER:&#xD;
                p_primaryHeatingAsset = p_primaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasBurner? (J_EAConversion)j_ea : p_primaryHeatingAsset;&#xD;
                p_secondaryHeatingAsset = p_secondaryHeatingAsset == null &amp;&amp; j_ea instanceof J_EAConversionGasCHP? (J_EAConversion)j_ea : p_secondaryHeatingAsset;&#xD;
            	break;&#xD;
            case DISTRICTHEAT:&#xD;
                if( j_ea instanceof J_EAConversionHeatDeliverySet ){&#xD;
					p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
					//traceln("Assigning heat delivery set as primary heating asset for house!");&#xD;
				}&#xD;
				else {&#xD;
					p_secondaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
					// set water/water heatpump source energy-asset&#xD;
					&#xD;
					//if( j_ea instanceof J_EAConversionHeatPump &amp;&amp; ((J_EAConversionHeatPump)j_ea).getAmbientTempType().equals("WATER") &amp;&amp; p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet ) {&#xD;
						//((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset = p_primaryHeatingAsset;&#xD;
						//j_ea.updateAmbientTemperature( ((J_EAConversionHeatPump)j_ea).p_linkedSourceEnergyAsset.getCurrentTemperature() );&#xD;
					//}&#xD;
					&#xD;
				}	&#xD;
            	break;&#xD;
            case LT_DISTRICTHEAT:&#xD;
            	p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
            	break;&#xD;
            default: throw new IllegalStateException("Invalid HeatingType: " + p_heatingType);&#xD;
      	}&#xD;
    }&#xD;
}&#xD;
*/&#xD;
&#xD;
if (j_ea instanceof J_EAEV) {&#xD;
	if (p_householdEV != null){&#xD;
	    	throw new RuntimeException(String.format("Exception: trying to assign 2 EVs to a household!! --&gt; one of them will not charge! "));&#xD;
	}&#xD;
	p_householdEV = (J_EAEV)j_ea;&#xD;
}&#xD;
if (j_ea instanceof J_EAAirco) {&#xD;
	p_airco = (J_EAAirco)j_ea;&#xD;
	c_electricHeatpumpAssets.add(j_ea);&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696923950404</Id>
						<Name>f_setAnnualEnergyDemand</Name>
						<X>1090</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Placeholder function f_setAnnualEnergyDemand called! Nothing will happen.");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696924006982</Id>
						<Name>f_setEnergyLabel</Name>
						<X>1090</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("Placeholder function f_setEnergyLabel called! Nothing will happen.");</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702369252216</Id>
						<Name>setHeatingTargetTemp</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( energyModel.t_hourOfDay &gt; v_heatingOn_time &amp;&amp; energyModel.t_hourOfDay &lt; v_heatingOff_time){&#xD;
	v_tempSetpoint_degC = v_dayTempSetpoint_degC ; &#xD;
}&#xD;
else {&#xD;
	v_tempSetpoint_degC = v_nightTempSetpoint_degC;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>boolean</ReturnType>
						<Id>1702369294416</Id>
						<Name>f_calcCheapestHeatingPrice</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1720</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();&#xD;
boolean isGasCheaper = false;&#xD;
&#xD;
if( p_owner != null ) {&#xD;
	v_gasHeatingCost_eurpkWh_TEMPORARY = p_owner.f_getMethanePrice();&#xD;
	v_eHeatingCost_eurpkWh_TEMPORARY = p_owner.f_getAveragedElectricityPrice( fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY), p_primaryHeatingAsset.getInputCapacity_kW() ) / HP_COP;&#xD;
	isGasCheaper = v_gasHeatingCost_eurpkWh_TEMPORARY &lt; v_eHeatingCost_eurpkWh_TEMPORARY ? true:false;&#xD;
}	&#xD;
&#xD;
return isGasCheaper;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726129903799</Id>
						<Name>f_removeCurrentHeatingSystem</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1090</X>
						<Y>20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>p_heatingType = OL_GridConnectionHeatingType.NONE;&#xD;
p_primaryHeatingAsset.removeEnergyAsset();&#xD;
if ( p_secondaryHeatingAsset != null){&#xD;
	p_secondaryHeatingAsset.removeEnergyAsset();&#xD;
}&#xD;
if ( p_tertiaryHeatingAsset != null){&#xD;
	p_tertiaryHeatingAsset.removeEnergyAsset();&#xD;
}&#xD;
if ( p_heatBuffer != null){&#xD;
	p_heatBuffer.removeEnergyAsset();&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726301776809</Id>
						<Name>f_heatWithGasburner</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner &amp;&amp; p_BuildingThermalAsset != null) { &#xD;
	if (p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {&#xD;
		double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW()  );&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = max(0, (p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getOutputCapacity_kW()  - v_hotwaterDemand_kW) / p_BuildingThermalAsset.getCapacityHeat_kW() );			&#xD;
		if (v_hotwaterDemand_kW &gt; p_primaryHeatingAsset.getOutputCapacity_kW() ) {&#xD;
			traceln("Warning! Hotwaterdemand exceeds available heating power of house! Will lead to shortage of heat on GC!");&#xD;
		}&#xD;
	}&#xD;
	else { // Just supply DHW&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW();&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
	}&#xD;
}&#xD;
else if (p_primaryHeatingAsset instanceof J_EAConversionGasBurner &amp;&amp; p_BuildingThermalAsset == null){ &#xD;
	double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT); //TODO Where does this v_currentPowerHeat_kW come from? (Peter 14-09-2024), &#xD;
	p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
	traceln("Household is heating with gasburner without thermal building asset, check if this is correct @f_heatWithGasBurner");&#xD;
	//p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getHeatCapacity_kW();&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726301785545</Id>
						<Name>f_heatWithDistrictHeat</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet &amp;&amp; p_BuildingThermalAsset != null) { &#xD;
	if (p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {&#xD;
		double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW()  );&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = max(0, (  p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getOutputCapacity_kW()  - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getCapacityHeat_kW());			&#xD;
	}&#xD;
	else { &#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW();&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
	}&#xD;
	v_districtHeatDelivery_kW = p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getOutputCapacity_kW();&#xD;
}&#xD;
else {&#xD;
	traceln("House " + p_gridConnectionID + " has heatingtype DISTRICT HEAT, but no delivery set or building asset!");&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726334759211</Id>
						<Name>f_manageCookingTracker</Name>
						<X>1230</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Add heat from cooking assets to house&#xD;
if (p_cookingTracker != null) { // check for presence of cooking asset&#xD;
	p_cookingTracker.manageActivities((energyModel.t_h-energyModel.p_runStartTime_h)*60); // also calls f_updateAllFlows in HOB asset	&#xD;
	v_electricHobConsumption_kW += p_cookingTracker.HOB.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY); // PowerFlows van consumption assets worden in f_calculateEnergyBalance opgeteld, dus ken dit niet toe aan totale consumptie!&#xD;
	v_electricHobConsumption_kWh += v_electricHobConsumption_kW * energyModel.p_timeStep_h;&#xD;
	v_residualHeatGasPit_kW = -p_cookingTracker.HOB.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
	if (p_BuildingThermalAsset != null) {&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr += v_residualHeatGasPit_kW / p_BuildingThermalAsset.getCapacityHeat_kW();&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749648447119</Id>
						<Name>f_manageAirco</Name>
						<X>1230</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if( p_airco != null ) {&#xD;
	if (p_airco.remainingONtimesteps == 0){&#xD;
		double switchOnProbability = 0;&#xD;
		switch (roundToInt(energyModel.v_currentAmbientTemperature_degC)) {&#xD;
			case 23:&#xD;
				switchOnProbability = 0.0025;&#xD;
				break;&#xD;
			case 24:&#xD;
				switchOnProbability = 0.005;&#xD;
				break;&#xD;
			case 25:&#xD;
				switchOnProbability = 0.008;&#xD;
				break;&#xD;
			case 26:&#xD;
				switchOnProbability = 0.01;&#xD;
				break;&#xD;
			case 27:&#xD;
				switchOnProbability = 0.012;&#xD;
				break;&#xD;
			case 28:&#xD;
				switchOnProbability = 0.014;&#xD;
				break;&#xD;
			case 29:&#xD;
				switchOnProbability = 0.016;&#xD;
				break;&#xD;
			case 30:&#xD;
				switchOnProbability = 0.018;&#xD;
				break;&#xD;
			case 31:&#xD;
				switchOnProbability = 0.02;&#xD;
				break;&#xD;
		}&#xD;
		if( randomTrue(switchOnProbability)){&#xD;
			int nbTimestepsOn = uniform_discr(4, 12);&#xD;
			p_airco.turnOnAirco( nbTimestepsOn );&#xD;
		}&#xD;
	}&#xD;
	p_airco.f_updateAllFlows( 1.0 );&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749722407831</Id>
						<Name>f_removeTheJ_EA_house</Name>
						<X>1090</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>if (j_ea instanceof J_EAEV) {&#xD;
	p_householdEV = null;&#xD;
}&#xD;
if (j_ea instanceof J_EAAirco) {&#xD;
	p_airco = null;&#xD;
	c_electricHeatpumpAssets.remove(j_ea);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752073360816</Id>
						<Name>f_heatWithLTDistrictHeat</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1700</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump &amp;&amp; p_BuildingThermalAsset != null) { &#xD;
	// The only supported combination is currently a heatpump as booster and heatdemand from a building asset (and hot water)&#xD;
	if (p_BuildingThermalAsset.getCurrentTemperature() &lt; v_tempSetpoint_degC - p_heatingKickinTreshold_degC) {&#xD;
		double powerDemand_kW = v_hotwaterDemand_kW + (v_tempSetpoint_degC - p_BuildingThermalAsset.getCurrentTemperature()) * p_BuildingThermalAsset.getHeatCapacity_JpK() / 3.6e6;&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1, powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW()  );&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = max(0, (  p_primaryHeatingAsset.v_powerFraction_fr * p_primaryHeatingAsset.getOutputCapacity_kW()  - v_hotwaterDemand_kW ) / p_BuildingThermalAsset.getCapacityHeat_kW());			&#xD;
	}&#xD;
	else { &#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = v_hotwaterDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW();&#xD;
		p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	throw new RuntimeException("House " + p_gridConnectionID + " has heatingtype LT DISTRICTHEAT, but no booster or building asset!");&#xD;
}</Body>
					</Function>
				</Functions>
				<AnalysisData>
					<DataSet>
						<Id>1674899624978</Id>
						<Name>d_heatpumpDailyConsumption</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>true</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011893431</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1674979200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">DAY</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<VerticalAxisExpression>v_dailyHPConsumption_kWh</VerticalAxisExpression>
						<SamplesToKeep>100</SamplesToKeep>
					</DataSet>
				</AnalysisData>
				<AgentLinks>
					<AgentLink>
						<Id>1663772408662</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1663772679600</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1663772408666</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<TimePlot>
								<Id>1674899851745</Id>
								<Name>HeatpumpPlot</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>1970</X>
								<Y>110</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>false</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893401</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1674979200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>490</Width>
								<Height>260</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>410</Width>
									<Height>170</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>DAY</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Heatpump daily consumption kWh </Title>
									<Id>1658477089955</Id>
									<Expression>d_heatpumpDailyConsumption</Expression>
									<Color>-2987746</Color>
									<Expression2>0</Expression2>
									<Expression2Flag>false</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>25</SamplesToKeep>
								<TimeWindowExpression>25</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>dd_MM</LabelFormat>
							</TimePlot>
							<Line>
								<Id>1726301544269</Id>
								<Name>line3</Name>
								<X>1460</X>
								<Y>50</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>310</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1726301549553</Id>
								<Name>txt_heatingFunctionality</Name>
								<X>1560</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heating functionality</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1665480522864</Id>
				<Name>GCIndustry</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<AdditionalClassCode>@Override&#xD;
public void f_connectToJ_EA(J_EA j_ea){&#xD;
	f_connectToJ_EA_default(j_ea);&#xD;
	f_connectTo_J_EA_Industry(j_ea);&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}</AdditionalClassCode>
				<Folder>1752737189062</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1665480522862</Id>
					<Name>1665480522862</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089953</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1665561600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1665480522860</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1665480522863</CurrentLevel>
				<ConnectionsId>1665480522859</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1684919215378</Id>
						<Name>v_previousPowerMethane_kW</Name>
						<X>1120</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665498760168</Id>
						<Name>f_connectToChild_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>780</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingParentNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>//assetLinks.connectTo(ConnectingParentNode);&#xD;
EnergyAsset EA = (EnergyAsset) ConnectingParentNode;&#xD;
c_energyAssets.add(EA);&#xD;
&#xD;
if (EA.j_ea instanceof J_EAConsumption) {&#xD;
	//c_consumptionAssets.add(EA);&#xD;
} else if (EA.j_ea instanceof J_EAProduction ) {&#xD;
//c_productionAssets.add(EA);&#xD;
} else if (EA.j_ea instanceof J_EAStorage ) {&#xD;
	//c_storageAssets.add(EA);&#xD;
	if (EA.j_ea instanceof J_EAStorageHeat) {&#xD;
		//p_BuildingThermalAsset = EA; Obsolete! Need to replace in connectToJ_EA&#xD;
	}&#xD;
	else if (EA.j_ea instanceof J_EAEV) {&#xD;
		//c_vehicleAssets.add( EA );&#xD;
		//c_vehicleAssets.get( v_vehicleIndex ).v_powerFraction_fr = 1;&#xD;
		/*MobilityTracker m = main.add_mobilityTrackers();&#xD;
		c_mobilityTrackers.add( m );&#xD;
		m.p_vehicleIndex = v_vehicleIndex;&#xD;
		m.p_gridConnection = this;&#xD;
		m.p_vehicleInstance = (J_EAEV)m.p_vehicleInstance;&#xD;
		m.p_energyAsset = c_vehicleAssets.get( v_vehicleIndex );&#xD;
		m.p_vehicleInstance = (J_EAEV)m.p_energyAsset.j_ea;&#xD;
		m.p_mobilityPatternType = OL_MobilityPatternType.TRUCK;&#xD;
		((J_EAEV)m.p_vehicleInstance).setMobilityTracker( m );&#xD;
		m.f_getData();*/&#xD;
		//v_vehicleIndex ++;&#xD;
	}&#xD;
} else if (EA.j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)EA.j_ea);&#xD;
	if(p_gridConnectionType == OL_GridConnectionType.AGRO_ENERGYHUB) {&#xD;
	&#xD;
		if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHydrogenBurner) {&#xD;
			if (p_primaryHeatingAsset==null) {&#xD;
				p_primaryHeatingAsset = (J_EAConversion)EA.j_ea ;&#xD;
			} else { &#xD;
				p_secondaryHeatingAsset = (J_EAConversion)EA.j_ea ;&#xD;
			}&#xD;
		} else if ( EA.j_ea instanceof J_EAConversionHeatPump  || EA.j_ea instanceof J_EAConversionGasCHP) {&#xD;
			if (p_primaryHeatingAsset==null) {&#xD;
				//p_primaryHeatingAsset = EA; Obsolete!&#xD;
			} else { &#xD;
				p_secondaryHeatingAsset = p_primaryHeatingAsset;&#xD;
				//p_primaryHeatingAsset = EA; Obsolete!&#xD;
			}&#xD;
			if (EA.j_ea instanceof J_EAConversionHeatPump) {&#xD;
				((J_EAConversionHeatPump)p_primaryHeatingAsset).outputTemperature_degC = 80; // For pastorizing milk&#xD;
			}&#xD;
			//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
		} else 	if (EA.j_ea instanceof J_EAConversionCurtailer || EA.j_ea instanceof J_EAConversionCurtailerHeat) {&#xD;
			p_curtailer = (J_EAConversionCurtailer)EA.j_ea ;&#xD;
		} else {&#xD;
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");&#xD;
		}&#xD;
	} else {&#xD;
		if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHydrogenBurner ) {&#xD;
			p_primaryHeatingAsset = (J_EAConversion)EA.j_ea ;&#xD;
		} else {&#xD;
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingParentNode.getId() + " is of unknown type or null! ");&#xD;
		}&#xD;
	}&#xD;
&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665499506761</Id>
						<Name>f_operateFixedConsumptionAssets_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>800</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>switch( p_gridConnectionType ) {&#xD;
	case STEEL:&#xD;
		for(EnergyAsset ea : c_consumptionAssets) {&#xD;
			if( ea.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {&#xD;
				ea.f_updateElectricityFlows( main.v_currentIndustrySteelElectricityDemand_fr );&#xD;
			}&#xD;
			else if( ea.p_energyAssetType == OL_EnergyAssetType.HEAT_DEMAND ) {&#xD;
				ea.f_updateAllFlows( main.v_currentIndustrySteelHeatDemand_fr );&#xD;
			}&#xD;
			else {&#xD;
				ea.v_powerFraction_fr = 0; // To disable other asset&#xD;
				traceln("industry has other consumption assets than modeled so far");&#xD;
			}&#xD;
		}&#xD;
	break;&#xD;
	case INDUSTRY_OTHER:&#xD;
		for(EnergyAsset ea : c_consumptionAssets) {&#xD;
			if( ea.p_energyAssetType == OL_EnergyAssetType.ELECTRICITY_CONSUMPTION_PROFILE ) {&#xD;
				ea.f_updateElectricityFlows( main.v_currentIndustryOtherElectricityDemand_fr );&#xD;
			}&#xD;
			else if( ea.p_energyAssetType == OL_EnergyAssetType.HEAT_DEMAND ) {&#xD;
				ea.f_updateAllFlows( main.v_currentIndustryOtherHeatDemand_fr );&#xD;
			}&#xD;
			else {&#xD;
				ea.v_powerFraction_fr = 0; // To disable other asset&#xD;
				traceln("industry has other consumption assets than modeled so far");&#xD;
			}&#xD;
		}&#xD;
	break;&#xD;
	default:&#xD;
		traceln("industry not modeled so far");&#xD;
&#xD;
	break;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1665501255400</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>800</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(p_gridConnectionID.contains("agrohub")) {&#xD;
	f_operateFlexAssets_agroenergyhub();&#xD;
	for( J_EAStorage v : c_storageAssets ) {	&#xD;
		//v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;&#xD;
		v_conversionPowerElectric_kW += v.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
		//v_currentPowerMethane_kW += v.methaneConsumption_kW - v.methaneProduction_kW;&#xD;
		//v_currentPowerHydrogen_kW += v.hydrogenConsumption_kW - v.hydrogenProduction_kW;&#xD;
		//v_currentPowerHeat_kW += v.heatConsumption_kW - v.heatProduction_kW;&#xD;
		//v_currentPowerDiesel_kW += v.dieselConsumption_kW;&#xD;
	}&#xD;
	&#xD;
	//traceln("Agroenergyhub logic!");&#xD;
} else {&#xD;
	&#xD;
	// Determine house heating&#xD;
	f_manageHeatingAssets();&#xD;
	&#xD;
}&#xD;
&#xD;
f_manageCharging();&#xD;
/*for( J_EAVehicle v: c_vehicleAssets) {&#xD;
	v_currentPowerElectricity_kW += v.electricityConsumption_kW - v.electricityProduction_kW;&#xD;
}*/&#xD;
&#xD;
if (p_batteryAsset != null){ // TEST CODE&#xD;
	if (p_batteryAsset.getStorageCapacity_kWh() &gt; 0) {&#xD;
		//f_batteryManagementBalance(p_batteryAsset.getCurrentStateOfCharge());&#xD;
		f_batteryManagementNodalPricing();&#xD;
		p_batteryAsset.f_updateAllFlows();&#xD;
		//J_FlowsMap flowsMap = flowsPair.getFirst();&#xD;
		//traceln("flows:" + Arrays.toString(arr));&#xD;
		//v_batteryPowerElectric_kW = flowsMap.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
	}&#xD;
}&#xD;
&#xD;
//v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( v_currentPowerElectricity_kW - v_currentLoadLowPassed_kW ); //you want to do deterine the lowpassLoad BEFORE the using the battery. As this behavior of the battery should nog be dependent on the load of the battery in the previous timesteps&#xD;
&#xD;
//v_previousPowerMethane_kW = v_currentPowerMethane_kW;&#xD;
v_previousPowerMethane_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.METHANE);&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1684397492292</Id>
						<Name>f_operateFlexAssets_agroenergyhub</Name>
						<X>800</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double heatDemand_kW = (fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HEAT) - fm_currentProductionFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
double biogasSupply_kW = 0;&#xD;
if( p_owner != null ) {&#xD;
	if( p_owner.p_methaneSupplier instanceof EnergyCoop ) {&#xD;
		EnergyCoop CoopParent = (EnergyCoop)p_owner.p_methaneSupplier;&#xD;
		//biogasSupply_kW = -CoopParent.v_methaneVolume_kWh/energyModel.p_timeStep_h + v_previousPowerMethane_kW;&#xD;
		biogasSupply_kW = -CoopParent.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.METHANE) + v_previousPowerMethane_kW;&#xD;
	}&#xD;
}&#xD;
&#xD;
//traceln("BiogasSupply from mestvergister: " + biogasSupply_kW + " kW");&#xD;
//traceln("Heat demand agroenergyhub:" + heatDemand_kW);&#xD;
&#xD;
if ( p_secondaryHeatingAsset == null) { // Just one heating asset&#xD;
	if ( p_primaryHeatingAsset== null ) {&#xD;
		traceln("No heating assets for industry gridconnection " + p_gridConnectionID);&#xD;
	} else {&#xD;
		if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatPump || p_primaryHeatingAsset instanceof J_EAConversionHydrogenBurner) { // when there is only a gas burner or DH set&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
				//traceln("Running manageHeatingAsset for single heating asset");&#xD;
		} else {&#xD;
			traceln("GridConnection " + p_gridConnectionID + " has a single unsupported heating asset!");&#xD;
		}&#xD;
	}&#xD;
} else { // Two heating assets&#xD;
	if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump &amp; p_secondaryHeatingAsset instanceof J_EAConversionGasCHP) { // Heatpump and gasburner, switch based on heatpump COP)&#xD;
		//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! &lt;-- waarom dit gebeurt al in de main (peter 21-02-23)&#xD;
		double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();&#xD;
		double HP_powerDemand_kW = heatDemand_kW / HP_COP;&#xD;
		// Decide to use CHP or HeatPump to fulfill heat demand based on 'SoC' of gasbuffer and current electricity use on site&#xD;
		if ( (-(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY)) &gt; 0.5*v_liveConnectionMetaData.contractedFeedinCapacity_kW*2*(p_gasBuffer.getCurrentStateOfCharge_fr()-0.5) | p_gasBuffer.getCurrentStateOfCharge_fr() &lt; 0.05) &amp; p_gasBuffer.getCurrentStateOfCharge_fr() &lt; 0.9) { // Use heatpump when it can be done selfsufficiently or when methane supply is zero&#xD;
			//traceln("HeatPump in operation with COP " + HP_COP);&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = min(1,HP_powerDemand_kW / p_primaryHeatingAsset.getInputCapacity_kW());&#xD;
		} else { // CHP when there is no electricity surpluss or when gas tank is overfilling&#xD;
			//traceln("CHP capacityHeat_kW: " + p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
			//p_primaryHeatingAsset.v_powerFraction_fr = 0;//min(1,currentDHWdemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW());&#xD;
			// Let heatpump fill heatdemand gap if it exists&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_secondaryHeatingAsset.v_powerFraction_fr*p_secondaryHeatingAsset.getOutputCapacity_kW()) / p_primaryHeatingAsset.getOutputCapacity_kW())); // Let gas burner fill the heatdemandgap&#xD;
		}&#xD;
	} else if ( p_primaryHeatingAsset instanceof J_EAConversionGasCHP &amp; p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // CHP &amp; gas burner&#xD;
		if ( p_gasBuffer.getCurrentStateOfCharge_fr() &lt; 0.05) { // Use regular gas burner when biogas buffer is nearly empty&#xD;
//		if ( (-v_currentPowerElectricity_kW &gt; 0.5*p_connectionCapacity_kW*2*(p_gasBuffer.j_ea.getCurrentStateOfCharge()-0.5) | p_gasBuffer.j_ea.getCurrentStateOfCharge() &lt; 0.05) &amp; p_gasBuffer.j_ea.getCurrentStateOfCharge() &lt; 0.9) { // Use gas burner when biogas is depleted or when there is too much PV and CHP would lead to curtailment&#xD;
			//traceln("HeatPump in operation with COP " + HP_COP);&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
		} else { // CHP when there is sufficient biogas&#xD;
			//traceln("CHP capacityHeat_kW: " + p_primaryHeatingAsset.j_ea.getHeatCapacity_kW());&#xD;
			if ( p_gasBuffer.getCurrentStateOfCharge_fr() &lt; 0.9 ) { // Biogas tank not full, allow reduced CHP power when it prevents curtailment.&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(min(1,heatDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW()),(v_liveConnectionMetaData.contractedFeedinCapacity_kW + (fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY))) / p_primaryHeatingAsset.getInputCapacity_kW());&#xD;
			} else {&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
				//if ( p_gasBuffer.j_ea.getCurrentStateOfCharge() &gt; 0.98 ) { // Biogas tank not full, allow reduced CHP power when it prevents curtailment.				&#xD;
				//	traceln("Biogas tank 98% full! must run CHP! Heat demand: " + heatDemand_kW + " kW");&#xD;
				//}&#xD;
			}&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_primaryHeatingAsset.v_powerFraction_fr*p_primaryHeatingAsset.getOutputCapacity_kW()) / p_secondaryHeatingAsset.getOutputCapacity_kW())); // Let gas burner fill the heatdemandgap&#xD;
		}&#xD;
	} else if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump &amp; p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)&#xD;
		//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! &lt;-- waarom dit gebeurt al in de main (peter 21-02-23)&#xD;
		//double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).getCOP();&#xD;
		//double HP_powerDemand_kW = heatDemand_kW / HP_COP;&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = min(1,heatDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
		p_secondaryHeatingAsset.v_powerFraction_fr = max(0,min(1,(heatDemand_kW-p_primaryHeatingAsset.v_powerFraction_fr*p_primaryHeatingAsset.getOutputCapacity_kW()) / p_secondaryHeatingAsset.getOutputCapacity_kW())); // Let gas burner fill the heatdemandgap&#xD;
	} else {&#xD;
		traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in GridConnection " + p_gridConnectionID);&#xD;
		p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
		p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
		//p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
	}&#xD;
	p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);&#xD;
}&#xD;
if (p_primaryHeatingAsset != null) {&#xD;
	p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);&#xD;
}&#xD;
&#xD;
if (p_gasBuffer != null) {&#xD;
//	if (p_secondaryHeatingAsset != null) {&#xD;
//		p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_primaryHeatingAsset.v_currentConsumptionMethane_kW - p_secondaryHeatingAsset.v_currentConsumptionMethane_kW)/p_gasBuffer.j_ea.getGasCapacity_kW();&#xD;
//	} else {&#xD;
	if (p_primaryHeatingAsset instanceof J_EAConversionGasCHP) {&#xD;
		p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_primaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.METHANE)) / p_gasBuffer.getCapacityGas_kW();&#xD;
	} else if (p_secondaryHeatingAsset != null) {&#xD;
		if (p_secondaryHeatingAsset instanceof J_EAConversionGasCHP) {&#xD;
			p_gasBuffer.v_powerFraction_fr = (biogasSupply_kW - p_secondaryHeatingAsset.getLastFlows().get(OL_EnergyCarriers.METHANE)) / p_gasBuffer.getCapacityGas_kW();&#xD;
		}&#xD;
	}&#xD;
//	}&#xD;
	p_gasBuffer.f_updateAllFlows(p_gasBuffer.v_powerFraction_fr);&#xD;
}&#xD;
&#xD;
/*if (p_curtailer != null) {&#xD;
	//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());&#xD;
	if (p_curtailer.getElectricCapacity_kW()&gt;0) {&#xD;
		double curtailerSetpointElectric_kW = 0.0;&#xD;
		if ( p_primaryHeatingAsset instanceof J_EAConversionGasCHP ) {&#xD;
			curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW - p_primaryHeatingAsset.heatProduction_kW + p_connectionCapacity_kW);&#xD;
		} else {&#xD;
			curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);&#xD;
		}&#xD;
		p_curtailer.f_updateAllFlows(curtailerSetpointElectric_kW/p_curtailer.getElectricCapacity_kW());&#xD;
	}&#xD;
}*/</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1684940409126</Id>
						<Name>f_manageCurtailer</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>830</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>CurtailerAsset</Name>
							<Type>EnergyAsset</Type>
						</Parameter>
						<Body>//traceln("Hello! " + CurtailerAsset.j_ea.getElectricCapacity_kW());&#xD;
if (CurtailerAsset.j_ea.getElectricCapacity_kW()&gt;0) {&#xD;
	double curtailerSetpointElectric_kW = -min(0,v_currentPowerElectricity_kW + p_connectionCapacity_kW);&#xD;
	CurtailerAsset.f_updateAllFlows(curtailerSetpointElectric_kW/CurtailerAsset.j_ea.getElectricCapacity_kW());&#xD;
	&#xD;
	/*if ( curtailerSetpointElectric_kW &gt; 0 ) {&#xD;
		traceln("Windfarm is curtailing " + curtailerSetpointElectric_kW + " kW!");&#xD;
	}*/&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693299907029</Id>
						<Name>f_connectTo_J_EA_Industry</Name>
						<X>950</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>&#xD;
if (j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)j_ea);&#xD;
	if(p_gridConnectionID.contains("agrohub")) {&#xD;
	&#xD;
		if (j_ea instanceof J_EAConversionGasBurner || j_ea instanceof J_EAConversionHydrogenBurner) {&#xD;
			if (p_primaryHeatingAsset == null) {&#xD;
				p_primaryHeatingAsset = (J_EAConversion)j_ea ;&#xD;
			} else if ( p_primaryHeatingAsset!=j_ea ) {&#xD;
				p_secondaryHeatingAsset = (J_EAConversion)j_ea ;&#xD;
			}&#xD;
		} else if ( j_ea instanceof J_EAConversionHeatPump  || j_ea instanceof J_EAConversionGasCHP) {&#xD;
			if (p_primaryHeatingAsset==null) {&#xD;
				p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
			} else { &#xD;
				p_secondaryHeatingAsset = p_primaryHeatingAsset;&#xD;
				p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
			}&#xD;
			if (j_ea instanceof J_EAConversionHeatPump) {&#xD;
				((J_EAConversionHeatPump)p_primaryHeatingAsset).outputTemperature_degC = 80; // For pastorizing milk&#xD;
			}&#xD;
			//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
		//} else 	if (j_ea instanceof J_EAConversionCurtailer) {&#xD;
		//	p_curtailer = (J_EAConversionCurtailer)j_ea ;&#xD;
		} else {&#xD;
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");&#xD;
		}&#xD;
	} else {&#xD;
		if (j_ea instanceof J_EAConversionGasBurner || j_ea instanceof J_EAConversionHeatPump || j_ea instanceof J_EAConversionHydrogenBurner ) {&#xD;
			if (p_primaryHeatingAsset == null) {&#xD;
				p_primaryHeatingAsset = (J_EAConversion)j_ea ;&#xD;
			} else if ( p_primaryHeatingAsset!=j_ea ) {&#xD;
				p_secondaryHeatingAsset = (J_EAConversion)j_ea ;&#xD;
			}&#xD;
		} else {&#xD;
			traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + j_ea + " is of unknown type or null! ");&#xD;
		}&#xD;
	}&#xD;
} 	&#xD;
		&#xD;
	&#xD;
&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1665480522859</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1665480565440</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>40</X>
						<Y>-50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1665480522863</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1718724980083</Id>
				<Name>GCNeighborhood</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}&#xD;
&#xD;
/*&#xD;
@Override&#xD;
public void f_resetSpecificGCStatesAfterRapidRun(){&#xD;
	f_resetSpecificGCStatesAfterRapidRun_override();&#xD;
}&#xD;
*/&#xD;
&#xD;
@Override&#xD;
public void f_resetSpecificGCStates(){&#xD;
	f_resetSpecificGCStates_override();&#xD;
}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1718724980089</Id>
					<Name>1718724980089</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089952</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1718784000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1718724980086</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1718724980090</CurrentLevel>
				<ConnectionsId>1718724980084</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1722514794122</Id>
						<Name>v_amountOfGasBurners_services_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514798317</Id>
						<Name>v_amountOfHybridHeatpump_services_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514800696</Id>
						<Name>v_amountOfElectricHeatpumps_services_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514802997</Id>
						<Name>v_amountOfDistrictHeating_services_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514805108</Id>
						<Name>v_amountOfGasBurners_houses_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514809527</Id>
						<Name>v_amountOfHybridHeatpump_houses_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514811890</Id>
						<Name>v_amountOfElectricHeatpumps_houses_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722514815083</Id>
						<Name>v_amountOfDistrictHeating_houses_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1724397994084</Id>
						<Name>v_nbCurrentHouseholdsWithBattery</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2300</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636587634</Id>
						<Name>v_amountOfGasBurners_industry_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636587636</Id>
						<Name>v_amountOfHybridHeatpump_industry_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636587638</Id>
						<Name>v_amountOfElectricHeatpumps_industry_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636587640</Id>
						<Name>v_amountOfDistrictHeating_industry_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636587642</Id>
						<Name>v_amountOfHydrogenUseForHeating_industry_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636647667</Id>
						<Name>v_amountOfGasBurners_agriculture_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636647669</Id>
						<Name>v_amountOfHybridHeatpump_agriculture_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636647671</Id>
						<Name>v_amountOfElectricHeatpumps_agriculture_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1732636647673</Id>
						<Name>v_amountOfDistrictHeating_agriculture_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733992320729</Id>
						<Name>v_SOC_setp_fr_offset_balance</Name>
						<X>1680</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.6</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733992537947</Id>
						<Name>v_FeedbackGain_kWpSOC_factor_balance</Name>
						<X>1680</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.4</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733992922419</Id>
						<Name>v_SOC_setp_fr_price</Name>
						<X>2120</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.5</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733993584071</Id>
						<Name>v_priceGain_kWhpeur</Name>
						<X>2120</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1734716021367</Id>
						<Name>v_batteryMoneyMade_euro</Name>
						<X>1250</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1738663322715</Id>
						<Name>v_amountOfLowTempHeatgrid_services_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1738663467936</Id>
						<Name>v_amountOfLowTempHeatgrid_houses_fr</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1752589060012</Id>
						<Name>v_currentLoadLowPassed_kW</Name>
						<X>1270</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1722588367044</Id>
						<Name>p_thresholdCOP_hybridHeatpump</Name>
						<Description>Threshold for when the gas burner needs to kick in in a hybrid heatpump system</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1720</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>3.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1722588367042</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1729069223731</Id>
						<Name>p_nbCompaniesTotal</Name>
						<X>1680</X>
						<Y>840</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1729069223729</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1729069237070</Id>
						<Name>p_nbHouseholds</Name>
						<X>1680</X>
						<Y>820</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1729069237068</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1730911077796</Id>
						<Name>p_municipalityCode</Name>
						<X>1680</X>
						<Y>930</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1730911077794</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1732637253709</Id>
						<Name>p_nbServices</Name>
						<X>1700</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1732637253707</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1732637257024</Id>
						<Name>p_nbIndustry</Name>
						<X>1700</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1732637257022</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1732637259177</Id>
						<Name>p_nbAgriculture</Name>
						<X>1700</X>
						<Y>900</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1732637259175</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1736870299796</Id>
						<Name>p_ignoreGridCapacityBattery</Name>
						<X>1680</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1736870299794</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1736933490243</Id>
						<Name>p_chpAsset</Name>
						<X>600</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAConversionGasCHP</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1736933490241</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722589144737</Id>
						<Name>c_heatDemandEA</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>LinkedHashMap</CollectionClass>
							<ElementClass>String</ElementClass>
							<ValueElementClass>J_EAConsumption</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1719849166911</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Manage the heating assets&#xD;
&#xD;
f_manageHeating();&#xD;
&#xD;
f_manageCharging();&#xD;
&#xD;
v_lowPassFactorLoad_fr = 0.003; // Vastgezet voor de NBHs &#xD;
v_currentLoadLowPassed_kW += v_lowPassFactorLoad_fr * ( fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - v_currentLoadLowPassed_kW ); //you want to do determine the lowpassLoad BEFORE the using the battery. As this behavior of the battery should nog be dependent on the load of the battery in the previous timesteps&#xD;
&#xD;
f_manageBattery();</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722514612938</Id>
						<Name>f_setHeatingMethodPct_services</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pctArray</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>v_amountOfGasBurners_services_fr = pctArray[0]/100;&#xD;
v_amountOfElectricHeatpumps_services_fr = pctArray[1]/100;&#xD;
v_amountOfHybridHeatpump_services_fr = pctArray[2]/100;&#xD;
v_amountOfDistrictHeating_services_fr = pctArray[3]/100;&#xD;
v_amountOfLowTempHeatgrid_services_fr = pctArray[4]/100;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722514620314</Id>
						<Name>f_setHeatingMethodPct_houses</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pctArray</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>v_amountOfGasBurners_houses_fr = pctArray[0]/100;&#xD;
v_amountOfElectricHeatpumps_houses_fr = pctArray[1]/100;&#xD;
v_amountOfHybridHeatpump_houses_fr = pctArray[2]/100;&#xD;
v_amountOfDistrictHeating_houses_fr = pctArray[3]/100;&#xD;
v_amountOfLowTempHeatgrid_houses_fr = pctArray[4]/100;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722585552607</Id>
						<Name>f_manageHeatingAssets_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1760</X>
						<Y>-20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if(p_primaryHeatingAsset == null){ // null check, as certain neighborhoods don't have thermal assets (fix dat niet elke tijdstep wordt aangeroepen)!&#xD;
	return;&#xD;
}&#xD;
&#xD;
//Division of the power demand //{Gasburner power request, HP power request, DH power request, Hydrogenburner power request}&#xD;
double powerDemandDivision_kW[] = f_dividePowerDemandHeatingAssets(); &#xD;
&#xD;
//Split the power fractions (powerDemandDivision[] = {Gasburner power request, HP power request, DH power request}&#xD;
if(p_primaryHeatingAsset.getOutputCapacity_kW() != 0){&#xD;
	double powerFraction_GASBURNER = powerDemandDivision_kW[0] / p_primaryHeatingAsset.getOutputCapacity_kW();&#xD;
	p_primaryHeatingAsset.v_powerFraction_fr = powerFraction_GASBURNER;&#xD;
	&#xD;
	//Gas burner control (always assigned to primary heating asset)	&#xD;
	p_primaryHeatingAsset.f_updateAllFlows(powerFraction_GASBURNER);&#xD;
}&#xD;
if(p_secondaryHeatingAsset.getOutputCapacity_kW() != 0){&#xD;
	double powerFraction_HEATPUMP  = powerDemandDivision_kW[1] / p_secondaryHeatingAsset.getOutputCapacity_kW();&#xD;
	p_secondaryHeatingAsset.v_powerFraction_fr = powerFraction_HEATPUMP;&#xD;
	&#xD;
	//Heatpump control (always assigned to secondary heating asset)&#xD;
	p_secondaryHeatingAsset.f_updateAllFlows(powerFraction_HEATPUMP);&#xD;
}&#xD;
if(p_tertiaryHeatingAsset.getOutputCapacity_kW() != 0){&#xD;
	double powerFraction_HEATDELIVERYSET = powerDemandDivision_kW[2] / p_tertiaryHeatingAsset.getOutputCapacity_kW();&#xD;
	p_tertiaryHeatingAsset.v_powerFraction_fr = powerFraction_HEATDELIVERYSET;&#xD;
	&#xD;
	//Heat delivery set control (always assigned to tertiary heating asset)&#xD;
	p_tertiaryHeatingAsset.f_updateAllFlows(powerFraction_HEATDELIVERYSET);&#xD;
	&#xD;
	//Update districtheating variable&#xD;
	v_districtHeatDelivery_kW = powerDemandDivision_kW[2]/p_tertiaryHeatingAsset.getEta_r();&#xD;
}&#xD;
if(p_quaternaryHeatingAsset.getOutputCapacity_kW() != 0){&#xD;
	double powerFraction_HYDROGENBURNER = powerDemandDivision_kW[3] / p_quaternaryHeatingAsset.getOutputCapacity_kW();&#xD;
	p_quaternaryHeatingAsset.v_powerFraction_fr = powerFraction_HYDROGENBURNER;	&#xD;
&#xD;
	//Hydrogen burner(always assigned to quaternary heating asset)&#xD;
	p_quaternaryHeatingAsset.f_updateAllFlows(powerFraction_HYDROGENBURNER);&#xD;
}&#xD;
if(p_quinaryHeatingAsset.getOutputCapacity_kW() != 0){&#xD;
	double powerFraction_LOWTEMPHEATGRID = powerDemandDivision_kW[4] / p_quinaryHeatingAsset.getOutputCapacity_kW();&#xD;
	p_quinaryHeatingAsset.v_powerFraction_fr = powerFraction_LOWTEMPHEATGRID;	&#xD;
&#xD;
	//Hydrogen burner(always assigned to quaternary heating asset)&#xD;
	p_quinaryHeatingAsset.f_updateAllFlows(powerFraction_LOWTEMPHEATGRID);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double[]</ReturnType>
						<Id>1722587530130</Id>
						<Name>f_dividePowerDemandHeatingAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1690</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Initialize power demand division array&#xD;
double powerDemandDivision_kW[] = {0, 0, 0, 0, 0}; // {Gasburner power request, HP power request, DH power request, Hydrogenburner power request, lowTempHeatgridPowerDemand}&#xD;
&#xD;
//Calculate fraction of total heat demand delivered by the CHP&#xD;
/*&#xD;
double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
double fractionOfTotalHeatDemandDeliveredyByCHP = max(0,p_chpAsset.getLastFlows().get(OL_EnergyCarriers.HEAT))/powerDemand_kW;&#xD;
double remainingFraction = fractionOfTotalHeatDemandDeliveredyByCHP;&#xD;
*/&#xD;
//Demanded total heating power at the current time step&#xD;
//double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
&#xD;
//Demanded heating power for companies and household seperatly the current time step&#xD;
double powerDemand_households_kW = max(0,c_heatDemandEA.get("HOUSEHOLDS").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
double powerDemand_agriculture_kW = max(0,c_heatDemandEA.get("AGRICULTURE").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
double powerDemand_industry_kW = max(0,c_heatDemandEA.get("INDUSTRY").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
double powerDemand_services_kW = max(0,c_heatDemandEA.get("SERVICES").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
&#xD;
//Divide the powerdemand per heating type&#xD;
double gasBurnerPowerDemand_kW 		= powerDemand_households_kW*v_amountOfGasBurners_houses_fr + &#xD;
									  powerDemand_agriculture_kW*v_amountOfGasBurners_agriculture_fr +&#xD;
									  powerDemand_industry_kW*v_amountOfGasBurners_industry_fr + &#xD;
									  powerDemand_services_kW*v_amountOfGasBurners_services_fr;&#xD;
									  &#xD;
double electricHPPowerDemand_kW 		= powerDemand_households_kW*v_amountOfElectricHeatpumps_houses_fr + &#xD;
									  powerDemand_agriculture_kW*v_amountOfElectricHeatpumps_agriculture_fr + &#xD;
									  powerDemand_industry_kW*v_amountOfElectricHeatpumps_industry_fr + &#xD;
									  powerDemand_services_kW*v_amountOfElectricHeatpumps_services_fr;&#xD;
									  &#xD;
double hybridHPPowerDemand_kW 	   		= powerDemand_households_kW*v_amountOfHybridHeatpump_houses_fr +&#xD;
									  powerDemand_agriculture_kW*v_amountOfHybridHeatpump_agriculture_fr +&#xD;
									  powerDemand_industry_kW*v_amountOfHybridHeatpump_industry_fr + &#xD;
									  powerDemand_services_kW*v_amountOfHybridHeatpump_services_fr;&#xD;
									  &#xD;
double districtHeatingPowerDemand_kW   = powerDemand_households_kW*v_amountOfDistrictHeating_houses_fr +&#xD;
									  powerDemand_agriculture_kW*v_amountOfDistrictHeating_agriculture_fr + &#xD;
									  powerDemand_industry_kW*v_amountOfDistrictHeating_industry_fr + &#xD;
									  powerDemand_services_kW*v_amountOfDistrictHeating_services_fr;&#xD;
														  &#xD;
double hydrogenBurnerPowerDemand_kW	= powerDemand_industry_kW*v_amountOfHydrogenUseForHeating_industry_fr;&#xD;
&#xD;
double lowTempHeatgridPowerDemand_kW 	= powerDemand_households_kW*v_amountOfLowTempHeatgrid_houses_fr + &#xD;
									  powerDemand_services_kW*v_amountOfLowTempHeatgrid_services_fr;&#xD;
//double lowTempHeatgridPowerDemand_kW = (powerDemand_households_kW + powerDemand_agriculture_kW + powerDemand_industry_kW + powerDemand_services_kW) - hybridHPPowerDemand - electricHPPowerDemand - gasBurnerPowerDemand - districtHeatingPowerDemand - hydrogenBurnerPowerDemand; // To make sure all power demand is met&#xD;
									  &#xD;
//Get the current Heatpump COP&#xD;
double HP_COP = ((J_EAConversionHeatPump)p_secondaryHeatingAsset).getCOP();&#xD;
&#xD;
if ( HP_COP &lt; p_thresholdCOP_hybridHeatpump ) { // switch to gasburner when HP COP is below treshold&#xD;
	powerDemandDivision_kW[0] = max(0, gasBurnerPowerDemand_kW + hybridHPPowerDemand_kW);&#xD;
	powerDemandDivision_kW[1] = max(0, electricHPPowerDemand_kW);&#xD;
}&#xD;
else{&#xD;
	powerDemandDivision_kW[0] = max(0, gasBurnerPowerDemand_kW);&#xD;
	powerDemandDivision_kW[1] = max(0, electricHPPowerDemand_kW + hybridHPPowerDemand_kW);&#xD;
}&#xD;
powerDemandDivision_kW[2] = max(0, districtHeatingPowerDemand_kW);&#xD;
powerDemandDivision_kW[3] = max(0, hydrogenBurnerPowerDemand_kW);&#xD;
powerDemandDivision_kW[4] = max(0, lowTempHeatgridPowerDemand_kW);&#xD;
&#xD;
return powerDemandDivision_kW; //{Gasburner power request, HP power request, DH power request, Hydrogenburner power request, lowTempHeatgridPowerDemand};</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722595238227</Id>
						<Name>f_connectToJ_EA_default_overwrite_OUD</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1110</X>
						<Y>-20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>energyModel.c_energyAssets.add(j_ea);&#xD;
c_energyAssets.add(j_ea);&#xD;
&#xD;
if (j_ea instanceof J_EAVehicle) {&#xD;
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;&#xD;
	if (vehicle instanceof J_EADieselVehicle) {&#xD;
		c_dieselVehicles.add( (J_EADieselVehicle)vehicle );		&#xD;
	} else if (vehicle instanceof J_EAHydrogenVehicle) {&#xD;
		c_hydrogenVehicles.add((J_EAHydrogenVehicle)vehicle);		&#xD;
	} else if (vehicle instanceof J_EAEV) {&#xD;
		c_vehiclesAvailableForCharging.add((J_EAEV)vehicle);&#xD;
		energyModel.c_EVs.add((J_EAEV)vehicle);		&#xD;
	}&#xD;
	c_vehicleAssets.add(vehicle);		&#xD;
	J_ActivityTrackerTrips tripTracker = vehicle.getTripTracker();&#xD;
	if (tripTracker == null) { // Only provide tripTracker when vehicle doesn't have it yet!&#xD;
		if (vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK) {&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);&#xD;
		} else if (vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_VAN || vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN) {// No mobility pattern for business vans available yet!! Falling back to truck mobility pattern&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, rowIndex, energyModel.t_h*60, vehicle);&#xD;
		} else {&#xD;
			//traceln("Adding passenger vehicle to gridconnection %s", this);&#xD;
			int rowIndex = uniform_discr(0, 200);//getIndex() % 200;&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, rowIndex, energyModel.t_h*60, vehicle);&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, 18, energyModel.t_h*60, vehicle);&#xD;
			//int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, 2, energyModel.t_h*60, vehicle);&#xD;
		}&#xD;
		&#xD;
		vehicle.tripTracker = tripTracker;	&#xD;
	}&#xD;
	c_tripTrackers.add( tripTracker );&#xD;
	v_vehicleIndex ++;&#xD;
} else if (j_ea instanceof J_EAConsumption) {&#xD;
	c_consumptionAssets.add((J_EAConsumption)j_ea);	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {&#xD;
		p_DHWAsset = (J_EAConsumption)j_ea;	&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAProduction) {&#xD;
	c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	//energyModel.c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
		v_hasPV = true;&#xD;
		v_totalInstalledPVPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		if (l_parentNodeElectric.getConnectedAgent() != null) {&#xD;
			l_parentNodeElectric.getConnectedAgent().v_totalInstalledPVPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		}&#xD;
		energyModel.v_totalInstalledPVPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {&#xD;
		v_totalInstalledWindPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		if (l_parentNodeElectric.getConnectedAgent() != null) {&#xD;
			l_parentNodeElectric.getConnectedAgent().v_totalInstalledWindPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		}&#xD;
		energyModel.v_totalInstalledWindPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)j_ea);&#xD;
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT | j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){&#xD;
		//traceln("Adding HOB to house" + this);&#xD;
		if (p_cookingTracker == null) {&#xD;
			//traceln("Adding cookingTracker to house" + this);&#xD;
			int rowIndex = uniform_discr(2, 300); &#xD;
			p_cookingTracker = new J_ActivityTrackerCooking(energyModel.p_cookingPatternExcel, rowIndex, energyModel.t_h*60, (J_EAConversion)j_ea );			&#xD;
		} else {&#xD;
			p_cookingTracker.HOB = (J_EAConversion)j_ea;&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAConversionGasBurner) {&#xD;
		p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	} else if (j_ea instanceof J_EAConversionHeatPump) {&#xD;
		energyModel.c_ambientAirDependentAssets.add(j_ea);&#xD;
		p_secondaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	//} else if (j_ea instanceof J_EAConversionHydrogenBurner) {&#xD;
	//		p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	} else if (j_ea instanceof J_EAConversionHydrogenBurner) {&#xD;
		p_tertiaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	//} else if (j_ea instanceof J_EAConversionCurtailer) {&#xD;
	//		p_curtailer = (J_EAConversionCurtailer)j_ea;&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAStorage) {&#xD;
	c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {&#xD;
		//traceln("Adding buildingThermals to gridconnection");	&#xD;
		p_BuildingThermalAsset = (J_EABuilding)j_ea;&#xD;
			/*if ( p_energyLabel != null &amp; p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available&#xD;
				double lossFactor_WpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("lossFactor_WpK").doubleValue();&#xD;
				double heatCapacity_JpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("heatCapacity_JpK").doubleValue();&#xD;
				p_BuildingThermalAsset.lossFactor_WpK = lossFactor_WpK2;&#xD;
				p_BuildingThermalAsset.heatCapacity_JpK = heatCapacity_JpK2;&#xD;
				traceln("House thermal model updated!");&#xD;
				traceln("House type: %s, energy label: %s", p_gridConnectionType, p_energyLabel);&#xD;
				traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);&#xD;
			}*/ // Deprecated get lossfactor and heatcapacity from json-input. Replace with other datasource!&#xD;
		p_BuildingThermalAsset.updateAmbientTemperature( energyModel.v_currentAmbientTemperature_degC );&#xD;
		//v_tempSetpoint_degC = p_BuildingThermalAsset.setTemperature_degC;		&#xD;
		energyModel.c_ambientAirDependentAssets.add(p_BuildingThermalAsset);&#xD;
	} else if (j_ea instanceof J_EAStorageGas) {&#xD;
		p_gasBuffer = (J_EAStorageGas)j_ea;&#xD;
	} else if (j_ea instanceof J_EAStorageElectric) {&#xD;
		p_batteryAsset = (J_EAStorageElectric)j_ea;&#xD;
	} else if (j_ea instanceof J_EAStorageHeat) {&#xD;
		energyModel.c_ambientAirDependentAssets.add(j_ea);&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAProfile) {&#xD;
	//p_energyProfile = (J_EAProfile)j_ea;&#xD;
	c_profileAssets.add((J_EAProfile)j_ea);&#xD;
} else {&#xD;
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1730370456790</Id>
						<Name>f_connectToJ_EA_default_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1760</X>
						<Y>-40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>for (OL_EnergyCarriers EC : j_ea.getActiveConsumptionEnergyCarriers()) {&#xD;
	if (!v_activeConsumptionEnergyCarriers.contains(EC)) {&#xD;
		v_activeEnergyCarriers.add(EC);&#xD;
		v_activeConsumptionEnergyCarriers.add(EC);&#xD;
			&#xD;
		if (energyModel.b_isInitialized) {&#xD;
			//Add EC to energyModel&#xD;
			energyModel.f_addConsumptionEnergyCarrier(EC);&#xD;
			&#xD;
			//Initialize dataset&#xD;
			DataSet dsDemand = new DataSet( (int)(168 / energyModel.p_timeStep_h) );&#xD;
			double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
			double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
			for (double t = startTime; t &lt;= endTime; t += energyModel.p_timeStep_h) {&#xD;
				dsDemand.add( t, 0);&#xD;
			}&#xD;
			v_liveData.dsm_liveDemand_kW.put( EC, dsDemand);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
for (OL_EnergyCarriers EC : j_ea.getActiveProductionEnergyCarriers()) {&#xD;
	if (!v_activeProductionEnergyCarriers.contains(EC)) {&#xD;
		v_activeEnergyCarriers.add(EC);&#xD;
		v_activeProductionEnergyCarriers.add(EC);		&#xD;
		if (energyModel.b_isInitialized) {&#xD;
		&#xD;
			//Add EC to energyModel&#xD;
			energyModel.f_addProductionEnergyCarrier(EC);&#xD;
			&#xD;
			//Initialize datasets&#xD;
			DataSet dsSupply = new DataSet( (int)(168 / energyModel.p_timeStep_h) );&#xD;
			double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
			double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
			for (double t = startTime; t &lt;= endTime; t += energyModel.p_timeStep_h) {&#xD;
				dsSupply.add( t, 0);&#xD;
			}&#xD;
			v_liveData.dsm_liveSupply_kW.put( EC, dsSupply);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
energyModel.c_energyAssets.add(j_ea);&#xD;
c_energyAssets.add(j_ea);&#xD;
&#xD;
if (j_ea instanceof J_EAVehicle) {&#xD;
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;&#xD;
	if (vehicle instanceof J_EADieselVehicle) {&#xD;
		c_dieselVehicles.add( (J_EADieselVehicle)vehicle );		&#xD;
	} else if (vehicle instanceof J_EAHydrogenVehicle) {&#xD;
		c_hydrogenVehicles.add((J_EAHydrogenVehicle)vehicle);		&#xD;
	} else if (vehicle instanceof J_EAEV) {&#xD;
		c_vehiclesAvailableForCharging.add((J_EAEV)vehicle);&#xD;
		energyModel.c_EVs.add((J_EAEV)vehicle);	&#xD;
		c_EvAssets.add(j_ea);&#xD;
	}&#xD;
	c_vehicleAssets.add(vehicle);		&#xD;
	J_ActivityTrackerTrips tripTracker = vehicle.getTripTracker();&#xD;
	if (tripTracker == null) { // Only provide tripTracker when vehicle doesn't have it yet!&#xD;
		if (vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK) {&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsCsv, rowIndex, energyModel.t_h*60, vehicle);&#xD;
		} else if (vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_VAN || vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN) {// No mobility pattern for business vans available yet!! Falling back to truck mobility pattern&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsCsv, rowIndex, energyModel.t_h*60, vehicle);&#xD;
			tripTracker.setAnnualDistance_km(30_000);&#xD;
		} else {&#xD;
			//traceln("Adding passenger vehicle to gridconnection %s", this);&#xD;
			int rowIndex = uniform_discr(0, 200);//getIndex() % 200;&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsCsv, rowIndex, energyModel.t_h*60, vehicle);&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, 18, energyModel.t_h*60, vehicle);&#xD;
			//int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, 2, energyModel.t_h*60, vehicle);&#xD;
		}&#xD;
		&#xD;
		vehicle.tripTracker = tripTracker;	&#xD;
	}&#xD;
	c_tripTrackers.add( tripTracker );&#xD;
	v_vehicleIndex ++;&#xD;
} else if (j_ea instanceof J_EAConsumption) {&#xD;
	c_consumptionAssets.add((J_EAConsumption)j_ea);	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {&#xD;
		p_DHWAsset = (J_EAConsumption)j_ea;	&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {&#xD;
		c_fixedConsumptionElectricAssets.add(j_ea);&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB ) {&#xD;
		c_electricHobAssets.add(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAProduction) {&#xD;
	c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	//energyModel.c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
		v_liveAssetsMetaData.hasPV = true;&#xD;
		v_liveAssetsMetaData.totalInstalledPVPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, ((J_EAProduction)j_ea).getCapacityElectric_kW(), true);&#xD;
		}&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		c_pvAssets.add(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {&#xD;
		v_liveAssetsMetaData.totalInstalledWindPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, ((J_EAProduction)j_ea).getCapacityElectric_kW(), true);&#xD;
		}&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		c_windAssets.add(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOTHERMAL){&#xD;
		v_liveAssetsMetaData.hasPT = true;&#xD;
		c_ptAssets.add(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)j_ea);&#xD;
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT || j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){&#xD;
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {&#xD;
			c_electricHobAssets.add(j_ea);&#xD;
			//c_conversionElectricAssets.add(j_ea);&#xD;
		}&#xD;
		if (p_cookingTracker == null) {&#xD;
			int rowIndex = uniform_discr(2, 300); &#xD;
			p_cookingTracker = new J_ActivityTrackerCooking(energyModel.p_cookingPatternCsv, rowIndex, energyModel.t_h*60, (J_EAConversion)j_ea );			&#xD;
		} else {&#xD;
			p_cookingTracker.HOB = (J_EAConversion)j_ea;&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAConversionGasBurner) {&#xD;
		p_primaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	} else if (j_ea instanceof J_EAConversionHeatPump) {&#xD;
		energyModel.c_ambientDependentAssets.add(j_ea);&#xD;
		c_electricHeatpumpAssets.add(j_ea);&#xD;
		if(((J_EAConversionHeatPump)j_ea).getAmbientTempType() == OL_AmbientTempType.AMBIENT_AIR){&#xD;
			p_secondaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
		}&#xD;
		else if(((J_EAConversionHeatPump)j_ea).getAmbientTempType() == OL_AmbientTempType.HEAT_GRID){&#xD;
			p_quinaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAConversionHeatDeliverySet) {&#xD;
		p_tertiaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	} else if (j_ea instanceof J_EAConversionHydrogenBurner) {&#xD;
		p_quaternaryHeatingAsset = (J_EAConversion)j_ea;&#xD;
	} else if (j_ea instanceof J_EAConversionGasCHP) {&#xD;
		c_chpAssets.add(j_ea);&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAStorage) {&#xD;
	c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {&#xD;
		//traceln("Adding buildingThermals to gridconnection");	&#xD;
		p_BuildingThermalAsset = (J_EABuilding)j_ea;&#xD;
			/*if ( p_energyLabel != null &amp; p_gridConnectionType != null){ // Get building thermals from lookup table when isolation label and house type are available&#xD;
				double lossFactor_WpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("lossFactor_WpK").doubleValue();&#xD;
				double heatCapacity_JpK2 = energyModel.v_buildingThermalPars.path( p_gridConnectionType.name() ).path(p_energyLabel.name()).path("heatCapacity_JpK").doubleValue();&#xD;
				p_BuildingThermalAsset.lossFactor_WpK = lossFactor_WpK2;&#xD;
				p_BuildingThermalAsset.heatCapacity_JpK = heatCapacity_JpK2;&#xD;
				traceln("House thermal model updated!");&#xD;
				traceln("House type: %s, energy label: %s", p_gridConnectionType, p_energyLabel);&#xD;
				traceln("lossfactor %s, heatcapacity %s", lossFactor_WpK2, heatCapacity_JpK2);&#xD;
			}*/ // Deprecated get lossfactor and heatcapacity from json-input. Replace with other datasource!&#xD;
		p_BuildingThermalAsset.updateAmbientTemperature( energyModel.v_currentAmbientTemperature_degC );&#xD;
		//v_tempSetpoint_degC = p_BuildingThermalAsset.setTemperature_degC;		&#xD;
		energyModel.c_ambientDependentAssets.add(p_BuildingThermalAsset);&#xD;
	} else if (j_ea instanceof J_EAStorageGas) {&#xD;
		p_gasBuffer = (J_EAStorageGas)j_ea;&#xD;
	} else if (j_ea instanceof J_EAStorageElectric) {&#xD;
		p_batteryAsset = (J_EAStorageElectric)j_ea;&#xD;
		c_batteryAssets.add(j_ea);&#xD;
		v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()/1000;&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()/1000;&#xD;
		&#xD;
	} else if (j_ea instanceof J_EAStorageHeat) {&#xD;
		energyModel.c_ambientDependentAssets.add(j_ea);&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAProfile) {&#xD;
	//p_energyProfile = (J_EAProfile)j_ea;&#xD;
	c_profileAssets.add((J_EAProfile)j_ea);&#xD;
	if (((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.CHARGING){&#xD;
			//v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
			c_EvAssets.add(j_ea);&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD){&#xD;
			//v_fixedConsumptionElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
			c_fixedConsumptionElectricAssets.add(j_ea);&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.WINDTURBINE){&#xD;
			//v_windProductionElectric_kW += flowsArray[0];&#xD;
			c_windAssets.add(j_ea);&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.HEATDEMAND){&#xD;
			//Do nothing&#xD;
		} else {&#xD;
			traceln( "Unrecognized profile type!");&#xD;
		}&#xD;
} else {&#xD;
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1732550952237</Id>
						<Name>f_setH2HeatingFr_industry</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>amountOfHydrogenUseForHeating_fr</Name>
							<Type>double</Type>
						</Parameter>
						<Body>&#xD;
//Get current values&#xD;
if(amountOfHydrogenUseForHeating_fr &gt;= 1){&#xD;
	//throw new RuntimeException("Can not replace all gas in industry with hydrogen! The model does not support this.");&#xD;
	amountOfHydrogenUseForHeating_fr = 0.999;&#xD;
}&#xD;
double actualHeatingDemandSpaceHeating_fr =  (1 - v_amountOfHydrogenUseForHeating_industry_fr);&#xD;
double[] currentPctArray = {v_amountOfGasBurners_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
							v_amountOfHybridHeatpump_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
							v_amountOfElectricHeatpumps_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
							v_amountOfDistrictHeating_industry_fr*100/actualHeatingDemandSpaceHeating_fr};&#xD;
&#xD;
//Set new hydrogen use for heating fr&#xD;
v_amountOfHydrogenUseForHeating_industry_fr = min(1, amountOfHydrogenUseForHeating_fr);&#xD;
&#xD;
&#xD;
//Set new values&#xD;
f_setHeatingMethodPct_industry(currentPctArray);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1732636739570</Id>
						<Name>f_setHeatingMethodPct_industry</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pctArray</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>//Calculate actual space heating &#xD;
double actualHeatingDemandSpaceHeating_fr =  (1 - v_amountOfHydrogenUseForHeating_industry_fr);&#xD;
&#xD;
v_amountOfGasBurners_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[0]/100;&#xD;
v_amountOfElectricHeatpumps_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[1]/100;&#xD;
v_amountOfHybridHeatpump_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[2]/100;&#xD;
v_amountOfDistrictHeating_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[3]/100;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1732636773704</Id>
						<Name>f_setHeatingMethodPct_agriculture</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2170</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>pctArray</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>v_amountOfGasBurners_agriculture_fr = pctArray[0]/100;&#xD;
v_amountOfElectricHeatpumps_agriculture_fr = pctArray[1]/100;&#xD;
v_amountOfHybridHeatpump_agriculture_fr = pctArray[2]/100;&#xD;
v_amountOfDistrictHeating_agriculture_fr = pctArray[3]/100;&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1734716016619</Id>
						<Name>f_resetSpecificGCStates_override</Name>
						<X>1250</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_batteryMoneyMade_euro = 0;&#xD;
v_currentLoadLowPassed_kW = 0;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1736869275213</Id>
						<Name>f_batteryManagementBalanceNoGCCapacity_NBH</Name>
						<X>1680</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//traceln("Battery storage capacity: " + ((J_EAStorageElectric)p_batteryAsset.j_ea).getStorageCapacity_kWh());&#xD;
if (p_batteryAsset.getStorageCapacity_kWh() != 0){&#xD;
	double currentLoadDeviation_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - v_currentLoadLowPassed_kW; // still excludes battery power&#xD;
	//traceln("electricitySuprlus_kW: " + electricitySurplus_kW);&#xD;
	//v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( electricitySurplus_kW - v_electricityPriceLowPassed_eurpkWh );&#xD;
	//double v_allowedDeliveryCapacity_kW = p_contractedDeliveryCapacity_kW*0.95;&#xD;
	//double v_allowedFeedinCapacity_kW = p_contractedFeedinCapacity_kW*0.95;&#xD;
	//double connectionCapacity_kW = v_allowedCapacity_kW; // Use only 90% of capacity for robustness against delay&#xD;
	//double availableChargePower_kW = v_allowedDeliveryCapacity_kW - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY); // Max battery charging power within grid capacity&#xD;
	//double availableDischargePower_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) + v_allowedFeedinCapacity_kW; // Max discharging power within grid capacity&#xD;
&#xD;
	double SOC_setp_fr_offset = v_SOC_setp_fr_offset_balance; // default: 0.6&#xD;
	//TODO: Verander in iets specifieks voor project - overwrite in GC Neighborhood&#xD;
	//traceln("Current price is " + currentElectricityPriceCharge_eurpkWh + " eurpkWh, between " + currentPricePowerBandNeg_kW + " kW and " + currentPricePowerBandPos_kW + " kW");&#xD;
	//SOC_setp_fr = 0.6 + 0.25 * Math.cos(2*Math.PI*(energyModel.t_h-18)/24); // Sinusoidal setpoint: aim for low SOC at 6:00h, high SOC at 18:00h. &#xD;
	&#xD;
	//TODO forecast keer installed cap per buurt genormaliseerd.&#xD;
	double windEnergyExpectedNormalized_fr = energyModel.v_WindYieldForecast_fr * energyModel.p_forecastTime_h * v_liveAssetsMetaData.totalInstalledWindPower_kW / p_batteryAsset.getStorageCapacity_kWh();&#xD;
	double solarEnergyExpectedNormalized_fr = energyModel.v_SolarYieldForecast_fr * energyModel.p_forecastTime_h * v_liveAssetsMetaData.totalInstalledPVPower_kW / p_batteryAsset.getStorageCapacity_kWh();&#xD;
	//double heatpumpExpectedEnergyDrawNormalized_fr = ...&#xD;
	double SOC_setp_fr =  SOC_setp_fr_offset + 0.1 * Math.cos(2*Math.PI*(energyModel.t_h-7)/24) - 0.1 * windEnergyExpectedNormalized_fr - 0.1 * solarEnergyExpectedNormalized_fr;&#xD;
	//traceln("Forecast-based SOC setpoint: " + SOC_setp_fr + " %");&#xD;
	&#xD;
	//traceln("SOC_setp_fr" + SOC_setp_fr);&#xD;
	&#xD;
	//traceln("SOC setpoint at " + getHourOfDay() + " h is " + SOC_setp_fr*100 + "%");&#xD;
	double FeedbackGain_kWpSOC_factor = v_FeedbackGain_kWpSOC_factor_balance; // default: 0.4&#xD;
	double FeedbackGain_kWpSOC = FeedbackGain_kWpSOC_factor * p_batteryAsset.getCapacityElectric_kW(); // How strongly to aim for SOC setpoint&#xD;
	double FeedforwardGain_kWpKw = 1; // Feedforward based on current surpluss in Coop&#xD;
	double chargeOffset_kW = 0; // Charging 'bias', basically increases SOC setpoint slightly during the whole day.&#xD;
	double chargeSetpoint_kW = 0;&#xD;
	chargeSetpoint_kW = -FeedforwardGain_kWpKw * currentLoadDeviation_kW + (SOC_setp_fr - p_batteryAsset.getCurrentStateOfCharge_fr()) * FeedbackGain_kWpSOC;&#xD;
	//chargeSetpoint_kW = min(max(chargeSetpoint_kW, -availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!&#xD;
	p_batteryAsset.v_powerFraction_fr = max(-1,min(1, chargeSetpoint_kW / p_batteryAsset.getCapacityElectric_kW())); // Convert to powerFraction and limit power&#xD;
	//traceln("v_powerFraction_fr" + p_batteryAsset.v_powerFraction_fr);&#xD;
	//traceln("Coop surpluss " + currentCoopElectricitySurplus_kW + "kW, Battery charging power " + p_batteryAsset.v_powerFraction_fr*p_batteryAsset.j_ea.getElectricCapacity_kW() + " kW at " + currentBatteryStateOfCharge*100 + " % SOC");&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1718724980084</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1718797589418</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1718724980090</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1722502672021</Id>
								<Name>rect_heatSliderFunctionality</Name>
								<X>1650</X>
								<Y>10</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-65536</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>960</Width>
								<Height>400</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1722502691313</Id>
								<Name>txt_heatSliderFunctionality</Name>
								<X>1680</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heat sliders functionality</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1724397965238</Id>
								<Name>rect_batterySliderFunctionality</Name>
								<X>1650</X>
								<Y>420</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16711936</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>960</Width>
								<Height>170</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1724397981363</Id>
								<Name>txt_batterySliderFunctionality</Name>
								<X>1670</X>
								<Y>430</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Battery control</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1729064990067</Id>
								<Name>rectangle4</Name>
								<X>1650</X>
								<Y>740</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>430</Width>
								<Height>230</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1729065010495</Id>
								<Name>txt_AdditionalGCNBHParameters</Name>
								<X>1670</X>
								<Y>760</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Extra specifieke Parameters</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1733992649922</Id>
								<Name>txt_batteryBalance</Name>
								<X>1670</X>
								<Y>460</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Balance</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1733993648205</Id>
								<Name>txt_batteryPrice</Name>
								<X>2110</X>
								<Y>460</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Prijs</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1736933200347</Id>
								<Name>rect_batterySliderFunctionality1</Name>
								<X>1650</X>
								<Y>600</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-16711936</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>960</Width>
								<Height>120</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1736933209166</Id>
								<Name>txt_chpSliderFunctionality</Name>
								<X>1670</X>
								<Y>610</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>CHP control</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1717956409506</Id>
				<Name>GCPublicCharger</Name>
				<AdditionalClassCode>&#xD;
/*@Override&#xD;
public void f_operateFixedAssets(){&#xD;
	f_operateFixedAssets_overwrite();&#xD;
}*/&#xD;
&#xD;
@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1717956409512</Id>
					<Name>1717956409512</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089951</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1718006400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1717956409509</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1717956409513</CurrentLevel>
				<ConnectionsId>1717956409507</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1720728863554</Id>
						<Name>v_netBewustLadenActive</Name>
						<X>270</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407076</Id>
						<Name>v_isActiveCharger1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407078</Id>
						<Name>v_netBewustLadenActive1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407080</Id>
						<Name>v_sessionIndex</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407082</Id>
						<Name>v_nextSessionStartTime</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407084</Id>
						<Name>v_v2gProbability</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407086</Id>
						<Name>v_nextSessionInfo</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String[]</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407088</Id>
						<Name>v_shiftedLoadV1G_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407090</Id>
						<Name>v_shiftedLoadV2G_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1749648407096</Id>
						<Name>v_sessionIndexStored</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>2060</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1717959948784</Id>
						<Name>p_gisregion</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>510</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GISRegion</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1717959948782</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718020204898</Id>
						<Name>p_nbOfChargers</Name>
						<X>1640</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718020204896</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718020213388</Id>
						<Name>p_maxChargingPower_kW</Name>
						<X>1640</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718020213386</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718020656896</Id>
						<Name>p_chargingVehicleType</Name>
						<X>1640</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_EnergyAssetType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718020656894</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718879495372</Id>
						<Name>p_CPOName</Name>
						<X>50</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718879495370</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718903294274</Id>
						<Name>p_isInitialCharger</Name>
						<X>270</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718903294272</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1720377369145</Id>
						<Name>p_chargingProfileName</Name>
						<X>270</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1720377369143</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749648407099</Id>
						<Name>p_isInitialCharger1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749648407097</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749648407102</Id>
						<Name>p_chargingProfileName1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749648407100</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749648407105</Id>
						<Name>chargingSessionSocket1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ChargingSession</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749648407103</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749648407108</Id>
						<Name>chargingSessionSocket2</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ChargingSession</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749648407106</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749648407111</Id>
						<Name>p_chargerAsset</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAPublicCharger</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1749648407109</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1750335661857</Id>
						<Name>p_isChargingCentre</Name>
						<X>270</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1750335661855</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717956478582</Id>
						<Name>f_operateFixedAssets_overwrite</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>910</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for ( J_EAProfile e : c_profileAssets){&#xD;
	double[] flowsArray = e.f_updateAllFlows( energyModel.t_h );		&#xD;
	if (e.profileType == OL_ProfileAssetType.CHARGING){&#xD;
		v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
	}&#xD;
	else if( e.profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD){&#xD;
		v_fixedConsumptionElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
	}&#xD;
	else {&#xD;
		traceln( "Profile type is not registered in GCPublicCharger");&#xD;
	}&#xD;
	//v_currentPowerElectricity_kW += flowsArray[4];		&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1726749088568</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Manage charging&#xD;
f_manageCharging();&#xD;
&#xD;
f_manageChargers();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749648407069</Id>
						<Name>f_operateChargerNew</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1950</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if( v_sessionIndex != -1){ //if we didnt reach the last session&#xD;
	f_manageChargingSessions(); //here we install a new charging session, but if end time of previous overlaps with start time of next there is a problem&#xD;
}&#xD;
&#xD;
double ratioOfCapacity = 0;&#xD;
double chargingPower = 0;&#xD;
v_shiftedLoadV1G_kW = 0;&#xD;
v_shiftedLoadV2G_kW = 0;&#xD;
&#xD;
if (chargingSessionSocket1 != null){&#xD;
	chargingPower += chargingSessionSocket1.operate();&#xD;
	v_shiftedLoadV1G_kW += chargingSessionSocket1.getShiftedLoadV1GCurrentTimestep();&#xD;
	v_shiftedLoadV2G_kW += chargingSessionSocket1.getShiftedLoadV2GCurrentTimestep();&#xD;
	if ( chargingSessionSocket1.timeStepsToDisconnect == 0 ){&#xD;
		//traceln("EndTime: " + (chargingSessionSocket1.endTime / 4.0) + ", current timestep: " + energyModel.t_h );&#xD;
		chargingSessionSocket1 = null;&#xD;
	}&#xD;
}&#xD;
&#xD;
if (chargingSessionSocket2 != null){&#xD;
	chargingPower += chargingSessionSocket2.operate();&#xD;
	v_shiftedLoadV1G_kW += chargingSessionSocket2.getShiftedLoadV1GCurrentTimestep();&#xD;
	v_shiftedLoadV2G_kW += chargingSessionSocket2.getShiftedLoadV2GCurrentTimestep();&#xD;
	if ( chargingSessionSocket2.timeStepsToDisconnect == 0 ){&#xD;
		chargingSessionSocket2 = null;&#xD;
	}&#xD;
}&#xD;
&#xD;
ratioOfCapacity = chargingPower / p_chargerAsset.capacityElectric_kW;&#xD;
if (!v_isActiveCharger){&#xD;
	ratioOfCapacity = 0;&#xD;
}&#xD;
&#xD;
p_chargerAsset.f_updateAllFlows( ratioOfCapacity );&#xD;
&#xD;
v_totalShiftedLoadV1G_kWh += v_shiftedLoadV1G_kW;&#xD;
v_totalShiftedLoadV2G_kWh += v_shiftedLoadV2G_kW;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749648407072</Id>
						<Name>f_manageChargingSessions</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1960</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if( energyModel.t_h == v_nextSessionStartTime / 4.0){&#xD;
	int startIndex = Integer.parseInt(v_nextSessionInfo[0]);&#xD;
	int endIndex = Integer.parseInt(v_nextSessionInfo[1]);&#xD;
	double chargingDemand_kWh = Double.parseDouble(v_nextSessionInfo[2]);&#xD;
	double batteryCap_kWh = Double.parseDouble(v_nextSessionInfo[3]);&#xD;
	//&#xD;
	double chargingPower_kW = Double.parseDouble(v_nextSessionInfo[5]);&#xD;
	int socket = Integer.parseInt(v_nextSessionInfo[6]);&#xD;
	&#xD;
	if ( socket == 1){&#xD;
		if (chargingSessionSocket1 != null){&#xD;
			traceln("Error, new charging session but socket 1 is not empty, profile: " + p_chargingProfileName + ", startIndex: " + startIndex + ", existing session end index: " + chargingSessionSocket1.endTime);&#xD;
		}&#xD;
		chargingSessionSocket1 = new ChargingSession(startIndex, endIndex, chargingDemand_kWh, batteryCap_kWh, chargingPower_kW, socket, randomTrue(energyModel.v_V2GProbability), 0.25);&#xD;
		//traceln("new session created, start: " + startIndex + ", end: " +endIndex+ ", current timestep: " + energyModel.t_h * 4 + ", timeslots alive: " + chargingSessionSocket1.timeStepsToDisconnect );&#xD;
	}&#xD;
	else {&#xD;
		if (chargingSessionSocket2 != null){&#xD;
			traceln("Error, new charging session but socket 2 is not empty, profile: " + p_chargingProfileName + ", startIndex: " + startIndex + ", existing session end index: " + chargingSessionSocket2.endTime);&#xD;
		}&#xD;
		chargingSessionSocket2 = new ChargingSession(startIndex, endIndex, chargingDemand_kWh, batteryCap_kWh, chargingPower_kW, socket, randomTrue(energyModel.v_V2GProbability), 0.25);&#xD;
	}&#xD;
	&#xD;
	v_sessionIndex ++;&#xD;
	&#xD;
	&#xD;
	f_getNextSessionInfo();&#xD;
	if ( energyModel.t_h == v_nextSessionStartTime / 4.0 ){&#xD;
		//traceln("Multiple charging sessions starting at the same timestap in charging profile: " + p_chargingProfileName + " at time: " + v_nextSessionStartTime);&#xD;
		f_manageChargingSessions(); &#xD;
	}&#xD;
	else if ( energyModel.t_h &gt; v_nextSessionStartTime / 4.0){&#xD;
		traceln(" charging profile data incorrect, next charging session is in the past");&#xD;
	}&#xD;
	&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1749648407074</Id>
						<Name>f_getNextSessionInfo</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1960</X>
						<Y>690</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// example: 2/54/50.3/72.1/21.8/10.8/2&#xD;
&#xD;
String sessie = selectFirstValue(&#xD;
	"SELECT " + p_chargingProfileName + " FROM chargingsessions WHERE " + &#xD;
		"session = ? LIMIT 1;",&#xD;
		v_sessionIndex);&#xD;
&#xD;
if( sessie != null){&#xD;
	v_nextSessionInfo = sessie.split("/"); &#xD;
	v_nextSessionStartTime = Integer.parseInt(v_nextSessionInfo[0]);&#xD;
	//traceln("Profile " + p_chargingProfileName + " next start time: " + v_nextSessionInfo[0]);&#xD;
}&#xD;
else{&#xD;
	v_sessionIndex = -1;&#xD;
	//traceln( "No new charging session available in data for " + p_chargingProfileName +  ", current session index: " + v_sessionIndex);&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1717956409507</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1717960182629</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1717956409513</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1718020159680</Id>
								<Name>rectangle4</Name>
								<X>1600</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>3</LineWidth>
								<LineColor>-65536</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>300</Width>
								<Height>160</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1718020176410</Id>
								<Name>txt_chargingStationFunctions</Name>
								<X>1620</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Charging Centre Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>14</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1749648398363</Id>
								<Name>rect_woonwijkOud</Name>
								<X>1540</X>
								<Y>470</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>370</Width>
								<Height>290</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1672138285227</Id>
				<Name>GCUtility</Name>
				<AdditionalClassCode>@Override&#xD;
public void f_operateFlexAssets(){&#xD;
	f_operateFlexAssets_overwrite();&#xD;
}&#xD;
&#xD;
@Override&#xD;
public void f_resetSpecificGCStates(){&#xD;
	f_resetSpecificGCStates_overwrite();&#xD;
}&#xD;
</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GridConnection</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_gridConnectionCategory</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionType</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectricID</Name>
					</Parameter>
					<Parameter>
						<Name>p_gridConnectionID</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeatID</Name>
					</Parameter>
					<Parameter>
						<Name>p_BuildingThermalAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_ownerID</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingType</Name>
					</Parameter>
					<Parameter>
						<Name>p_chargingAttitudeVehicles</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_electrolyserOperationMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_gasBuffer</Name>
					</Parameter>
					<Parameter>
						<Name>p_cookingTracker</Name>
					</Parameter>
					<Parameter>
						<Name>p_energyLabel</Name>
					</Parameter>
					<Parameter>
						<Name>p_DHWAsset</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_floorSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISPoint</Name>
					</Parameter>
					<Parameter>
						<Name>p_owner</Name>
					</Parameter>
					<Parameter>
						<Name>p_roofSurfaceArea_m2</Name>
					</Parameter>
					<Parameter>
						<Name>p_purposeBAG</Name>
					</Parameter>
					<Parameter>
						<Name>p_name</Name>
					</Parameter>
					<Parameter>
						<Name>p_curtailmentMode</Name>
					</Parameter>
					<Parameter>
						<Name>p_address</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeHeat</Name>
					</Parameter>
					<Parameter>
						<Name>p_parentNodeElectric</Name>
					</Parameter>
					<Parameter>
						<Name>p_heatingManagement</Name>
					</Parameter>
					<Parameter>
						<Name>p_batteryAlgorithm</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1672138285225</Id>
					<Name>1672138285225</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089950</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1672214400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1672138285223</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1672138285226</CurrentLevel>
				<ConnectionsId>1672138285222</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1721138603371</Id>
						<Name>v_totalHydrogenUsed_MWh</Name>
						<X>1230</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721139587618</Id>
						<Name>v_enableFuelCell</Name>
						<X>270</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725879138068</Id>
						<Name>v_maxHydrogenPower_kW</Name>
						<X>1480</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1698936515692</Id>
						<Name>f_operateFlexAssets_overwrite</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>f_manageHeating();&#xD;
&#xD;
f_manageCharging();&#xD;
&#xD;
f_manageBattery();&#xD;
&#xD;
if (v_enableFuelCell) {&#xD;
	f_manageFuelCell();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721138603366</Id>
						<Name>f_manageFuelCell</Name>
						<X>1070</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Arbitrarely i'm deciding not to use more than 95% of the GC &amp; GN capacity.&#xD;
double capacityLimit_fr = 0.95;&#xD;
if (fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &gt; v_liveConnectionMetaData.contractedDeliveryCapacity_kW * capacityLimit_fr || fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &gt; p_parentNodeElectric.p_capacity_kW * capacityLimit_fr) {&#xD;
	J_EAConversionFuelCell fuelCellAsset = (J_EAConversionFuelCell) findFirst(c_conversionAssets, j_ea -&gt; j_ea.getEAType() == OL_EnergyAssetType.FUEL_CELL);&#xD;
	if (fuelCellAsset == null) {&#xD;
		traceln("No fuel cell asset found");&#xD;
	}&#xD;
	else {&#xD;
		double powerNeeded_kW = max(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - v_liveConnectionMetaData.contractedDeliveryCapacity_kW * capacityLimit_fr,  fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - p_parentNodeElectric.p_capacity_kW * capacityLimit_fr);&#xD;
		// For now i've assumed the only fuel cells being used are with a capacity of 1 MW and efficieny of 50%.&#xD;
		double efficiency = fuelCellAsset.getEta_r();&#xD;
		double ratioOfCapacity = powerNeeded_kW / (fuelCellAsset.getOutputCapacity_kW()*efficiency);&#xD;
		&#xD;
		// Check the amount of Hydrogen that has been generated so far&#xD;
		// Only works because there is a single energy conversion site&#xD;
		if (energyModel.EnergyConversionSites.get(0).v_hydrogenInStorage_kWh &gt; 0 ) {&#xD;
			// Calling operate directly instead of updateAllFlows, so that it's not bounded&#xD;
			//Pair&lt;J_FlowsMap, Double&gt; flowsPair = fuelCellAsset.operate(ratioOfCapacity);&#xD;
			fuelCellAsset.f_updateAllFlows(ratioOfCapacity);&#xD;
			//traceln("fuel cell operated: " + Arrays.toString(arr));&#xD;
			&#xD;
			// Since not calling updateAllFlows, have to manually do this&#xD;
			//double energyUse_kW = - flowsMap.values().stream().mapToDouble(Double::doubleValue).sum();&#xD;
			//f_addFlows(flowsMap, flowsPair.getSecond(), fuelCellAsset);&#xD;
			&#xD;
			// updating other variables&#xD;
			//v_currentPowerHydrogen_kW += arr[0];&#xD;
			//v_hydrogenInStorage_kWh -= arr[6] * energyModel.p_timeStep_h;&#xD;
			energyModel.EnergyConversionSites.get(0).v_hydrogenInStorage_kWh -= fuelCellAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN) * energyModel.p_timeStep_h;&#xD;
			if (energyModel.v_isRapidRun) {&#xD;
				v_totalHydrogenUsed_MWh += fuelCellAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN) * energyModel.p_timeStep_h / 1000;&#xD;
				if (fuelCellAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN) &gt; v_maxHydrogenPower_kW) {&#xD;
					v_maxHydrogenPower_kW = fuelCellAsset.getLastFlows().get(OL_EnergyCarriers.HYDROGEN);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721138706438</Id>
						<Name>f_resetSpecificGCStates_overwrite</Name>
						<X>1250</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Reset variables &#xD;
v_totalHydrogenUsed_MWh = 0;&#xD;
v_maxHydrogenPower_kW = 0;</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1672138285222</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1696862765126</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>40</X>
						<Y>-40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1672138285226</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1676382560905</Id>
				<Name>GIS_Building</Name>
				<Description>Object for GISRegions of buildings. Contains information about the building. The addresses are available through the contained GridConnections.</Description>
				<Folder>1752681631114</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GIS_Object</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>gisRegion</Name>
					</Parameter>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISObjectType</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISRegion_coords</Name>
					</Parameter>
					<Parameter>
						<Name>p_id</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineColor</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultFillColor</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineWidth</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineStyle</Name>
					</Parameter>
					<Parameter>
						<Name>p_annotation</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1676382560900</Id>
					<Name>1676382560900</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089949</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1663833600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1676382560901</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1676382560913</CurrentLevel>
				<ConnectionsId>1676382560915</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1696856781368</Id>
						<Name>ar_countEnergyLabels</Name>
						<X>790</X>
						<Y>150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int[]</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696856781371</Id>
						<Name>ar_countHeatSystems</Name>
						<X>790</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int[]</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052529</Id>
						<Name>p_status</Name>
						<X>40</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1696858052527</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052547</Id>
						<Name>p_useType</Name>
						<X>40</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1696858052545</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052551</Id>
						<Name>p_buildingType</Name>
						<X>40</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_BuildingType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_BuildingType.Office</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1696858052549</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052555</Id>
						<Name>p_buildingYear</Name>
						<X>40</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1696858052553</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052560</Id>
						<Name>p_floorSurfaceArea_m2</Name>
						<X>40</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1696858052558</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1696858052564</Id>
						<Name>p_floors</Name>
						<X>40</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1696858052562</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1714137583569</Id>
						<Name>p_roofSurfaceArea_m2</Name>
						<X>40</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1714137583567</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1716898390947</Id>
						<Name>p_pandcluster_nr</Name>
						<X>40</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1716898390945</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1716898460038</Id>
						<Name>p_uniek_pand</Name>
						<X>40</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1716898460036</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1716898471373</Id>
						<Name>p_pand_nr</Name>
						<X>40</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>int</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1716898471371</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721036302503</Id>
						<Name>p_pandNaam</Name>
						<X>40</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1721036302501</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1696924186553</Id>
						<Name>f_countEnergyLabels</Name>
						<X>760</X>
						<Y>105</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>traceln("f_countEnergyLabels is not functional!");&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1676382560915</Id>
						<Name>connections</Name>
						<X>250</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1676382645186</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1676382560913</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Text>
								<Id>1721721465291</Id>
								<Name>t_buildingDescription1</Name>
								<X>50</X>
								<Y>180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Building Info</Text>
								<Font>
									<Name>Dialog</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1697018621698</Id>
						<Name>va_building</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1667726338857</Id>
				<Name>GIS_Object</Name>
				<Description>Generic Object for GISRegions. Is used for GridConnections of type: GCEnergyProduction, GCEnergyConversion, GCGridBattery, GCPublicCharger.</Description>
				<Folder>1752681631114</Folder>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1667726338855</Id>
					<Name>1667726338855</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089948</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1667808000000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1667726338853</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1667726338856</CurrentLevel>
				<ConnectionsId>1667726338852</ConnectionsId>
				<Variables>
					<Variable Class="Parameter">
						<Id>1697009799975</Id>
						<Name>gisRegion</Name>
						<X>50</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GISRegion</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697009799973</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1697009799980</Id>
						<Name>p_longitude</Name>
						<X>50</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697009799978</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1697009799984</Id>
						<Name>p_latitude</Name>
						<X>50</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697009799982</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1697464235545</Id>
						<Name>p_GISObjectType</Name>
						<X>50</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GISObjectType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697464235543</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1702547667207</Id>
						<Name>p_GISRegion_coords</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1702547667205</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1705666644943</Id>
						<Name>p_id</Name>
						<X>50</X>
						<Y>20</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1705666644941</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721720988124</Id>
						<Name>p_defaultLineColor</Name>
						<X>390</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Color</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1721720988122</Id>
								<EditorContolType>COLOR_PICKER</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721720988128</Id>
						<Name>p_defaultFillColor</Name>
						<X>390</X>
						<Y>30</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Color</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1721720988126</Id>
								<EditorContolType>COLOR_PICKER</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721809734127</Id>
						<Name>p_defaultLineWidth</Name>
						<X>390</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>1</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1721809734125</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721809794729</Id>
						<Name>p_defaultLineStyle</Name>
						<X>390</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>LineStyle</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>LineStyle.LINE_STYLE_SOLID</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1721809794727</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721830375724</Id>
						<Name>p_annotation</Name>
						<X>50</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1721830375722</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1721726757949</Id>
						<Name>c_containedGridConnections</Name>
						<X>390</X>
						<Y>120</Y>
						<Label>
							<X>13</X>
							<Y>4</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1721720983063</Id>
						<Name>f_style</Name>
						<X>600</X>
						<Y>55</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>fillColor</Name>
							<Type>Color</Type>
						</Parameter>
						<Parameter>
							<Name>lineColor</Name>
							<Type>Color</Type>
						</Parameter>
						<Parameter>
							<Name>width</Name>
							<Type>Double</Type>
						</Parameter>
						<Parameter>
							<Name>lineStyle</Name>
							<Type>LineStyle</Type>
						</Parameter>
						<Body>if (fillColor == null) {&#xD;
	fillColor = p_defaultFillColor;&#xD;
}&#xD;
gisRegion.setFillColor( fillColor );&#xD;
if (lineColor == null) {&#xD;
	lineColor = p_defaultLineColor;&#xD;
}&#xD;
gisRegion.setLineColor( lineColor );&#xD;
if (width == null) {&#xD;
	width = p_defaultLineWidth;&#xD;
}&#xD;
gisRegion.setLineWidth( width );&#xD;
if (lineStyle == null) {&#xD;
	lineStyle = p_defaultLineStyle;&#xD;
}&#xD;
gisRegion.setLineStyle( lineStyle );</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1667726338852</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1697464974649</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1667726338856</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660572036696</Id>
				<Name>GIS_Parcel</Name>
				<Description>Object for GISRegions of empty parcels. c_containedGridConnections should always be empty, hence the address</Description>
				<Folder>1752681631114</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>GIS_Object</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_longitude</Name>
					</Parameter>
					<Parameter>
						<Name>p_latitude</Name>
					</Parameter>
					<Parameter>
						<Name>gisRegion</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISObjectType</Name>
					</Parameter>
					<Parameter>
						<Name>p_GISRegion_coords</Name>
					</Parameter>
					<Parameter>
						<Name>p_id</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineColor</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultFillColor</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineWidth</Name>
					</Parameter>
					<Parameter>
						<Name>p_defaultLineStyle</Name>
					</Parameter>
					<Parameter>
						<Name>p_annotation</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660572036694</Id>
					<Name>1660572036694</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089947</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660636800000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660572036692</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660572036695</CurrentLevel>
				<ConnectionsId>1660572036691</ConnectionsId>
				<Variables>
					<Variable Class="Parameter">
						<Id>1726152082148</Id>
						<Name>p_address</Name>
						<Description>A Java class that contains all the relevant information about the grid connection address. The class contains a method .getAddress() which returns a formatted String of the address.</Description>
						<X>50</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_Address</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726152082146</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<AgentLinks>
					<AgentLink>
						<Id>1660572036691</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<DrawLine>true</DrawLine>
						<LineStyle>DOTTED</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>ABOVE_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1721736146575</Id>
						<Name>energyModel</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660572036695</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Text>
								<Id>1721721376067</Id>
								<Name>t_addressDescription</Name>
								<X>50</X>
								<Y>170</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Address Info</Text>
								<Font>
									<Name>Dialog</Name>
									<Size>18</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660731364525</Id>
				<Name>GovernmentLayer</Name>
				<Folder>1752677829820</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660731364523</Id>
					<Name>1660731364523</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089946</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660731364521</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660731364524</CurrentLevel>
				<ConnectionsId>1660731364520</ConnectionsId>
				<AgentLinks>
					<AgentLink>
						<Id>1660731364520</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660732002822</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660731364524</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658499438203</Id>
				<Name>GridConnection</Name>
				<AdditionalClassCode>public OL_ResultScope getScope(){return OL_ResultScope.GRIDCONNECTION;}&#xD;
public J_RapidRunData getRapidRunData(){return v_rapidRunData;}&#xD;
public J_LiveData getLiveData(){return v_liveData;}&#xD;
public J_RapidRunData getPreviousRapidRunData(){return v_previousRunData;}</AdditionalClassCode>
				<Folder>1752677823817</Folder>
				<Import>/*import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.node.NumericNode;
import com.fasterxml.jackson.core.json.JsonReadFeature;
*/
import java.io.IOException;
import java.util.Scanner;
import java.util.*;
import java.util.stream.Collectors;
import java.io.*;

import zeroPackage.ZeroMath;
//import zeroPackage.ZeroAccumulator;
import javax.management.RuntimeErrorException;</Import>
				<Implements>I_EnergyData</Implements>
				<StartupCode>energyModel.c_gridConnections.add(this);
v_liveData = new J_LiveData(this);
v_liveConnectionMetaData = new J_ConnectionMetaData(this);
v_liveAssetsMetaData = new J_AssetsMetaData(this);
v_liveData.connectionMetaData = v_liveConnectionMetaData;
v_liveData.assetsMetaData = v_liveAssetsMetaData;
</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658499438201</Id>
					<Name>1658499438201</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089945</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658499438199</Id>
					<Name>scale</Name>
					<X>30</X>
					<Y>-260</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658499438202</CurrentLevel>
				<ConnectionsId>1658499438198</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1666282164534</Id>
						<Name>v_previousPowerElectricity_kW</Name>
						<X>1270</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667746610980</Id>
						<Name>v_vehicleIndex</Name>
						<Description>Wordt gebruikt om voertuigen aan assets te koppelen tijden initialisatie.</Description>
						<X>-190</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667902447354</Id>
						<Name>v_evChargingPowerElectric_kW</Name>
						<X>110</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668370002883</Id>
						<Name>v_additionalTimeSpreadCharging_MIN</Name>
						<Description>In the charging attitude MAX_SPREAD the vehicles can be planned to be full some time before their actual departure. </Description>
						<X>270</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>int</Type>
							<InitialValue Class="CodeValue">
								<Code>30</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668610729237</Id>
						<Name>v_fixedConsumptionElectric_kW</Name>
						<X>110</X>
						<Y>980</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668610741368</Id>
						<Name>v_pvProductionElectric_kW</Name>
						<X>110</X>
						<Y>1240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668610757391</Id>
						<Name>v_batteryPowerElectric_kW</Name>
						<X>110</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668611038479</Id>
						<Name>v_conversionPowerElectric_kW</Name>
						<X>110</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668695288481</Id>
						<Name>v_electricityPriceLowPassed_eurpkWh</Name>
						<X>1270</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.15</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668695288483</Id>
						<Name>v_lowPassFactor_fr</Name>
						<X>1270</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>min(1, 0.001)</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1669725778092</Id>
						<Name>v_maxConnectionLoad_fr</Name>
						<X>1270</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1671027786040</Id>
						<Name>v_windProductionElectric_kW</Name>
						<X>110</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1673870786520</Id>
						<Name>v_electricHobConsumption_kW</Name>
						<Description>This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information</Description>
						<X>140</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1673949346167</Id>
						<Name>v_hotwaterDemand_kW</Name>
						<X>530</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674329641809</Id>
						<Name>v_currentElectricityPriceConsumption_eurpkWh</Name>
						<X>1270</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1674396166866</Id>
						<Name>v_WTPCharging_eurpkWh</Name>
						<X>1270</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1676468216301</Id>
						<Name>v_residualHeatGasPit_kW</Name>
						<X>530</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1678710234324</Id>
						<Name>v_lowPassFactorLoad_fr</Name>
						<X>1270</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.1</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1695824940090</Id>
						<Name>v_WTRV2G_eurpkWh</Name>
						<X>1270</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696837525849</Id>
						<Name>v_heatPumpElectricityConsumption_kW</Name>
						<Description>This is part of the v_fixedConsumptionElectric_kW, thus variable only exists for additional information</Description>
						<X>140</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1701700372072</Id>
						<Name>v_currentEnergyCurtailed_kW</Name>
						<X>110</X>
						<Y>1280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1705421898378</Id>
						<Name>v_currentPrimaryEnergyProductionHeatpumps_kW</Name>
						<X>530</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1717414924763</Id>
						<Name>v_hydrogenElectricityConsumption_kW</Name>
						<X>140</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720442507543</Id>
						<Name>v_enableCurtailment</Name>
						<X>270</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720447120435</Id>
						<Name>v_curtailmentPowerElectric_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>110</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720435316099</Id>
						<Name>v_nfatoWeekendDeliveryCapacity_kW</Name>
						<Description>Capacities for Non-Firm ATO per hour of the day </Description>
						<X>270</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new double[24]</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720435335143</Id>
						<Name>v_nfatoWeekDeliveryCapacity_kW</Name>
						<Description>Capacities for Non-Firm ATO per hour of the day </Description>
						<X>270</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new double[24]</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1720520594279</Id>
						<Name>v_enableNFato</Name>
						<X>270</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721833484396</Id>
						<Name>v_previousPowerHeat_kW</Name>
						<Description>Heat balance of previous timestep</Description>
						<X>1270</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721821764640</Id>
						<Name>v_hasQuarterHourlyValues</Name>
						<X>270</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722584654288</Id>
						<Name>v_isActive</Name>
						<X>270</X>
						<Y>380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>true</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725968910310</Id>
						<Name>v_nfatoWeekendFeedinCapacity_kW</Name>
						<Description>Capacities for Non-Firm ATO per hour of the day </Description>
						<X>270</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new double[24]</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1725968910312</Id>
						<Name>v_nfatoWeekFeedinCapacity_kW</Name>
						<Description>Capacities for Non-Firm ATO per hour of the day </Description>
						<X>270</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double[]</Type>
							<InitialValue Class="CodeValue">
								<Code>new double[24]</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726238237441</Id>
						<Name>v_districtHeatDelivery_kW</Name>
						<X>530</X>
						<Y>970</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1726425994811</Id>
						<Name>v_heatpumpDelivery_kW</Name>
						<X>530</X>
						<Y>990</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729777741783</Id>
						<Name>fm_currentConsumptionFlows_kW</Name>
						<X>840</X>
						<Y>880</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729778045250</Id>
						<Name>fm_currentProductionFlows_kW</Name>
						<X>840</X>
						<Y>860</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729779945875</Id>
						<Name>v_currentPrimaryEnergyProduction_kW</Name>
						<X>840</X>
						<Y>920</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729779968944</Id>
						<Name>v_currentFinalEnergyConsumption_kW</Name>
						<X>840</X>
						<Y>940</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1729781848174</Id>
						<Name>fm_currentBalanceFlows_kW</Name>
						<X>840</X>
						<Y>900</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_FlowsMap</Type>
							<InitialValue Class="CodeValue">
								<Code>new J_FlowsMap()</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1731576190939</Id>
						<Name>v_activeEnergyCarriers</Name>
						<X>835</X>
						<Y>785</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733478609497</Id>
						<Name>v_activeConsumptionEnergyCarriers</Name>
						<X>855</X>
						<Y>825</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1733478609500</Id>
						<Name>v_activeProductionEnergyCarriers</Name>
						<X>855</X>
						<Y>805</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>EnumSet&lt;OL_EnergyCarriers&gt;</Type>
							<InitialValue Class="CodeValue">
								<Code>EnumSet.of(OL_EnergyCarriers.ELECTRICITY);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1734088515133</Id>
						<Name>v_CHPProductionElectric_kW</Name>
						<X>110</X>
						<Y>1170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1737539227165</Id>
						<Name>v_batteryStoredEnergy_kWh</Name>
						<X>110</X>
						<Y>1190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741182119260</Id>
						<Name>v_rapidRunData</Name>
						<X>570</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741182119264</Id>
						<Name>v_liveData</Name>
						<X>570</X>
						<Y>740</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_LiveData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741277722819</Id>
						<Name>v_previousRunData</Name>
						<X>570</X>
						<Y>830</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_RapidRunData</Type>
							<InitialValue Class="CodeValue">
								<Code>null</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741871129695</Id>
						<Name>v_liveAssetsMetaData</Name>
						<X>590</X>
						<Y>760</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_AssetsMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1741942930553</Id>
						<Name>v_liveConnectionMetaData</Name>
						<X>590</X>
						<Y>780</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ConnectionMetaData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1751442438903</Id>
						<Name>v_ptProductionHeat_kW</Name>
						<X>530</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658499438204</Id>
						<Name>p_gridConnectionCategory</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>270</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionCategory</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658477089944</Id>
								<Label>p_netConnectionCategory</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658500076242</Id>
						<Name>p_gridConnectionType</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>270</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658500076240</Id>
								<Label>p_netConnectionType</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658500465208</Id>
						<Name>p_parentNodeElectricID</Name>
						<X>50</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658500465206</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658752146271</Id>
						<Name>p_gridConnectionID</Name>
						<X>50</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658752146269</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660053984881</Id>
						<Name>p_parentNodeHeatID</Name>
						<X>50</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660053984879</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660115328584</Id>
						<Name>p_BuildingThermalAsset</Name>
						<X>580</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EABuilding</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1660115328582</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>SEPARATOR</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660229326795</Id>
						<Name>p_ownerID</Name>
						<X>50</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660229326793</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1665487815862</Id>
						<Name>p_heatingType</Name>
						<X>270</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionHeatingType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_GridConnectionHeatingType.NONE</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1665487815860</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1668693393498</Id>
						<Name>p_chargingAttitudeVehicles</Name>
						<X>270</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_ChargingAttitude</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_ChargingAttitude.SIMPLE</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1668693393496</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1668695364192</Id>
						<Name>p_batteryAsset</Name>
						<X>600</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAStorageElectric</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1668695364190</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1671459091954</Id>
						<Name>p_electrolyserOperationMode</Name>
						<X>270</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_ElectrolyserOperationMode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_ElectrolyserOperationMode.BALANCE</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1671459091952</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1676449763319</Id>
						<Name>p_heatBuffer</Name>
						<X>600</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAStorageHeat</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1676449763317</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1684919785784</Id>
						<Name>p_gasBuffer</Name>
						<X>600</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAStorageGas</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1684919785782</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692878211840</Id>
						<Name>p_cookingTracker</Name>
						<X>620</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_ActivityTrackerCooking</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1692878211838</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692890035894</Id>
						<Name>p_energyLabel</Name>
						<X>50</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridConnectionIsolationLabel</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1692890035892</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1692973005119</Id>
						<Name>p_DHWAsset</Name>
						<X>621</X>
						<Y>288</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAConsumption</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1692973005117</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1697021029662</Id>
						<Name>p_longitude</Name>
						<X>50</X>
						<Y>295</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697021029660</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1697021029674</Id>
						<Name>p_latitude</Name>
						<X>50</X>
						<Y>315</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1697021029672</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1698935198538</Id>
						<Name>p_floorSurfaceArea_m2</Name>
						<X>50</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1698935198536</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1700492967648</Id>
						<Name>p_GISPoint</Name>
						<X>50</X>
						<Y>275</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GISPoint</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1700492967646</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1704985428470</Id>
						<Name>p_owner</Name>
						<X>50</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ConnectionOwner</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1704985428468</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1714137460172</Id>
						<Name>p_roofSurfaceArea_m2</Name>
						<X>50</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1714137460170</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718887078133</Id>
						<Name>p_purposeBAG</Name>
						<X>50</X>
						<Y>389</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1718887078131</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1722411169263</Id>
						<Name>p_curtailmentMode</Name>
						<X>270</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_CurtailmentMode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>OL_CurtailmentMode.CAPACITY</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1722411169261</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1722429053561</Id>
						<Name>p_name</Name>
						<X>50</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1722429053559</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726146956845</Id>
						<Name>p_address</Name>
						<Description>A Java class that contains all the relevant information about the grid connection address. The class contains a method .getAddress() which returns a formatted String of the address.</Description>
						<X>50</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_Address</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726146956843</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1747302864499</Id>
						<Name>p_parentNodeHeat</Name>
						<X>50</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GridNode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1747302864497</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1747303156910</Id>
						<Name>p_parentNodeElectric</Name>
						<X>50</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GridNode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1747303156908</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1753099355801</Id>
						<Name>p_heatingManagement</Name>
						<X>580</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>I_HeatingManagement</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1753099355799</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1752752664510</Id>
						<Name>p_batteryAlgorithm</Name>
						<X>620</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>I_BatteryManagement</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1752752664508</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1659962626903</Id>
						<Name>c_energyAssets</Name>
						<X>580</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1659962626907</Id>
						<Name>c_storageAssets</Name>
						<X>600</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAStorage</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1659962626909</Id>
						<Name>c_consumptionAssets</Name>
						<X>600</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConsumption</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1659962626911</Id>
						<Name>c_productionAssets</Name>
						<X>600</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAProduction</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1659962626913</Id>
						<Name>c_conversionAssets</Name>
						<X>600</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConversion</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1667746389220</Id>
						<Name>c_vehicleAssets</Name>
						<X>600</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1668359033654</Id>
						<Name>c_vehiclesAvailableForCharging</Name>
						<X>620</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAEV</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1669115948280</Id>
						<Name>c_dieselVehicles</Name>
						<X>620</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EADieselVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1692864624612</Id>
						<Name>c_tripTrackers</Name>
						<X>620</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_ActivityTrackerTrips</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1700044359363</Id>
						<Name>c_profileAssets</Name>
						<X>600</X>
						<Y>188</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAProfile</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1704895219414</Id>
						<Name>c_connectedGISObjects</Name>
						<X>50</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GIS_Object</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1711012701187</Id>
						<Name>c_hydrogenVehicles</Name>
						<X>620</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAHydrogenVehicle</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1715082351013</Id>
						<Name>c_heatingTypes</Name>
						<X>-200</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>OL_GridConnectionHeatingType</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516437894</Id>
						<Name>c_fixedConsumptionElectricAssets</Name>
						<X>-280</X>
						<Y>980</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516468629</Id>
						<Name>c_electricHobAssets</Name>
						<X>-280</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516515981</Id>
						<Name>c_conversionElectricAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-280</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516532968</Id>
						<Name>c_electricHeatpumpAssets</Name>
						<X>-280</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516544883</Id>
						<Name>c_electrolyserAssets</Name>
						<X>-280</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516559744</Id>
						<Name>c_EvAssets</Name>
						<X>-280</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516579645</Id>
						<Name>c_pvAssets</Name>
						<X>-280</X>
						<Y>1200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722516597938</Id>
						<Name>c_windAssets</Name>
						<X>-280</X>
						<Y>1220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1722517079192</Id>
						<Name>c_batteryAssets</Name>
						<X>-280</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1734089799023</Id>
						<Name>c_chpAssets</Name>
						<X>-280</X>
						<Y>1260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1742484728807</Id>
						<Name>c_parentCoops</Name>
						<X>270</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>EnergyCoop</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1750258408126</Id>
						<Name>c_chargers</Name>
						<X>600</X>
						<Y>511</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EACharger</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1751442406691</Id>
						<Name>c_ptAssets</Name>
						<X>-280</X>
						<Y>1240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1753088511626</Id>
						<Name>c_heatingAssets</Name>
						<Description>A collection of assets that can deliver heat. This collection does not include the heat buffer or thermal building.</Description>
						<X>580</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConversion</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1658500398176</Id>
						<Name>f_connectToParents</Name>
						<X>911</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>GridNode myParentNodeElectric = findFirst(energyModel.pop_gridNodes, p-&gt;p.p_gridNodeID.equals(p_parentNodeElectricID)) ;&#xD;
if( myParentNodeElectric != null ) {&#xD;
	p_parentNodeElectric = myParentNodeElectric;&#xD;
	myParentNodeElectric.f_connectToChild(this);&#xD;
}&#xD;
&#xD;
GridNode myParentNodeHeat = findFirst(energyModel.pop_gridNodes, p-&gt;p.p_gridNodeID.equals(p_parentNodeHeatID)) ;&#xD;
if( myParentNodeHeat != null ) {&#xD;
	p_parentNodeHeat = myParentNodeHeat;&#xD;
	myParentNodeHeat.f_connectToChild(this);&#xD;
}&#xD;
&#xD;
if ( p_owner == null ){&#xD;
	p_owner = findFirst(energyModel.pop_connectionOwners, p-&gt;p.p_actorID.equals(p_ownerID));&#xD;
}&#xD;
&#xD;
if ( p_owner != null ){&#xD;
	p_owner.f_connectToChild(this);&#xD;
}&#xD;
/*EnergySupplier myParentEnergySupplier = findFirst(main.pop_energySuppliers, p-&gt;p.p_actorID.equals(p_ownerID)) ;&#xD;
if( myParentEnergySupplier instanceof EnergySupplier) {&#xD;
	//p_ownerActor = myParentEnergySupplier;&#xD;
	l_ownerActor.connectTo(myParentEnergySupplier);&#xD;
	myParentEnergySupplier.f_connectToChild(this);&#xD;
}&#xD;
EnergyCoop myParentEnergyCoop = findFirst(main.pop_energyCoops, p-&gt;p.p_actorID.equals(p_ownerID)) ;&#xD;
if( myParentEnergyCoop instanceof EnergyCoop) {&#xD;
	//p_ownerActor = myParentEnergyCoop;&#xD;
	l_ownerActor.connectTo(myParentEnergyCoop);&#xD;
	myParentEnergyCoop.f_connectToChild(this);&#xD;
}*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660212665961</Id>
						<Name>f_connectionMetering</Name>
						<X>910</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( abs(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HEAT) - fm_currentProductionFlows_kW.get(OL_EnergyCarriers.HEAT)) &gt; 0.1 &amp;&amp; p_parentNodeHeat == null ) {&#xD;
	//if (p_BuildingThermalAsset == null || !p_BuildingThermalAsset.hasHeatBuffer()) {&#xD;
		traceln("heat consumption: %s kW", fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
		traceln("heat production: %s kW", fm_currentProductionFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
		traceln("Heat unbalance in gridConnection: " + p_gridConnectionID);&#xD;
		pauseSimulation();&#xD;
	//}&#xD;
}&#xD;
&#xD;
if (energyModel.v_isRapidRun){&#xD;
	f_rapidRunDataLogging();&#xD;
} else {&#xD;
	f_fillLiveDataSets();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664961435385</Id>
						<Name>f_operateFlexAssets</Name>
						<X>910</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Must be overwritten in child agent</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1668528273163</Id>
						<Name>f_calculateEnergyBalance</Name>
						<X>890</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_previousPowerElectricity_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
v_previousPowerHeat_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
&#xD;
fm_currentProductionFlows_kW.clear();&#xD;
fm_currentConsumptionFlows_kW.clear();&#xD;
fm_currentBalanceFlows_kW.clear();&#xD;
&#xD;
v_currentPrimaryEnergyProduction_kW = 0;&#xD;
v_currentFinalEnergyConsumption_kW = 0;&#xD;
&#xD;
v_currentEnergyCurtailed_kW = 0;&#xD;
v_currentPrimaryEnergyProductionHeatpumps_kW = 0;&#xD;
&#xD;
// Categorical power flows&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
v_electricHobConsumption_kW = 0;&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_windProductionElectric_kW = 0;&#xD;
v_pvProductionElectric_kW = 0;&#xD;
v_ptProductionHeat_kW = 0;&#xD;
v_conversionPowerElectric_kW = 0;&#xD;
v_CHPProductionElectric_kW = 0;&#xD;
v_districtHeatDelivery_kW = 0;&#xD;
&#xD;
if (v_enableNFato) {&#xD;
	f_nfatoUpdateConnectionCapacity();&#xD;
}&#xD;
&#xD;
c_tripTrackers.forEach(t -&gt; t.manageActivities((energyModel.t_h-energyModel.p_runStartTime_h)*60));&#xD;
&#xD;
f_operateFixedAssets();&#xD;
f_operateFlexAssets();&#xD;
&#xD;
f_curtailment();&#xD;
&#xD;
f_connectionMetering();&#xD;
&#xD;
//if (!Double.isFinite(v_currentPowerElectricity_kW)) {&#xD;
//	traceln("Gridconnection %s with connection_id %s has NaN or infinite v_currentPowerElectricity_kW at time %s!", p_gridConnectionID, p_company_connection_id, energyModel.t_h);&#xD;
//}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1668528300576</Id>
						<Name>f_operateFixedAssets</Name>
						<X>910</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>c_dieselVehicles.forEach(v -&gt; v.f_updateAllFlows(0));&#xD;
c_hydrogenVehicles.forEach(v -&gt; v.f_updateAllFlows(0));&#xD;
c_consumptionAssets.forEach(c -&gt; c.f_updateAllFlows(0));&#xD;
c_productionAssets.forEach(p -&gt; p.f_updateAllFlows(0));&#xD;
c_profileAssets.forEach(p -&gt; p.f_updateAllFlows(energyModel.t_h));</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1668983912731</Id>
						<Name>f_resetStates</Name>
						<X>1270</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>fm_currentProductionFlows_kW.clear();&#xD;
fm_currentConsumptionFlows_kW.clear();&#xD;
fm_currentBalanceFlows_kW.clear();&#xD;
&#xD;
v_maxConnectionLoad_fr = 0;&#xD;
&#xD;
v_previousPowerElectricity_kW = 0;&#xD;
v_previousPowerHeat_kW = 0;&#xD;
v_electricityPriceLowPassed_eurpkWh = 0;&#xD;
v_currentElectricityPriceConsumption_eurpkWh  = 0;&#xD;
//v_currentIndoorTemp_degC = (p_BuildingThermalAsset == null) ? 0 : p_BuildingThermalAsset.getCurrentTemperature();&#xD;
 &#xD;
v_rapidRunData.resetAccumulators(energyModel.p_runEndTime_h - energyModel.p_runStartTime_h, energyModel.p_timeStep_h, v_activeEnergyCarriers, v_activeConsumptionEnergyCarriers, v_activeProductionEnergyCarriers); //f_initializeAccumulators();&#xD;
&#xD;
//Reset specific variables/collections in specific GC types (GCProduction, GConversion, etc.)&#xD;
f_resetSpecificGCStates();&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1669025846794</Id>
						<Name>f_manageHeatingAssets_OLD</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>920</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// TODO: This only works for fixed heat demands; also need to implement heating of a building modeled as a ThermalStorageAsset! [GH 21/11/2022]&#xD;
if(p_heatBuffer != null){&#xD;
	double chargeSetpoint_kW = -fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
	p_heatBuffer.v_powerFraction_fr = chargeSetpoint_kW / p_heatBuffer.getCapacityHeat_kW();&#xD;
	p_heatBuffer.f_updateAllFlows(p_heatBuffer.v_powerFraction_fr);&#xD;
}&#xD;
&#xD;
double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
&#xD;
if(powerDemand_kW &lt; 0 &amp;&amp; v_liveAssetsMetaData.hasPT){//If there is 'overproduction' of heat, that can not be collected by the heat buffer: no power demand -&gt; will be curtailed.&#xD;
	powerDemand_kW = 0;&#xD;
}&#xD;
&#xD;
if ( p_BuildingThermalAsset == null ) {&#xD;
	if ( p_secondaryHeatingAsset == null ) { // Just one heating asset&#xD;
		if ( p_primaryHeatingAsset== null ) {&#xD;
			if (powerDemand_kW &gt; 0) {&#xD;
				traceln("No heating assets for GridConnection " + p_gridConnectionID);&#xD;
			}&#xD;
		} else {&#xD;
			if ( p_primaryHeatingAsset instanceof J_EAConversionGasBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatDeliverySet || p_primaryHeatingAsset instanceof J_EAConversionHydrogenBurner || p_primaryHeatingAsset instanceof J_EAConversionHeatPump) { // when there is only a gas burner or DH set&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
			}&#xD;
			else if(p_primaryHeatingAsset instanceof J_EAConversionGasCHP){&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / ((J_EAConversionGasCHP)p_primaryHeatingAsset).getOutputHeatCapacity_kW());&#xD;
			} &#xD;
			else {&#xD;
				traceln("GridConnection " + p_gridConnectionID + " has a single unsupported heating asset!");&#xD;
			}&#xD;
		}&#xD;
	}&#xD;
	else if (p_primaryHeatingAsset== null &amp;&amp; p_secondaryHeatingAsset != null &amp;&amp; v_hasQuarterHourlyValues){&#xD;
		if(p_secondaryHeatingAsset instanceof J_EAConversionGasBurner){&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
			p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);&#xD;
		} else {&#xD;
				traceln("GridConnection " + p_gridConnectionID + " has a single unsupported secondary heating asset!");&#xD;
		}&#xD;
	} else { // Two heating assets&#xD;
		if ( p_primaryHeatingAsset instanceof J_EAConversionHeatPump &amp;&amp; p_secondaryHeatingAsset instanceof J_EAConversionGasBurner) { // Heatpump and gasburner, switch based on heatpump COP)&#xD;
			//((J_EAConversionHeatPump)p_primaryHeatingAsset.j_ea).updateAmbientTemp(main.v_currentAmbientTemperature_degC); // update heatpump temp levels! &lt;-- waarom dit gebeurt al in de main (peter 21-02-23)&#xD;
			double HP_COP = ((J_EAConversionHeatPump)p_primaryHeatingAsset).getCOP();&#xD;
			double COP_tres = 3.5; // TODO: Make data agnostic! Also, this line doesn't have to be evaluated every timestep.&#xD;
			if ( HP_COP &lt; COP_tres ) { // switch to gasburner when HP COP is below treshold&#xD;
				//traceln("Hybrid HP: Switching to gas burner");&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
				p_secondaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_secondaryHeatingAsset.getOutputCapacity_kW());&#xD;
			} else { // heatpump when COP is above treshold&#xD;
				//traceln("Hybrid HP: Using heatpump with COP " + HP_COP);&#xD;
				p_primaryHeatingAsset.v_powerFraction_fr = min(1,powerDemand_kW / p_primaryHeatingAsset.getOutputCapacity_kW());&#xD;
				p_secondaryHeatingAsset.v_powerFraction_fr = 0;//min(1,currentDHWdemand_kW / p_secondaryHeatingAsset.j_ea.getHeatCapacity_kW());&#xD;
			}&#xD;
		} else {&#xD;
			traceln("**** EXCEPTION ****: Unsupported combination of heatings systems in house " + p_gridConnectionID);&#xD;
			p_primaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
			p_secondaryHeatingAsset.v_powerFraction_fr = 0;&#xD;
			//p_BuildingThermalAsset.v_powerFraction_fr = 0;&#xD;
		}&#xD;
		p_secondaryHeatingAsset.f_updateAllFlows(p_secondaryHeatingAsset.v_powerFraction_fr);&#xD;
		//v_conversionPowerElectric_kW += p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;//			traceln("heatpump electricity consumption: " + (p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW));&#xD;
		/*if (p_secondaryHeatingAsset instanceof J_EAConversionHeatPump) {&#xD;
			v_heatPumpElectricityConsumption_kW += p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;&#xD;
		}*/&#xD;
	}&#xD;
	if (p_primaryHeatingAsset != null) {&#xD;
		p_primaryHeatingAsset.f_updateAllFlows(p_primaryHeatingAsset.v_powerFraction_fr);&#xD;
		//v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;&#xD;
		/*if (p_primaryHeatingAsset instanceof J_EAConversionHeatPump) {&#xD;
			v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0];&#xD;
		}*/&#xD;
	}&#xD;
} else { // TODO: Implement thermostat functionality for thermal storage asset. Where to get temp setpoint?&#xD;
	traceln("No thermostat functionality available to manage p_BuildingThermalAsset!!");&#xD;
	p_primaryHeatingAsset.f_updateAllFlows(0);&#xD;
	/*	v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;&#xD;
	if (p_primaryHeatingAsset instanceof J_EAConversionHeatPump) {&#xD;
		v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0]; &#xD;
	}*/&#xD;
	p_secondaryHeatingAsset.f_updateAllFlows(0);	&#xD;
	/*v_conversionPowerElectric_kW += flowsArray[4] - flowsArray[0]; //p_primaryHeatingAsset.electricityConsumption_kW - p_primaryHeatingAsset.electricityProduction_kW;&#xD;
	if (p_secondaryHeatingAsset instanceof J_EAConversionHeatPump) {&#xD;
		v_heatPumpElectricityConsumption_kW += flowsArray[4] - flowsArray[0];&#xD;
	}*/&#xD;
	p_BuildingThermalAsset.f_updateAllFlows(0);&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671095995172</Id>
						<Name>f_manageCharging</Name>
						<X>920</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double availableCapacityFromBatteries = p_batteryAsset == null ? 0 : p_batteryAsset.getCapacityAvailable_kW(); &#xD;
//double availableChargingCapacity = v_allowedCapacity_kW + availableCapacityFromBatteries - v_currentPowerElectricity_kW;&#xD;
double availableChargingCapacity = v_liveConnectionMetaData.contractedDeliveryCapacity_kW + availableCapacityFromBatteries - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
switch (p_chargingAttitudeVehicles) {&#xD;
	case SIMPLE:&#xD;
		f_simpleCharging();&#xD;
	break;&#xD;
	case MAX_SPREAD:&#xD;
		f_maxSpreadCharging();&#xD;
	break;&#xD;
	case MAX_POWER:&#xD;
		f_maxPowerCharging( max(0, availableChargingCapacity));&#xD;
	break;&#xD;
	case CHEAP:&#xD;
		v_currentElectricityPriceConsumption_eurpkWh = p_owner.f_getElectricityPrice(v_liveConnectionMetaData.contractedDeliveryCapacity_kW); &#xD;
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		f_chargeOnPrice( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));&#xD;
	break;&#xD;
	case V2G:&#xD;
		v_currentElectricityPriceConsumption_eurpkWh = p_owner.f_getElectricityPrice(v_liveConnectionMetaData.contractedDeliveryCapacity_kW); &#xD;
		v_electricityPriceLowPassed_eurpkWh += v_lowPassFactor_fr * ( v_currentElectricityPriceConsumption_eurpkWh - v_electricityPriceLowPassed_eurpkWh );&#xD;
		f_chargeOnPrice_V2G( v_currentElectricityPriceConsumption_eurpkWh, max(0, availableChargingCapacity));&#xD;
	break;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671095995175</Id>
						<Name>f_simpleCharging</Name>
						<Description>Charging when arriving home, not taking grid limits into account</Description>
						<X>940</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Removing items while going through a loop, so we do so in reverse order&#xD;
&#xD;
ArrayList&lt;J_EAEV&gt; copiedVehicleList = new ArrayList&lt;J_EAEV&gt;(c_vehiclesAvailableForCharging);&#xD;
int countDeletedItems = 0;&#xD;
&#xD;
for ( int i = 0; i &lt; copiedVehicleList.size(); i++ ) {&#xD;
	J_EAEV ev = copiedVehicleList.get(i);&#xD;
	if (ev.vehicleScaling != 0) {&#xD;
		if( !ev.getAvailability() || ev.getCurrentStateOfCharge_fr() == 1 ) {&#xD;
			ev.f_updateAllFlows( 0.0 );&#xD;
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );&#xD;
			countDeletedItems ++;&#xD;
		}&#xD;
		else {&#xD;
			ev.f_updateAllFlows( 1.0 );&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671095995177</Id>
						<Name>f_maxSpreadCharging</Name>
						<X>940</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ArrayList&lt;J_EAEV&gt; copiedVehicleList = new ArrayList&lt;J_EAEV&gt;(c_vehiclesAvailableForCharging);&#xD;
int countDeletedItems = 0;&#xD;
&#xD;
for ( int i = 0; i &lt; copiedVehicleList.size(); i++ ){&#xD;
	J_EAEV ev = copiedVehicleList.get(i);&#xD;
	if (ev.vehicleScaling != 0) {&#xD;
		if(!ev.getAvailability() || ev.getCurrentStateOfCharge_fr() == 1) {&#xD;
			ev.f_updateAllFlows( 0.0 );&#xD;
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );&#xD;
			countDeletedItems ++;&#xD;
		}&#xD;
		else {&#xD;
			double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getCurrentStateOfCharge_kWh());&#xD;
			double maxChargingPower_kW = ev.getCapacityElectric_kW();&#xD;
			double chargeDeadline_h = floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;&#xD;
			&#xD;
			double emptyKWhInBattery = ev.getStorageCapacity_kWh() - ev.getCurrentStateOfCharge_kWh();&#xD;
			double timeToNextTrip_h = ev.tripTracker.v_nextEventStartTime_min / 60 - energyModel.t_h;			&#xD;
			// At the end of the simulation the triptracker returns back to the start of the year, so we make sure the timeToNextTrip is not negative&#xD;
			timeToNextTrip_h = (timeToNextTrip_h % 8760 + 8760) % 8760;&#xD;
			&#xD;
			double chargingPower_kW;		&#xD;
			if ( energyModel.t_h &gt;= chargeDeadline_h &amp;&amp; chargeNeedForNextTrip_kWh &gt; 0) { // Must-charge time at max charging power&#xD;
				//traceln("Urgency charging! May exceed connection capacity!");&#xD;
				chargingPower_kW = maxChargingPower_kW / 2 ;	// delen door 2 als quickfix doordat HAVI trucks anders mega pieken veroorzaken in de middag waardoor 'slim' laden beetje nutteloos lijkt&#xD;
			}&#xD;
			else {&#xD;
				chargingPower_kW = emptyKWhInBattery / timeToNextTrip_h;&#xD;
			}&#xD;
			&#xD;
			chargingPower_kW = min(chargingPower_kW, maxChargingPower_kW); // cap the charging speed at the electric capacity&#xD;
			double ratio_fr = chargingPower_kW / maxChargingPower_kW;&#xD;
			ev.f_updateAllFlows( ratio_fr );&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671095995179</Id>
						<Name>f_maxPowerCharging</Name>
						<Description>Charge at max power taking grid constaints into account</Description>
						<X>940</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>availableCapacityForCharging_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>double remainingChargingPower_kW = availableCapacityForCharging_kW;&#xD;
&#xD;
ArrayList&lt;J_EAEV&gt; copiedVehicleList = new ArrayList&lt;J_EAEV&gt;(c_vehiclesAvailableForCharging);&#xD;
int countDeletedItems = 0;&#xD;
&#xD;
// Sort vehicles by time until charge deadline&#xD;
copiedVehicleList.sort((ev1, ev2) -&gt; Double.compare(f_getChargeDeadline(ev1), f_getChargeDeadline(ev2)));&#xD;
c_vehiclesAvailableForCharging = copiedVehicleList;&#xD;
&#xD;
for ( int i = 0; i &lt; copiedVehicleList.size(); i++ ){&#xD;
	J_EAEV ev = copiedVehicleList.get(i);&#xD;
	if (ev.vehicleScaling != 0) {&#xD;
		if( !ev.getAvailability() || ev.getCurrentStateOfCharge_fr() == 1 ) {&#xD;
			ev.f_updateAllFlows( 0.0 );&#xD;
			c_vehiclesAvailableForCharging.remove( i - countDeletedItems );&#xD;
			countDeletedItems ++;&#xD;
		}&#xD;
		else {&#xD;
			//traceln("current time: " + energyModel.t_h);&#xD;
			//traceln("ev: " + ev);&#xD;
			//traceln("dist: " + ev.getTripTracker().v_tripDist_km);&#xD;
			double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getCurrentStateOfCharge_kWh());&#xD;
			//traceln("chargeNeedForNextTrip_kWh: " + chargeNeedForNextTrip_kWh);&#xD;
			double maxChargingPower_kW = ev.getCapacityElectric_kW();&#xD;
			double chargeDeadline_h = floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;&#xD;
			&#xD;
			//double starttime = ev.tripTracker.v_nextEventStartTime_min / 60;&#xD;
			//traceln("starttime: " + starttime);&#xD;
			//traceln("chargeDeadline_h: " + chargeDeadline_h);&#xD;
			&#xD;
			double chargingPower_kW;&#xD;
			if ( energyModel.t_h &gt;= chargeDeadline_h &amp;&amp; chargeNeedForNextTrip_kWh &gt; 0) { // Must-charge time at max charging power&#xD;
				//traceln("Urgency charging! May exceed connection capacity!");&#xD;
				chargingPower_kW = maxChargingPower_kW;	&#xD;
			}&#xD;
			else {&#xD;
				chargingPower_kW = remainingChargingPower_kW;&#xD;
			}&#xD;
			&#xD;
			chargingPower_kW = min(chargingPower_kW, maxChargingPower_kW);&#xD;
			remainingChargingPower_kW = max(0, remainingChargingPower_kW - chargingPower_kW);&#xD;
			double ratio_fr = chargingPower_kW / maxChargingPower_kW;&#xD;
			ev.f_updateAllFlows( ratio_fr );&#xD;
			//gridConnection.v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
			&#xD;
			//double x = flowsArray[4] - flowsArray[0];&#xD;
			//traceln("flow: " + x);&#xD;
			//traceln("ev: " + ev);&#xD;
			&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1671095995181</Id>
						<Name>f_chargeOnPrice</Name>
						<X>940</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentElectricityPriceConsumption_eurpkWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>availableChargingPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>ArrayList&lt;J_EAEV&gt; copiedVehicleList = new ArrayList&lt;J_EAEV&gt;(c_vehiclesAvailableForCharging);&#xD;
int countDeletedItems = 0;&#xD;
&#xD;
double remainingChargePower_kW = availableChargingPower_kW;&#xD;
&#xD;
for ( int i = 0; i &lt; copiedVehicleList.size(); i++ ){&#xD;
	J_EAEV vehicle = copiedVehicleList.get(i);&#xD;
	&#xD;
	if (vehicle.getVehicleScaling() == 0) {&#xD;
		continue;&#xD;
	}&#xD;
	&#xD;
	if(!vehicle.getAvailability() ){&#xD;
		vehicle.f_updateAllFlows( 0 );&#xD;
		c_vehiclesAvailableForCharging.remove( i - countDeletedItems );&#xD;
		countDeletedItems ++;&#xD;
	} else {&#xD;
		//double availableChargingPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW - v_chargingPower_kW;&#xD;
		double chargeNeedForNextTrip_kWh = max(0, vehicle.energyNeedForNextTrip_kWh - vehicle.getCurrentStateOfCharge_kWh());&#xD;
		//double timeToNexTrip_min = vehicle.getMobilityTracker().v_nextTripStartTime_min - energyModel.t_h*60;&#xD;
		double maxChargingPower_kW = vehicle.getCapacityElectric_kW();&#xD;
		double timeToNextTrip_min = vehicle.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;&#xD;
		double chargeDeadline_min = floor((vehicle.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;&#xD;
&#xD;
		double priceGain_kWhpeur = 1; // When WTP is higher than current electricity price, ramp up charging power with this gain based on the price-delta.&#xD;
		double urgencyGain_eurpkWh = 0.4; // How strongly WTP-price shifts based on charging flexibility&#xD;
		double maxSpreadChargingPower_kW = min(chargeNeedForNextTrip_kWh / (max(1, timeToNextTrip_min - v_additionalTimeSpreadCharging_MIN) / 60), maxChargingPower_kW);&#xD;
		//traceln("maxSpreadChargingPower_kW" + maxSpreadChargingPower_kW);&#xD;
		double WTPoffset_eurpkWh = 0.05*(1-energyModel.v_WindYieldForecast_fr);//0.15; // Adds an offset to the WTP price; this value is very much context specific, depending on market conditions during charging periods&#xD;
		&#xD;
		double chargeSetpoint_kW = 0;&#xD;
&#xD;
		if ( energyModel.t_h*60 &gt;= chargeDeadline_min &amp; chargeNeedForNextTrip_kWh &gt; 0) { // Must-charge time at max charging power&#xD;
			//traceln("Urgency charging! May exceed connection capacity!");&#xD;
			chargeSetpoint_kW = maxChargingPower_kW;				&#xD;
		} else if ( vehicle.getCurrentStateOfCharge_fr() &lt; 0.15 ) {&#xD;
			chargeSetpoint_kW = min(remainingChargePower_kW, maxChargingPower_kW);&#xD;
		} else {&#xD;
			//double WTPprice_eurpkWh = v_electricityPriceLowPassed_eurpkWh - flexibilityGain_eurph * (chargeDeadline_min - energyModel.t_h*60 - 600);&#xD;
			v_WTPCharging_eurpkWh = WTPoffset_eurpkWh + v_electricityPriceLowPassed_eurpkWh + urgencyGain_eurpkWh * ( maxSpreadChargingPower_kW / maxChargingPower_kW ); // Scale WTP based on flexibility expressed in terms of power-fraction&#xD;
			//WTPprice_eurpkWh = WTPoffset_eurpkWh + (main.v_epexNext24hours_eurpkWh+v_electricityPriceLowPassed_eurpkWh)/2 + flexibilityGain_eurpkWh * sqrt(maxSpreadChargingPower_kW/maxChargingPower_kW); // Scale WTP based on flexibility expressed in terms of power-fraction&#xD;
			chargeSetpoint_kW = max(0, maxChargingPower_kW * (v_WTPCharging_eurpkWh / currentElectricityPriceConsumption_eurpkWh - 1) * priceGain_kWhpeur);&#xD;
			chargeSetpoint_kW = min(remainingChargePower_kW, chargeSetpoint_kW);&#xD;
			//traceln("Trying to charge cheaply, time " + energyModel.t_h*60 + " minutes, charge setpoint: " + chargeSetpoint_kW + " kW");&#xD;
			/*if (this.getIndex() == 0){&#xD;
				traceln("wtp = " + v_WTPCharging_eurpkWh);&#xD;
				traceln("remainingChargePower_kW: " + remainingChargePower_kW + "charge setpoint kW: " + chargeSetpoint_kW);&#xD;
			}*/&#xD;
		}&#xD;
		//}&#xD;
		//traceln("Hello! Charge setpoint: " + chargeSetpoint_kW);&#xD;
		//Pair&lt;J_FlowsMap, Double&gt; flowsPair = vehicle.f_updateAllFlows( chargeSetpoint_kW / maxChargingPower_kW );&#xD;
		vehicle.f_updateAllFlows( chargeSetpoint_kW / maxChargingPower_kW );&#xD;
		//v_evChargingPowerElectric_kW += flowsMap.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
		&#xD;
		// This seems wrong? the evChargingPowerElectric is keeping track of the total, but is subtracted every time!!&#xD;
		//remainingChargePower_kW = availableChargingPower_kW - v_evChargingPowerElectric_kW &#xD;
&#xD;
		remainingChargePower_kW = availableChargingPower_kW - vehicle.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);;&#xD;
		&#xD;
	}&#xD;
	if( this instanceof GCHouse){&#xD;
	((GCHouse)this).v_vehicleSOC_fr = vehicle.getCurrentStateOfCharge_fr();&#xD;
}&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1677512714652</Id>
						<Name>f_setOperatingSwitches</Name>
						<X>910</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if( this instanceof GCDistrictHeating ) { // Temporarily disabled while transfering to class-based energy assets!&#xD;
	((GCDistrictHeating)this).f_setConfigurationBooleans();&#xD;
}</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1692799608559</Id>
						<Name>f_connectToJ_EA_default</Name>
						<X>1090</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>for (OL_EnergyCarriers EC : j_ea.getActiveConsumptionEnergyCarriers()) {&#xD;
	if (!v_activeConsumptionEnergyCarriers.contains(EC)) {&#xD;
		v_activeEnergyCarriers.add(EC);&#xD;
		v_activeConsumptionEnergyCarriers.add(EC);&#xD;
			&#xD;
		if (energyModel.b_isInitialized) {&#xD;
			//Add EC to energyModel&#xD;
			energyModel.f_addConsumptionEnergyCarrier(EC);&#xD;
			&#xD;
			//Initialize dataset&#xD;
			DataSet dsDemand = new DataSet( (int)(168 / energyModel.p_timeStep_h) );&#xD;
			double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
			double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
			for (double t = startTime; t &lt;= endTime; t += energyModel.p_timeStep_h) {&#xD;
				dsDemand.add( t, 0);&#xD;
			}&#xD;
			v_liveData.dsm_liveDemand_kW.put( EC, dsDemand);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
for (OL_EnergyCarriers EC : j_ea.getActiveProductionEnergyCarriers()) {&#xD;
	if (!v_activeProductionEnergyCarriers.contains(EC)) {&#xD;
		v_activeEnergyCarriers.add(EC);&#xD;
		v_activeProductionEnergyCarriers.add(EC);		&#xD;
		if (energyModel.b_isInitialized) {&#xD;
		&#xD;
			//Add EC to energyModel&#xD;
			energyModel.f_addProductionEnergyCarrier(EC);&#xD;
			&#xD;
			//Initialize datasets&#xD;
			DataSet dsSupply = new DataSet( (int)(168 / energyModel.p_timeStep_h) );&#xD;
			double startTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
			double endTime = v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
			for (double t = startTime; t &lt;= endTime; t += energyModel.p_timeStep_h) {&#xD;
				dsSupply.add( t, 0);&#xD;
			}&#xD;
			v_liveData.dsm_liveSupply_kW.put( EC, dsSupply);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
energyModel.c_energyAssets.add(j_ea);&#xD;
c_energyAssets.add(j_ea);&#xD;
&#xD;
if (j_ea instanceof J_EAVehicle) {&#xD;
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;&#xD;
	if (vehicle instanceof J_EADieselVehicle) {&#xD;
		c_dieselVehicles.add( (J_EADieselVehicle)vehicle );		&#xD;
	} else if (vehicle instanceof J_EAHydrogenVehicle) {&#xD;
		c_hydrogenVehicles.add((J_EAHydrogenVehicle)vehicle);		&#xD;
	} else if (vehicle instanceof J_EAEV) {&#xD;
		c_vehiclesAvailableForCharging.add((J_EAEV)vehicle);&#xD;
		energyModel.c_EVs.add((J_EAEV)vehicle);	&#xD;
		c_EvAssets.add(j_ea);&#xD;
	}&#xD;
	c_vehicleAssets.add(vehicle);		&#xD;
	J_ActivityTrackerTrips tripTracker = vehicle.getTripTracker();&#xD;
	if (tripTracker == null) { // Only provide tripTracker when vehicle doesn't have it yet!&#xD;
		if (vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_TRUCK || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_TRUCK) {&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsCsv, rowIndex, (energyModel.t_h-energyModel.p_runStartTime_h)*60, vehicle);&#xD;
		} else if (vehicle.energyAssetType == OL_EnergyAssetType.DIESEL_VAN || vehicle.energyAssetType == OL_EnergyAssetType.ELECTRIC_VAN || vehicle.energyAssetType == OL_EnergyAssetType.HYDROGEN_VAN) {// No mobility pattern for business vans available yet!! Falling back to truck mobility pattern&#xD;
			int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsCsv, rowIndex, (energyModel.t_h-energyModel.p_runStartTime_h)*60, vehicle);&#xD;
			tripTracker.setAnnualDistance_km(30_000);&#xD;
		} else {&#xD;
			//traceln("Adding passenger vehicle to gridconnection %s", this);&#xD;
			int rowIndex = uniform_discr(0, 200);//getIndex() % 200;&#xD;
			tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsCsv, rowIndex, (energyModel.t_h-energyModel.p_runStartTime_h)*60, vehicle);&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_householdTripsExcel, 18, energyModel.t_h*60, vehicle);&#xD;
			//int rowIndex = uniform_discr(1, 7);//getIndex() % 200;	&#xD;
			//tripTracker = new J_ActivityTrackerTrips(energyModel, energyModel.p_truckTripsExcel, 2, energyModel.t_h*60, vehicle);&#xD;
		}&#xD;
		&#xD;
		vehicle.tripTracker = tripTracker;	&#xD;
	}&#xD;
	c_tripTrackers.add( tripTracker );&#xD;
	v_vehicleIndex ++;&#xD;
} else if (j_ea instanceof J_EAConsumption) {&#xD;
	c_consumptionAssets.add((J_EAConsumption)j_ea);	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {&#xD;
		p_DHWAsset = (J_EAConsumption)j_ea;	&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {&#xD;
		c_fixedConsumptionElectricAssets.add(j_ea);&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB ) {&#xD;
		c_electricHobAssets.add(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAProduction) {&#xD;
	c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	//energyModel.c_productionAssets.add((J_EAProduction)j_ea);&#xD;
	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
		v_liveAssetsMetaData.hasPV = true;&#xD;
		double capacity_kW = ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		v_liveAssetsMetaData.totalInstalledPVPower_kW += capacity_kW;&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, capacity_kW, true);&#xD;
		}&#xD;
		c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledPVPower_kW += capacity_kW);&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW += capacity_kW;&#xD;
		c_pvAssets.add(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {&#xD;
		v_liveAssetsMetaData.hasWindturbine = true;&#xD;
		double capacity_kW = ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		v_liveAssetsMetaData.totalInstalledWindPower_kW += capacity_kW;&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, capacity_kW, true);&#xD;
		}&#xD;
		c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledWindPower_kW += capacity_kW);&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW += capacity_kW;&#xD;
		c_windAssets.add(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOTHERMAL){&#xD;
		v_liveAssetsMetaData.hasPT = true;&#xD;
		c_ptAssets.add(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.add((J_EAConversion)j_ea);&#xD;
	// Non Heating Assets&#xD;
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT || j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){&#xD;
		if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {&#xD;
			c_electricHobAssets.add(j_ea);&#xD;
		}&#xD;
		if (p_cookingTracker == null) {&#xD;
			int rowIndex = uniform_discr(2, 300); &#xD;
			p_cookingTracker = new J_ActivityTrackerCooking(energyModel.p_cookingPatternCsv, rowIndex, (energyModel.t_h-energyModel.p_runStartTime_h)*60, (J_EAConversion)j_ea );			&#xD;
		} else {&#xD;
			p_cookingTracker.HOB = (J_EAConversion)j_ea;&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAConversionElectrolyser || j_ea instanceof J_EAConversionElektrolyser) {&#xD;
		c_electrolyserAssets.add(j_ea);&#xD;
	} else {&#xD;
		// Heating Assets&#xD;
		c_heatingAssets.add((J_EAConversion)j_ea);&#xD;
		if (p_heatingManagement != null) {&#xD;
			p_heatingManagement.notInitialized();&#xD;
		}&#xD;
		// Special Heating Assets&#xD;
		if (j_ea instanceof J_EAConversionHeatPump) {&#xD;
			energyModel.c_ambientDependentAssets.add(j_ea);&#xD;
			c_electricHeatpumpAssets.add(j_ea);&#xD;
		} else if (j_ea instanceof J_EAConversionGasCHP) {&#xD;
			c_chpAssets.add(j_ea);&#xD;
		}&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAStorage) {&#xD;
	c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	energyModel.c_storageAssets.add((J_EAStorage)j_ea);&#xD;
	if (j_ea instanceof J_EAStorageHeat) {&#xD;
		energyModel.c_ambientDependentAssets.add(j_ea);&#xD;
		if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {&#xD;
			p_BuildingThermalAsset = (J_EABuilding)j_ea;&#xD;
			if (p_heatingManagement != null) {&#xD;
				p_heatingManagement.notInitialized();&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			p_heatBuffer = (J_EAStorageHeat)j_ea;&#xD;
			if (p_heatingManagement != null) {&#xD;
				p_heatingManagement.notInitialized();&#xD;
			}&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAStorageGas) {&#xD;
		p_gasBuffer = (J_EAStorageGas)j_ea;&#xD;
	} else if (j_ea instanceof J_EAStorageElectric) {&#xD;
		p_batteryAsset = (J_EAStorageElectric)j_ea;&#xD;
		c_batteryAssets.add(j_ea);&#xD;
		double capacity_MWh = ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()/1000;&#xD;
		v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += capacity_MWh;&#xD;
		c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += capacity_MWh);&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += capacity_MWh;&#xD;
		&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAProfile) {&#xD;
	//p_energyProfile = (J_EAProfile)j_ea;&#xD;
	c_profileAssets.add((J_EAProfile)j_ea);&#xD;
	if (((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.CHARGING){&#xD;
			//v_evChargingPowerElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
			c_EvAssets.add(j_ea);&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD){&#xD;
			//v_fixedConsumptionElectric_kW += flowsArray[4] - flowsArray[0];&#xD;
			c_fixedConsumptionElectricAssets.add(j_ea);&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.WINDTURBINE){&#xD;
			//v_windProductionElectric_kW += flowsArray[0];&#xD;
			c_windAssets.add(j_ea);&#xD;
			// TODO: Add some to the total installed wind (of this GC, its GN, the energymodel (and its parent coop))&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.HEATDEMAND){&#xD;
			//Do nothing&#xD;
		} else if( ((J_EAProfile)j_ea).profileType == OL_ProfileAssetType.METHANEDEMAND){&#xD;
			//Do nothing&#xD;
		} else {&#xD;
			traceln( "Unrecognized profile type!");&#xD;
		}&#xD;
} else if (j_ea instanceof J_EADieselTractor) {&#xD;
	c_profileAssets.add((J_EAProfile)j_ea);&#xD;
} else if (j_ea instanceof J_EACharger) {&#xD;
	c_chargers.add((J_EACharger)j_ea);&#xD;
	c_EvAssets.add(j_ea);&#xD;
} else {&#xD;
	if (!(this instanceof GCHouse &amp;&amp; j_ea instanceof J_EAAirco)) {&#xD;
		traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);&#xD;
	} &#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693307881182</Id>
						<Name>f_connectToJ_EA</Name>
						<X>911</X>
						<Y>92</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>f_connectToJ_EA_default(j_ea);&#xD;
// Abstract method to be used call GC-subtype specific functions</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1695822607494</Id>
						<Name>f_chargeOnPrice_V2G</Name>
						<X>940</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>currentElectricityPriceConsumption_eurpkWh</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>availableChargingPower_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Body>ArrayList&lt;J_EAEV&gt; copiedVehicleList = new ArrayList&lt;J_EAEV&gt;(c_vehiclesAvailableForCharging);&#xD;
int countDeletedItems = 0;&#xD;
&#xD;
double remainingChargePower_kW = availableChargingPower_kW;&#xD;
&#xD;
for ( int i = 0; i &lt; copiedVehicleList.size(); i++ ){&#xD;
	J_EAEV vehicle = copiedVehicleList.get(i);&#xD;
	&#xD;
	if (vehicle.getVehicleScaling() == 0) {&#xD;
		continue;&#xD;
	}&#xD;
	&#xD;
	if(!vehicle.getAvailability() ){&#xD;
		vehicle.f_updateAllFlows( 0 );&#xD;
		c_vehiclesAvailableForCharging.remove( i - countDeletedItems );&#xD;
		countDeletedItems ++;&#xD;
	} else {&#xD;
		//double availableChargingPower_kW = v_allowedCapacity_kW - v_currentPowerElectricity_kW - v_chargingPower_kW;&#xD;
		double chargeNeedForNextTrip_kWh = vehicle.energyNeedForNextTrip_kWh - vehicle.getCurrentStateOfCharge_kWh();&#xD;
		//double timeToNexTrip_min = vehicle.getMobilityTracker().v_nextTripStartTime_min - energyModel.t_h*60;&#xD;
		double maxChargingPower_kW = vehicle.getCapacityElectric_kW();&#xD;
		double timeToNextTrip_min = vehicle.tripTracker.v_nextEventStartTime_min - energyModel.t_h*60;&#xD;
		double chargeDeadline_min = floor((vehicle.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * 60 * energyModel.p_timeStep_h;&#xD;
&#xD;
		double priceGain_kWhpeur = 1; // When WTP is higher than current electricity price, ramp up charging power with this gain based on the price-delta.&#xD;
		double urgencyGain_eurpkWh = 0.4; // How strongly WTP-price shifts based on charging flexibility&#xD;
		double maxSpreadChargingPower_kW = min(chargeNeedForNextTrip_kWh / (max(1, timeToNextTrip_min - v_additionalTimeSpreadCharging_MIN) / 60), maxChargingPower_kW);&#xD;
		//traceln("maxSpreadChargingPower_kW" + maxSpreadChargingPower_kW);&#xD;
		double WTPoffset_eurpkWh = 0;&#xD;
		if (energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW &gt; 499) {&#xD;
			WTPoffset_eurpkWh = 0.05*(1-energyModel.v_WindYieldForecast_fr);//0.15; // Adds an offset to the WTP price; this value is very much context specific, depending on market conditions during charging periods&#xD;
		} else {&#xD;
			WTPoffset_eurpkWh = 0.02;&#xD;
		}&#xD;
		double V2G_WTR_offset_eurpkWh = 0.05;&#xD;
		double chargeSetpoint_kW = 0;&#xD;
&#xD;
		if ( energyModel.t_h*60 &gt;= chargeDeadline_min &amp; chargeNeedForNextTrip_kWh &gt; 0) { // Must-charge time at max charging power&#xD;
			//traceln("Urgency charging! May exceed connection capacity!");&#xD;
			chargeSetpoint_kW = maxChargingPower_kW;				&#xD;
		} else if ( vehicle.getCurrentStateOfCharge_fr() &lt; 0.15 ) {&#xD;
			chargeSetpoint_kW = min(remainingChargePower_kW, maxChargingPower_kW);&#xD;
		} else {&#xD;
			//double WTPprice_eurpkWh = v_electricityPriceLowPassed_eurpkWh - flexibilityGain_eurph * (chargeDeadline_min - energyModel.t_h*60 - 600);&#xD;
			v_WTPCharging_eurpkWh = WTPoffset_eurpkWh + v_electricityPriceLowPassed_eurpkWh + urgencyGain_eurpkWh * ( max(0,maxSpreadChargingPower_kW) / maxChargingPower_kW ); // Scale WTP based on flexibility expressed in terms of power-fraction&#xD;
			//WTPprice_eurpkWh = WTPoffset_eurpkWh + (main.v_epexNext24hours_eurpkWh+v_electricityPriceLowPassed_eurpkWh)/2 + flexibilityGain_eurpkWh * sqrt(maxSpreadChargingPower_kW/maxChargingPower_kW); // Scale WTP based on flexibility expressed in terms of power-fraction&#xD;
			chargeSetpoint_kW = max(0, maxChargingPower_kW * (v_WTPCharging_eurpkWh / currentElectricityPriceConsumption_eurpkWh - 1) * priceGain_kWhpeur);&#xD;
			chargeSetpoint_kW = min(remainingChargePower_kW, chargeSetpoint_kW);&#xD;
			&#xD;
			if ( chargeNeedForNextTrip_kWh &lt; -maxChargingPower_kW*energyModel.p_timeStep_h &amp;&amp; chargeSetpoint_kW == 0 ) { // Surpluss SOC and high energy price			&#xD;
				v_WTRV2G_eurpkWh  = V2G_WTR_offset_eurpkWh + v_electricityPriceLowPassed_eurpkWh; // Scale WTP based on flexibility expressed in terms of power-fraction&#xD;
				chargeSetpoint_kW = min(0, -maxChargingPower_kW * (currentElectricityPriceConsumption_eurpkWh / v_WTRV2G_eurpkWh - 1) * priceGain_kWhpeur);&#xD;
				/*if (chargeSetpoint_kW &lt; 0) {&#xD;
					traceln(" V2G Active! Power: " + chargeSetpoint_kW );&#xD;
				}*/&#xD;
				&#xD;
			}&#xD;
			//traceln("Trying to charge cheaply, time " + energyModel.t_h*60 + " minutes, charge setpoint: " + chargeSetpoint_kW + " kW");&#xD;
			/*if (this.getIndex() == 0){&#xD;
				traceln("wtp = " + v_WTPCharging_eurpkWh);&#xD;
				traceln("remainingChargePower_kW: " + remainingChargePower_kW + "charge setpoint kW: " + chargeSetpoint_kW);&#xD;
			}*/&#xD;
		}&#xD;
&#xD;
		vehicle.f_updateAllFlows( chargeSetpoint_kW / maxChargingPower_kW );&#xD;
&#xD;
		remainingChargePower_kW = availableChargingPower_kW - vehicle.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);;&#xD;
		&#xD;
	}&#xD;
	if( this instanceof GCHouse){&#xD;
		((GCHouse)this).v_vehicleSOC_fr = vehicle.getCurrentStateOfCharge_fr();&#xD;
	}&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1698854861644</Id>
						<Name>f_initialize</Name>
						<X>900</X>
						<Y>50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (v_liveConnectionMetaData.physicalCapacity_kW &lt; 0) {&#xD;
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative physical connection capacity!");&#xD;
} else if (v_liveConnectionMetaData.contractedDeliveryCapacity_kW &lt; 0) {&#xD;
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative contracted delivery capacity!");&#xD;
} else if (v_liveConnectionMetaData.contractedFeedinCapacity_kW &lt; 0) {&#xD;
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has negative contracted feed in capacity!");&#xD;
}&#xD;
&#xD;
if(v_isActive){&#xD;
	if (v_liveConnectionMetaData.contractedDeliveryCapacity_kW == 0.0 &amp;&amp; v_liveConnectionMetaData.contractedFeedinCapacity_kW == 0.0 &amp;&amp; v_liveConnectionMetaData.physicalCapacity_kW == 0.0) { // If no contracted or physical capacity is given, throw error.&#xD;
	throw new RuntimeException("Exception: GridConnection " + p_gridConnectionID + " has 0.0 physical and contracted capacity! Not a valid state of for this agent");&#xD;
	} else {&#xD;
		if (v_liveConnectionMetaData.contractedDeliveryCapacity_kW == 0.0 &amp;&amp; v_liveConnectionMetaData.contractedFeedinCapacity_kW == 0.0) { // If no contracted capacity is given, use physical capacity&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacity_kW = v_liveConnectionMetaData.physicalCapacity_kW;&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacity_kW = v_liveConnectionMetaData.physicalCapacity_kW;&#xD;
		} else if ( v_liveConnectionMetaData.physicalCapacity_kW == 0 ) { // if no physical capacity is given, use max of delivery and feedin contracted capacities&#xD;
			v_liveConnectionMetaData.physicalCapacity_kW = max(v_liveConnectionMetaData.contractedDeliveryCapacity_kW, v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
		}&#xD;
	}&#xD;
}&#xD;
&#xD;
if ( c_connectedGISObjects.size()&gt;0) { // can this go into initialisation function?&#xD;
	//p_floorSurfaceArea_m2 = totalSurfaceAreaGC_m2;&#xD;
	p_longitude = c_connectedGISObjects.get(0).p_longitude; // Get longitude of first building (only used to get nearest trafo)&#xD;
	p_latitude = c_connectedGISObjects.get(0).p_latitude; // Get latitude of first building (only used to get nearest trafo)&#xD;
	setLatLon(p_latitude, p_longitude);  &#xD;
			&#xD;
	//If GC has no assigned trafo_id --&gt; Assign to nearest trafo&#xD;
	if (p_parentNodeElectricID == null){&#xD;
		//Set nearest agent as trafo&#xD;
		GridNode nearestLVStation = getNearestAgent(energyModel.c_gridNodesNotTopLevel);&#xD;
		//nearestLVStation.c_electricityGridConnections.add(companyGC); // this should be taken care of in GC.f_initialize()!&#xD;
		if (nearestLVStation!=null) {&#xD;
			p_parentNodeElectricID = nearestLVStation.p_gridNodeID;&#xD;
		}&#xD;
	}		&#xD;
}&#xD;
&#xD;
if (p_parentNodeElectricID == null) {&#xD;
	p_parentNodeElectricID = findFirst(energyModel.pop_gridNodes, GN-&gt;GN.p_energyCarrier.equals(OL_EnergyCarriers.ELECTRICITY)).p_gridNodeID;&#xD;
	traceln("GridConnection %s wasn't assigned a GridNodeElectric! Using first gridNode Electric in pop_gridNodes", this);&#xD;
}&#xD;
&#xD;
f_connectToParents();&#xD;
if ( p_parentNodeElectric == null ) {&#xD;
	traceln("GC: %s with id %s and name %s", this, p_gridConnectionID, p_name);&#xD;
	traceln("GN id %s", p_parentNodeElectricID);&#xD;
	throw new RuntimeException("Exception: GridConnection not connected to GridNodeElectric!");&#xD;
}&#xD;
else {&#xD;
	// Calculate the Wind and PV Installed under the parent gridnode&#xD;
	double PV_kW = 0;&#xD;
	double Wind_kW = 0;&#xD;
	for (J_EAProduction j_ea : c_productionAssets) {&#xD;
		if (j_ea.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
			PV_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		}&#xD;
		else if (j_ea.getEAType() == OL_EnergyAssetType.WINDMILL) {&#xD;
			Wind_kW += ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		}&#xD;
	}&#xD;
	p_parentNodeElectric.v_totalInstalledPVPower_kW += PV_kW;&#xD;
	p_parentNodeElectric.v_totalInstalledWindPower_kW += Wind_kW;&#xD;
}&#xD;
&#xD;
f_setOperatingSwitches();&#xD;
&#xD;
// Initializing Live Data Class&#xD;
v_liveAssetsMetaData.updateActiveAssetData(new ArrayList&lt;&gt;(List.of(this)));&#xD;
v_liveData.activeConsumptionEnergyCarriers = v_activeConsumptionEnergyCarriers;&#xD;
v_liveData.activeProductionEnergyCarriers = v_activeProductionEnergyCarriers;&#xD;
v_liveData.activeEnergyCarriers = v_activeEnergyCarriers;&#xD;
&#xD;
f_initializeDataSets();&#xD;
&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers){&#xD;
	energyModel.v_activeEnergyCarriers.add(EC);&#xD;
}&#xD;
for (OL_EnergyCarriers EC_production : v_activeProductionEnergyCarriers){&#xD;
	energyModel.v_activeProductionEnergyCarriers.add(EC_production);&#xD;
}&#xD;
for (OL_EnergyCarriers EC_consumption : v_activeConsumptionEnergyCarriers){&#xD;
	energyModel.v_activeConsumptionEnergyCarriers.add(EC_consumption);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1702373771433</Id>
						<Name>f_addFlows</Name>
						<X>930</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>flowsMap</Name>
							<Type>J_FlowsMap</Type>
						</Parameter>
						<Parameter>
							<Name>energyUse_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>caller</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>if (caller instanceof J_EAStorageElectric) { &#xD;
	fm_currentBalanceFlows_kW.addFlow(OL_EnergyCarriers.ELECTRICITY, flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
&#xD;
	// Only allocate battery losses as consumption. Charging/discharging is neither production nor consumption. Do we need an element in flowsmap indicating power into storage??&#xD;
	fm_currentConsumptionFlows_kW.addFlow(OL_EnergyCarriers.ELECTRICITY, max(0, energyUse_kW));&#xD;
	v_currentFinalEnergyConsumption_kW += max(0, energyUse_kW);&#xD;
} else {&#xD;
	fm_currentBalanceFlows_kW.addFlows(flowsMap);&#xD;
	for (OL_EnergyCarriers EC : flowsMap.keySet()) {&#xD;
		double flow_kW = flowsMap.get(EC);		&#xD;
		if (flow_kW &lt; 0) {&#xD;
			fm_currentProductionFlows_kW.addFlow(EC, -flow_kW);&#xD;
		}&#xD;
		else {&#xD;
			fm_currentConsumptionFlows_kW.addFlow(EC, flow_kW);&#xD;
		}&#xD;
	}&#xD;
	v_currentPrimaryEnergyProduction_kW += max(0, -energyUse_kW);&#xD;
	v_currentFinalEnergyConsumption_kW += max(0, energyUse_kW);&#xD;
}&#xD;
&#xD;
if ( caller instanceof J_EAConversionHeatPump ) {&#xD;
	v_currentPrimaryEnergyProductionHeatpumps_kW -= energyUse_kW;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714646521271</Id>
						<Name>f_removeTheJ_EA</Name>
						<X>910</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>f_removeTheJ_EA_default(j_ea);&#xD;
// Abstract method to be used call GC-subtype specific functions</Body>
					</Function>
					<Function AccessType="protected" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714646913998</Id>
						<Name>f_removeTheJ_EA_default</Name>
						<X>1090</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>j_ea</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>c_energyAssets.remove(j_ea);&#xD;
energyModel.c_energyAssets.remove(j_ea);&#xD;
&#xD;
if (j_ea instanceof J_EAVehicle) {&#xD;
	J_EAVehicle vehicle = (J_EAVehicle)j_ea;&#xD;
	if (vehicle instanceof J_EADieselVehicle) {&#xD;
		c_dieselVehicles.remove( (J_EADieselVehicle)vehicle );		&#xD;
	} else if (vehicle instanceof J_EAHydrogenVehicle) {&#xD;
		c_hydrogenVehicles.remove((J_EAHydrogenVehicle)vehicle);		&#xD;
	} else if (vehicle instanceof J_EAEV) {&#xD;
		c_vehiclesAvailableForCharging.remove((J_EAEV)vehicle);&#xD;
		energyModel.c_EVs.remove((J_EAEV)vehicle);&#xD;
		c_EvAssets.remove(j_ea);&#xD;
	}&#xD;
	c_vehicleAssets.remove(j_ea);&#xD;
		&#xD;
	J_ActivityTrackerTrips tripTracker = vehicle.tripTracker;&#xD;
	c_tripTrackers.remove( tripTracker );&#xD;
	vehicle.tripTracker = null;&#xD;
	v_vehicleIndex --;&#xD;
} else if (j_ea instanceof J_EAConsumption) {&#xD;
	c_consumptionAssets.remove((J_EAConsumption)j_ea);	&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.HOT_WATER_CONSUMPTION) {&#xD;
		p_DHWAsset = null;	&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND ) {&#xD;
		c_fixedConsumptionElectricAssets.remove(j_ea);&#xD;
	}&#xD;
	if( j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB ) {&#xD;
		c_electricHobAssets.remove(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAProduction) {&#xD;
	c_productionAssets.remove((J_EAProduction)j_ea);&#xD;
	//energyModel.c_productionAssets.remove((J_EAProduction)j_ea);&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
		J_EAProduction otherPV = findFirst(c_productionAssets, x -&gt; x.getEAType() == OL_EnergyAssetType.PHOTOVOLTAIC);&#xD;
		if (otherPV == null) {&#xD;
			v_liveAssetsMetaData.hasPV = false;&#xD;
		}&#xD;
		double capacity_kW = ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		v_liveAssetsMetaData.totalInstalledPVPower_kW -= capacity_kW;&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, capacity_kW, false);&#xD;
		}&#xD;
		c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledPVPower_kW -= capacity_kW);		&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW -= capacity_kW;&#xD;
		c_pvAssets.remove(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.WINDMILL) {&#xD;
		double capacity_kW = ((J_EAProduction)j_ea).getCapacityElectric_kW();&#xD;
		v_liveAssetsMetaData.totalInstalledWindPower_kW -= capacity_kW;&#xD;
		if ( p_parentNodeElectric != null ) {&#xD;
			p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, capacity_kW, false);&#xD;
		}&#xD;
		c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledPVPower_kW -= capacity_kW);		&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW -= capacity_kW;&#xD;
		c_windAssets.remove(j_ea);&#xD;
	}&#xD;
	else if (j_ea.energyAssetType == OL_EnergyAssetType.PHOTOTHERMAL){&#xD;
		if (c_ptAssets.size() &lt;= 1) {&#xD;
			v_liveAssetsMetaData.hasPT = false;&#xD;
		}&#xD;
		c_ptAssets.remove(j_ea);&#xD;
	}&#xD;
} else if (j_ea instanceof J_EAConversion) {&#xD;
	c_conversionAssets.remove((J_EAConversion)j_ea);&#xD;
	// Non Heating Assets&#xD;
	if (j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB) {&#xD;
		c_electricHobAssets.remove(j_ea);&#xD;
	}&#xD;
	if ( j_ea.energyAssetType == OL_EnergyAssetType.GAS_PIT || j_ea.energyAssetType == OL_EnergyAssetType.ELECTRIC_HOB){&#xD;
		p_cookingTracker = null;&#xD;
	} else if (j_ea instanceof J_EAConversionElectrolyser) {&#xD;
		c_electrolyserAssets.remove(j_ea);&#xD;
	}&#xD;
	else{&#xD;
		// Heating Assets&#xD;
		c_heatingAssets.remove(j_ea);&#xD;
		if (p_heatingManagement != null) {&#xD;
			p_heatingManagement.notInitialized();&#xD;
		}&#xD;
		// Special Heating Assets&#xD;
		if (j_ea instanceof J_EAConversionHeatPump) {&#xD;
			energyModel.c_ambientDependentAssets.remove(j_ea);&#xD;
			c_electricHeatpumpAssets.remove(j_ea);&#xD;
		} else if (j_ea instanceof J_EAConversionGasCHP) {&#xD;
			c_chpAssets.remove(j_ea);&#xD;
		}&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAStorage) {&#xD;
	c_storageAssets.remove((J_EAStorage)j_ea);&#xD;
	energyModel.c_storageAssets.remove((J_EAStorage)j_ea);&#xD;
	if (j_ea instanceof J_EAStorageHeat) {&#xD;
		energyModel.c_ambientDependentAssets.remove(j_ea);&#xD;
		if (j_ea.energyAssetType == OL_EnergyAssetType.BUILDINGTHERMALS) {	&#xD;
			p_BuildingThermalAsset = null;&#xD;
			if (p_heatingManagement != null) {&#xD;
				p_heatingManagement.notInitialized();&#xD;
			}&#xD;
		}&#xD;
		else {&#xD;
			p_heatBuffer = null;&#xD;
			if (p_heatingManagement != null) {&#xD;
				p_heatingManagement.notInitialized();&#xD;
			}&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAStorageGas) {&#xD;
		p_gasBuffer = null;&#xD;
	} else if (j_ea instanceof J_EAStorageElectric) {&#xD;
		p_batteryAsset = null;&#xD;
		c_batteryAssets.remove(j_ea);&#xD;
		v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh -= ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()/1000;&#xD;
		energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh -= ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()/1000;&#xD;
	}&#xD;
} else if  (j_ea instanceof J_EAProfile) {&#xD;
	//p_energyProfile = null;&#xD;
	c_profileAssets.remove((J_EAProfile)j_ea);&#xD;
} else if (j_ea instanceof J_EACharger) {&#xD;
	c_chargers.remove(j_ea);&#xD;
	c_EvAssets.remove(j_ea);	&#xD;
} else {&#xD;
	traceln("Unrecognized energy asset %s in gridconnection %s", j_ea, this);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717060111619</Id>
						<Name>f_resetSpecificGCStates</Name>
						<X>1290</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717068094093</Id>
						<Name>f_resetStatesAfterRapidRun</Name>
						<X>1270</X>
						<Y>570</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Reset dataset after rapid run&#xD;
&#xD;
//v_hydrogenInStorage_kWh = 0;&#xD;
&#xD;
//Reset specificGC states after rapid run&#xD;
f_resetSpecificGCStatesAfterRapidRun();&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1717068167776</Id>
						<Name>f_resetSpecificGCStatesAfterRapidRun</Name>
						<X>1290</X>
						<Y>590</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// to be overwritten by child GCs!</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1720442672576</Id>
						<Name>f_curtailment</Name>
						<X>910</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Electricity&#xD;
if (v_enableCurtailment) {&#xD;
	switch(p_curtailmentMode) {&#xD;
		case CAPACITY:&#xD;
		// Keep feedin power within connection capacity&#xD;
		if (fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &lt; - v_liveConnectionMetaData.contractedFeedinCapacity_kW) { // overproduction!&#xD;
			for (J_EAProduction j_ea : c_productionAssets) {&#xD;
				j_ea.curtailElectricityProduction( - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
				if (!(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &lt; - v_liveConnectionMetaData.contractedFeedinCapacity_kW)) {&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		break;&#xD;
		case MARKETPRICE:&#xD;
		if(energyModel.pp_dayAheadElectricityPricing_eurpMWh.getCurrentValue() &lt; 0.0) {&#xD;
			if (fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &lt; 0.0) { // Feedin, bring to zero!&#xD;
				for (J_EAProduction j_ea : c_productionAssets) {&#xD;
					j_ea.curtailElectricityProduction( - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
					if (!(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &lt; 0.0)) {&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		break;&#xD;
		case NODALPRICING:&#xD;
		// Prevent feedin when nodal price is negative&#xD;
		double priceTreshold_eur = -0.0;&#xD;
		if( p_parentNodeElectric.v_currentTotalNodalPrice_eurpkWh &lt; priceTreshold_eur) {&#xD;
		&#xD;
			double v_currentPowerElectricitySetpoint_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) * max(0,1+(p_parentNodeElectric.v_currentTotalNodalPrice_eurpkWh-priceTreshold_eur)*5);&#xD;
			for (J_EAProduction j_ea : c_productionAssets) {&#xD;
				j_ea.curtailElectricityProduction(v_currentPowerElectricitySetpoint_kW - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
				if (!(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) &lt; v_currentPowerElectricitySetpoint_kW)) {&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		break;&#xD;
		default:&#xD;
	}&#xD;
}&#xD;
&#xD;
&#xD;
if (fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT) &lt; 0) {//Heat (for now always curtail over produced heat!)&#xD;
	for (J_EAProduction j_ea : c_productionAssets) {&#xD;
		j_ea.curtailEnergyCarrierProduction( OL_EnergyCarriers.HEAT, - fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
		if (!(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT) &lt; 0)) {&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1720430481154</Id>
						<Name>f_nfatoUpdateConnectionCapacity</Name>
						<Description>Updates the Connection Capacity of the GC depending on the time of day / day of week.</Description>
						<X>890</X>
						<Y>710</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>int dayOfWeek = (int) ((energyModel.t_h / 24 + energyModel.v_dayOfWeek1jan) % 7);&#xD;
&#xD;
double timeOfDay = energyModel.t_h % 24;&#xD;
int hourOfDay = (int) timeOfDay;&#xD;
&#xD;
if (timeOfDay == hourOfDay) {&#xD;
	int previousHour = ((hourOfDay - 1) % 24 + 24) % 24;&#xD;
	if (dayOfWeek == 0 || dayOfWeek == 6) {&#xD;
		if (dayOfWeek == 6 &amp;&amp; hourOfDay == 0) { // Friday night we need to subtract the previous week capacity&#xD;
			v_liveConnectionMetaData.contractedDeliveryCapacity_kW += v_nfatoWeekendDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekDeliveryCapacity_kW[previousHour];&#xD;
			v_liveConnectionMetaData.contractedFeedinCapacity_kW += v_nfatoWeekendFeedinCapacity_kW[hourOfDay] - v_nfatoWeekFeedinCapacity_kW[previousHour];&#xD;
		}&#xD;
		else {&#xD;
			v_liveConnectionMetaData.contractedDeliveryCapacity_kW += v_nfatoWeekendDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekendDeliveryCapacity_kW[previousHour];&#xD;
			v_liveConnectionMetaData.contractedFeedinCapacity_kW += v_nfatoWeekendFeedinCapacity_kW[hourOfDay] - v_nfatoWeekendFeedinCapacity_kW[previousHour];&#xD;
		}&#xD;
	}&#xD;
	else {&#xD;
		if (dayOfWeek == 1 &amp;&amp; hourOfDay == 0) { // Sunday night we need to subtract the previous weekend capacity&#xD;
			v_liveConnectionMetaData.contractedDeliveryCapacity_kW += v_nfatoWeekDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekendDeliveryCapacity_kW[previousHour];&#xD;
			v_liveConnectionMetaData.contractedFeedinCapacity_kW += v_nfatoWeekFeedinCapacity_kW[hourOfDay] - v_nfatoWeekendFeedinCapacity_kW[previousHour];&#xD;
		}&#xD;
		else {&#xD;
			v_liveConnectionMetaData.contractedDeliveryCapacity_kW += v_nfatoWeekDeliveryCapacity_kW[hourOfDay] - v_nfatoWeekDeliveryCapacity_kW[previousHour];&#xD;
			v_liveConnectionMetaData.contractedFeedinCapacity_kW += v_nfatoWeekFeedinCapacity_kW[hourOfDay] - v_nfatoWeekFeedinCapacity_kW[previousHour];&#xD;
		}&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1720431721926</Id>
						<Name>f_nfatoSetConnectionCapacity</Name>
						<Description>When changing the NFATO settings this function sets the GC capacity to the correct value. When reset is true the capacity is restored back to its original value.</Description>
						<X>890</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>reset</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>int mult = reset == true ? -1 : 1; // When reset is true we need to subtract the capacity, else we add&#xD;
&#xD;
int dayOfWeek = (int) ((energyModel.t_h / 24 + energyModel.v_dayOfWeek1jan) % 7);&#xD;
double timeOfDay = energyModel.t_h % 24;&#xD;
int hourOfDay = (int) timeOfDay;&#xD;
&#xD;
if (dayOfWeek == 0 || dayOfWeek == 6) {&#xD;
	if (dayOfWeek == 6 &amp;&amp; hourOfDay == 0) { // Friday night we need to subtract the previous week capacity&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacity_kW += mult * v_nfatoWeekDeliveryCapacity_kW[hourOfDay];&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacity_kW += mult * v_nfatoWeekFeedinCapacity_kW[hourOfDay];&#xD;
	}&#xD;
	else {&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacity_kW += mult * v_nfatoWeekendDeliveryCapacity_kW[hourOfDay];&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacity_kW += mult * v_nfatoWeekendFeedinCapacity_kW[hourOfDay];&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	if (dayOfWeek == 1 &amp;&amp; hourOfDay == 0) { // Sunday night we need to subtract the previous week capacity&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacity_kW += mult * v_nfatoWeekendDeliveryCapacity_kW[hourOfDay];&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacity_kW += mult * v_nfatoWeekendFeedinCapacity_kW[hourOfDay];&#xD;
	}&#xD;
	else {&#xD;
		v_liveConnectionMetaData.contractedDeliveryCapacity_kW += mult * v_nfatoWeekDeliveryCapacity_kW[hourOfDay];&#xD;
		v_liveConnectionMetaData.contractedFeedinCapacity_kW += mult * v_nfatoWeekFeedinCapacity_kW[hourOfDay];&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722512642645</Id>
						<Name>f_removeFlows</Name>
						<X>1040</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>flowsMap</Name>
							<Type>J_FlowsMap</Type>
						</Parameter>
						<Parameter>
							<Name>energyUse_kW</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>caller</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>for (OL_EnergyCarriers EC : flowsMap.keySet()) {&#xD;
	fm_currentBalanceFlows_kW.addFlow(EC, -flowsMap.get(EC));&#xD;
	&#xD;
	if (flowsMap.get(EC) &lt; 0) {&#xD;
		fm_currentProductionFlows_kW.addFlow(EC, flowsMap.get(EC));&#xD;
	}&#xD;
	else if (flowsMap.get(EC) &gt; 0){&#xD;
		fm_currentConsumptionFlows_kW.addFlow(EC, -flowsMap.get(EC));&#xD;
	}&#xD;
}&#xD;
&#xD;
if (caller instanceof J_EAStorageElectric) { &#xD;
	// Only allocate battery losses as consumption. Charging/discharging is neither production nor consumption. Do we need an element in flowsmap indicating power into storage??&#xD;
	fm_currentConsumptionFlows_kW.addFlow(OL_EnergyCarriers.ELECTRICITY, max(0, energyUse_kW));&#xD;
	v_currentFinalEnergyConsumption_kW += max(0, energyUse_kW);&#xD;
} else {&#xD;
	double curtailment_kW = max(0, -energyUse_kW);&#xD;
	double lostLoad_kW = max(0, energyUse_kW);&#xD;
	v_currentEnergyCurtailed_kW += curtailment_kW;&#xD;
	v_currentPrimaryEnergyProduction_kW -= curtailment_kW;&#xD;
	v_currentFinalEnergyConsumption_kW -= lostLoad_kW;&#xD;
}&#xD;
&#xD;
if ( caller instanceof J_EAConversionHeatPump ) {&#xD;
	v_currentPrimaryEnergyProductionHeatpumps_kW += energyUse_kW;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722518225504</Id>
						<Name>f_fillLiveDataSets</Name>
						<X>930</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Current timestep&#xD;
double currentTime_h = energyModel.t_h-energyModel.p_runStartTime_h;&#xD;
&#xD;
//Energy carrier flows&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentConsumptionFlows_kW.get(EC), 3) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, roundToDecimal(fm_currentProductionFlows_kW.get(EC), 3) );&#xD;
}&#xD;
&#xD;
//Electricity balance&#xD;
v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
&#xD;
&#xD;
//Total demand and supply&#xD;
v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
&#xD;
&#xD;
//Live capacity datasets&#xD;
v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
&#xD;
&#xD;
//// Gather specific electricity flows from corresponding energy assets&#xD;
&#xD;
//Baseload electricity&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_fixedConsumptionElectricAssets) {&#xD;
	v_fixedConsumptionElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, roundToDecimal(v_fixedConsumptionElectric_kW, 3));&#xD;
&#xD;
&#xD;
//Cooking&#xD;
v_electricHobConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electricHobAssets) {&#xD;
	v_electricHobConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, roundToDecimal(v_electricHobConsumption_kW, 3));&#xD;
&#xD;
&#xD;
//Hydrogen elec consumption&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electrolyserAssets) {&#xD;
	v_hydrogenElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, roundToDecimal(max(0, v_hydrogenElectricityConsumption_kW), 3));&#xD;
&#xD;
&#xD;
//Heatpump elec consumption&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electricHeatpumpAssets) {&#xD;
	v_heatPumpElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, roundToDecimal(max(0, v_heatPumpElectricityConsumption_kW), 3));&#xD;
&#xD;
&#xD;
//EVs&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
for (J_EA j_ea : c_EvAssets) {&#xD;
	if (j_ea instanceof J_EAEV) {&#xD;
		if (((J_EAEV)j_ea).vehicleScaling == 0) {&#xD;
			continue;&#xD;
		}&#xD;
	}&#xD;
	v_evChargingPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, roundToDecimal(max(0,v_evChargingPowerElectric_kW), 3));&#xD;
v_liveData.data_V2GSupply_kW.add(currentTime_h, roundToDecimal(max(0, -v_evChargingPowerElectric_kW), 3));&#xD;
&#xD;
&#xD;
//Batteries&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_batteryStoredEnergy_kWh = 0;&#xD;
for (J_EA j_ea : c_batteryAssets) {&#xD;
	if (((J_EAStorageElectric)j_ea).getCapacityElectric_kW() != 0 &amp;&amp; ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh() != 0) {&#xD;
		v_batteryPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
		v_batteryStoredEnergy_kWh += ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()*((J_EAStorageElectric)j_ea).getCurrentStateOfCharge_fr();&#xD;
	}&#xD;
}&#xD;
v_liveData.data_batteryCharging_kW.add(currentTime_h, roundToDecimal(max(0, v_batteryPowerElectric_kW), 3));		&#xD;
v_liveData.data_batteryDischarging_kW.add(currentTime_h, roundToDecimal(max(0, -v_batteryPowerElectric_kW), 3));	&#xD;
v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, v_batteryStoredEnergy_kWh/1000);&#xD;
double currentSOC = 0;&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	currentSOC = (v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
v_liveData.data_batterySOC_fr.add(currentTime_h, roundToDecimal(currentSOC, 3));&#xD;
&#xD;
//CHP production&#xD;
v_CHPProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_chpAssets) {&#xD;
	v_CHPProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, roundToDecimal(v_CHPProductionElectric_kW, 3));&#xD;
&#xD;
&#xD;
//PV production&#xD;
v_pvProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_pvAssets) {&#xD;
	v_pvProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
if (v_pvProductionElectric_kW &lt; 0) {&#xD;
	traceln("Negative v_pvProductionElectric_kW! Curtailment error? Value: %s", v_pvProductionElectric_kW);&#xD;
	pauseSimulation();&#xD;
}&#xD;
v_liveData.data_PVGeneration_kW.add(currentTime_h, roundToDecimal(v_pvProductionElectric_kW, 3));&#xD;
&#xD;
&#xD;
//Wind production&#xD;
v_windProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_windAssets) {&#xD;
	v_windProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_windGeneration_kW.add(currentTime_h, roundToDecimal(v_windProductionElectric_kW, 3));	&#xD;
&#xD;
&#xD;
//PT production&#xD;
v_ptProductionHeat_kW = 0;&#xD;
for (J_EA j_ea : c_ptAssets) {&#xD;
	v_ptProductionHeat_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
}&#xD;
v_liveData.data_PTGeneration_kW.add(currentTime_h, roundToDecimal(v_ptProductionHeat_kW, 3));&#xD;
&#xD;
&#xD;
//District heating&#xD;
v_districtHeatDelivery_kW = max(0,fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, roundToDecimal(v_districtHeatDelivery_kW, 3));	&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722518905501</Id>
						<Name>f_rapidRunDataLogging</Name>
						<X>930</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) / v_liveConnectionMetaData.contractedDeliveryCapacity_kW ));&#xD;
&#xD;
double currentImport_kW = 0.0;&#xD;
double currentExport_kW = 0.0;&#xD;
for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
	double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
	v_rapidRunData.am_totalBalanceAccumulators_kW.get(EC).addStep(  currentBalance_kW );&#xD;
	&#xD;
	if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
		currentImport_kW += max( 0, currentBalance_kW );&#xD;
	}&#xD;
	if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
		currentExport_kW += max( 0, -currentBalance_kW );&#xD;
	}&#xD;
}&#xD;
&#xD;
// Daytime totals. Use overal-total minus daytime total to get nighttime totals.&#xD;
if(energyModel.b_isDaytime) { &#xD;
	&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
		if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
		}&#xD;
		if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
			v_rapidRunData.am_daytimeExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_daytimeElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_daytimeElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );	&#xD;
	v_rapidRunData.acc_daytimeEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_daytimeFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);	&#xD;
	v_rapidRunData.acc_daytimePrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
}&#xD;
&#xD;
// Weekend totals. Use overal-totals minus weekend totals to get weekday totals.&#xD;
if (!energyModel.b_isWeekday) { // &#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		double currentBalance_kW = fm_currentBalanceFlows_kW.get(EC);&#xD;
			if(v_activeConsumptionEnergyCarriers.contains(EC)){&#xD;
				v_rapidRunData.am_weekendImports_kW.get(EC).addStep(max( 0, currentBalance_kW ));&#xD;
			}&#xD;
			if(v_activeProductionEnergyCarriers.contains(EC)){&#xD;
				v_rapidRunData.am_weekendExports_kW.get(EC).addStep(max( 0, -currentBalance_kW ));&#xD;
			}&#xD;
		}&#xD;
	v_rapidRunData.acc_weekendElectricityProduction_kW.addStep(fm_currentProductionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendElectricityConsumption_kW.addStep(fm_currentConsumptionFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) );&#xD;
	v_rapidRunData.acc_weekendEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_weekendFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	v_rapidRunData.acc_weekendPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
}&#xD;
&#xD;
// Further Subdivision of asset types within energy carriers&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_fixedConsumptionElectricAssets) {&#xD;
	v_fixedConsumptionElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electrolyserAssets) {&#xD;
	v_hydrogenElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electricHeatpumpAssets) {&#xD;
	v_heatPumpElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
for (J_EA j_ea : c_EvAssets) {&#xD;
	if (j_ea instanceof J_EAEV) {&#xD;
		if (((J_EAEV)j_ea).vehicleScaling == 0) {&#xD;
			continue;&#xD;
		}&#xD;
	}&#xD;
	v_evChargingPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_batteryStoredEnergy_kWh = 0;&#xD;
for (J_EA j_ea : c_batteryAssets) {&#xD;
	if (((J_EAStorageElectric)j_ea).getCapacityElectric_kW() != 0 &amp;&amp; ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh() != 0) {&#xD;
		v_batteryPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
		v_batteryStoredEnergy_kWh += ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()*((J_EAStorageElectric)j_ea).getCurrentStateOfCharge_fr();&#xD;
		&#xD;
	}&#xD;
}&#xD;
&#xD;
v_CHPProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_chpAssets) {&#xD;
	v_CHPProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_pvProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_pvAssets) {&#xD;
	v_pvProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_windProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_windAssets) {&#xD;
	v_windProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
&#xD;
v_ptProductionHeat_kW = 0;&#xD;
for (J_EA j_ea : c_ptAssets) {&#xD;
	v_ptProductionHeat_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.HEAT);&#xD;
}&#xD;
&#xD;
//District heating&#xD;
v_districtHeatDelivery_kW = max(0,fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT));	&#xD;
&#xD;
//========== SUMMER WEEK ==========//&#xD;
if (energyModel.b_isSummerWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
		v_rapidRunData.am_summerWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
			&#xD;
	v_rapidRunData.acc_summerWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_summerWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
&#xD;
	v_rapidRunData.acc_summerWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_rapidRunData.acc_summerWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_summerWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_summerWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_summerWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_summerWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
	v_rapidRunData.acc_summerWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_summerWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
	v_rapidRunData.ts_summerWeekBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh/1000);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}&#xD;
	else{&#xD;
		v_rapidRunData.ts_summerWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}	&#xD;
&#xD;
}&#xD;
&#xD;
//========== WINTER WEEK ==========// &#xD;
if (energyModel.b_isWinterWeek){&#xD;
	for (OL_EnergyCarriers EC : v_activeEnergyCarriers) {&#xD;
		v_rapidRunData.am_winterWeekBalanceAccumulators_kW.get(EC).addStep( fm_currentBalanceFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
	}&#xD;
	for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	    v_rapidRunData.am_winterWeekProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
	}&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
	v_rapidRunData.acc_winterWeekFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
	v_rapidRunData.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);	&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekDeliveryCapacity_kW.addStep( v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
	v_rapidRunData.acc_winterWeekFeedinCapacity_kW.addStep( -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
	v_rapidRunData.acc_winterWeekElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
	v_rapidRunData.acc_winterWeekDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
	&#xD;
	v_rapidRunData.acc_winterWeekPVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
	v_rapidRunData.acc_winterWeekPTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
	v_rapidRunData.acc_winterWeekV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
	v_rapidRunData.acc_winterWeekCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
	v_rapidRunData.ts_winterWeekBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh/1000);&#xD;
	if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
	}&#xD;
	else{&#xD;
		v_rapidRunData.ts_winterWeekBatteriesSOC_fr.addStep(0);	&#xD;
	}		&#xD;
}&#xD;
&#xD;
&#xD;
//========== TOTALS / DAILY AVERAGES ==========//&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageConsumptionAccumulators_kW.get(EC).addStep( fm_currentConsumptionFlows_kW.get(EC) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
    v_rapidRunData.am_dailyAverageProductionAccumulators_kW.get(EC).addStep( fm_currentProductionFlows_kW.get(EC) );&#xD;
}&#xD;
v_rapidRunData.acc_dailyAverageEnergyProduction_kW.addStep(v_currentPrimaryEnergyProduction_kW);&#xD;
v_rapidRunData.acc_dailyAverageFinalEnergyConsumption_kW.addStep(v_currentFinalEnergyConsumption_kW);&#xD;
v_rapidRunData.acc_totalEnergyCurtailed_kW.addStep(v_currentEnergyCurtailed_kW);&#xD;
v_rapidRunData.acc_totalPrimaryEnergyProductionHeatpumps_kW.addStep(v_currentPrimaryEnergyProductionHeatpumps_kW);&#xD;
&#xD;
v_rapidRunData.acc_dailyAverageBaseloadElectricityConsumption_kW.addStep( v_fixedConsumptionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageHeatPumpElectricityConsumption_kW.addStep( v_heatPumpElectricityConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectricVehicleConsumption_kW.addStep( max(0,v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesConsumption_kW.addStep( max(0,v_batteryPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageElectricCookingConsumption_kW.addStep( v_electricHobConsumption_kW );&#xD;
v_rapidRunData.acc_dailyAverageElectrolyserElectricityConsumption_kW.addStep( max(0, v_hydrogenElectricityConsumption_kW) );&#xD;
v_rapidRunData.acc_dailyAverageDistrictHeatingConsumption_kW.addStep( v_districtHeatDelivery_kW );&#xD;
&#xD;
v_rapidRunData.acc_dailyAveragePVProduction_kW.addStep( v_pvProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAverageWindProduction_kW.addStep( v_windProductionElectric_kW );&#xD;
v_rapidRunData.acc_dailyAveragePTProduction_kW.addStep( v_ptProductionHeat_kW );&#xD;
v_rapidRunData.acc_dailyAverageV2GProduction_kW.addStep( max(0, -v_evChargingPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageBatteriesProduction_kW.addStep( max(0,-v_batteryPowerElectric_kW) );&#xD;
v_rapidRunData.acc_dailyAverageCHPElectricityProduction_kW.addStep( v_CHPProductionElectric_kW );&#xD;
v_rapidRunData.ts_dailyAverageBatteriesStoredEnergy_MWh.addStep(v_batteryStoredEnergy_kWh/1000);&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep((v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh);	&#xD;
}&#xD;
else{&#xD;
	v_rapidRunData.ts_dailyAverageBatteriesSOC_fr.addStep(0);	&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722584668566</Id>
						<Name>f_setActive</Name>
						<Description>Function to pause a gridconnection so it is not operated or counted towards totals in the energy model.</Description>
						<X>270</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>setActive</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>if((energyModel.c_pausedGridConnections.contains(this) &amp;&amp; !setActive) || &#xD;
  (!energyModel.c_pausedGridConnections.contains(this) &amp;&amp; setActive)){&#xD;
	return;&#xD;
}&#xD;
&#xD;
if (!setActive) {&#xD;
	energyModel.c_gridConnections.remove(this);&#xD;
	energyModel.c_pausedGridConnections.add(this);&#xD;
	&#xD;
	// Set GIS Region visibility&#xD;
	for (GIS_Object obj : c_connectedGISObjects) {&#xD;
		obj.gisRegion.setVisible(false);&#xD;
	}&#xD;
	&#xD;
&#xD;
	// update GN parents' wind / solar totals&#xD;
	p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, v_liveAssetsMetaData.totalInstalledPVPower_kW, false);&#xD;
	p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, v_liveAssetsMetaData.totalInstalledWindPower_kW, false);&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW -= v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW -= v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh -= v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	&#xD;
	for(EnergyCoop coop : c_parentCoops){&#xD;
		coop.v_liveAssetsMetaData.totalInstalledPVPower_kW -= v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
		coop.v_liveAssetsMetaData.totalInstalledWindPower_kW -= v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
		coop.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh -= v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	&#xD;
	// Reset Connection Capacity to default&#xD;
	f_nfatoSetConnectionCapacity(true);&#xD;
	&#xD;
	// Is setting all of these to zero overkill?&#xD;
	fm_currentProductionFlows_kW.clear();&#xD;
	fm_currentConsumptionFlows_kW.clear();&#xD;
	fm_currentBalanceFlows_kW.clear();&#xD;
	&#xD;
	v_previousPowerElectricity_kW = 0;&#xD;
	v_previousPowerHeat_kW = 0;&#xD;
	//v_currentPowerElectricity_kW = 0;&#xD;
	//v_currentPowerMethane_kW = 0;&#xD;
	//v_currentPowerHydrogen_kW = 0;&#xD;
	//v_currentPowerHeat_kW = 0;&#xD;
	//v_currentPowerDiesel_kW = 0;&#xD;
	//v_currentElectricityConsumption_kW = 0;&#xD;
	//v_currentElectricityProduction_kW = 0;&#xD;
	//v_currentEnergyConsumption_kW = 0;&#xD;
	//v_currentEnergyProduction_kW = 0;&#xD;
	v_currentEnergyCurtailed_kW = 0;&#xD;
	v_currentPrimaryEnergyProductionHeatpumps_kW = 0;&#xD;
	v_fixedConsumptionElectric_kW = 0;&#xD;
	v_electricHobConsumption_kW = 0;&#xD;
	v_heatPumpElectricityConsumption_kW = 0;&#xD;
	v_hydrogenElectricityConsumption_kW = 0;&#xD;
	v_evChargingPowerElectric_kW = 0;&#xD;
	v_districtHeatDelivery_kW = 0;&#xD;
	v_batteryPowerElectric_kW = 0;&#xD;
	v_windProductionElectric_kW = 0;&#xD;
	v_pvProductionElectric_kW = 0;&#xD;
	v_ptProductionHeat_kW = 0;&#xD;
	v_conversionPowerElectric_kW = 0;&#xD;
	v_CHPProductionElectric_kW = 0;&#xD;
	&#xD;
}&#xD;
else {&#xD;
	energyModel.c_gridConnections.add(this);&#xD;
	energyModel.c_pausedGridConnections.remove(this);&#xD;
&#xD;
	// Set GIS Region visibility&#xD;
	for (GIS_Object obj : c_connectedGISObjects) {&#xD;
		obj.gisRegion.setVisible(true);&#xD;
	}&#xD;
	&#xD;
	// Set Connection Capacity according to NFATO&#xD;
	f_nfatoSetConnectionCapacity(false);&#xD;
	&#xD;
	v_liveAssetsMetaData.updateActiveAssetData(new ArrayList&lt;&gt;(List.of(this)));&#xD;
	&#xD;
	// update GN parents' wind / solar totals (will be wrong if you changed your totals while paused)&#xD;
	p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, v_liveAssetsMetaData.totalInstalledPVPower_kW, true);&#xD;
	p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, v_liveAssetsMetaData.totalInstalledWindPower_kW, true);&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW += v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW += v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
	energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	&#xD;
	for(EnergyCoop coop : c_parentCoops){&#xD;
		coop.v_liveAssetsMetaData.totalInstalledPVPower_kW += v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
		coop.v_liveAssetsMetaData.totalInstalledWindPower_kW += v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
		coop.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
	}&#xD;
	&#xD;
	&#xD;
	//Initialize/reset dataset maps to 0&#xD;
	double startTime = energyModel.v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMin();&#xD;
	double endTime = energyModel.v_liveData.dsm_liveDemand_kW.get(OL_EnergyCarriers.ELECTRICITY).getXMax();&#xD;
	v_liveData.resetLiveDatasets(startTime, endTime, energyModel.p_timeStep_h);&#xD;
&#xD;
}&#xD;
&#xD;
//Update the 'isActive' variable&#xD;
v_isActive = setActive;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1725455130676</Id>
						<Name>f_getChargeDeadline</Name>
						<X>960</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ev</Name>
							<Type>J_EAEV</Type>
						</Parameter>
						<Body>double chargeNeedForNextTrip_kWh = max(0, ev.getEnergyNeedForNextTrip_kWh() - ev.getCurrentStateOfCharge_kWh());&#xD;
double maxChargingPower_kW = ev.getCapacityElectric_kW();&#xD;
&#xD;
return floor((ev.tripTracker.v_nextEventStartTime_min / 60 - chargeNeedForNextTrip_kWh / maxChargingPower_kW) / energyModel.p_timeStep_h) * energyModel.p_timeStep_h;&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1730728785333</Id>
						<Name>f_initializeDataSets</Name>
						<X>910</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_liveData.dsm_liveDemand_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
v_liveData.dsm_liveSupply_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
&#xD;
/*&#xD;
dsm_dailyAverageDemandDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, 365);&#xD;
dsm_dailyAverageSupplyDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, 365);&#xD;
&#xD;
dsm_summerWeekDemandDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
dsm_summerWeekSupplyDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
dsm_winterWeekDemandDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
dsm_winterWeekSupplyDataSets_kW.createEmptyDataSets(v_activeEnergyCarriers, (int)(168 / energyModel.p_timeStep_h));&#xD;
*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1750258434630</Id>
						<Name>f_manageChargers</Name>
						<X>920</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( c_chargers.size() &gt; 0 ) { // &amp;&amp; v_isActiveCharger ) {&#xD;
	switch (p_chargingAttitudeVehicles) {			&#xD;
		case V1G:&#xD;
		case MAX_POWER:&#xD;
		case MAX_SPREAD:&#xD;
			c_chargers.forEach( x -&gt; x.f_updateAllFlows(energyModel.t_h, true, false) );&#xD;
			break;&#xD;
		case V2G:&#xD;
			c_chargers.forEach( x -&gt; x.f_updateAllFlows(energyModel.t_h, true, true) );&#xD;
			break;&#xD;
		case SIMPLE:&#xD;
		default:&#xD;
			c_chargers.forEach( x -&gt; x.f_updateAllFlows(energyModel.t_h, false, false) );&#xD;
			break;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1751294546436</Id>
						<Name>f_fillLiveDataSets1</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>1610</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//Current timestep&#xD;
double currentTime_h = energyModel.t_h-energyModel.p_runStartTime_h;&#xD;
&#xD;
//Energy carrier flows&#xD;
for (OL_EnergyCarriers EC : v_activeConsumptionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveDemand_kW.get(EC).add( currentTime_h, fm_currentConsumptionFlows_kW.get(EC) );&#xD;
}&#xD;
for (OL_EnergyCarriers EC : v_activeProductionEnergyCarriers) {&#xD;
	v_liveData.dsm_liveSupply_kW.get(EC).add( currentTime_h, fm_currentProductionFlows_kW.get(EC) );&#xD;
}&#xD;
&#xD;
&#xD;
//Electricity balance&#xD;
v_liveData.data_liveElectricityBalance_kW.add(currentTime_h, fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
&#xD;
&#xD;
//Total demand and supply&#xD;
v_liveData.data_totalDemand_kW.add(currentTime_h, v_currentFinalEnergyConsumption_kW);&#xD;
v_liveData.data_totalSupply_kW.add(currentTime_h, v_currentPrimaryEnergyProduction_kW);&#xD;
&#xD;
&#xD;
//Live capacity datasets&#xD;
v_liveData.data_gridCapacityDemand_kW.add(currentTime_h, v_liveConnectionMetaData.contractedDeliveryCapacity_kW);&#xD;
v_liveData.data_gridCapacitySupply_kW.add(currentTime_h, -v_liveConnectionMetaData.contractedFeedinCapacity_kW);&#xD;
&#xD;
&#xD;
//// Gather specific electricity flows from corresponding energy assets&#xD;
&#xD;
//Baseload electricity&#xD;
v_fixedConsumptionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_fixedConsumptionElectricAssets) {&#xD;
	v_fixedConsumptionElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_baseloadElectricityDemand_kW.add(currentTime_h, v_fixedConsumptionElectric_kW);&#xD;
&#xD;
&#xD;
//Cooking&#xD;
v_electricHobConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electricHobAssets) {&#xD;
	v_electricHobConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_cookingElectricityDemand_kW.add(currentTime_h, v_electricHobConsumption_kW);&#xD;
&#xD;
&#xD;
//Hydrogen elec consumption&#xD;
v_hydrogenElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electrolyserAssets) {&#xD;
	v_hydrogenElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_hydrogenElectricityDemand_kW.add(currentTime_h, max(0, v_hydrogenElectricityConsumption_kW));&#xD;
&#xD;
&#xD;
//Heatpump elec consumption&#xD;
v_heatPumpElectricityConsumption_kW = 0;&#xD;
for (J_EA j_ea : c_electricHeatpumpAssets) {&#xD;
	v_heatPumpElectricityConsumption_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_heatPumpElectricityDemand_kW.add(currentTime_h, max(0, v_heatPumpElectricityConsumption_kW));&#xD;
&#xD;
&#xD;
//EVs&#xD;
v_evChargingPowerElectric_kW = 0;&#xD;
for (J_EA j_ea : c_EvAssets) {&#xD;
	if (j_ea instanceof J_EAEV) {&#xD;
		if (((J_EAEV)j_ea).vehicleScaling == 0) {&#xD;
			continue;&#xD;
		}&#xD;
	}&#xD;
	v_evChargingPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_electricVehicleDemand_kW.add(currentTime_h, max(0,v_evChargingPowerElectric_kW));&#xD;
v_liveData.data_V2GSupply_kW.add(currentTime_h, max(0, -v_evChargingPowerElectric_kW));&#xD;
&#xD;
&#xD;
//Batteries&#xD;
v_batteryPowerElectric_kW = 0;&#xD;
v_batteryStoredEnergy_kWh = 0;&#xD;
for (J_EA j_ea : c_batteryAssets) {&#xD;
	if (((J_EAStorageElectric)j_ea).getCapacityElectric_kW() != 0 &amp;&amp; ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh() != 0) {&#xD;
		v_batteryPowerElectric_kW += j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
		v_batteryStoredEnergy_kWh += ((J_EAStorageElectric)j_ea).getStorageCapacity_kWh()*((J_EAStorageElectric)j_ea).getCurrentStateOfCharge();&#xD;
	}&#xD;
}&#xD;
v_liveData.data_batteryCharging_kW.add(currentTime_h, max(0, v_batteryPowerElectric_kW));		&#xD;
v_liveData.data_batteryDischarging_kW.add(currentTime_h, max(0, -v_batteryPowerElectric_kW));	&#xD;
v_liveData.data_batteryStoredEnergyLiveWeek_MWh.add(currentTime_h, v_batteryStoredEnergy_kWh/1000);&#xD;
double currentSOC = 0;&#xD;
if(v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0){&#xD;
	currentSOC = (v_batteryStoredEnergy_kWh/1000)/v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
}&#xD;
v_liveData.data_batterySOC_fr.add(currentTime_h, currentSOC);&#xD;
&#xD;
//CHP production&#xD;
v_CHPProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_chpAssets) {&#xD;
	v_CHPProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_CHPElectricityProductionLiveWeek_kW.add(currentTime_h, v_CHPProductionElectric_kW);&#xD;
&#xD;
&#xD;
//PV production&#xD;
v_pvProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_pvAssets) {&#xD;
	v_pvProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
if (v_pvProductionElectric_kW &lt; 0) {&#xD;
	traceln("Negative v_pvProductionElectric_kW! Curtailment error? Value: %s", v_pvProductionElectric_kW);&#xD;
	pauseSimulation();&#xD;
}&#xD;
v_liveData.data_PVGeneration_kW.add(currentTime_h, v_pvProductionElectric_kW);&#xD;
&#xD;
&#xD;
//Wind production&#xD;
v_windProductionElectric_kW = 0;&#xD;
for (J_EA j_ea : c_windAssets) {&#xD;
	v_windProductionElectric_kW -= j_ea.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
}&#xD;
v_liveData.data_windGeneration_kW.add(currentTime_h, v_windProductionElectric_kW);	&#xD;
&#xD;
&#xD;
//District heating&#xD;
v_districtHeatDelivery_kW = max(0,fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT));&#xD;
v_liveData.data_districtHeatDelivery_kW.add(currentTime_h, v_districtHeatDelivery_kW);	&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753099764237</Id>
						<Name>f_manageHeating</Name>
						<X>920</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (p_heatingManagement != null) {&#xD;
	p_heatingManagement.manageHeating();&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1752570332887</Id>
						<Name>f_manageBattery</Name>
						<X>930</X>
						<Y>290</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (p_batteryAsset != null) {&#xD;
	if (p_batteryAsset.getStorageCapacity_kWh() &gt; 0 &amp;&amp; p_batteryAsset.getCapacityElectric_kW() &gt; 0) {&#xD;
		if (p_batteryAlgorithm == null) {&#xD;
			throw new RuntimeException("Tried to operate battery without algorithm in GC: " + p_gridConnectionID);&#xD;
		}&#xD;
		p_batteryAlgorithm.manageBattery();&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1753780896745</Id>
						<Name>f_setHeatingType</Name>
						<X>330</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>heatingType</Name>
							<Type>OL_GridConnectionHeatingType</Type>
						</Parameter>
						<Body>p_heatingType = heatingType;&#xD;
if (p_heatingManagement != null) {&#xD;
	p_heatingManagement.notInitialized();&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1658499438198</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>40</X>
						<Y>-130</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>TreeMap&lt;Double, Double&gt;</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1693310211914</Id>
						<Name>energyModel</Name>
						<X>40</X>
						<Y>-50</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1658499438202</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1751294528857</Id>
								<Name>rect_save</Name>
								<X>1590</X>
								<Y>50</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>190</Width>
								<Height>60</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1674329507571</Id>
								<Name>rectangle3</Name>
								<X>20</X>
								<Y>860</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<Lock>true</Lock>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor/>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>780</Width>
								<Height>460</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-983041</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Rectangle>
								<Id>1671027904662</Id>
								<Name>rect_electrictyVariables</Name>
								<X>80</X>
								<Y>940</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>280</Width>
								<Height>360</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-131341</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1667905599124</Id>
								<Name>text</Name>
								<X>50</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>ID &amp; connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667905621972</Id>
								<Name>line</Name>
								<X>20</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1667905636672</Id>
								<Name>line1</Name>
								<X>250</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667905636674</Id>
								<Name>text1</Name>
								<X>280</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Characteristics</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667905687082</Id>
								<Name>line2</Name>
								<X>570</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667905687085</Id>
								<Name>text2</Name>
								<X>620</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1667905952899</Id>
								<Name>text4</Name>
								<X>930</X>
								<Y>10</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667905952903</Id>
								<Name>line4</Name>
								<X>880</X>
								<Y>30</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1667915385672</Id>
								<Name>line5</Name>
								<X>860</X>
								<Y>50</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>90</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667915403157</Id>
								<Name>text5</Name>
								<X>840</X>
								<Y>86</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Init</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1667915419987</Id>
								<Name>text6</Name>
								<X>840</X>
								<Y>290</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Occuring</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667915419990</Id>
								<Name>line6</Name>
								<X>860</X>
								<Y>170</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>190</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1667918827406</Id>
								<Name>line7</Name>
								<X>-220</X>
								<Y>380</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667918827418</Id>
								<Name>text7</Name>
								<X>-180</X>
								<Y>360</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Not visible</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimePlot>
								<Id>1668439095469</Id>
								<Name>pl_powerFlows</Name>
								<X>0</X>
								<Y>570</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893811</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1668499200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>15</Code>
										<Unit Class="TimeUnits">MINUTE</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>500</Width>
								<Height>280</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>420</Width>
									<Height>160</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>60</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Production assets output [kW]</Title>
									<Id>1668439095464</Id>
									<Expression>my_dataset1</Expression>
									<Color>-3137392</Color>
									<Expression2>v_pvProductionElectric_kW + v_windProductionElectric_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Conversion assets demand [kW]</Title>
									<Id>1668439095465</Id>
									<Expression>my_dataset2</Expression>
									<Color>-32944</Color>
									<Expression2>v_conversionPowerElectric_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>EV charging demand [kW]</Title>
									<Id>1668439095466</Id>
									<Expression>my_dataset3</Expression>
									<Color>-13447886</Color>
									<Expression2>v_evChargingPowerElectric_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>2.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Battery load [kW]</Title>
									<Id>1658477089943</Id>
									<Expression>my_dataset4</Expression>
									<Color>-8388608</Color>
									<Expression2>v_batteryPowerElectric_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>GRID LOAD</Title>
									<Id>1658477089942</Id>
									<Expression>my_dataset5</Expression>
									<Color>-16776961</Color>
									<Expression2>fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY)</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Grid connection limit</Title>
									<Id>1658477089941</Id>
									<Expression>my_dataset6</Expression>
									<Color>-65536</Color>
									<Expression2>v_liveConnectionMetaData.contractedDeliveryCapacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title> Grid connection limit</Title>
									<Id>1658477089940</Id>
									<Expression>my_dataset7</Expression>
									<Color>-65536</Color>
									<Expression2>- v_liveConnectionMetaData.contractedFeedinCapacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>672</SamplesToKeep>
								<TimeWindowExpression>48</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
							<Text>
								<Id>1670512816306</Id>
								<Name>text10</Name>
								<X>130</X>
								<Y>570</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity profiles within grid connection</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>16</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1671027383282</Id>
								<Name>text9</Name>
								<X>210</X>
								<Y>922</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Electricity</Text>
								<Font>
									<Name>Arial</Name>
									<Size>14</Size>
									<Style>2</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1671027582352</Id>
								<Name>text12</Name>
								<X>150</X>
								<Y>1000</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption or production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1671027607665</Id>
								<Name>text13</Name>
								<X>200</X>
								<Y>1210</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Production</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Rectangle>
								<Id>1671028034002</Id>
								<Name>rect_heatVariables</Name>
								<X>490</X>
								<Y>940</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<Width>260</Width>
								<Height>250</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-134146</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1671033393207</Id>
								<Name>text16</Name>
								<X>180</X>
								<Y>950</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Consumption</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1671033654309</Id>
								<Name>text17</Name>
								<X>610</X>
								<Y>920</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Heat</Text>
								<Font>
									<Name>Arial</Name>
									<Size>14</Size>
									<Style>2</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1674329550133</Id>
								<Name>text8</Name>
								<X>300</X>
								<Y>880</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Energy balance monitor</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>20</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Control Type="Button">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1741854950232</Id>
								<Name>button_viewData</Name>
								<X>360</X>
								<Y>-60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>energyModel.energyDataViewer.f_fillEnergyDataViewer(this);
energyModel.energyDataViewer.viewArea.navigateTo();</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<LabelText>View Data</LabelText>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1751294528855</Id>
								<Name>txt_save</Name>
								<X>1600</X>
								<Y>60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Bewaren (neg dataset bug)</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>10</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1696868322710</Id>
						<Name>va_gridConnection</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658477288308</Id>
				<Name>GridNode</Name>
				<Import>import com.fasterxml.jackson.databind.JsonNode;

import zeroPackage.ZeroMath;
//import zeroPackage.ZeroAccumulator;</Import>
				<StartupCode>/*
if (p_energyType.equals(OL_EnergyCarriers.HEAT)) {
	double capacityHeat_kW = 1000;
	double lossFactor_WpK = 100;
	double InitialStateOfCharge_degC = 60;
	double heatCapacity_JpK = 1e7;
	double soilTemperature_degC = main.p_undergroundTemperature_degC;
	p_transportBuffer = new J_EAStorageHeat(null, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, InitialStateOfCharge_degC, 10, 90, heatCapacity_JpK);
	p_transportBuffer.updateAmbientTemperature(soilTemperature_degC);
}*/</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658477288306</Id>
					<Name>1658477288306</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089938</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658477288304</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658477288307</CurrentLevel>
				<ConnectionsId>1658477288303</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1665061187538</Id>
						<Name>v_congested</Name>
						<X>50</X>
						<Y>640</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666594510176</Id>
						<Name>v_congestionMode</Name>
						<X>50</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>String</Type>
							<InitialValue Class="CodeValue">
								<Code>"No congestion atm"</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666878219776</Id>
						<Name>v_peakLoadAbsolute_kW</Name>
						<Description>Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022</Description>
						<X>400</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666878695816</Id>
						<Name>v_loadFactor_fr</Name>
						<Description>In electrical engineering the load factor is defined as the average load divided by the peak load in a specified time period.[1] It is a measure of the utilization rate, or efficiency.
geupdate vanuit

@author: Jorrit
@since: 27-10-2022</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>400</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666878761221</Id>
						<Name>v_averageAbsoluteLoadElectricity_kW</Name>
						<Description>Average load over model runtime in kW.

@author: Jorrit
@since: 27-10-2022</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>400</X>
						<Y>520</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1667553127377</Id>
						<Name>v_timeOfPeakPosLoadFiltered_h</Name>
						<X>400</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668600984923</Id>
						<Name>v_currentLoadElectricityLowPassed_kW</Name>
						<X>50</X>
						<Y>581</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668603168061</Id>
						<Name>v_lowPassFactor_fr</Name>
						<X>50</X>
						<Y>561</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>min(1, 0.8 * energyModel.p_timeStep_h) //0.2 </Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670404847922</Id>
						<Name>v_peakLoadFilteredElectricity_kW</Name>
						<Description>Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022</Description>
						<X>400</X>
						<Y>660</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670405904360</Id>
						<Name>v_timeOfPeakLoadFiltered_h</Name>
						<X>400</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1672304003577</Id>
						<Name>v_peakPosLoadElectricity_kW</Name>
						<Description>Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022</Description>
						<X>400</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1672304030993</Id>
						<Name>v_peakNegLoadElectricity_kW</Name>
						<Description>Houdt de piekbelasting in kW over de modelrun bij (absolute waarde) voor kostenberekeningen netverzwaringen (totale gebiedskosten). Geupdate in f_calculateEnergyBalance.

@author: Jorrit
@since: 27-10-2022</Description>
						<X>400</X>
						<Y>620</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1672304151508</Id>
						<Name>v_timeOfPeakNegLoadFiltered_h</Name>
						<X>400</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675683578599</Id>
						<Name>v_currentCongestionPrice_eurpkWh</Name>
						<X>50</X>
						<Y>680</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1689233711411</Id>
						<Name>v_filteredLoadCongestionPricing_kW</Name>
						<X>50</X>
						<Y>720</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1689234315318</Id>
						<Name>v_lowPassFactorCongestionPricing_fr</Name>
						<X>50</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>min(1, 0.25 * energyModel.p_timeStep_h) // smaller value results in more filtering</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1696857656646</Id>
						<Name>v_totalTimeOverloaded_h</Name>
						<X>400</X>
						<Y>700</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715007701783</Id>
						<Name>v_annualExcessImport_MWh</Name>
						<X>670</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715007721718</Id>
						<Name>v_annualExcessExport_MWh</Name>
						<X>670</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715016274487</Id>
						<Name>v_summerWeekExcessImport_MWh</Name>
						<X>990</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715016274489</Id>
						<Name>v_summerWeekExcessExport_MWh</Name>
						<X>990</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715016405654</Id>
						<Name>v_winterWeekExcessImport_MWh</Name>
						<X>990</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715016405656</Id>
						<Name>v_winterWeekExcessExport_MWh</Name>
						<X>990</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066563206</Id>
						<Name>v_daytimeExcessImport_MWh</Name>
						<X>1330</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066563208</Id>
						<Name>v_daytimeExcessExport_MWh</Name>
						<X>1330</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066563214</Id>
						<Name>v_nighttimeExcessImport_MWh</Name>
						<X>1330</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066563216</Id>
						<Name>v_nighttimeExcessExport_MWh</Name>
						<X>1330</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066576721</Id>
						<Name>v_weekdayExcessImport_MWh</Name>
						<X>1640</X>
						<Y>1040</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066576723</Id>
						<Name>v_weekdayExcessExport_MWh</Name>
						<X>1640</X>
						<Y>1060</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066576729</Id>
						<Name>v_weekendExcessImport_MWh</Name>
						<X>1640</X>
						<Y>1140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1715066576731</Id>
						<Name>v_weekendExcessExport_MWh</Name>
						<X>1640</X>
						<Y>1160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623480</Id>
						<Name>data_netbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1010</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623645</Id>
						<Name>data_netbelastingDuurkrommeVorige_kW</Name>
						<X>47</X>
						<Y>1030</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623647</Id>
						<Name>data_summerWeekNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1050</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623649</Id>
						<Name>data_winterWeekNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1070</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623651</Id>
						<Name>data_daytimeNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1090</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623653</Id>
						<Name>data_nighttimeNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623655</Id>
						<Name>data_weekdayNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111623657</Id>
						<Name>data_weekendNetbelastingDuurkromme_kW</Name>
						<X>47</X>
						<Y>1150</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>DataSet</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718111648009</Id>
						<Name>acc_annualElectricityBalance_kW</Name>
						<X>400</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718895936296</Id>
						<Name>v_currentLocalNodalPrice_eurpkWh</Name>
						<X>50</X>
						<Y>770</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718895937973</Id>
						<Name>v_currentTotalNodalPrice_eurpkWh</Name>
						<X>50</X>
						<Y>790</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1718896257049</Id>
						<Name>v_currentParentNodalPrice_eurpkWh</Name>
						<Description>Given a default value for 'top' agents, this can be seen as average market price of electricity.</Description>
						<X>50</X>
						<Y>750</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.1</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719300900648</Id>
						<Name>v_totalInstalledWindPower_kW</Name>
						<X>1044</X>
						<Y>344</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719300900650</Id>
						<Name>v_totalInstalledPVPower_kW</Name>
						<X>1044</X>
						<Y>364</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1719301262027</Id>
						<Name>v_electricityYieldForecast_fr</Name>
						<X>1044</X>
						<Y>382</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1721228582916</Id>
						<Name>acc_DLR_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>400</X>
						<Y>810</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>ZeroAccumulator</Type>
							<InitialValue Class="CodeValue">
								<Code>new ZeroAccumulator(true, energyModel.p_timeStep_h, 8760);</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1722498291003</Id>
						<Name>v_currentDLRCapacity_kW</Name>
						<X>50</X>
						<Y>610</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730975924463</Id>
						<Name>v_currentLoad_kW</Name>
						<X>50</X>
						<Y>530</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976446471</Id>
						<Name>v_totalImport_MWh</Name>
						<X>670</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976463797</Id>
						<Name>v_totalExport_MWh</Name>
						<X>670</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976490333</Id>
						<Name>v_summerWeekImport_MWh</Name>
						<X>990</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976490335</Id>
						<Name>v_summerWeekExport_MWh</Name>
						<X>990</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976548435</Id>
						<Name>v_winterWeekImport_MWh</Name>
						<X>990</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976548437</Id>
						<Name>v_winterWeekExport_MWh</Name>
						<X>990</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976701506</Id>
						<Name>v_daytimeImport_MWh</Name>
						<X>1330</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976701508</Id>
						<Name>v_daytimeExport_MWh</Name>
						<X>1330</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976724285</Id>
						<Name>v_weekdayImport_MWh</Name>
						<X>1640</X>
						<Y>1000</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976724287</Id>
						<Name>v_weekdayExport_MWh</Name>
						<X>1640</X>
						<Y>1020</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976750428</Id>
						<Name>v_nighttimeImport_MWh</Name>
						<X>1330</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976750430</Id>
						<Name>v_nighttimeExport_MWh</Name>
						<X>1330</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976750432</Id>
						<Name>v_weekendImport_MWh</Name>
						<X>1640</X>
						<Y>1100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1730976750434</Id>
						<Name>v_weekendExport_MWh</Name>
						<X>1640</X>
						<Y>1120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658477613290</Id>
						<Name>p_gridNodeID</Name>
						<X>50</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658477613288</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658480610309</Id>
						<Name>p_parentNodeID</Name>
						<X>50</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658480610307</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658492575878</Id>
						<Name>p_nodeType</Name>
						<X>50</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridNodeType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658492575876</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658492864101</Id>
						<Name>p_energyCarrier</Name>
						<X>50</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_EnergyCarriers</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658492864099</Id>
								<Label>p_energyType</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658493496878</Id>
						<Name>p_capacity_kW</Name>
						<X>50</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1658493496876</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660635056957</Id>
						<Name>p_transportBuffer</Name>
						<X>50</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EAStorageHeat</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1660635056955</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1664465663237</Id>
						<Name>p_ownerGridOperator</Name>
						<X>50</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GridOperator</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>null</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1664465663235</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1664466130593</Id>
						<Name>p_gridNodeOwnerID</Name>
						<X>50</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1664466130591</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1683816606479</Id>
						<Name>b_transportBufferValid</Name>
						<X>50</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1683816606477</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1698752314374</Id>
						<Name>p_longitude</Name>
						<X>50</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1698752314372</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1698752314385</Id>
						<Name>p_latitude</Name>
						<X>50</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1698752314383</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1705581809373</Id>
						<Name>gisRegion</Name>
						<X>50</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GISRegion</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1705581809371</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1705586150313</Id>
						<Name>p_description</Name>
						<X>50</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1705586150311</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1707680312891</Id>
						<Name>p_realCapacityAvailable</Name>
						<Description>This value is set as true in the loader if the capacity of the grid node is available, if not, it should be set as false!</Description>
						<X>50</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1707680312889</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1709911209033</Id>
						<Name>p_nodeStatus</Name>
						<Description>Shows if the node is active or not active</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1709911209031</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718566355120</Id>
						<Name>p_uniqueColor</Name>
						<Description>Color used to color net neighbours. Default = gray, so all unknown net neighbours and gridnodes become gray.</Description>
						<X>70</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Color</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>gray</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1718566355118</Id>
								<EditorContolType>COLOR_PICKER</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1718896438696</Id>
						<Name>p_localNodalPricingFactor_eurpkWh</Name>
						<X>50</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.20</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1718896438694</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721994587455</Id>
						<Name>p_defaultLineColor</Name>
						<X>70</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Color</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>green.brighter()</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1721994587453</Id>
								<EditorContolType>COLOR_PICKER</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1721994587458</Id>
						<Name>p_defaultFillColor</Name>
						<X>70</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Color</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="LengthUnits">METER</UnitOfValue>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>green</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1721994587456</Id>
								<EditorContolType>COLOR_PICKER</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1722268330646</Id>
						<Name>p_localNodalPricingTreshold_fr</Name>
						<X>50</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>0.5</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1722268330644</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1726583647250</Id>
						<Name>p_originalCapacity_kW</Name>
						<X>170</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1726583647248</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1749630347422</Id>
						<Name>p_hasProfileData</Name>
						<X>50</X>
						<Y>470</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1749630347420</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664536960213</Id>
						<Name>c_connectedEnergyAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>290</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664536960219</Id>
						<Name>c_connectedStorageAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>300</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAStorage</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664536960221</Id>
						<Name>c_connectedConsumptionAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>300</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConsumption</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664536960223</Id>
						<Name>c_connectedProductionAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>300</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAProduction</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1664536960226</Id>
						<Name>c_connectedConversionAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>300</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EAConversion</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1666560357503</Id>
						<Name>c_connectedGridConnections</Name>
						<X>540</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridConnection</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1676567375230</Id>
						<Name>c_energyCoops</Name>
						<X>540</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>EnergyCoop</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1716885463799</Id>
						<Name>c_connectedGridNodes</Name>
						<X>540</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="default" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1658495336616</Id>
						<Name>f_connectToParentNode</Name>
						<X>780</X>
						<Y>80</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>GridNode myParentNode = findFirst(energyModel.pop_gridNodes, p-&gt;p.p_gridNodeID.equals(p_parentNodeID));&#xD;
if( myParentNode instanceof GridNode ) {&#xD;
	//superConnection.connectTo(myParentNode);&#xD;
	myParentNode.f_connectToChild(this);&#xD;
}&#xD;
&#xD;
GridOperator myParentGridOperator = findFirst(energyModel.pop_gridOperators, p-&gt;p.p_actorID.equals(p_gridNodeOwnerID)) ;&#xD;
if( myParentGridOperator instanceof GridOperator) {&#xD;
	p_ownerGridOperator = myParentGridOperator;&#xD;
	//superConnection.connectTo(myParentGridOperator);&#xD;
	myParentGridOperator.f_connectToChild(this, p_energyCarrier);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1658495630251</Id>
						<Name>f_connectToChild</Name>
						<X>780</X>
						<Y>100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>Agent</Type>
						</Parameter>
						<Body>//subConnections.connectTo(ConnectingChildNode);&#xD;
&#xD;
if ( ConnectingChildNode instanceof GridNode) {&#xD;
	 c_connectedGridNodes.add( (GridNode)ConnectingChildNode );&#xD;
}&#xD;
&#xD;
if ( ConnectingChildNode instanceof GridConnection) {&#xD;
	 c_connectedGridConnections.add( (GridConnection)ConnectingChildNode );&#xD;
}&#xD;
&#xD;
if ( ConnectingChildNode instanceof EnergyCoop) {&#xD;
	 c_energyCoops.add( (EnergyCoop)ConnectingChildNode );&#xD;
}&#xD;
&#xD;
/*if( ConnectingChildNode instanceof EnergyAsset ) {&#xD;
	J_EA j_ea = (J_EA) ConnectingChildNode;&#xD;
	c_connectedEnergyAssets.add(j_ea);&#xD;
	if (j_ea instanceof J_EAConsumption) {&#xD;
		c_connectedConsumptionAssets.add((J_EAConsumption)j_ea);&#xD;
	} else if (j_ea instanceof J_EAProduction ) {&#xD;
		c_connectedProductionAssets.add((J_EAProduction)j_ea);&#xD;
	} else if (j_ea instanceof J_EAStorage ) {&#xD;
		c_connectedStorageAssets.add((J_EAStorage)j_ea);&#xD;
		if (j_ea instanceof J_EAStorageHeat) {&#xD;
			p_transportBuffer = (J_EAStorageHeat)j_ea;&#xD;
		}&#xD;
	} else if (j_ea instanceof J_EAConversion) {&#xD;
		c_connectedConversionAssets.add((J_EAConversion)j_ea);&#xD;
//	if (EA.j_ea instanceof J_EAConversionGasBurner || EA.j_ea instanceof J_EAConversionHeatPump || EA.j_ea instanceof J_EAConversionHeatDeliverySet ) {&#xD;
	//	p_HeatingAsset = EA;&#xD;
//		//traceln("heatingAsset class " + p_spaceHeatingAsset.getClass().toString());&#xD;
//	}&#xD;
	} else {&#xD;
		traceln("f_connectToChild in EnergyAsset: Exception! EnergyAsset " + ConnectingChildNode.getId() + " is of unknown type or null! ");&#xD;
	}&#xD;
}*/&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660122738707</Id>
						<Name>f_sumLoads</Name>
						<X>780</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_currentLoad_kW = 0;&#xD;
&#xD;
// determine the net energy flows from all subconnections by nodetype&#xD;
&#xD;
for( GridNode GN : c_connectedGridNodes ) {&#xD;
	v_currentLoad_kW += GN.v_currentLoad_kW;&#xD;
}&#xD;
&#xD;
for( GridConnection GC : c_connectedGridConnections) {&#xD;
	v_currentLoad_kW += GC.fm_currentBalanceFlows_kW.get(p_energyCarrier);&#xD;
}&#xD;
&#xD;
&#xD;
/*if( p_energyType == OL_EnergyCarriers.ELECTRICITY ){&#xD;
	v_electricLoadRatioExclBattery = v_currentLoadElectricity_kW / p_capacity_kW;&#xD;
}*/&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660216693598</Id>
						<Name>f_nodeMetering</Name>
						<X>780</X>
						<Y>240</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//v_averageAbsoluteLoadElectricity_kW = ( v_electricityDrawn_kWh + v_electricityDelivered_kWh ) / energyModel.t_h;&#xD;
//v_loadFactor_fr = v_averageAbsoluteLoadElectricity_kW / abs(v_peakLoadAbsoluteElectricity_kW);&#xD;
&#xD;
if (energyModel.v_isRapidRun){&#xD;
	//v_maxConnectionLoad_fr = max(v_maxConnectionLoad_fr, abs(v_currentPowerElectricity_kW / v_allowedCapacity_kW ));&#xD;
	&#xD;
	/*if (energyModel.b_enableDLR) {&#xD;
		acc_annualElectricityBalance_kW.addStep(100*v_currentLoadElectricity_kW/ (p_capacity_kW * energyModel.v_currentDLRfactor_fr));&#xD;
		//acc_DLR_kW.addStep( p_capacity_kW * energyModel.v_currentDLRfactor_fr);&#xD;
	} else {&#xD;
		acc_annualElectricityBalance_kW.addStep(v_currentLoadElectricity_kW;&#xD;
	}*/&#xD;
	&#xD;
	if ( ((Double)v_currentLoad_kW).isNaN() ){&#xD;
		traceln("v_currentLoad_kW is NaN! On GridNode %s, time %s h", this, energyModel.t_h);&#xD;
		pauseSimulation();&#xD;
	}&#xD;
	&#xD;
	if (p_energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
		acc_annualElectricityBalance_kW.addStep( v_currentLoad_kW);&#xD;
	}&#xD;
	&#xD;
	double currentImport_MWh = max(0, v_currentLoad_kW) * energyModel.p_timeStep_h / 1000;&#xD;
	double currentExport_MWh = max(0, -v_currentLoad_kW) * energyModel.p_timeStep_h / 1000;&#xD;
	double currentExcessImport_MWh = max(0, v_currentLoad_kW - p_capacity_kW) * energyModel.p_timeStep_h / 1000;&#xD;
	double currentExcessExport_MWh = max(0, -v_currentLoad_kW - p_capacity_kW) * energyModel.p_timeStep_h / 1000;&#xD;
	&#xD;
	v_totalImport_MWh += currentImport_MWh;&#xD;
	v_totalExport_MWh += currentExport_MWh;&#xD;
	v_annualExcessImport_MWh += currentExcessImport_MWh;&#xD;
	v_annualExcessExport_MWh += currentExcessExport_MWh;&#xD;
	&#xD;
	// Year&#xD;
	if (energyModel.t_h % 1 == 0) {&#xD;
		data_totalLoad_kW.add(energyModel.t_h, v_currentLoad_kW);&#xD;
	}&#xD;
	// SummerWeek&#xD;
	if (energyModel.b_isSummerWeek) {&#xD;
		v_summerWeekImport_MWh += currentImport_MWh;&#xD;
		v_summerWeekExport_MWh += currentExport_MWh;&#xD;
		v_summerWeekExcessImport_MWh += currentExcessImport_MWh;&#xD;
		v_summerWeekExcessExport_MWh += currentExcessExport_MWh;&#xD;
		&#xD;
		data_summerWeekLoad_kW.add(energyModel.t_h-energyModel.p_runStartTime_h, v_currentLoad_kW);&#xD;
	}&#xD;
	// Winterweek&#xD;
	if (energyModel.b_isWinterWeek) {&#xD;
		v_winterWeekImport_MWh += currentImport_MWh;&#xD;
		v_winterWeekExport_MWh += currentExport_MWh;&#xD;
		v_winterWeekExcessImport_MWh += currentExcessImport_MWh;&#xD;
		v_winterWeekExcessExport_MWh += currentExcessExport_MWh;&#xD;
		&#xD;
		data_winterWeekLoad_kW.add(energyModel.t_h-energyModel.p_runStartTime_h, v_currentLoad_kW);&#xD;
	}&#xD;
	// Daytime&#xD;
	if (energyModel.t_h % 24 &gt; 6 &amp;&amp; energyModel.t_h % 24 &lt; 18) {&#xD;
		v_daytimeImport_MWh += currentImport_MWh;&#xD;
		v_daytimeExport_MWh += currentExport_MWh;&#xD;
		v_daytimeExcessImport_MWh += currentExcessImport_MWh;&#xD;
		v_daytimeExcessExport_MWh += currentExcessExport_MWh;&#xD;
	}&#xD;
	// Weekdays&#xD;
	if ((energyModel.t_h+(energyModel.v_dayOfWeek1jan-1)*24) % (24*7) &lt; (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h&#xD;
		v_weekdayImport_MWh += currentImport_MWh;&#xD;
		v_weekdayExport_MWh += currentExport_MWh;&#xD;
		v_weekdayExcessImport_MWh += currentExcessImport_MWh;&#xD;
		v_weekdayExcessExport_MWh += currentExcessExport_MWh;&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666556555538</Id>
						<Name>f_setCongestionTariff</Name>
						<X>780</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>price_eurpkWh</Name>
							<Type>double</Type>
						</Parameter>
						<Body>for (GridConnection gc: c_connectedGridConnections){&#xD;
	//traceln("Gc "+ gc.toString() + ", price "+ price_eurpkWh + ", allowance "+ allowance_kW +".");&#xD;
	gc.p_owner.v_currentNodalPrice_eurpkWh = price_eurpkWh;&#xD;
}&#xD;
for (EnergyCoop e: c_energyCoops){&#xD;
	e.v_currentNodalPrice_eurpkWh = price_eurpkWh;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1666560316436</Id>
						<Name>f_resetCongestionTariffs</Name>
						<Description>Gridoperator roept deze functie alleen aan als deze node vorige tijdstap congested was maar nu niet meer.</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>780</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for (GridConnection gc: c_connectedGridConnections){&#xD;
	ConnectionOwner owner = ((ConnectionOwner)gc.l_ownerActor.getConnectedAgent());&#xD;
	owner.v_currentNodalPrice_eurpkWh = 0;&#xD;
}&#xD;
for (EnergyCoop e: c_energyCoops){&#xD;
	e.v_currentNodalPrice_eurpkWh = 0;&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1676387466304</Id>
						<Name>f_instantiateEnergyAssets</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>780</X>
						<Y>60</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//traceln("asset " + p_energyAssetList);&#xD;
&#xD;
if( p_energyAssetList != null) {&#xD;
	for( JsonNode l : p_energyAssetList ) {&#xD;
		OL_EACategories assetCategory = OL_EACategories.valueOf(l.required( "category" ).textValue());&#xD;
		switch( assetCategory )  {		&#xD;
			case STORAGE:&#xD;
				//EnergyAsset storageAsset = main.add_pop_energyAssets();&#xD;
				//storageAsset.set_p_parentAgentID( this.p_gridNodeID );&#xD;
				OL_EnergyAssetType assetType = ( OL_EnergyAssetType.valueOf(l.required( "type" ).textValue()));&#xD;
				//storageAsset.set_p_defaultEnergyAssetPresetName(l.required( "name" ).textValue());&#xD;
				if( assetType == OL_EnergyAssetType.STORAGE_HEAT){&#xD;
				    double capacityHeat_kW = l.path( "capacityHeat_kW").doubleValue();&#xD;
					double lossFactor_WpK = l.path( "lossFactor_WpK" ).doubleValue();&#xD;
					double heatCapacity_JpK = l.path( "heatCapacity_JpK" ).doubleValue();&#xD;
					double minTemperature_degC = l.path( "minTemp_degC" ).asDouble(40.0); // provide default values&#xD;
					double maxTemperature_degC = l.path( "maxTemp_degC" ).asDouble(90.0);&#xD;
					double setTemperature_degC = l.path( "setTemp_degC" ).asDouble(60.0);&#xD;
					double initialTemperature_degC = l.path( "initialTemperature_degC" ).doubleValue();&#xD;
					String ambientTempType2 = l.path( "ambientTempType" ).textValue();&#xD;
					&#xD;
					// minTemperature_degC = 35; // TO DELETE TEMP FIX&#xD;
					// setTemperature_degC = uniform_discr(38, 45); // TO DELETE TEMP FIX&#xD;
					// initialTemperature_degC = uniform_discr(70,80) * 1.0; // TO DELETE TEMP FIX&#xD;
					// heatCapacity_JpK = heatCapacity_JpK * uniform(0.7, 1.3); // TO DELETE TEMP FIX&#xD;
					traceln("heatstorage asset initialisation check! minTemp = "+minTemperature_degC+", maxTemperature_degC = "+maxTemperature_degC+", setTemp_degC = "+ setTemperature_degC+", initialTemperature_degC = "+initialTemperature_degC);&#xD;
					&#xD;
					//traceln("Heat Storage init: minTemperature = "+minTemperature_degC+", maxTemperature_degC = "+maxTemperature_degC+", setTemperature_degC = "+setTemperature_degC+", initialTemperature_degC = "+initialTemperature_degC);&#xD;
					&#xD;
					&#xD;
					p_transportBuffer = new J_EAStorageHeat((Agent)this, OL_EAStorageTypes.HEATBUFFER, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, initialTemperature_degC, minTemperature_degC, maxTemperature_degC, setTemperature_degC, heatCapacity_JpK, ambientTempType2);	&#xD;
					//J_EAStorageHeat(Agent parentAgent, OL_EAStorageTypes heatStorageType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, String ambientTempType ) {&#xD;
					//p_transportBuffer = storageAsset.j_ea;&#xD;
					p_transportBuffer.updateAmbientTemperature( energyModel.p_undergroundTemperature_degC );&#xD;
					if(heatCapacity_JpK &gt; 0 &amp; capacityHeat_kW &gt; 0) {&#xD;
						b_transportBufferValid = true;&#xD;
					}&#xD;
				}&#xD;
				else{&#xD;
					traceln("F_instantiateEnergyAssets: ERROR, storage asset type not available");&#xD;
				}&#xD;
				//storageAsset.f_connectToParentNode( this );&#xD;
				//main.c_storageAssets.add(storageAsset);&#xD;
&#xD;
			break;&#xD;
			default:&#xD;
				traceln("not a valid energy asset category." + assetCategory);&#xD;
			break;&#xD;
		}&#xD;
	}&#xD;
//traceln("GridConnection "+this.p_gridNodeID+" has finished initializing its energyAssets!");&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1688370981599</Id>
						<Name>f_calculateEnergyBalance</Name>
						<X>780</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>f_sumLoads();&#xD;
// Low-pass filtered grid load&#xD;
//double lowPassFraction = min(1,1*1.2*energyModel.p_timeStep_h); // smaller value results in more filtering&#xD;
&#xD;
if (p_energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
	v_currentLoadElectricityLowPassed_kW += v_lowPassFactor_fr * ( v_currentLoad_kW - v_currentLoadElectricityLowPassed_kW );&#xD;
	v_filteredLoadCongestionPricing_kW += v_lowPassFactorCongestionPricing_fr * ( v_currentLoad_kW - v_filteredLoadCongestionPricing_kW);&#xD;
	//v_currentLocalNodalPrice_eurpkWh = v_filteredLoadCongestionPricing_kW / p_capacity_kW * p_localNodalPricingFactor_eurpkWh;&#xD;
	v_currentDLRCapacity_kW = energyModel.v_currentDLRfactor_fr * p_capacity_kW;&#xD;
	v_currentLocalNodalPrice_eurpkWh = signum(v_filteredLoadCongestionPricing_kW) * max(0,abs(v_filteredLoadCongestionPricing_kW) - v_currentDLRCapacity_kW * p_localNodalPricingTreshold_fr) / ((1-p_localNodalPricingTreshold_fr) * v_currentDLRCapacity_kW) * p_localNodalPricingFactor_eurpkWh;&#xD;
}&#xD;
&#xD;
//v_currentLocalNodalPrice_eurpkWh = (abs(v_filteredLoadCongestionPricing_kW / currentNodeCapacity_kW) - p_localNodalPricingTreshold_fr) / (1-p_localNodalPricingTreshold_fr) * p_localNodalPricingFactor_eurpkWh;&#xD;
&#xD;
if (energyModel.v_isRapidRun) {&#xD;
	if (p_energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
		if (abs(v_currentLoadElectricityLowPassed_kW) &gt; p_capacity_kW) {&#xD;
			//traceln("Overloaded gridNode %s! %s kW", p_gridNodeID, abs(v_currentLoadElectricityLowPassed_kW));&#xD;
			v_totalTimeOverloaded_h	+= energyModel.p_timeStep_h;&#xD;
		}&#xD;
		if( abs( v_currentLoadElectricityLowPassed_kW ) &gt; abs(v_peakLoadFilteredElectricity_kW) ) { // store maximum absolute load, but retain sign!&#xD;
			v_peakLoadFilteredElectricity_kW = ( v_currentLoadElectricityLowPassed_kW );&#xD;
			v_timeOfPeakLoadFiltered_h = energyModel.t_h;&#xD;
		}&#xD;
		if( v_currentLoadElectricityLowPassed_kW &lt; v_peakNegLoadElectricity_kW ) { // store peak negative load and time&#xD;
			v_peakNegLoadElectricity_kW = v_currentLoadElectricityLowPassed_kW ;&#xD;
			v_timeOfPeakNegLoadFiltered_h = energyModel.t_h;&#xD;
		}&#xD;
		if( v_currentLoadElectricityLowPassed_kW &gt; v_peakPosLoadElectricity_kW ) { // store peak positive load and time&#xD;
			v_peakPosLoadElectricity_kW = v_currentLoadElectricityLowPassed_kW ;&#xD;
			v_timeOfPeakPosLoadFiltered_h = energyModel.t_h;&#xD;
		}&#xD;
	}&#xD;
&#xD;
	if( abs( v_currentLoad_kW ) &gt; abs(v_peakLoadAbsolute_kW) ) { // store maximum absolute load, but retain sign!&#xD;
		v_peakLoadAbsolute_kW = v_currentLoad_kW;&#xD;
		//v_timeOfPeakLoad_h = energyModel.t_h;&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	data_liveLoad_kW.update();&#xD;
	data_liveCapacityDemand_kW.update();&#xD;
	data_liveCapacitySupply_kW.update();&#xD;
}&#xD;
/*&#xD;
if (p_energyType.equals(OL_EnergyCarriers.HEAT) &amp; b_transportBufferValid ) { // Thermal load unbalance goes into transportBuffer&#xD;
//	double v_powerFraction_fr = Double.isNaN( -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW() )? 0 : -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW();&#xD;
	//traceln("GridNode Heat v_currentLoadHeat_kW: %s", v_currentLoadHeat_kW);&#xD;
	double v_powerFraction_fr = -v_currentLoadHeat_kW / p_transportBuffer.getHeatCapacity_kW();&#xD;
	&#xD;
	//p_transportBuffer.operate(v_powerFraction_fr);&#xD;
	//traceln("DistrictHeating network heatcapacity = "+ p_transportBuffer.getHeatCapacity_kW()+" kW, water temperature " + p_transportBuffer.getCurrentTemperature() + " deg C, buffer power fraction " + v_powerFraction_fr * 100 + " %, transportbuffer HeatCapacity_kW " + p_transportBuffer.getHeatCapacity_kW());&#xD;
	p_transportBuffer.f_updateAllFlows(v_powerFraction_fr);&#xD;
	//traceln("DistrictHeating Grid temperature: %s degC", p_transportBuffer.getCurrentTemperature());&#xD;
	//traceln("DistrictHeating network water temperature " + p_transportBuffer.getCurrentTemperature() + " deg C, buffer power fraction " + v_powerFraction_fr * 100 + " %, transportbuffer HeatCapacity_kW " + p_transportBuffer.getHeatCapacity_kW());&#xD;
} else if(abs(v_currentLoadHeat_kW)&gt;0.001) {&#xD;
	traceln("Non-zero heat-load on district heating network without valid transport buffer!");&#xD;
}&#xD;
*/&#xD;
//traceln("GridNode " + p_gridNodeID + " update at time " + time(HOUR));&#xD;
f_nodeMetering();&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1688372319365</Id>
						<Name>f_addGridBatteryLoad</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>780</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>&#xD;
for( Agent a : subConnections.getConnections() ) {&#xD;
	if ( a instanceof GCGridBattery){&#xD;
		v_currentLoadElectricity_kW += ((GCGridBattery)a).v_currentPowerElectricity_kW;&#xD;
	}	&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1698919552330</Id>
						<Name>f_resetStates</Name>
						<X>780</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// Current status&#xD;
v_currentLoad_kW = 0;&#xD;
v_currentLoadElectricityLowPassed_kW = 0;&#xD;
v_currentDLRCapacity_kW = p_capacity_kW;&#xD;
v_congested = false;&#xD;
v_currentCongestionPrice_eurpkWh = 0;&#xD;
v_filteredLoadCongestionPricing_kW = 0;&#xD;
&#xD;
// Performance variables&#xD;
v_peakLoadAbsolute_kW = 0;&#xD;
//v_averageAbsoluteLoadElectricity_kW = 0;&#xD;
//v_loadFactor_fr = 0;&#xD;
v_timeOfPeakLoadFiltered_h = 0;&#xD;
v_timeOfPeakNegLoadFiltered_h = 0;&#xD;
v_timeOfPeakPosLoadFiltered_h = 0;&#xD;
v_peakPosLoadElectricity_kW = 0;&#xD;
v_peakNegLoadElectricity_kW = 0;&#xD;
v_peakLoadFilteredElectricity_kW = 0;&#xD;
v_timeOfPeakLoadFiltered_h = 0;&#xD;
v_totalTimeOverloaded_h = 0;&#xD;
&#xD;
v_totalImport_MWh = 0;&#xD;
v_totalExport_MWh = 0;&#xD;
v_annualExcessImport_MWh = 0;&#xD;
v_annualExcessExport_MWh = 0;&#xD;
&#xD;
v_summerWeekImport_MWh = 0;&#xD;
v_summerWeekExport_MWh = 0;&#xD;
v_summerWeekExcessImport_MWh = 0;&#xD;
v_summerWeekExcessExport_MWh = 0;&#xD;
&#xD;
v_winterWeekImport_MWh = 0;&#xD;
v_winterWeekExport_MWh = 0;&#xD;
v_winterWeekExcessImport_MWh = 0;&#xD;
v_winterWeekExcessExport_MWh = 0;&#xD;
&#xD;
v_daytimeImport_MWh = 0;&#xD;
v_daytimeExport_MWh = 0;&#xD;
v_daytimeExcessImport_MWh = 0;&#xD;
v_daytimeExcessExport_MWh = 0;&#xD;
&#xD;
v_nighttimeImport_MWh = 0;&#xD;
v_nighttimeExport_MWh = 0;&#xD;
v_nighttimeExcessImport_MWh = 0;&#xD;
v_nighttimeExcessExport_MWh = 0;&#xD;
&#xD;
v_weekdayImport_MWh = 0;&#xD;
v_weekdayExport_MWh = 0;&#xD;
v_weekdayExcessImport_MWh = 0;&#xD;
v_weekdayExcessExport_MWh = 0;&#xD;
&#xD;
v_weekendImport_MWh = 0;&#xD;
v_weekendExport_MWh = 0;&#xD;
v_weekendExcessImport_MWh = 0;&#xD;
v_weekendExcessExport_MWh = 0;&#xD;
&#xD;
// Reset Accumulators&#xD;
acc_annualElectricityBalance_kW.reset();</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713181018774</Id>
						<Name>f_calculateKPIs</Name>
						<X>780</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>f_getDuurkromme();&#xD;
&#xD;
// Calcs nighttime&#xD;
v_nighttimeImport_MWh = v_totalImport_MWh - v_daytimeExcessImport_MWh;&#xD;
v_nighttimeExport_MWh = v_totalExport_MWh - v_daytimeExcessExport_MWh;&#xD;
v_nighttimeExcessImport_MWh = v_annualExcessImport_MWh - v_daytimeExcessImport_MWh;&#xD;
v_nighttimeExcessExport_MWh = v_annualExcessExport_MWh - v_daytimeExcessExport_MWh;&#xD;
&#xD;
// Calcs weekend&#xD;
v_weekendImport_MWh = v_totalImport_MWh - v_weekdayImport_MWh;&#xD;
v_weekendExport_MWh = v_totalExport_MWh - v_weekdayExport_MWh;&#xD;
v_weekendExcessImport_MWh = v_annualExcessImport_MWh - v_weekdayExcessImport_MWh;&#xD;
v_weekendExcessExport_MWh = v_annualExcessExport_MWh - v_weekdayExcessExport_MWh;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>DataSet</ReturnType>
						<Id>1718111675053</Id>
						<Name>f_getDuurkromme</Name>
						<X>800</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>J_LoadDurationCurves j_duurkrommes = new J_LoadDurationCurves(acc_annualElectricityBalance_kW.getTimeSeries_kW(), energyModel);&#xD;
&#xD;
data_netbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveTotal_kW;&#xD;
data_summerWeekNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveSummer_kW;&#xD;
data_winterWeekNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveWinter_kW;&#xD;
data_daytimeNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveDaytime_kW;&#xD;
data_nighttimeNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveNighttime_kW;&#xD;
data_weekdayNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveWeekday_kW;&#xD;
data_weekendNetbelastingDuurkromme_kW = j_duurkrommes.ds_loadDurationCurveWeekend_kW;&#xD;
 &#xD;
return data_netbelastingDuurkromme_kW;&#xD;
/*&#xD;
int runStartIdx = 0;// (int)(energyModel.p_runStartTime_h/energyModel.p_timeStep_h);&#xD;
int runEndIdx = (int)((energyModel.p_runEndTime_h-energyModel.p_runStartTime_h)/energyModel.p_timeStep_h);&#xD;
int nRunIdxs = runEndIdx - runStartIdx;&#xD;
&#xD;
boolean firstRun = true;&#xD;
if (data_netbelastingDuurkromme_kW != null) {	&#xD;
	if (data_netbelastingDuurkrommeVorige_kW != null) { // Not second run either!&#xD;
		data_netbelastingDuurkrommeVorige_kW.reset();&#xD;
	} else {&#xD;
		data_netbelastingDuurkrommeVorige_kW = new DataSet(nRunIdxs);&#xD;
	}&#xD;
	firstRun = false;&#xD;
} else {&#xD;
	data_netbelastingDuurkromme_kW = new DataSet(nRunIdxs);&#xD;
	data_summerWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));&#xD;
	data_winterWeekNetbelastingDuurkromme_kW = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));&#xD;
	data_daytimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(nRunIdxs/2 + 24 / energyModel.p_timeStep_h));&#xD;
	data_nighttimeNetbelastingDuurkromme_kW = new DataSet(roundToInt(nRunIdxs/2 + 24 / energyModel.p_timeStep_h));&#xD;
	data_weekdayNetbelastingDuurkromme_kW = new DataSet(roundToInt(nRunIdxs/7*5 + 24 / energyModel.p_timeStep_h));&#xD;
	data_weekendNetbelastingDuurkromme_kW = new DataSet(roundToInt(nRunIdxs/7*2 + 24 / energyModel.p_timeStep_h));&#xD;
}&#xD;
&#xD;
// We copy our annual array to preserve it as a time-series and make new arrays for the others&#xD;
double[] netLoadArrayAnnual_kW = acc_annualElectricityBalance_kW.getTimeSeries().clone(); &#xD;
&#xD;
int arraySize = netLoadArrayAnnual_kW.length;&#xD;
&#xD;
if (energyModel.b_enableDLR) {&#xD;
	double[] annualDLRarray = energyModel.acc_totalDLRfactor_f.getTimeSeries().clone();&#xD;
	for (int i = 0; i &lt; arraySize; i++) {&#xD;
		netLoadArrayAnnual_kW[i] = 100 * netLoadArrayAnnual_kW[i] / (p_capacity_kW * max(energyModel.v_minDLRfactor_fr,annualDLRarray[i]));&#xD;
	}&#xD;
}&#xD;
//traceln("annaualElectricityBalance first element: %s, last element: %s", netLoadArrayAnnual_kW[0], netLoadArrayAnnual_kW[arraySize-1]);&#xD;
&#xD;
double[] netLoadArraySummerweek_kW = new double[roundToInt(24*7 / energyModel.p_timeStep_h)];&#xD;
double[] netLoadArrayWinterweek_kW= new double[roundToInt(24*7 / energyModel.p_timeStep_h)];&#xD;
double[] netLoadArrayDaytime_kW = new double[roundToInt(nRunIdxs/2 + 24/ energyModel.p_timeStep_h)];&#xD;
double[] netLoadArrayNighttime_kW = new double[roundToInt(nRunIdxs/2 + 24/ energyModel.p_timeStep_h)];&#xD;
// For different years the amount of weekdays and weekend days may be different, so the size will be variable for now&#xD;
ArrayList&lt;Double&gt; listNetLoadArrayWeekday_kW = new ArrayList&lt;&gt;(); &#xD;
ArrayList&lt;Double&gt; listNetLoadArrayWeekend_kW = new ArrayList&lt;&gt;();&#xD;
&#xD;
int i_winter=0;&#xD;
int i_summer=0;&#xD;
int i_day=0;&#xD;
int i_night=0;&#xD;
int i_weekday=0;&#xD;
int i_weekend=0;&#xD;
&#xD;
//double[] annualElectricityBalanceTimeSeries_kW = acc_annualElectricityBalance_kW.getTimeSeries();&#xD;
&#xD;
for(int i=0; i&lt;nRunIdxs; i++) {&#xD;
	if (!firstRun) {&#xD;
		// First we make sure to store our previous Load Curve&#xD;
		data_netbelastingDuurkrommeVorige_kW.add(i*energyModel.p_timeStep_h,data_netbelastingDuurkromme_kW.getY(i));		&#xD;
	}&#xD;
	// summer/winter&#xD;
	if ((energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h) % 8760 &gt; energyModel.p_startHourSummerWeek &amp;&amp; (energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h) % 8760 &lt;= energyModel.p_startHourSummerWeek+24*7) {&#xD;
		netLoadArraySummerweek_kW[i_summer]=-netLoadArrayAnnual_kW[i];&#xD;
		i_summer++;&#xD;
	}&#xD;
	if ((energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h) % 8760 &gt; energyModel.p_startHourWinterWeek &amp;&amp; (energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h) % 8760 &lt;= energyModel.p_startHourWinterWeek+24*7) {&#xD;
		netLoadArrayWinterweek_kW[i_winter]=-netLoadArrayAnnual_kW[i];&#xD;
		i_winter++;&#xD;
	}&#xD;
	// day/night&#xD;
	if (i*energyModel.p_timeStep_h % 24 &gt; 6 &amp;&amp; i*energyModel.p_timeStep_h % 24 &lt;= 18) { //daytime&#xD;
		netLoadArrayDaytime_kW[i_day]=-netLoadArrayAnnual_kW[i];&#xD;
		i_day++;&#xD;
	} else {&#xD;
		netLoadArrayNighttime_kW[i_night]=-netLoadArrayAnnual_kW[i];&#xD;
		i_night++;&#xD;
	}&#xD;
	//Weekday/weekend&#xD;
	if (((energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h+ 24*(energyModel.v_dayOfWeek1jan-1)) % (24*7)) &lt; (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h&#xD;
		listNetLoadArrayWeekday_kW.add(-netLoadArrayAnnual_kW[i]);&#xD;
		i_weekday++;&#xD;
	} else {&#xD;
		listNetLoadArrayWeekend_kW.add(-netLoadArrayAnnual_kW[i]);&#xD;
		i_weekend++;&#xD;
	}&#xD;
	&#xD;
}&#xD;
netLoadArrayDaytime_kW = Arrays.copyOfRange(netLoadArrayDaytime_kW,0,i_day);&#xD;
netLoadArrayNighttime_kW = Arrays.copyOfRange(netLoadArrayNighttime_kW,0,i_night);&#xD;
&#xD;
&#xD;
// Now we have the size of the weekday &amp; weekend arrays.&#xD;
double[] netLoadArrayWeekday_kW = new double[listNetLoadArrayWeekday_kW.size()];&#xD;
double[] netLoadArrayWeekend_kW = new double[listNetLoadArrayWeekend_kW.size()];&#xD;
for (int i = 0; i &lt; listNetLoadArrayWeekday_kW.size(); i++) {&#xD;
	netLoadArrayWeekday_kW[i] = listNetLoadArrayWeekday_kW.get(i);&#xD;
}&#xD;
for (int i = 0; i &lt; listNetLoadArrayWeekend_kW.size(); i++) {&#xD;
	netLoadArrayWeekend_kW[i] = listNetLoadArrayWeekend_kW.get(i);&#xD;
}&#xD;
&#xD;
netLoadArrayAnnual_kW = Arrays.copyOfRange(netLoadArrayAnnual_kW,runStartIdx,runEndIdx);&#xD;
arraySize = netLoadArrayAnnual_kW.length;&#xD;
// Sort all arrays&#xD;
Arrays.parallelSort(netLoadArrayAnnual_kW);&#xD;
Arrays.parallelSort(netLoadArraySummerweek_kW);&#xD;
Arrays.parallelSort(netLoadArrayWinterweek_kW);&#xD;
Arrays.parallelSort(netLoadArrayDaytime_kW);&#xD;
Arrays.parallelSort(netLoadArrayNighttime_kW);&#xD;
Arrays.parallelSort(netLoadArrayWeekday_kW);&#xD;
Arrays.parallelSort(netLoadArrayWeekend_kW);&#xD;
&#xD;
//traceln("Peak grid load: %s", netLoadArrayAnnual_kW[netLoadArrayAnnual_kW.length-1]);&#xD;
netLoadArrayAnnual_kW[netLoadArrayAnnual_kW.length-1] = 0;&#xD;
&#xD;
// Write results to datasets&#xD;
// Netbelastingduurkromme year&#xD;
//if (!firstRun) {&#xD;
	data_netbelastingDuurkromme_kW.reset();&#xD;
	data_summerWeekNetbelastingDuurkromme_kW.reset();	&#xD;
	data_winterWeekNetbelastingDuurkromme_kW.reset();&#xD;
	data_daytimeNetbelastingDuurkromme_kW.reset();&#xD;
	data_nighttimeNetbelastingDuurkromme_kW.reset();&#xD;
	data_weekdayNetbelastingDuurkromme_kW.reset();&#xD;
	data_weekendNetbelastingDuurkromme_kW.reset();&#xD;
//}&#xD;
&#xD;
//traceln("annaualElectricityBalance first element: %s, last element: %s", netLoadArrayAnnual_kW[0], netLoadArrayAnnual_kW[arraySize-1]);&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	//traceln("netloadloop iterator: %s", i);&#xD;
	data_netbelastingDuurkromme_kW.add((i)*energyModel.p_timeStep_h, netLoadArrayAnnual_kW[arraySize-i-1]);&#xD;
}&#xD;
// Netbelastingduurkromme summer / winter&#xD;
&#xD;
arraySize = netLoadArraySummerweek_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_summerWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArraySummerweek_kW[i]);&#xD;
}&#xD;
&#xD;
arraySize = netLoadArrayWinterweek_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_winterWeekNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWinterweek_kW[i]);&#xD;
}&#xD;
// Netbelastingduurkromme day / night&#xD;
&#xD;
arraySize = netLoadArrayDaytime_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_daytimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayDaytime_kW[i]);&#xD;
}&#xD;
&#xD;
arraySize = netLoadArrayNighttime_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_nighttimeNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayNighttime_kW[i]);&#xD;
}&#xD;
// Netbelastingduurkromme weekday / weekend&#xD;
&#xD;
arraySize = netLoadArrayWeekday_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_weekdayNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekday_kW[i]);&#xD;
}&#xD;
&#xD;
arraySize = netLoadArrayWeekend_kW.length;&#xD;
for(int i=0; i&lt; arraySize; i++) {&#xD;
	data_weekendNetbelastingDuurkromme_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekend_kW[i]);&#xD;
}&#xD;
*/</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridNode&gt;</ReturnType>
						<Id>1718290223518</Id>
						<Name>f_getConnectedGridNodes</Name>
						<Description>Function that gets all the directly connected grid nodes</Description>
						<X>1110</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return this.c_connectedGridNodes;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1718290606581</Id>
						<Name>f_getConnectedGridConnections</Name>
						<Description>Function that gets all the directly connected grid connections</Description>
						<X>1110</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return this.c_connectedGridConnections;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1718896086734</Id>
						<Name>f_propagateNodalPricing</Name>
						<X>780</X>
						<Y>380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_currentTotalNodalPrice_eurpkWh = v_currentParentNodalPrice_eurpkWh + v_currentLocalNodalPrice_eurpkWh;&#xD;
for (GridNode GN : c_connectedGridNodes ) {&#xD;
	GN.v_currentParentNodalPrice_eurpkWh = v_currentTotalNodalPrice_eurpkWh;&#xD;
}</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1719300860382</Id>
						<Name>f_initializeGridnode</Name>
						<X>780</X>
						<Y>330</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>v_totalInstalledWindPower_kW = 0;&#xD;
v_totalInstalledPVPower_kW = 0;&#xD;
&#xD;
for (GridConnection GC : c_connectedGridConnections) {&#xD;
	if (GC.v_isActive) {&#xD;
		v_totalInstalledWindPower_kW += GC.v_liveAssetsMetaData.totalInstalledWindPower_kW;&#xD;
		v_totalInstalledPVPower_kW += GC.v_liveAssetsMetaData.totalInstalledPVPower_kW;&#xD;
	}&#xD;
}&#xD;
&#xD;
for (GridNode GN : c_connectedGridNodes) {&#xD;
	v_totalInstalledWindPower_kW += GN.v_totalInstalledWindPower_kW;&#xD;
	v_totalInstalledPVPower_kW += GN.v_totalInstalledPVPower_kW;&#xD;
}&#xD;
&#xD;
/*&#xD;
if ( p_energyType == OL_EnergyCarriers.HEAT ) {&#xD;
	double capacityHeat_kW = 1000000;&#xD;
	double lossFactor_WpK = 10000;&#xD;
	double heatCapacity_JpK = 10000 * 3.6e6;	&#xD;
	double InitialStateOfCharge_degC = 60;&#xD;
	double soilTemperature_degC = energyModel.p_undergroundTemperature_degC;&#xD;
	p_transportBuffer = new J_EAStorageHeat(null, OL_EAStorageTypes.HEATBUFFER, capacityHeat_kW, lossFactor_WpK, energyModel.p_timeStep_h, InitialStateOfCharge_degC, 10.0, 90.0, InitialStateOfCharge_degC, heatCapacity_JpK, "AIR" );&#xD;
	p_transportBuffer.updateAmbientTemperature(soilTemperature_degC);&#xD;
	b_transportBufferValid = true;&#xD;
	energyModel.c_energyAssets.add(p_transportBuffer);&#xD;
	energyModel.c_storageAssets.add(p_transportBuffer);&#xD;
}*/</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1719302290904</Id>
						<Name>f_updateForecasts</Name>
						<X>780</X>
						<Y>350</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>// The ElectricityYieldForecast assumes solar and wind forecasts have the same forecast time&#xD;
if ( v_totalInstalledPVPower_kW + v_totalInstalledWindPower_kW &gt; 0 ) {&#xD;
	v_electricityYieldForecast_fr = (energyModel.v_SolarYieldForecast_fr * v_totalInstalledPVPower_kW + energyModel.v_WindYieldForecast_fr * v_totalInstalledWindPower_kW) / (v_totalInstalledPVPower_kW + v_totalInstalledWindPower_kW);&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722591244558</Id>
						<Name>f_updateTotalInstalledProductionAssets</Name>
						<X>1040</X>
						<Y>310</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>energyAssetType</Name>
							<Type>OL_EnergyAssetType</Type>
						</Parameter>
						<Parameter>
							<Name>power_kw</Name>
							<Type>double</Type>
						</Parameter>
						<Parameter>
							<Name>increase</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>if (energyAssetType == OL_EnergyAssetType.WINDMILL) {&#xD;
	if (increase) {&#xD;
		v_totalInstalledWindPower_kW += power_kw;&#xD;
	}&#xD;
	else {&#xD;
		v_totalInstalledWindPower_kW -= power_kw;&#xD;
	}&#xD;
}&#xD;
else if (energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC) {&#xD;
	if (increase) {&#xD;
		v_totalInstalledPVPower_kW += power_kw;&#xD;
	}&#xD;
	else {&#xD;
		v_totalInstalledPVPower_kW -= power_kw;&#xD;
	}&#xD;
}&#xD;
else {&#xD;
	throw new IllegalStateException("Wrong energy asset type");&#xD;
}&#xD;
&#xD;
if (p_parentNodeID != null) {&#xD;
	GridNode myParentNode = findFirst(energyModel.pop_gridNodes, p-&gt;p.p_gridNodeID.equals(p_parentNodeID));&#xD;
	if (myParentNode != null) {&#xD;
		myParentNode.f_updateTotalInstalledProductionAssets(energyAssetType, power_kw, increase);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;GridNode&gt;</ReturnType>
						<Id>1725964027407</Id>
						<Name>f_getLowerLVLConnectedGridNodes</Name>
						<Description>Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node.</Description>
						<X>1110</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>List&lt;GridNode&gt; allConnectedGridNodes = new ArrayList&lt;GridNode&gt;();&#xD;
&#xD;
for(GridNode GN : c_connectedGridNodes){&#xD;
	allConnectedGridNodes.addAll(GN.f_getAllConnectedGridNodes_recursion(new ArrayList&lt;GridNode&gt;()));&#xD;
}&#xD;
&#xD;
return allConnectedGridNodes;</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>List&lt;GridNode&gt;</ReturnType>
						<Id>1725966618828</Id>
						<Name>f_getAllConnectedGridNodes_recursion</Name>
						<Description>Recursion Function that gets all grid nodes and the children of those grid nodes, etc. All the way to the bottom node. For basic use should be called with an empty list!</Description>
						<X>1150</X>
						<Y>250</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>allConnectedGridNodes</Name>
							<Type>List&lt;GridNode&gt;</Type>
						</Parameter>
						<Body>//Add to collection&#xD;
allConnectedGridNodes.add(this);&#xD;
&#xD;
//Recursive loop (repeat this function till bottom)&#xD;
if(c_connectedGridNodes.size() == 0){&#xD;
	return allConnectedGridNodes;&#xD;
}&#xD;
else{&#xD;
	for(GridNode GN : c_connectedGridNodes){&#xD;
		GN.f_getAllConnectedGridNodes_recursion(allConnectedGridNodes);&#xD;
		//allConnectedGridNodes.addAll(GN.f_getAllConnectedGridNodes(allConnectedGridNodes));&#xD;
	}&#xD;
	return allConnectedGridNodes;&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>ArrayList&lt;GridConnection&gt;</ReturnType>
						<Id>1734617656602</Id>
						<Name>f_getAllLowerLVLConnectedGridConnections</Name>
						<Description>Function that gets all the directly connected grid connections</Description>
						<X>1110</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>ArrayList&lt;GridConnection&gt; AllLowerLVLConnectedGridConnections = new ArrayList&lt;GridConnection&gt;();&#xD;
&#xD;
for(GridNode GN : f_getLowerLVLConnectedGridNodes()){&#xD;
	AllLowerLVLConnectedGridConnections.addAll(GN.f_getConnectedGridConnections());&#xD;
}&#xD;
&#xD;
AllLowerLVLConnectedGridConnections.addAll(this.c_connectedGridConnections);&#xD;
&#xD;
return AllLowerLVLConnectedGridConnections;</Body>
					</Function>
				</Functions>
				<AnalysisData>
					<DataSet>
						<Id>1705919330576</Id>
						<Name>data_liveLoad_kW</Name>
						<X>50</X>
						<Y>850</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894016</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1687075200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>false</FreezeXAxis>
						<HorizontalAxisExpression>energyModel.t_h</HorizontalAxisExpression>
						<VerticalAxisExpression>v_currentLoad_kW</VerticalAxisExpression>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1712668669449</Id>
						<Name>data_liveCapacityDemand_kW</Name>
						<X>50</X>
						<Y>890</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894018</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1712736000000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>false</FreezeXAxis>
						<HorizontalAxisExpression>energyModel.t_h</HorizontalAxisExpression>
						<VerticalAxisExpression>p_capacity_kW</VerticalAxisExpression>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1712673776914</Id>
						<Name>data_liveCapacitySupply_kW</Name>
						<X>50</X>
						<Y>870</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894020</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1712736000000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>false</FreezeXAxis>
						<HorizontalAxisExpression>energyModel.t_h</HorizontalAxisExpression>
						<VerticalAxisExpression>-p_capacity_kW</VerticalAxisExpression>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1715167370828</Id>
						<Name>data_totalLoad_kW</Name>
						<X>50</X>
						<Y>920</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894022</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1715241600000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<SamplesToKeep>8760</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1715167392629</Id>
						<Name>data_summerWeekLoad_kW</Name>
						<X>50</X>
						<Y>940</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894024</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1715241600000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1715167408643</Id>
						<Name>data_winterWeekLoad_kW</Name>
						<X>50</X>
						<Y>960</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894026</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1715241600000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
				</AnalysisData>
				<AgentLinks>
					<AgentLink>
						<Id>1658477288303</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<OnReceive>//v_gridNodePriceBands = msg;
subConnections.sendToAllConnected(msg);</OnReceive>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>TreeMap&lt;Double, Double&gt;</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1658477403925</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1658477288307</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Line>
								<Id>1670316940459</Id>
								<Name>line</Name>
								<X>10</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1670316940469</Id>
								<Name>text</Name>
								<X>40</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Parameters</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1670316967152</Id>
								<Name>text4</Name>
								<X>820</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1670316967156</Id>
								<Name>line4</Name>
								<X>770</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Line>
								<Id>1670317019803</Id>
								<Name>line7</Name>
								<X>400</X>
								<Y>470</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1670317019806</Id>
								<Name>text7</Name>
								<X>450</X>
								<Y>450</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Performance</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1670317049666</Id>
								<Name>line1</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>300</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1670317049669</Id>
								<Name>text1</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>350</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Assets</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1670317065284</Id>
								<Name>line2</Name>
								<X>50</X>
								<Y>520</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1670317065286</Id>
								<Name>text2</Name>
								<X>80</X>
								<Y>500</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Current status</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimePlot>
								<Id>1670317113685</Id>
								<Name>plot</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>270</X>
								<Y>180</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>false</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011893992</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1670400000000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>0.25</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>470</Width>
								<Height>270</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>390</Width>
									<Height>180</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>DAY</TimeWindowUnits>
								<VerScaleFromExpression>- p_capacity_kW - p_capacity_kW *0.1</VerScaleFromExpression>
								<VerScaleToExpression>p_capacity_kW + p_capacity_kW * 0.1</VerScaleToExpression>
								<VerScaleType>FIXED</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Node capacity</Title>
									<Id>1658477089937</Id>
									<Expression>my_dataset</Expression>
									<Color>-65536</Color>
									<Expression2>p_capacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Current load on grid [kW]</Title>
									<Id>1658477089936</Id>
									<Expression>my_dataset2</Expression>
									<Color>-12004916</Color>
									<Expression2>v_currentLoadElectricity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title/>
									<Id>1658477089935</Id>
									<Expression>my_dataset1</Expression>
									<Color>-65536</Color>
									<Expression2>- p_capacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Filtered load on grid [kW]</Title>
									<Id>1658477089934</Id>
									<Expression>my_dataset3</Expression>
									<Color>-8097537</Color>
									<Expression2>v_currentLoadElectricityLowPassed_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>1000</SamplesToKeep>
								<TimeWindowExpression>3</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
						</Presentation>
					</Level>
				</Presentation>
				<Areas>
					<Area>
						<Id>1698759398568</Id>
						<Name>va_gridNode</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>0</X>
							<Y>-10</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<Title/>
						<Width>1920</Width>
						<Height>980</Height>
					</Area>
				</Areas>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660731380915</Id>
				<Name>GridOperator</Name>
				<Folder>1752677829820</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<StartupCode>energyModel.c_actors.add(this);</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660731380913</Id>
					<Name>1660731380913</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089933</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660731380911</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660731380914</CurrentLevel>
				<ConnectionsId>1660731380910</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1665060534142</Id>
						<Name>v_congestionAllowanceLevel_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1665060582840</Id>
						<Name>v_congestionPriceConsumption_eurpkWh</Name>
						<Description>Euro per kW</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>580</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1665508504346</Id>
						<Name>v_congestionThreshold_fr</Name>
						<X>60</X>
						<Y>220</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1665508939525</Id>
						<Name>b_applyCongestionPriceWithConsumption</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>540</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1665508951785</Id>
						<Name>b_applyCongestionPriceWithProduction</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>560</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>boolean</Type>
							<InitialValue Class="CodeValue">
								<Code>false</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1666560746828</Id>
						<Name>v_congestionPriceProduction_eurpkWh</Name>
						<Description>Euro per kW</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>600</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675355743791</Id>
						<Name>j_ActorData</Name>
						<X>60</X>
						<Y>270</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>J_ActorData</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1690962985581</Id>
						<Name>v_congestionPrice_eurpkWh</Name>
						<Description>Euro per kW</Description>
						<X>60</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0.2</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736411315</Id>
						<Name>p_actorID</Name>
						<Description>Unique identifier of this actor in String format. Designated in Config-excel and used to link actors to netConnections.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-220</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736411313</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736411318</Id>
						<Name>p_actorType</Name>
						<Description>Actor type in OL_ActorType format. Designated in Config-excel and used to determine actor-type specific functionalities later.

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-220</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736411316</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736411321</Id>
						<Name>p_parentActorID</Name>
						<Description>Unique actor identifier in String format of a designated parent actor. This may be designated in Config-excel and is used to create an agent link with a higher lying agent (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-220</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736411319</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660736411324</Id>
						<Name>p_parentActor</Name>
						<Description>Pointer of the designated parent actor (e.g. a Coop or energy supplier)

@since: Sprint 6
@author: Gillis</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-220</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>ConnectionOwner</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660736411322</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674907095514</Id>
						<Name>p_capacitypricing_households_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>650</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674907095512</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674907099647</Id>
						<Name>p_capacitypricing_households_eur</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>670</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>double</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1674907099645</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1674907106415</Id>
						<Name>p_hasCapacityPricing</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>60</X>
						<Y>630</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>false</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1674907106413</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1675688426540</Id>
						<Name>p_hasCongestionPricing</Name>
						<X>60</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>boolean</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<DefaultValue Class="CodeValue">
								<Code>true</Code>
							</DefaultValue>
							<ParameterEditor>
								<Id>1675688426538</Id>
								<EditorContolType>CHECK_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1665076694603</Id>
						<Name>c_electricityGridNodes</Name>
						<X>700</X>
						<Y>160</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1666594012871</Id>
						<Name>c_congestedGNProduction</Name>
						<X>720</X>
						<Y>180</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1666594046997</Id>
						<Name>c_congestedGNConsumption</Name>
						<X>720</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1747304533257</Id>
						<Name>c_heatGridNodes</Name>
						<X>700</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>GridNode</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660736411309</Id>
						<Name>f_connectToChild</Name>
						<X>700</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>ConnectingChildNode</Name>
							<Type>GridNode</Type>
						</Parameter>
						<Parameter>
							<Name>energyType</Name>
							<Type>OL_EnergyCarriers</Type>
						</Parameter>
						<Body>if (energyType == OL_EnergyCarriers.ELECTRICITY) {&#xD;
	c_electricityGridNodes.add( ConnectingChildNode );&#xD;
}&#xD;
else if (energyType == OL_EnergyCarriers.HEAT) {&#xD;
	c_heatGridNodes.add( ConnectingChildNode );&#xD;
}&#xD;
else {&#xD;
	traceln( "f_connectToChild vanuit GridOperator voegt een type Node toe wat geen ELECTRICITY gridNOde is");&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660736411312</Id>
						<Name>f_connectToParentActor</Name>
						<Description>Creates an agentLink in superConnection if a parentActorID is designated in the config-excel. Called from f_configureBackBone() in main for profiling reasons, so no parameters are given.

@param: none
@return: none
@since: Sprint 6
@author: HOUJ</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>-220</X>
						<Y>40</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if ( p_parentActorID != null ) {&#xD;
	ConnectionOwner myParentActor = findFirst(main.pop_connectionOwners, p-&gt;p.p_actorID.equals(p_parentActorID)) ;&#xD;
	if( myParentActor instanceof ConnectionOwner) {&#xD;
		p_parentActor = myParentActor;&#xD;
		superConnection.connectTo(myParentActor);&#xD;
		myParentActor.f_connectToChild(this);&#xD;
	}&#xD;
}</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1664465199508</Id>
						<Name>f_updateCongestionTariff</Name>
						<X>700</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>for( GridNode n : c_electricityGridNodes ){&#xD;
	double currentLoad_kW = n.v_filteredLoadCongestionPricing_kW;&#xD;
	&#xD;
	if ( abs(currentLoad_kW) &gt; v_congestionThreshold_fr * n.p_capacity_kW  ){&#xD;
		n.v_congested = true;&#xD;
		n.v_currentCongestionPrice_eurpkWh = signum(currentLoad_kW)*(abs(currentLoad_kW) / n.p_capacity_kW - v_congestionThreshold_fr ) / ( 1 - v_congestionThreshold_fr) * v_congestionPrice_eurpkWh;		&#xD;
		n.f_setCongestionTariff(n.v_currentCongestionPrice_eurpkWh); &#xD;
		if (currentLoad_kW &gt; 0) {&#xD;
			n.v_congestionMode = "Overconsumption";&#xD;
			//n.f_setCongestionTariff(n.v_currentCongestionPrice_eurpkWh); &#xD;
		} &#xD;
		else {&#xD;
			n.v_congestionMode = "Overproduction";	&#xD;
			//n.f_setCongestionTariff(-n.v_currentCongestionPrice_eurpkWh); &#xD;
		}&#xD;
		if (!c_congestedGNConsumption.contains(n)){ c_congestedGNConsumption.add(n); }&#xD;
	}&#xD;
	else {&#xD;
		if ( n.v_congested ){&#xD;
			n.f_setCongestionTariff(0);&#xD;
			n.v_congested = false;&#xD;
			n.v_congestionMode = "No congestion atm";&#xD;
			n.v_currentCongestionPrice_eurpkWh = 0;&#xD;
			if (c_congestedGNProduction.contains(n)){ c_congestedGNProduction.remove(c_congestedGNProduction.indexOf(n));}&#xD;
			if (c_congestedGNConsumption.contains(n)){ c_congestedGNConsumption.remove(c_congestedGNConsumption.indexOf(n));}&#xD;
		}&#xD;
	}&#xD;
	&#xD;
}&#xD;
&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1660731380910</Id>
						<Name>connections</Name>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660731855349</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660731380914</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1660731384415</Id>
				<Name>NationalEnergyMarket</Name>
				<Folder>1752677829820</Folder>
				<ExtendsReference>
					<PackageName>zero_engine</PackageName>
					<ClassName>Actor</ClassName>
				</ExtendsReference>
				<Parameters>
					<Parameter>
						<Name>p_actorID</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorType</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorSubgroup</Name>
					</Parameter>
					<Parameter>
						<Name>p_actorGroup</Name>
					</Parameter>
				</Parameters>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1660731384413</Id>
					<Name>1660731384413</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089932</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1660809600000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1660731384411</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1660731384414</CurrentLevel>
				<ConnectionsId>1660731384410</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1660752725660</Id>
						<Name>v_currentVariableElectricityPrice_eurpMWh</Name>
						<X>60</X>
						<Y>200</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
				</Variables>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>RETURNS_VALUE</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660738813066</Id>
						<Name>f_getNationalElectricityPrice_eurpMWh</Name>
						<X>60</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>return v_currentVariableElectricityPrice_eurpMWh;</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1660752725657</Id>
						<Name>f_updateEnergyPrice</Name>
						<X>60</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//energyModel.c_gridNodesNotTopLevel.get(0).p_capacity_kW&#xD;
//double localBalanceTerm_eurpMWh = 200 * (energyModel.v_totalElectricPower_kW / energyModel.c_gridNodesNotTopLevel.get(0).p_capacity_kW);&#xD;
&#xD;
v_currentVariableElectricityPrice_eurpMWh = energyModel.pp_dayAheadElectricityPricing_eurpMWh.getValue( energyModel.t_h + energyModel.p_timeStep_h);&#xD;
</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1660731384410</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<ContainerLinks>
					<ContainerLink>
						<Id>1660731880833</Id>
						<Name>energyModel</Name>
						<X>50</X>
						<Y>-100</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<ActiveObjectClass>
							<PackageName>zero_engine</PackageName>
							<ClassName>EnergyModel</ClassName>
						</ActiveObjectClass>
					</ContainerLink>
				</ContainerLinks>
				<Presentation>
					<Level>
						<Id>1660731384414</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658499506320</Id>
				<Name>UI_EnergyAsset</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<AdditionalClassCode>/*@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"EA " + this.getIndex() + "; " +&#xD;
			 p_energyAssetType.toString() + "; " +&#xD;
			"r = " + roundToDecimal(v_powerFraction_fr, 3) + "; " +&#xD;
			"kW = " + roundToDecimal((v_currentConsumptionElectricity_kW - v_currentProductionElectricity_kW &#xD;
			+ v_currentConsumptionHeat_kW - v_currentProductionHeat_kW&#xD;
			+ v_currentConsumptionHydrogen_kW - v_currentProductionHydrogen_kW&#xD;
			+ v_currentConsumptionMethane_kW - v_currentProductionMethane_kW&#xD;
			+ v_currentConsumptionDiesel_kW),2);&#xD;
	}*/</AdditionalClassCode>
				<Folder>1752737189062</Folder>
				<StartupCode>// f_connectToParentNode() --&gt; made explicit function in main to avoid nested functions for easy profiling
//if( assetCategory == PRODUCTION){
//	main.c_productionAssets.add(this);
//}

f_setCoordinatesUIElements();
</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658499506318</Id>
					<Name>1658499506318</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089931</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658563200000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658499506316</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-150</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658499506319</CurrentLevel>
				<ConnectionsId>1658499506315</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1658750229384</Id>
						<Name>v_currentProductionElectricity_kW</Name>
						<X>90</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1658750229388</Id>
						<Name>v_currentPowerElectricLost_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>90</X>
						<Y>550</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659092523267</Id>
						<Name>v_currentProductionHeat_kW</Name>
						<X>90</X>
						<Y>460</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659092541428</Id>
						<Name>v_currentConsumptionElectricity_kW</Name>
						<X>90</X>
						<Y>360</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659092596831</Id>
						<Name>v_currentConsumptionHeat_kW</Name>
						<X>90</X>
						<Y>480</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659092615449</Id>
						<Name>v_currentConsumptionMethane_kW</Name>
						<X>90</X>
						<Y>400</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659342082106</Id>
						<Name>v_powerFraction_fr</Name>
						<X>90</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
							<InitialValue Class="CodeValue">
								<Code>0</Code>
							</InitialValue>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659345815346</Id>
						<Name>v_currentProductionMethane_kW</Name>
						<X>90</X>
						<Y>380</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659365919790</Id>
						<Name>v_currentStateOfCharge_r</Name>
						<X>90</X>
						<Y>280</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659513282177</Id>
						<Name>v_currentProductionHydrogen_kW</Name>
						<X>90</X>
						<Y>420</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1659513295338</Id>
						<Name>v_currentConsumptionHydrogen_kW</Name>
						<X>90</X>
						<Y>440</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1668601315863</Id>
						<Name>v_currentConsumptionDiesel_kW</Name>
						<X>90</X>
						<Y>500</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1659090642877</Id>
						<Name>j_ea</Name>
						<X>90</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>J_EA</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1659090642875</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1660130635726</Id>
						<Name>p_parentAgent</Name>
						<X>90</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>Agent</Type>
							<UnitType>NONE</UnitType>
							<UnitOfValue Class="AccelerationUnits">MPS_SQ</UnitOfValue>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1660130635724</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1659347079551</Id>
						<Name>p_energyAssetType</Name>
						<X>90</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_EnergyAssetType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1659347079549</Id>
								<Label>p_energyAssetType</Label>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1666983925485</Id>
						<Name>p_assetName</Name>
						<X>90</X>
						<Y>130</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1666983925483</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="CollectionVariable">
						<Id>1715953134119</Id>
						<Name>c_EAs</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>310</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" AccessType="public" StaticVariable="false">
							<CollectionClass>ArrayList</CollectionClass>
							<ElementClass>J_EA</ElementClass>
							<ValueElementClass>String</ValueElementClass>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1716200767637</Id>
						<Name>e_calculateEnergyBalance</Name>
						<Description>Trigger voor energieberekeningen in de model backbone. Volgorde is belangrijk voor consistente resultaten.

@since: Sprint 6
@author: Jorrit</Description>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>310</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1/p_timeStep_h</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089925</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1658563200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>0.25</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>f_updateStackChartData();</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693296929778</Id>
						<Name>f_updateData</Name>
						<X>730</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>if (j_ea != null) {&#xD;
	/*&#xD;
	v_currentProductionElectricity_kW = j_ea.electricityProduction_kW;&#xD;
	v_currentConsumptionElectricity_kW = j_ea.electricityConsumption_kW;&#xD;
	v_currentProductionMethane_kW = j_ea.methaneProduction_kW;&#xD;
	v_currentConsumptionMethane_kW = j_ea.methaneConsumption_kW;&#xD;
	v_currentProductionHydrogen_kW = j_ea.hydrogenProduction_kW;&#xD;
	v_currentConsumptionHydrogen_kW = j_ea.hydrogenConsumption_kW;&#xD;
	v_currentProductionHeat_kW = j_ea.heatProduction_kW;&#xD;
	v_currentConsumptionHeat_kW = j_ea.heatConsumption_kW;&#xD;
	v_currentConsumptionDiesel_kW = j_ea.dieselConsumption_kW;&#xD;
	v_currentStateOfCharge_r = j_ea.getCurrentStateOfCharge();&#xD;
	v_powerFraction_fr = j_ea.v_powerFraction_fr;&#xD;
	*/&#xD;
	plot.updateData();&#xD;
	//data_currentConsumptionElectricity_kW.update();&#xD;
	//data_currentProductionElectricity_kW.update();&#xD;
}&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1693297254281</Id>
						<Name>f_initializeData</Name>
						<X>730</X>
						<Y>70</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>EA</Name>
							<Type>J_EA</Type>
						</Parameter>
						<Body>j_ea = EA;&#xD;
p_energyAssetType = j_ea.energyAssetType;&#xD;
p_assetName = j_ea.energyAssetName;&#xD;
p_parentAgent = j_ea.parentAgent;&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1713969761331</Id>
						<Name>f_addFlows</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>730</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>arr</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>v_currentProductionElectricity_kW = arr[0];&#xD;
v_currentConsumptionElectricity_kW = arr[4];&#xD;
v_currentProductionMethane_kW = arr[1];&#xD;
v_currentConsumptionMethane_kW = arr[5];&#xD;
v_currentProductionHydrogen_kW = arr[2];&#xD;
v_currentConsumptionHydrogen_kW = arr[6];&#xD;
v_currentProductionHeat_kW = arr[3];&#xD;
v_currentConsumptionHeat_kW = arr[7];&#xD;
v_currentConsumptionDiesel_kW = arr[8];</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714653114094</Id>
						<Name>f_setCoordinatesUIElements</Name>
						<X>730</X>
						<Y>90</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>//plot.setX(0);&#xD;
//plot.setY(0);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1714654478601</Id>
						<Name>f_setVisibilities</Name>
						<X>730</X>
						<Y>110</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>isVisible</Name>
							<Type>boolean</Type>
						</Parameter>
						<Body>plot.setVisible(isVisible);</Body>
					</Function>
					<Function AccessType="default" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1715953163186</Id>
						<Name>f_updateStackChartData</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>90</X>
						<Y>730</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>double totalElectricityProduction_kW = 0;&#xD;
double totalElectricityConsumption_kW = 0;&#xD;
&#xD;
for (J_EA ea : c_EAs) {&#xD;
	totalElectricityProduction_kW += ea.electricityProduction_kW;&#xD;
	totalElectricityConsumption_kW += ea.electricityConsumption_kW;&#xD;
	traceln("ea consumption: " + ea.electricityConsumption_kW);&#xD;
}&#xD;
&#xD;
data_currentProductionElectricity_kW.add(totalElectricityProduction_kW);&#xD;
data_currentConsumptionElectricity_kW.add(totalElectricityConsumption_kW);&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1722513456426</Id>
						<Name>f_removeFlows</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>830</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>arr</Name>
							<Type>double[]</Type>
						</Parameter>
						<Body>v_currentProductionElectricity_kW += arr[0];&#xD;
v_currentConsumptionElectricity_kW += arr[4];&#xD;
v_currentProductionMethane_kW += arr[1];&#xD;
v_currentConsumptionMethane_kW += arr[5];&#xD;
v_currentProductionHydrogen_kW += arr[2];&#xD;
v_currentConsumptionHydrogen_kW += arr[6];&#xD;
v_currentProductionHeat_kW += arr[3];&#xD;
v_currentConsumptionHeat_kW += arr[7];&#xD;
v_currentConsumptionDiesel_kW += arr[8];</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1729155791230</Id>
						<Name>f_addFlows</Name>
						<X>730</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>flowsMap</Name>
							<Type>J_FlowsMap</Type>
						</Parameter>
						<Body>v_currentProductionElectricity_kW = max(0, -flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
v_currentConsumptionElectricity_kW = max(0, flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
v_currentProductionMethane_kW = max(0, -flowsMap.get(OL_EnergyCarriers.METHANE));&#xD;
v_currentConsumptionMethane_kW = max(0, flowsMap.get(OL_EnergyCarriers.METHANE));&#xD;
v_currentProductionHydrogen_kW = max(0, -flowsMap.get(OL_EnergyCarriers.HYDROGEN));&#xD;
v_currentConsumptionHydrogen_kW = max(0, flowsMap.get(OL_EnergyCarriers.HYDROGEN));&#xD;
v_currentProductionHeat_kW = max(0, -flowsMap.get(OL_EnergyCarriers.HEAT));&#xD;
v_currentConsumptionHeat_kW = max(0, flowsMap.get(OL_EnergyCarriers.HEAT));&#xD;
v_currentConsumptionDiesel_kW = max(0, flowsMap.get(OL_EnergyCarriers.DIESEL));&#xD;
&#xD;
</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1729167663082</Id>
						<Name>f_removeFlows</Name>
						<X>830</X>
						<Y>230</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Parameter>
							<Name>flowsMap</Name>
							<Type>J_FlowsMap</Type>
						</Parameter>
						<Body>v_currentProductionElectricity_kW = max(0, -flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
v_currentConsumptionElectricity_kW = max(0, flowsMap.get(OL_EnergyCarriers.ELECTRICITY));&#xD;
v_currentProductionMethane_kW = max(0, -flowsMap.get(OL_EnergyCarriers.METHANE));&#xD;
v_currentConsumptionMethane_kW = max(0, flowsMap.get(OL_EnergyCarriers.METHANE));&#xD;
v_currentProductionHydrogen_kW = max(0, -flowsMap.get(OL_EnergyCarriers.HYDROGEN));&#xD;
v_currentConsumptionHydrogen_kW = max(0, flowsMap.get(OL_EnergyCarriers.HYDROGEN));&#xD;
v_currentProductionHeat_kW = max(0, -flowsMap.get(OL_EnergyCarriers.HEAT));&#xD;
v_currentConsumptionHeat_kW = max(0, flowsMap.get(OL_EnergyCarriers.HEAT));&#xD;
v_currentConsumptionDiesel_kW = max(0, flowsMap.get(OL_EnergyCarriers.DIESEL));&#xD;
&#xD;
</Body>
					</Function>
				</Functions>
				<AnalysisData>
					<DataSet>
						<Id>1715953048233</Id>
						<Name>data_currentProductionElectricity_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>90</X>
						<Y>800</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894124</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1716019200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<VerticalAxisExpression>v_currentProductionElectricity_kW</VerticalAxisExpression>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
					<DataSet>
						<Id>1715953093443</Id>
						<Name>data_currentConsumptionElectricity_kW</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>90</X>
						<Y>830</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<AutoUpdate>false</AutoUpdate>
						<RecurrenceProperties>
							<Id>1751011894126</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1716019200000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>0</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
						</RecurrenceProperties>
						<FreezeXAxis>true</FreezeXAxis>
						<VerticalAxisExpression>v_currentConsumptionElectricity_kW</VerticalAxisExpression>
						<SamplesToKeep>672</SamplesToKeep>
					</DataSet>
				</AnalysisData>
				<AgentLinks>
					<AgentLink>
						<Id>1658499506315</Id>
						<Name>connections</Name>
						<ExcludeFromBuild>true</ExcludeFromBuild>
						<X>50</X>
						<Y>-50</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1658499506319</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Line>
								<Id>1667919118778</Id>
								<Name>line4</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>710</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919118781</Id>
								<Name>text4</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>760</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Functions</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919118783</Id>
								<Name>line5</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>700</X>
								<Y>60</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>100</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919118785</Id>
								<Name>text6</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>680</X>
								<Y>234</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Occuring</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919118787</Id>
								<Name>line6</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>700</X>
								<Y>180</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DOTTED</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>0</Dx>
								<Dy>70</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919118789</Id>
								<Name>text5</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>680</X>
								<Y>110</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>270.0</Rotation>
								<Color>-16777216</Color>
								<Text>Init</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919228650</Id>
								<Name>line</Name>
								<X>80</X>
								<Y>40</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919228652</Id>
								<Name>text1</Name>
								<X>110</X>
								<Y>20</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>ID &amp; connections</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Line>
								<Id>1667919281533</Id>
								<Name>line1</Name>
								<X>80</X>
								<Y>240</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<BeginArrowSize>1</BeginArrowSize>
								<BeginArrowStyle>0</BeginArrowStyle>
								<EndArrowSize>1</EndArrowSize>
								<EndArrowStyle>0</EndArrowStyle>
								<Dx>140</Dx>
								<Dy>0</Dy>
								<Dz>0</Dz>
							</Line>
							<Text>
								<Id>1667919281535</Id>
								<Name>text2</Name>
								<X>110</X>
								<Y>220</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Current status</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimePlot>
								<Id>1668420180250</Id>
								<Name>plot</Name>
								<X>430</X>
								<Y>300</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011894104</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1668499200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>15</Code>
										<Unit Class="TimeUnits">MINUTE</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>500</Width>
								<Height>280</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>420</Width>
									<Height>160</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>60</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>HOUR</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Electricity Consumption</Title>
									<Id>1658477089930</Id>
									<Expression>my_dataset</Expression>
									<Color>-2448096</Color>
									<Expression2>v_currentConsumptionElectricity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Electricity Production</Title>
									<Id>1658477089929</Id>
									<Expression>my_dataset1</Expression>
									<Color>-9728477</Color>
									<Expression2>v_currentProductionElectricity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>State of Charge</Title>
									<Id>1658477089928</Id>
									<Expression>my_dataset2</Expression>
									<Color>-16728065</Color>
									<Expression2>v_currentStateOfCharge_r</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>768</SamplesToKeep>
								<TimeWindowExpression>168</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>dd_MM</LabelFormat>
							</TimePlot>
							<Text>
								<Id>1668420196225</Id>
								<Name>text3</Name>
								<X>560</X>
								<Y>300</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>false</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Graph can be ignored for non-debug runs</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimePlot>
								<Id>1676462939101</Id>
								<Name>temperaturePlot</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>400</X>
								<Y>570</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011894107</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1676534400000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>440</Width>
								<Height>210</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>360</Width>
									<Height>120</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<VerScaleFromExpression>0</VerScaleFromExpression>
								<VerScaleToExpression>50</VerScaleToExpression>
								<VerScaleType>FIXED</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Temperature</Title>
									<Id>1658477089927</Id>
									<Expression>my_dataset</Expression>
									<Color>-16728065</Color>
									<Expression2>j_ea.getCurrentTemperature()</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Buffer SoC</Title>
									<Id>1658477089926</Id>
									<Expression>my_dataset1</Expression>
									<Color>-4565549</Color>
									<Expression2>v_currentStateOfCharge_r</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>1000</SamplesToKeep>
								<TimeWindowExpression>100</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
							</TimePlot>
							<Control Type="EditBox">
								<EmbeddedIcon>false</EmbeddedIcon>
								<Id>1693296357894</Id>
								<Name>ed_assetNr</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>460</X>
								<Y>50</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<BasicProperties Width="100" Height="30">
									<EmbeddedIcon>false</EmbeddedIcon>
									<FillColor>-1</FillColor>
									<TextColor>-16777216</TextColor>
									<Enabled>true</Enabled>
									<ActionCode>int assetNr = ed_assetNr.getIntValue();
j_ea = energyModel.c_energyAssets.get(assetNr);
p_energyAssetType = j_ea.energyAssetType;
p_assetName = j_ea.energyAssetName;
p_parentAgent = j_ea.parentAgent;
</ActionCode>
								</BasicProperties>
								<ExtendedProperties>
									<Font Name="Dialog" Size="11" Style="0"/>
									<DefaultValueCode>"0"</DefaultValueCode>
									<LinkTo>false</LinkTo>
								</ExtendedProperties>
							</Control>
							<Text>
								<Id>1693296387281</Id>
								<Name>text7</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>450</X>
								<Y>30</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>false</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Energy Asset Number</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>11</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimeStackChart>
								<Id>1715953590721</Id>
								<Name>chart</Name>
								<ExcludeFromBuild>true</ExcludeFromBuild>
								<X>930</X>
								<Y>280</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011894111</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1716019200000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>1</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>500</Width>
								<Height>280</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>50</XOffset>
									<YOffset>30</YOffset>
									<Width>420</Width>
									<Height>190</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>true</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
								<TimeWindowExpression>100</TimeWindowExpression>
								<DatasetExpression>
									<Id>1715953592765</Id>
									<Expression>data_currentConsumptionElectricity_kW</Expression>
									<Color>-40121</Color>
									<Expression2>0</Expression2>
									<Expression2Flag>false</Expression2Flag>
									<Title>Consumption</Title>
								</DatasetExpression>
								<DatasetExpression>
									<Id>1715953622911</Id>
									<Expression>data_currentProductionElectricity_kW</Expression>
									<Color>-16744448</Color>
									<Expression2>0</Expression2>
									<Expression2Flag>false</Expression2Flag>
									<Title>Production</Title>
								</DatasetExpression>
								<SamplesToKeep>100</SamplesToKeep>
								<VerScaleToExpression>1</VerScaleToExpression>
								<VerScaleType>AUTO</VerScaleType>
								<LabelFormat>MODEL_TIME_UNITS</LabelFormat>
							</TimeStackChart>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
			<ActiveObjectClass>
				<Id>1658752913454</Id>
				<Name>UI_GridNode</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<StartupCode>f_setNodeVisual();</StartupCode>
				<Generic>false</Generic>
				<GenericParameter>
					<Id>1658752913452</Id>
					<Name>1658752913452</Name>
					<GenericParameterValue Class="CodeValue">
						<Code>T extends Agent</Code>
					</GenericParameterValue>
					<GenericParameterLabel>Generic parameter:</GenericParameterLabel>
				</GenericParameter>
				<FlowChartsUsage>ENTITY</FlowChartsUsage>
				<SamplesToKeep>100</SamplesToKeep>
				<LimitNumberOfArrayElements>false</LimitNumberOfArrayElements>
				<ElementsLimitValue>100</ElementsLimitValue>
				<MakeDefaultViewArea>true</MakeDefaultViewArea>
				<SceneGridColor/>
				<SceneBackgroundColor>-4144960</SceneBackgroundColor>
				<SceneSkybox>null</SceneSkybox>
				<AgentProperties>
					<EnvironmentDefinesInitialLocation>true</EnvironmentDefinesInitialLocation>
					<RotateAnimationTowardsMovement>true</RotateAnimationTowardsMovement>
					<RotateAnimationVertically>false</RotateAnimationVertically>
					<VelocityCode Class="CodeUnitValue">
						<Code>10</Code>
						<Unit Class="SpeedUnits">MPS</Unit>
					</VelocityCode>
					<PhysicalLength Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalLength>
					<PhysicalWidth Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalWidth>
					<PhysicalHeight Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="LengthUnits">METER</Unit>
					</PhysicalHeight>
				</AgentProperties>
				<EnvironmentProperties>
					<EnableSteps>false</EnableSteps>
					<StepDurationCode Class="CodeUnitValue">
						<Code>1.0</Code>
						<Unit Class="TimeUnits">SECOND</Unit>
					</StepDurationCode>
					<SpaceType>CONTINUOUS</SpaceType>
					<WidthCode>500</WidthCode>
					<HeightCode>500</HeightCode>
					<ZHeightCode>0</ZHeightCode>
					<ColumnsCountCode>100</ColumnsCountCode>
					<RowsCountCode>100</RowsCountCode>
					<NeigborhoodType>MOORE</NeigborhoodType>
					<LayoutType>USER_DEF</LayoutType>
					<NetworkType>USER_DEF</NetworkType>
					<ConnectionsPerAgentCode>2</ConnectionsPerAgentCode>
					<ConnectionsRangeCode>50</ConnectionsRangeCode>
					<NeighborLinkFractionCode>0.95</NeighborLinkFractionCode>
					<MCode>10</MCode>
				</EnvironmentProperties>
				<DatasetsCreationProperties>
					<AutoCreate>true</AutoCreate>
					<Id>1658477089924</Id>
					<OccurrenceAtTime>true</OccurrenceAtTime>
					<OccurrenceDate>1658822400000</OccurrenceDate>
					<OccurrenceTime Class="CodeUnitValue">
						<Code>0</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</OccurrenceTime>
					<RecurrenceCode Class="CodeUnitValue">
						<Code>1</Code>
						<Unit Class="TimeUnits">HOUR</Unit>
					</RecurrenceCode>
				</DatasetsCreationProperties>
				<ScaleRuler>
					<Id>1658752913450</Id>
					<Name>scale</Name>
					<X>0</X>
					<Y>-180</Y>
					<PublicFlag>false</PublicFlag>
					<PresentationFlag>false</PresentationFlag>
					<ShowLabel>false</ShowLabel>
					<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
					<Length>100</Length>
					<Rotation>0</Rotation>
					<ScaleType>BASED_ON_LENGTH</ScaleType>
					<ModelLength>10</ModelLength>
					<LengthUnits>METER</LengthUnits>
					<Scale>10</Scale>
					<InheritedFromParentAgentType>true</InheritedFromParentAgentType>
				</ScaleRuler>
				<CurrentLevel>1658752913453</CurrentLevel>
				<ConnectionsId>1658752913449</ConnectionsId>
				<Variables>
					<Variable Class="PlainVariable">
						<Id>1670933843521</Id>
						<Name>v_localProduction_kW</Name>
						<X>60</X>
						<Y>300</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670933857325</Id>
						<Name>v_batteryProduction_kW</Name>
						<X>60</X>
						<Y>320</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670933894502</Id>
						<Name>v_vehicleConsumption_kW</Name>
						<X>60</X>
						<Y>370</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670933909350</Id>
						<Name>v_vehicleProduction_kW</Name>
						<X>60</X>
						<Y>340</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670933925207</Id>
						<Name>v_fixedConsumptionProfiles_kW</Name>
						<X>60</X>
						<Y>390</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670933944857</Id>
						<Name>v_electricHeatingConsumption_kW</Name>
						<X>60</X>
						<Y>430</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1670934339512</Id>
						<Name>v_batteryConsumption_kW</Name>
						<X>60</X>
						<Y>450</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1675683786853</Id>
						<Name>v_congestionPrice_eurpkWh</Name>
						<X>60</X>
						<Y>490</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="PlainVariable">
						<Id>1689596764390</Id>
						<Name>v_electricCookingPower_kW</Name>
						<X>60</X>
						<Y>410</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true"
                  Constant="false"
                  AccessType="public"
                  StaticVariable="false">
							<Type>double</Type>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658753690661</Id>
						<Name>p_nodeID</Name>
						<X>60</X>
						<Y>190</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>String</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658753690659</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1658759460529</Id>
						<Name>p_nodeType</Name>
						<X>60</X>
						<Y>210</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>OL_GridNodeType</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1658759460527</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
					<Variable Class="Parameter">
						<Id>1670516047533</Id>
						<Name>p_gridNode</Name>
						<X>60</X>
						<Y>170</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties SaveInSnapshot="true" ModificatorType="STATIC">
							<Type>GridNode</Type>
							<UnitType>NONE</UnitType>
							<SdArray>false</SdArray>
							<ParameterEditor>
								<Id>1670516047531</Id>
								<EditorContolType>TEXT_BOX</EditorContolType>
								<MinSliderValue>0</MinSliderValue>
								<MaxSliderValue>100</MaxSliderValue>
								<DelimeterType>NO_DELIMETER</DelimeterType>
							</ParameterEditor>
						</Properties>
					</Variable>
				</Variables>
				<Events>
					<Event>
						<Id>1670933873241</Id>
						<Name>e_gatherNodeInfo</Name>
						<X>60</X>
						<Y>260</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Properties TriggerType="timeout" Mode="cyclic">
							<Timeout Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</Timeout>
							<Rate Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="RateUnits">PER_HOUR</Unit>
							</Rate>
							<Id>1658477089917</Id>
							<OccurrenceAtTime>true</OccurrenceAtTime>
							<OccurrenceDate>1671004800000</OccurrenceDate>
							<OccurrenceTime Class="CodeUnitValue">
								<Code>1</Code>
								<Unit Class="TimeUnits">MINUTE</Unit>
							</OccurrenceTime>
							<RecurrenceCode Class="CodeUnitValue">
								<Code>energyModel.p_timeStep_h</Code>
								<Unit Class="TimeUnits">HOUR</Unit>
							</RecurrenceCode>
							<Condition>false</Condition>
						</Properties>
						<Action>v_localProduction_kW = 0;&#xD;
v_batteryProduction_kW = 0;&#xD;
v_vehicleProduction_kW = 0;&#xD;
&#xD;
v_vehicleConsumption_kW = 0;&#xD;
v_fixedConsumptionProfiles_kW = 0;&#xD;
v_electricHeatingConsumption_kW = 0;&#xD;
v_batteryConsumption_kW = 0;&#xD;
v_electricCookingPower_kW = 0;&#xD;
&#xD;
for( GridConnection g : realAgent.getConnectedAgent().c_electricityGridConnections){&#xD;
	v_localProduction_kW += g.v_pvProductionElectric_kW + g.v_windProductionElectric_kW - min(0,g.v_conversionPowerElectric_kW);&#xD;
	v_batteryProduction_kW += g.v_batteryPowerElectric_kW &lt; 0 ? -g.v_batteryPowerElectric_kW : 0;&#xD;
	v_vehicleProduction_kW += g.v_evChargingPowerElectric_kW &lt; 0 ? g.v_evChargingPowerElectric_kW : 0;&#xD;
	&#xD;
	v_vehicleConsumption_kW += g.v_evChargingPowerElectric_kW &gt; 0 ? g.v_evChargingPowerElectric_kW : 0;&#xD;
	v_fixedConsumptionProfiles_kW += g.v_fixedConsumptionElectric_kW ;&#xD;
	v_electricCookingPower_kW += g.v_electricHobConsumption_kW;&#xD;
	v_electricHeatingConsumption_kW += max(0,g.v_conversionPowerElectric_kW - g.v_electricHobConsumption_kW);&#xD;
	v_batteryConsumption_kW += g.v_batteryPowerElectric_kW &gt; 0 ? g.v_batteryPowerElectric_kW : 0;&#xD;
&#xD;
}&#xD;
&#xD;
v_congestionPrice_eurpkWh = p_gridNode.v_currentCongestionPrice_eurpkWh;	&#xD;
ch_cumulativeSupply.updateData();&#xD;
ch_cumulativeDemand.updateData();&#xD;
pl_powerFlows.updateData();</Action>
					</Event>
				</Events>
				<Functions>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1658753874720</Id>
						<Name>f_setNodeVisual</Name>
						<X>60</X>
						<Y>140</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>false</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>t_nodeID.setText(p_nodeID);&#xD;
t_nodetype.setText(p_nodeType);</Body>
					</Function>
					<Function AccessType="public" StaticFunction="false">
						<ReturnModificator>VOID</ReturnModificator>
						<ReturnType>double</ReturnType>
						<Id>1670933638545</Id>
						<Name>f_onClick</Name>
						<X>60</X>
						<Y>120</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<Body>group.setY(450 - this.getY());&#xD;
group.setX(1120 - this.getX());&#xD;
&#xD;
for(UI_GridConnection g : kpiVisuals.uI_GridConnections){&#xD;
	g.pl_powerFlows.setVisible(false);&#xD;
	g.t_plotname.setVisible(false);&#xD;
	g.t_assets.setVisible(false);&#xD;
}&#xD;
for(UI_GridNode n : kpiVisuals.uI_GridNodes){&#xD;
	n.group.setVisible(false);&#xD;
	group.setVisible(true);&#xD;
}</Body>
					</Function>
				</Functions>
				<AgentLinks>
					<AgentLink>
						<Id>1658752913449</Id>
						<Name>connections</Name>
						<X>250</X>
						<Y>-80</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>COLLECTION_OF_LINKS</AgentLinkType>
						<AgentLinkBidirectional>true</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<DrawLine>true</DrawLine>
						<LineStyle>DOTTED</LineStyle>
						<LineWidth>0.5</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
					<AgentLink>
						<Id>1658760368568</Id>
						<Name>realAgent</Name>
						<X>240</X>
						<Y>-110</Y>
						<Label>
							<X>15</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>false</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>true</ShowLabel>
						<HandleReceiveInConnections>false</HandleReceiveInConnections>
						<AgentLinkType>SINGLE_LINK</AgentLinkType>
						<AgentReferenceId>1658477288308</AgentReferenceId>
						<AgentLinkBidirectional>false</AgentLinkBidirectional>
						<MessageType>Object</MessageType>
						<LineStyle>SOLID</LineStyle>
						<LineWidth>1</LineWidth>
						<LineColor>-16777216</LineColor>
						<LineZOrder>UNDER_AGENTS</LineZOrder>
						<LineArrow>NONE</LineArrow>
						<LineArrowPosition>END</LineArrowPosition>
					</AgentLink>
				</AgentLinks>
				<Presentation>
					<Level>
						<Id>1658752913453</Id>
						<Name>level</Name>
						<X>0</X>
						<Y>0</Y>
						<Label>
							<X>10</X>
							<Y>0</Y>
						</Label>
						<PublicFlag>true</PublicFlag>
						<PresentationFlag>true</PresentationFlag>
						<ShowLabel>false</ShowLabel>
						<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
						<Z>0</Z>
						<LevelVisibility>DIM_NON_CURRENT</LevelVisibility>
						<Presentation>
							<Rectangle>
								<Id>1658752947986</Id>
								<Name>netNodeVisual</Name>
								<X>-110</X>
								<Y>-100</Y>
								<Label>
									<X>10</X>
									<Y>10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<OnClickCode>f_onClick();</OnClickCode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-4144960</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>DASHED</LineStyle>
								<Width>230</Width>
								<Height>100</Height>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Rectangle>
							<Text>
								<Id>1658753927156</Id>
								<Name>t_nodeID</Name>
								<X>16</X>
								<Y>-121</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>ID</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>CENTER</Alignment>
							</Text>
							<Text>
								<Id>1658754055524</Id>
								<Name>t_nodeText</Name>
								<X>-35</X>
								<Y>-121</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>-Coop:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1658759394610</Id>
								<Name>t_nodetype</Name>
								<X>-35</X>
								<Y>-121</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>Coop level
</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>1</Style>
								</Font>
								<Alignment>RIGHT</Alignment>
							</Text>
							<Text>
								<Id>1658762845688</Id>
								<Name>text</Name>
								<X>-90</X>
								<Y>-80</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>load:</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>2</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1658762845695</Id>
								<Name>t_loadElectricText</Name>
								<X>-90</X>
								<Y>-60</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>0 MWe</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<Text>
								<Id>1660136208763</Id>
								<Name>t_loadThermalText</Name>
								<X>-90</X>
								<Y>-40</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Color>-16777216</Color>
								<Text>0 MWth</Text>
								<Font>
									<Name>SansSerif</Name>
									<Size>12</Size>
									<Style>0</Style>
								</Font>
								<Alignment>LEFT</Alignment>
							</Text>
							<TimePlot>
								<Id>1670531662645</Id>
								<Name>plot</Name>
								<X>-30</X>
								<Y>-125</Y>
								<Label>
									<X>0</X>
									<Y>-10</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<AutoUpdate>true</AutoUpdate>
								<RecurrenceProperties>
									<Id>1751011894154</Id>
									<OccurrenceAtTime>true</OccurrenceAtTime>
									<OccurrenceDate>1670400000000</OccurrenceDate>
									<OccurrenceTime Class="CodeUnitValue">
										<Code>0</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</OccurrenceTime>
									<RecurrenceCode Class="CodeUnitValue">
										<Code>0.25</Code>
										<Unit Class="TimeUnits">HOUR</Unit>
									</RecurrenceCode>
								</RecurrenceProperties>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Width>150</Width>
								<Height>130</Height>
								<BackgroundColor/>
								<BorderColor/>
								<ChartArea>
									<XOffset>30</XOffset>
									<YOffset>30</YOffset>
									<Width>110</Width>
									<Height>70</Height>
									<BackgroundColor>-1</BackgroundColor>
									<BorderColor>-16777216</BorderColor>
									<GridColor>-12566464</GridColor>
								</ChartArea>
								<Legend>
									<Place>SOUTH</Place>
									<TextColor>-16777216</TextColor>
									<Size>30</Size>
								</Legend>
								<Labels>
									<HorLabelsPosition>DEFAULT</HorLabelsPosition>
									<VerLabelsPosition>DEFAULT</VerLabelsPosition>
									<TextColor>-12566464</TextColor>
								</Labels>
								<ShowLegend>false</ShowLegend>
								<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
								<TimeWindowUnits>DAY</TimeWindowUnits>
								<VerScaleFromExpression>- p_gridNode.p_capacity_kW - p_gridNode.p_capacity_kW *0.2</VerScaleFromExpression>
								<VerScaleToExpression>p_gridNode.p_capacity_kW + p_gridNode.p_capacity_kW * 0.2</VerScaleToExpression>
								<VerScaleType>FIXED</VerScaleType>
								<DrawLine>true</DrawLine>
								<Interpolation>LINEAR</Interpolation>
								<DatasetExpression>
									<Title>Node capacity</Title>
									<Id>1670531662640</Id>
									<Expression>my_dataset</Expression>
									<Color>-1468806</Color>
									<Expression2>p_gridNode.p_capacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title>Current load on grid [kW]</Title>
									<Id>1670531662641</Id>
									<Expression>my_dataset2</Expression>
									<Color>-8355712</Color>
									<Expression2>p_gridNode.v_currentLoadElectricity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>2.0</LineWidth>
								</DatasetExpression>
								<DatasetExpression>
									<Title/>
									<Id>1670531662642</Id>
									<Expression>my_dataset1</Expression>
									<Color>-1468806</Color>
									<Expression2>- p_gridNode.p_capacity_kW</Expression2>
									<Expression2Flag>true</Expression2Flag>
									<PointStyle>NONE</PointStyle>
									<LineWidth>1.0</LineWidth>
								</DatasetExpression>
								<SamplesToKeep>1000</SamplesToKeep>
								<TimeWindowExpression>2</TimeWindowExpression>
								<FillAreaUnderLine>false</FillAreaUnderLine>
								<LabelFormat>HH_mm</LabelFormat>
							</TimePlot>
							<Oval>
								<Id>1670581717233</Id>
								<Name>oval</Name>
								<X>0</X>
								<Y>0</Y>
								<Label>
									<X>0</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<ZHeight>10</ZHeight>
								<LineWidth>1</LineWidth>
								<LineColor>-16777216</LineColor>
								<LineMaterial>null</LineMaterial>
								<LineStyle>SOLID</LineStyle>
								<RadiusX>1.875</RadiusX>
								<RadiusY>40</RadiusY>
								<Rotation>0.0</Rotation>
								<FillColor>-1</FillColor>
								<FillMaterial>null</FillMaterial>
							</Oval>
							<Group>
								<Id>1670935352089</Id>
								<Name>group</Name>
								<X>570</X>
								<Y>400</Y>
								<Label>
									<X>10</X>
									<Y>0</Y>
								</Label>
								<PublicFlag>true</PublicFlag>
								<PresentationFlag>true</PresentationFlag>
								<ShowLabel>false</ShowLabel>
								<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
								<EmbeddedIcon>false</EmbeddedIcon>
								<Z>0</Z>
								<Rotation>0.0</Rotation>
								<Presentation>
									<TimeStackChart>
										<Id>1670933728177</Id>
										<Name>ch_cumulativeSupply</Name>
										<X>-220</X>
										<Y>-140</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<AutoUpdate>false</AutoUpdate>
										<RecurrenceProperties>
											<Id>1751011894158</Id>
											<OccurrenceAtTime>true</OccurrenceAtTime>
											<OccurrenceDate>1671004800000</OccurrenceDate>
											<OccurrenceTime Class="CodeUnitValue">
												<Code>0</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</OccurrenceTime>
											<RecurrenceCode Class="CodeUnitValue">
												<Code>1</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</RecurrenceCode>
										</RecurrenceProperties>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Width>480</Width>
										<Height>210</Height>
										<BackgroundColor/>
										<BorderColor/>
										<ChartArea>
											<XOffset>50</XOffset>
											<YOffset>30</YOffset>
											<Width>410</Width>
											<Height>120</Height>
											<BackgroundColor>-1</BackgroundColor>
											<BorderColor>-16777216</BorderColor>
											<GridColor>-12566464</GridColor>
										</ChartArea>
										<Legend>
											<Place>SOUTH</Place>
											<TextColor>-16777216</TextColor>
											<Size>30</Size>
										</Legend>
										<Labels>
											<HorLabelsPosition>DEFAULT</HorLabelsPosition>
											<VerLabelsPosition>DEFAULT</VerLabelsPosition>
											<TextColor>-12566464</TextColor>
										</Labels>
										<ShowLegend>true</ShowLegend>
										<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
										<TimeWindowUnits>HOUR</TimeWindowUnits>
										<TimeWindowExpression>48</TimeWindowExpression>
										<DatasetExpression>
											<Id>1658477089923</Id>
											<Expression>my_dataset</Expression>
											<Color>-6632142</Color>
											<Expression2>v_vehicleProduction_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Vehicle to X</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1658477089922</Id>
											<Expression>my_dataset</Expression>
											<Color>-256</Color>
											<Expression2>v_localProduction_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Local production [kW]</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1658477089921</Id>
											<Expression>my_dataset</Expression>
											<Color>-23296</Color>
											<Expression2>v_batteryProduction_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Battery to X [kW]</Title>
										</DatasetExpression>
										<SamplesToKeep>10000</SamplesToKeep>
										<VerScaleToExpression>1</VerScaleToExpression>
										<VerScaleType>AUTO</VerScaleType>
										<LabelFormat>HH_mm</LabelFormat>
									</TimeStackChart>
									<TimeStackChart>
										<Id>1670935101040</Id>
										<Name>ch_cumulativeDemand</Name>
										<X>-220</X>
										<Y>-370</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<AutoUpdate>false</AutoUpdate>
										<RecurrenceProperties>
											<Id>1751011894160</Id>
											<OccurrenceAtTime>true</OccurrenceAtTime>
											<OccurrenceDate>1671004800000</OccurrenceDate>
											<OccurrenceTime Class="CodeUnitValue">
												<Code>0</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</OccurrenceTime>
											<RecurrenceCode Class="CodeUnitValue">
												<Code>1</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</RecurrenceCode>
										</RecurrenceProperties>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Width>490</Width>
										<Height>230</Height>
										<BackgroundColor/>
										<BorderColor/>
										<ChartArea>
											<XOffset>50</XOffset>
											<YOffset>30</YOffset>
											<Width>410</Width>
											<Height>120</Height>
											<BackgroundColor>-1</BackgroundColor>
											<BorderColor>-16777216</BorderColor>
											<GridColor>-12566464</GridColor>
										</ChartArea>
										<Legend>
											<Place>SOUTH</Place>
											<TextColor>-16777216</TextColor>
											<Size>50</Size>
										</Legend>
										<Labels>
											<HorLabelsPosition>DEFAULT</HorLabelsPosition>
											<VerLabelsPosition>DEFAULT</VerLabelsPosition>
											<TextColor>-12566464</TextColor>
										</Labels>
										<ShowLegend>true</ShowLegend>
										<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
										<TimeWindowUnits>HOUR</TimeWindowUnits>
										<TimeWindowExpression>48</TimeWindowExpression>
										<DatasetExpression>
											<Id>1670935101036</Id>
											<Expression>my_dataset</Expression>
											<Color>-14774017</Color>
											<Expression2>v_fixedConsumptionProfiles_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Consumption profiles [kW]</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1670935101035</Id>
											<Expression>my_dataset</Expression>
											<Color>-6632142</Color>
											<Expression2>v_vehicleConsumption_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Charging vehicle [kW]</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1658477089920</Id>
											<Expression>my_dataset</Expression>
											<Color>-5952982</Color>
											<Expression2>v_electricHeatingConsumption_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>Heating assets consumption [kW]</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1670935101037</Id>
											<Expression>my_dataset</Expression>
											<Color>-23296</Color>
											<Expression2>v_batteryConsumption_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>charging Battery [kW]</Title>
										</DatasetExpression>
										<DatasetExpression>
											<Id>1658477089919</Id>
											<Expression>my_dataset</Expression>
											<Color>-2461482</Color>
											<Expression2>v_electricCookingPower_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<Title>e-cooking power [kW]</Title>
										</DatasetExpression>
										<SamplesToKeep>10000</SamplesToKeep>
										<VerScaleToExpression>1</VerScaleToExpression>
										<VerScaleType>AUTO</VerScaleType>
										<LabelFormat>HH_mm</LabelFormat>
									</TimeStackChart>
									<Text>
										<Id>1670936666425</Id>
										<Name>text1</Name>
										<X>-72</X>
										<Y>-361</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Cumulative electricity demand</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<Text>
										<Id>1670936843786</Id>
										<Name>text2</Name>
										<X>-80</X>
										<Y>-130</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D</DrawMode>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Z>0</Z>
										<Rotation>0.0</Rotation>
										<Color>-16777216</Color>
										<Text>Cumulative electricity supply</Text>
										<Font>
											<Name>SansSerif</Name>
											<Size>14</Size>
											<Style>0</Style>
										</Font>
										<Alignment>CENTER</Alignment>
									</Text>
									<TimePlot>
										<Id>1671704217693</Id>
										<Name>pl_powerFlows</Name>
										<X>-220</X>
										<Y>60</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<AutoUpdate>false</AutoUpdate>
										<RecurrenceProperties>
											<Id>1751011894164</Id>
											<OccurrenceAtTime>true</OccurrenceAtTime>
											<OccurrenceDate>1668499200000</OccurrenceDate>
											<OccurrenceTime Class="CodeUnitValue">
												<Code>0</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</OccurrenceTime>
											<RecurrenceCode Class="CodeUnitValue">
												<Code>15</Code>
												<Unit Class="TimeUnits">MINUTE</Unit>
											</RecurrenceCode>
										</RecurrenceProperties>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Width>480</Width>
										<Height>280</Height>
										<BackgroundColor/>
										<BorderColor/>
										<ChartArea>
											<XOffset>50</XOffset>
											<YOffset>30</YOffset>
											<Width>400</Width>
											<Height>160</Height>
											<BackgroundColor>-1</BackgroundColor>
											<BorderColor>-16777216</BorderColor>
											<GridColor>-12566464</GridColor>
										</ChartArea>
										<Legend>
											<Place>SOUTH</Place>
											<TextColor>-16777216</TextColor>
											<Size>60</Size>
										</Legend>
										<Labels>
											<HorLabelsPosition>DEFAULT</HorLabelsPosition>
											<VerLabelsPosition>DEFAULT</VerLabelsPosition>
											<TextColor>-12566464</TextColor>
										</Labels>
										<ShowLegend>true</ShowLegend>
										<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
										<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
										<VerScaleFromExpression>0</VerScaleFromExpression>
										<VerScaleToExpression>1</VerScaleToExpression>
										<VerScaleType>AUTO</VerScaleType>
										<DrawLine>true</DrawLine>
										<Interpolation>LINEAR</Interpolation>
										<DatasetExpression>
											<Title>GridNode current power [kW]</Title>
											<Id>1671704217684</Id>
											<Expression>my_dataset</Expression>
											<Color>-3308225</Color>
											<Expression2>p_gridNode.v_currentLoadElectricity_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>2.0</LineWidth>
										</DatasetExpression>
										<DatasetExpression>
											<Title>EV charging demand [kW]</Title>
											<Id>1671704217685</Id>
											<Expression>my_dataset3</Expression>
											<Color>-6632142</Color>
											<Expression2>v_vehicleConsumption_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<DatasetExpression>
											<Title>Battery load [kW]</Title>
											<Id>1671704217686</Id>
											<Expression>my_dataset4</Expression>
											<Color>-4565549</Color>
											<Expression2>v_batteryConsumption_kW - v_batteryProduction_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<DatasetExpression>
											<Title>Total production [kW]</Title>
											<Id>1671704217687</Id>
											<Expression>my_dataset5</Expression>
											<Color>-14774017</Color>
											<Expression2>-v_localProduction_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<DatasetExpression>
											<Title>Electric heating power [kW]</Title>
											<Id>1671704217688</Id>
											<Expression>my_dataset1</Expression>
											<Color>-256</Color>
											<Expression2>v_electricHeatingConsumption_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<DatasetExpression>
											<Title>Consumption other [kW]</Title>
											<Id>1658477089918</Id>
											<Expression>my_dataset6</Expression>
											<Color>-3137392</Color>
											<Expression2>v_fixedConsumptionProfiles_kW</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<SamplesToKeep>1000</SamplesToKeep>
										<TimeWindowExpression>48</TimeWindowExpression>
										<FillAreaUnderLine>false</FillAreaUnderLine>
										<LabelFormat>HH_mm</LabelFormat>
									</TimePlot>
									<TimePlot>
										<Id>1675683844543</Id>
										<Name>pl_powerFlows1</Name>
										<X>-220</X>
										<Y>-550</Y>
										<Label>
											<X>0</X>
											<Y>-10</Y>
										</Label>
										<PublicFlag>true</PublicFlag>
										<PresentationFlag>true</PresentationFlag>
										<ShowLabel>false</ShowLabel>
										<DrawMode>SHAPE_DRAW_2D3D</DrawMode>
										<AutoUpdate>true</AutoUpdate>
										<RecurrenceProperties>
											<Id>1751011894166</Id>
											<OccurrenceAtTime>true</OccurrenceAtTime>
											<OccurrenceDate>1668499200000</OccurrenceDate>
											<OccurrenceTime Class="CodeUnitValue">
												<Code>0</Code>
												<Unit Class="TimeUnits">HOUR</Unit>
											</OccurrenceTime>
											<RecurrenceCode Class="CodeUnitValue">
												<Code>15</Code>
												<Unit Class="TimeUnits">MINUTE</Unit>
											</RecurrenceCode>
										</RecurrenceProperties>
										<EmbeddedIcon>false</EmbeddedIcon>
										<Width>480</Width>
										<Height>220</Height>
										<BackgroundColor/>
										<BorderColor/>
										<ChartArea>
											<XOffset>50</XOffset>
											<YOffset>30</YOffset>
											<Width>400</Width>
											<Height>100</Height>
											<BackgroundColor>-1</BackgroundColor>
											<BorderColor>-16777216</BorderColor>
											<GridColor>-12566464</GridColor>
										</ChartArea>
										<Legend>
											<Place>SOUTH</Place>
											<TextColor>-16777216</TextColor>
											<Size>60</Size>
										</Legend>
										<Labels>
											<HorLabelsPosition>DEFAULT</HorLabelsPosition>
											<VerLabelsPosition>DEFAULT</VerLabelsPosition>
											<TextColor>-12566464</TextColor>
										</Labels>
										<ShowLegend>true</ShowLegend>
										<TimeWindowsMovementType>MOVEMENT_WITH_TIME</TimeWindowsMovementType>
										<TimeWindowUnits>MODEL_TIME_UNIT</TimeWindowUnits>
										<VerScaleFromExpression>0</VerScaleFromExpression>
										<VerScaleToExpression>1</VerScaleToExpression>
										<VerScaleType>AUTO</VerScaleType>
										<DrawLine>true</DrawLine>
										<Interpolation>LINEAR</Interpolation>
										<DatasetExpression>
											<Title>Congestion price</Title>
											<Id>1675683844536</Id>
											<Expression>my_dataset3</Expression>
											<Color>-8388480</Color>
											<Expression2>v_congestionPrice_eurpkWh</Expression2>
											<Expression2Flag>true</Expression2Flag>
											<PointStyle>NONE</PointStyle>
											<LineWidth>1.0</LineWidth>
										</DatasetExpression>
										<SamplesToKeep>1000</SamplesToKeep>
										<TimeWindowExpression>48</TimeWindowExpression>
										<FillAreaUnderLine>false</FillAreaUnderLine>
										<LabelFormat>HH_mm</LabelFormat>
									</TimePlot>
								</Presentation>
							</Group>
						</Presentation>
					</Level>
				</Presentation>
			</ActiveObjectClass>
		</ActiveObjectClasses>
		<DifferentialEquationsMethod>EULER</DifferentialEquationsMethod>
		<MixedEquationsMethod>RK45_NEWTON</MixedEquationsMethod>
		<AlgebraicEquationsMethod>MODIFIED_NEWTON</AlgebraicEquationsMethod>
		<AbsoluteAccuracy>1.0</AbsoluteAccuracy>
		<FixedTimeStep>1.0</FixedTimeStep>
		<RelativeAccuracy>1.0</RelativeAccuracy>
		<TimeAccuracy>0.1</TimeAccuracy>
		<Frame>
			<Id>1658477089997</Id>
			<Width>1920</Width>
			<Height>980</Height>
		</Frame>
		<Database>
			<Id>1658477089916</Id>
			<Logging>false</Logging>
			<AutoExport>false</AutoExport>
			<ShutdownCompact>false</ShutdownCompact>
			<ImportSettings/>
			<ExportSettings/>
		</Database>
		<RunConfiguration ActiveObjectClassId="1658477103140">
			<Id>1658477103163</Id>
			<Name>RunConfiguration</Name>
			<MaximumMemory>4096</MaximumMemory>
			<ModelTimeProperties>
				<StopOption>Stop at specified date</StopOption>
				<InitialDate>1672531200000</InitialDate>
				<InitialTime>0.0</InitialTime>
				<FinalDate>1704067200000</FinalDate>
				<FinalTime>8760.0</FinalTime>
			</ModelTimeProperties>
			<AnimationProperties>
				<StopNever>false</StopNever>
				<ExecutionMode>realTimeScaled</ExecutionMode>
				<RealTimeScale>10.0</RealTimeScale>
				<EnableZoomAndPanning>true</EnableZoomAndPanning>
				<EnableDeveloperPanel>true</EnableDeveloperPanel>
				<ShowDeveloperPanelOnStart>false</ShowDeveloperPanelOnStart>
			</AnimationProperties>
			<Inputs>
				<RunConfigurationInput>
					<Id>1661517220706</Id>
					<Name>P time step h</Name>
					<InputReference>
						<PackageName>zero_engine</PackageName>
						<ClassName>EnergyModel</ClassName>
						<ItemName>p_timeStep_h</ItemName>
					</InputReference>
				</RunConfigurationInput>
				<RunConfigurationInput>
					<Id>1661517213660</Id>
					<Name>B add kpi visuals</Name>
					<InputReference>
						<PackageName>zero_engine</PackageName>
						<ClassName>EnergyModel</ClassName>
						<ItemName>b_parallelizeConnectionOwners</ItemName>
					</InputReference>
				</RunConfigurationInput>
				<RunConfigurationInput>
					<Id>1663577689860</Id>
					<Name>P parallelize</Name>
					<InputReference>
						<PackageName>zero_engine</PackageName>
						<ClassName>EnergyModel</ClassName>
						<ItemName>b_parallelizeGridConnections</ItemName>
					</InputReference>
				</RunConfigurationInput>
			</Inputs>
			<Outputs/>
		</RunConfiguration>
		<JavaClasses>
			<JavaClass>
				<Id>1659091451342</Id>
				<Name>J_EAProduction</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAProduction&#xD;
 */&#xD;
public class J_EAProduction extends zero_engine.J_EA implements Serializable {&#xD;
	protected J_ProfilePointer profilePointer;&#xD;
	protected OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
	protected double totalEnergyCurtailed_kWh=0;&#xD;
	//protected double outputTemperature_degC;&#xD;
	protected double capacity_kW;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
	public J_EAProduction() {&#xD;
    }&#xD;
&#xD;
	/**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
	public J_EAProduction(Agent parentAgent, OL_EnergyAssetType type, String name, OL_EnergyCarriers energyCarrier, double capacity_kW, double timestep_h, J_ProfilePointer profile) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.energyAssetType = type;&#xD;
	    this.energyAssetName = name;&#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.capacity_kW = capacity_kW;&#xD;
&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    //this.outputTemperature_degC = outputTemperature_degC;&#xD;
		if (profile == null) {&#xD;
			profilePointer = ((GridConnection)parentAgent).energyModel.f_findProfile(name);&#xD;
		} else {&#xD;
			profilePointer = profile;&#xD;
		}&#xD;
		if (profile == null) {			&#xD;
			throw new RuntimeException("J_EAProduction needs to have valid profilePointer!");&#xD;
		}&#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrier);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
	&#xD;
	public void setCapacityElectric_kW(double capacityElectric_kW) {&#xD;
		// Calculate the difference with the set and the previous capacity to update totals in GC, GN and EnergyModel&#xD;
		if (energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
			double difference_kW = capacityElectric_kW - this.capacity_kW;&#xD;
			if (this.energyAssetType == OL_EnergyAssetType.WINDMILL &amp;&amp; this.parentAgent instanceof GridConnection) {		&#xD;
				((GridConnection) this.parentAgent).v_liveAssetsMetaData.totalInstalledWindPower_kW += difference_kW;&#xD;
				if (((GridConnection) this.parentAgent).p_parentNodeElectric != null) {&#xD;
					((GridConnection) this.parentAgent).p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.WINDMILL, difference_kW, true);&#xD;
				}&#xD;
				((GridConnection) this.parentAgent).c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledWindPower_kW += difference_kW);&#xD;
				((GridConnection) this.parentAgent).energyModel.v_liveAssetsMetaData.totalInstalledWindPower_kW += difference_kW;&#xD;
			}&#xD;
			else if (this.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC &amp;&amp; this.parentAgent instanceof GridConnection) {&#xD;
				((GridConnection) this.parentAgent).v_liveAssetsMetaData.totalInstalledPVPower_kW += difference_kW;&#xD;
				if (((GridConnection) this.parentAgent).p_parentNodeElectric != null) {&#xD;
					((GridConnection) this.parentAgent).p_parentNodeElectric.f_updateTotalInstalledProductionAssets(OL_EnergyAssetType.PHOTOVOLTAIC, difference_kW, true);&#xD;
				}&#xD;
				((GridConnection) this.parentAgent).c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledPVPower_kW += difference_kW);				&#xD;
				((GridConnection) this.parentAgent).energyModel.v_liveAssetsMetaData.totalInstalledPVPower_kW += difference_kW;&#xD;
			}&#xD;
	&#xD;
			this.capacity_kW = capacityElectric_kW;&#xD;
		} else {			&#xD;
			throw new RuntimeException("Production assets energy carrier is not electricity!");&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public double getCapacityElectric_kW() {&#xD;
		if (energyCarrier == OL_EnergyCarriers.ELECTRICITY) {&#xD;
			return this.capacity_kW;&#xD;
		} else {			&#xD;
			throw new RuntimeException("J_EAProduction is not electric!");&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public double getCapacityHeat_kW() {&#xD;
		if (energyCarrier == OL_EnergyCarriers.HEAT) {&#xD;
			return capacity_kW;			&#xD;
		} else {			&#xD;
			throw new RuntimeException("J_EAProduction is not thermal!");&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public String getName() {&#xD;
		return this.energyAssetName;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
    public void operate(double ratioOfCapacity) {&#xD;
		ratioOfCapacity = profilePointer.getCurrentValue();&#xD;
		&#xD;
		if (ratioOfCapacity&gt;0.0) { // Skip when there is no production -&gt; saves time?&#xD;
			double currentProduction_kW = ratioOfCapacity * this.capacity_kW;&#xD;
			&#xD;
	    	this.energyUse_kW = -currentProduction_kW;&#xD;
	    	this.energyUsed_kWh += this.energyUse_kW * this.timestep_h; 	    	    	&#xD;
	       	this.flowsMap.put(this.energyCarrier, -currentProduction_kW);&#xD;
	    	&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public void f_updateAllFlows(double powerFraction_fr) {&#xD;
		double ratioOfCapacity = profilePointer.getCurrentValue();&#xD;
		&#xD;
		if (ratioOfCapacity&gt;0.0) { // Skip when there is no production -&gt; saves time?&#xD;
			double currentProduction_kW = ratioOfCapacity * this.capacity_kW;&#xD;
			&#xD;
	    	this.energyUse_kW = -currentProduction_kW;&#xD;
	    	this.energyUsed_kWh += this.energyUse_kW * this.timestep_h; 	    	    	&#xD;
	       	this.flowsMap.put(this.energyCarrier, -currentProduction_kW);&#xD;
	       	if (parentAgent instanceof GridConnection) {    		&#xD;
	    		//((GridConnection)parentAgent).f_addFlows(arr, this);&#xD;
	    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
	    	}&#xD;
&#xD;
		}&#xD;
		this.lastFlowsMap.cloneMap(this.flowsMap);&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	this.clear();&#xD;
    }&#xD;
	&#xD;
    // This function could be removed, now that we have the more generic: curtailEnergyCarrierProduction&#xD;
    public void curtailElectricityProduction(double curtailmentSetpoint_kW) {  // This variable is called curtailmentSetpoint, but maybe its better to call it curtailment amount? it represents the amount of production we need to curtail, not the amount we want to produce.&#xD;
    	double currentProduction_kW = -this.lastFlowsMap.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    	//traceln("currentProduction_kW: " + currentProduction_kW);&#xD;
    	//traceln("curtailmentSetpoint_kW: " + curtailmentSetpoint_kW);&#xD;
    	double curtailmentPower_kW = max(0,min(currentProduction_kW, curtailmentSetpoint_kW));&#xD;
    	energyUsed_kWh += curtailmentPower_kW * timestep_h;&#xD;
    	this.totalEnergyCurtailed_kWh += curtailmentPower_kW * timestep_h;&#xD;
    	this.flowsMap.put(OL_EnergyCarriers.ELECTRICITY, -curtailmentPower_kW);&#xD;
    	this.energyUse_kW = -curtailmentPower_kW;&#xD;
    	this.lastFlowsMap.addFlow(OL_EnergyCarriers.ELECTRICITY, curtailmentPower_kW);&#xD;
    	this.lastEnergyUse_kW += curtailmentPower_kW;&#xD;
    	&#xD;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_removeFlows(this.flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	clear();&#xD;
    	&#xD;
    }&#xD;
    &#xD;
    public void curtailEnergyCarrierProduction(OL_EnergyCarriers curtailedEnergyCarrier, double curtailmentSetpoint_kW) {  // This variable is called curtailmentSetpoint, but maybe its better to call it curtailment amount? it represents the amount of production we need to curtail, not the amount we want to produce.&#xD;
    	&#xD;
    	if(this.energyCarrier != curtailedEnergyCarrier) {&#xD;
    		return;&#xD;
    	}&#xD;
    	&#xD;
    	double currentProduction_kW = -this.lastFlowsMap.get(curtailedEnergyCarrier);&#xD;
    	double curtailmentPower_kW = max(0,min(currentProduction_kW, curtailmentSetpoint_kW));&#xD;
    	energyUsed_kWh += curtailmentPower_kW * timestep_h;&#xD;
    	this.totalEnergyCurtailed_kWh += curtailmentPower_kW * timestep_h;&#xD;
    	this.flowsMap.put(curtailedEnergyCarrier, -curtailmentPower_kW);&#xD;
    	this.energyUse_kW = -curtailmentPower_kW;&#xD;
    	this.lastFlowsMap.addFlow(curtailedEnergyCarrier, curtailmentPower_kW);&#xD;
    	this.lastEnergyUse_kW += curtailmentPower_kW;&#xD;
    	&#xD;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_removeFlows(this.flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	clear();&#xD;
    }&#xD;
    &#xD;
    public double getEnergyCurtailed_kWh() {&#xD;
    	return this.totalEnergyCurtailed_kWh;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	this.totalEnergyCurtailed_kWh = 0;&#xD;
    	super.storeStatesAndReset();&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"capacity_kW = " + capacity_kW +" "+&#xD;
			"energyCarrier = " + energyCarrier +" "+&#xD;
			"energyProduced_kWh = " + (-this.energyUsed_kWh) +  " ";&#xD;
	}&#xD;
&#xD;
	public String getOwnerAgent() {&#xD;
		return parentAgent.agentInfo();&#xD;
	}&#xD;
&#xD;
	/*public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}*/&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659091479591</Id>
				<Name>J_EAStorage</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAStorage&#xD;
 */&#xD;
public abstract class J_EAStorage extends J_EA implements Serializable {&#xD;
&#xD;
	protected OL_EnergyCarriers storageMedium;&#xD;
	protected double storageCapacity_kWh;&#xD;
	protected double stateOfCharge_fr;&#xD;
	protected double initialstateOfCharge_fr;&#xD;
	protected double stateOfChargeStored_r;&#xD;
	//protected double lossFactor_r;&#xD;
	//protected double ambientTemperature_degC;&#xD;
	//protected String ambientTempType;&#xD;
	protected double discharged_kWh = 0;&#xD;
	protected double charged_kWh = 0;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAStorage() {&#xD;
    }&#xD;
&#xD;
    public void calculateLoss() {&#xD;
    }&#xD;
&#xD;
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {&#xD;
		stateOfCharge_fr += deltaEnergy_kWh / storageCapacity_kWh;&#xD;
	}&#xD;
	&#xD;
    @Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	stateOfChargeStored_r = stateOfCharge_fr;&#xD;
    	stateOfCharge_fr = initialstateOfCharge_fr;    &#xD;
    	charged_kWh = 0;&#xD;
    	discharged_kWh = 0;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;    	&#xD;
    	stateOfCharge_fr = stateOfChargeStored_r;&#xD;
    }&#xD;
    &#xD;
	public double getCurrentStateOfCharge_fr() {&#xD;
    	return this.stateOfCharge_fr;&#xD;
	}&#xD;
&#xD;
	public double getStorageCapacity_kWh() {&#xD;
		return this.storageCapacity_kWh;&#xD;
	}&#xD;
&#xD;
	public double getCurrentStateOfCharge_kWh() {&#xD;
		return this.stateOfCharge_fr * this.storageCapacity_kWh;&#xD;
	}&#xD;
		&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return 0;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) {&#xD;
	}&#xD;
&#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659091488030</Id>
				<Name>J_EAConversion</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversion&#xD;
 */&#xD;
public class J_EAConversion extends zero_engine.J_EA implements Serializable {&#xD;
	protected OL_EnergyCarriers energyCarrierProduced;&#xD;
	protected OL_EnergyCarriers energyCarrierConsumed;&#xD;
	protected double eta_r;&#xD;
	protected double inputCapacity_kW;&#xD;
	protected double outputCapacity_kW;&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversion() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    &#xD;
    public J_EAConversion(Agent parentAgent, OL_EnergyAssetType energyAssetType, double outputCapacity_kW, double efficiency_r, OL_EnergyCarriers energyCarrierProduced, OL_EnergyCarriers energyCarrierConsumed, double timestep_h) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.energyAssetType = energyAssetType;&#xD;
	    this.outputCapacity_kW = outputCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.energyCarrierProduced = energyCarrierProduced;&#xD;
	    this.energyCarrierConsumed = energyCarrierConsumed;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
&#xD;
    @Override&#xD;
    public void f_updateAllFlows(double powerFraction_fr) {&#xD;
    	if ( powerFraction_fr &lt; 0 ) {&#xD;
			throw new RuntimeException("Impossible to operate conversion asset with negative powerfraction.");    		&#xD;
    	}&#xD;
    	else if ( powerFraction_fr == 0 ) {&#xD;
    		this.lastFlowsMap.clear();&#xD;
    		this.lastEnergyUse_kW = 0;&#xD;
    		return;&#xD;
    	}&#xD;
    	else {&#xD;
    		super.f_updateAllFlows( powerFraction_fr );&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public void operate(double ratioOfCapacity) {&#xD;
		this.energyUse_kW = ratioOfCapacity * this.inputCapacity_kW * (1 - this.eta_r);&#xD;
		this.energyUsed_kWh += this.energyUse_kW * this.timestep_h;&#xD;
    	this.flowsMap.put(this.energyCarrierConsumed, ratioOfCapacity * this.inputCapacity_kW);&#xD;
    	this.flowsMap.addFlow(this.energyCarrierProduced, -ratioOfCapacity * this.outputCapacity_kW); // We don't put here, in case the energy carrier is the same&#xD;
	}&#xD;
	&#xD;
	public void setInputCapacity_kW ( double inputCapacity_kW ) {&#xD;
		this.inputCapacity_kW = inputCapacity_kW;&#xD;
		this.outputCapacity_kW = this.inputCapacity_kW * this.eta_r;&#xD;
	}&#xD;
	&#xD;
	public void setOutputCapacity_kW ( double outputCapacity_kW ) {&#xD;
		this.outputCapacity_kW = outputCapacity_kW;&#xD;
		this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	}&#xD;
	&#xD;
	public void setEta_r( double efficiency_r) {&#xD;
		this.eta_r = efficiency_r;&#xD;
		this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	}&#xD;
	&#xD;
	public double getInputCapacity_kW() {&#xD;
		return this.inputCapacity_kW;&#xD;
	}&#xD;
&#xD;
	public double getOutputCapacity_kW() {&#xD;
		return this.outputCapacity_kW;&#xD;
	}&#xD;
	&#xD;
	public double getEta_r() {&#xD;
		return this.eta_r;&#xD;
	}&#xD;
	&#xD;
	public OL_EnergyCarriers getEnergyCarrierProduced() {&#xD;
		return this.energyCarrierProduced;&#xD;
	}&#xD;
	&#xD;
	public OL_EnergyCarriers getEnergyCarrierConsumed() {&#xD;
		return this.energyCarrierConsumed;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {	&#xD;
		return  this.energyAssetType + " in GC: " + this.parentAgent + ", "			&#xD;
				+ this.energyCarrierConsumed + " -&gt; " + this.energyCarrierProduced + ", "&#xD;
				+ "OutputCapacity: " + this.outputCapacity_kW + " kW, " &#xD;
				+ "with efficiency: " + this.eta_r + ", "&#xD;
				+ "Current output: " + -this.getLastFlows().get(this.energyCarrierProduced) + " kW";&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}                         </Text>
			</JavaClass>
			<JavaClass>
				<Id>1659104834899</Id>
				<Name>J_EAConsumption</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConsumption&#xD;
 */&#xD;
public class J_EAConsumption extends zero_engine.J_EA implements Serializable {&#xD;
	protected J_ProfilePointer profilePointer;&#xD;
	public double yearlyDemand_kWh;&#xD;
	protected OL_EnergyCarriers energyCarrier;&#xD;
	private double consumptionScaling_fr = 1;&#xD;
	public double loadLoad_kWh = 0;&#xD;
	//private J_profilePointer profilePointer;&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConsumption() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAConsumption(Agent parentAgent, OL_EnergyAssetType type, String name, double yearlyDemand_kWh, OL_EnergyCarriers energyCarrier, double timestep_h, J_ProfilePointer profile) {&#xD;
		/*if (yearlyDemand_kWh == 0.0) {&#xD;
			throw new RuntimeException("Unable to construct J_EAConsumption: " + name + " because consumption is zero." );&#xD;
		}*/&#xD;
    	&#xD;
    	this.energyAssetName = name;&#xD;
		this.energyAssetType = type;&#xD;
    	this.parentAgent = parentAgent;&#xD;
		this.yearlyDemand_kWh = yearlyDemand_kWh;&#xD;
		this.energyCarrier =  energyCarrier;&#xD;
		&#xD;
		this.timestep_h = timestep_h;&#xD;
		if (profile == null) {&#xD;
			profilePointer = ((GridConnection)parentAgent).energyModel.f_findProfile(name);&#xD;
		} else {&#xD;
			profilePointer = profile;&#xD;
		}		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrier);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
    public String getAssetName() {&#xD;
    	return this.energyAssetName;&#xD;
    }&#xD;
    &#xD;
    public void setConsumptionScaling_fr(double consumptionScaling_fr) {&#xD;
    	this.consumptionScaling_fr = consumptionScaling_fr;&#xD;
    }&#xD;
    &#xD;
    public double getConsumptionScaling_fr() {&#xD;
    	return this.consumptionScaling_fr;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public void operate(double ratioOfCapacity) {&#xD;
		&#xD;
		if (this.profilePointer != null) {			&#xD;
			ratioOfCapacity = this.profilePointer.getCurrentValue();&#xD;
		}&#xD;
		&#xD;
    	double consumption_kW = ratioOfCapacity * this.yearlyDemand_kWh * this.consumptionScaling_fr;&#xD;
		&#xD;
    	this.energyUse_kW = consumption_kW;&#xD;
    	this.energyUsed_kWh += this.energyUse_kW * this.timestep_h;&#xD;
&#xD;
		flowsMap.put(this.energyCarrier, consumption_kW);		&#xD;
&#xD;
   	}&#xD;
	&#xD;
    public Pair&lt;J_FlowsMap, Double&gt; curtailElectricityConsumption(double curtailmentSetpoint_kW) {&#xD;
    	if (this.energyCarrier != OL_EnergyCarriers.ELECTRICITY) {&#xD;
    		throw new RuntimeException("Unable to curtail the Consumption asset with energycarrier: " + this.energyCarrier);&#xD;
    	}&#xD;
&#xD;
    	double currentElectricityConsumption_kW = this.lastFlowsMap.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    	double curtailmentPower_kW = max(0,min(currentElectricityConsumption_kW, curtailmentSetpoint_kW));&#xD;
    	energyUsed_kWh -= curtailmentPower_kW * timestep_h;&#xD;
    	loadLoad_kWh += curtailmentPower_kW * timestep_h;&#xD;
&#xD;
    	J_FlowsMap flowsMap = new J_FlowsMap();&#xD;
    	flowsMap.put(OL_EnergyCarriers.ELECTRICITY, -curtailmentPower_kW);&#xD;
    	this.energyUse_kW = -curtailmentPower_kW;&#xD;
&#xD;
    	this.lastFlowsMap.put(OL_EnergyCarriers.ELECTRICITY, this.lastFlowsMap.get(OL_EnergyCarriers.ELECTRICITY) - curtailmentPower_kW);&#xD;
&#xD;
    	this.lastEnergyUse_kW -= curtailmentPower_kW;&#xD;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_removeFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	return new Pair(flowsMap, this.energyUse_kW);&#xD;
    }&#xD;
&#xD;
    public J_ProfilePointer getProfilePointer() {&#xD;
    	return this.profilePointer;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"parentAgent = " + this.parentAgent +" " +&#xD;
			"energyCarrier = " + this.energyCarrier + " " + &#xD;
			"yearlyDemand_kWh = " + this.yearlyDemand_kWh;&#xD;
	}&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659108919926</Id>
				<Name>J_EA</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EA&#xD;
 */&#xD;
import java.util.EnumSet;&#xD;
&#xD;
abstract public class J_EA implements Cloneable {&#xD;
	&#xD;
	 protected Agent parentAgent;&#xD;
	 public OL_EnergyAssetType energyAssetType;&#xD;
	 public String energyAssetName;&#xD;
	 protected double v_powerFraction_fr = 0; // Better to make this one protected? Public is needed to access from other packages, for example when inheriting a GC-type in your project with its own flexmanagement functions&#xD;
	 protected J_FlowsMap flowsMap = new J_FlowsMap();&#xD;
	 protected J_FlowsMap lastFlowsMap = new J_FlowsMap();&#xD;
	 protected double lastEnergyUse_kW = 0.0;&#xD;
	 &#xD;
	 protected EnumSet&lt;OL_EnergyCarriers&gt; activeProductionEnergyCarriers = EnumSet.noneOf(OL_EnergyCarriers.class); // To fill activeProductionEnergyCarriers in GridConnections and EnergyModel	&#xD;
	 protected EnumSet&lt;OL_EnergyCarriers&gt; activeConsumptionEnergyCarriers = EnumSet.noneOf(OL_EnergyCarriers.class); // To fill activeConsumptionEnergyCarriers in GridConnections and EnergyModel&#xD;
&#xD;
	 protected double energyUsed_kWh = 0.0;&#xD;
	 protected double energyUse_kW = 0.0;&#xD;
	 protected double energyUsedStored_kWh = 0.0;&#xD;
  	 protected double timestep_h;&#xD;
 &#xD;
  	 protected boolean isRemoved = false;&#xD;
  	 &#xD;
  	 // Are these needed?&#xD;
	 protected double heatProduced_kWh = 0.0;&#xD;
	 protected double heatConsumed_kWh = 0.0;&#xD;
	 protected double electricityProduced_kWh = 0.0;&#xD;
	 &#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EA() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EA(Agent parentAgent, double capacityElectric_kW, double capacityHeat_kW, double capacityGas_kW) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
    &#xD;
    protected void registerEnergyAsset() {&#xD;
		/*if (parentAgent instanceof GridConnection) {&#xD;
			this.selectedEnergyCarriers = ((GridConnection)parentAgent).energyModel.c_selectedEnergyCarriers;&#xD;
		}&#xD;
		else if (parentAgent instanceof GridNode) {&#xD;
			this.selectedEnergyCarriers = ((GridNode)parentAgent).energyModel.c_selectedEnergyCarriers;&#xD;
		}*/&#xD;
		&#xD;
		// TODO: check if EA is using an energycarrier that is not in the selectedenergycarriers. If so, throw an error!&#xD;
    	if ( parentAgent instanceof GridConnection) {&#xD;
    		((GridConnection)parentAgent).f_connectToJ_EA(this);&#xD;
    	} else {&#xD;
    		traceln("Energy asset %s doesn't have a valid parent agent! Will not be operated!", this);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void reRegisterEnergyAsset() {&#xD;
    	if (!this.isRemoved) {&#xD;
    		throw new RuntimeException("Can not register energy asset that was not removed.");&#xD;
    	}&#xD;
    	else {&#xD;
    		this.isRemoved = false;&#xD;
    		this.registerEnergyAsset();&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void removeEnergyAsset() {&#xD;
    	this.isRemoved = true;&#xD;
    	if ( parentAgent instanceof GridConnection) {&#xD;
    		((GridConnection)parentAgent).f_removeTheJ_EA(this);&#xD;
    	} else {    		&#xD;
    		traceln("Energy asset %s doesn't have a valid parent agent! Energy Asset not removed!", this);&#xD;
    	}&#xD;
    	&#xD;
    }&#xD;
   &#xD;
    public void f_updateAllFlows(double powerFraction_fr) {&#xD;
&#xD;
     	double powerFractionBounded_fr = min(1,max(-1, powerFraction_fr));&#xD;
     	operate(powerFractionBounded_fr);&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	/*&#xD;
    	if (ui_energyAsset!= null) {&#xD;
    		//ui_energyAsset.f_addFlows(arr);&#xD;
    		ui_energyAsset.f_addFlows(flowsMap);&#xD;
    	}&#xD;
    	*/&#xD;
    	this.lastFlowsMap.cloneMap(this.flowsMap);&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	this.clear();&#xD;
    }&#xD;
    &#xD;
    public void f_updateAllFlows() {&#xD;
    	this.f_updateAllFlows(this.v_powerFraction_fr);&#xD;
    }&#xD;
    &#xD;
    public void f_setPowerFraction_fr(double powerFraction_fr) {&#xD;
    	this.v_powerFraction_fr = powerFraction_fr;&#xD;
    }&#xD;
    &#xD;
    public void clear() {&#xD;
	    flowsMap.clear();   	  	&#xD;
    	energyUse_kW = 0;&#xD;
    	v_powerFraction_fr = 0;&#xD;
    }&#xD;
&#xD;
	public abstract void operate(double ratioOfCapacity);&#xD;
     &#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;&#xD;
    }&#xD;
    &#xD;
    public double getCurrentTemperature() {&#xD;
    	throw new RuntimeException("Method getCurrentTemperature() should be overridden in child class of J_EA!");&#xD;
    	//return 0;&#xD;
    }&#xD;
      &#xD;
    public void updateAmbientTemperature(double currentAmbientTemperature_degC) {&#xD;
    	// only for storage agents. Does it belong in this superclass?&#xD;
    	throw new RuntimeException("Method updateAmbientTemperature() should be overridden in child class of J_EA!");&#xD;
    }&#xD;
    &#xD;
    public double getEnergyUsed_kWh() {&#xD;
    	return energyUsed_kWh;&#xD;
    }&#xD;
    &#xD;
    public Agent getParentAgent() {&#xD;
    	return parentAgent;&#xD;
    }&#xD;
    &#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; getActiveProductionEnergyCarriers() {&#xD;
		return this.activeProductionEnergyCarriers;&#xD;
	}&#xD;
    &#xD;
    public EnumSet&lt;OL_EnergyCarriers&gt; getActiveConsumptionEnergyCarriers() {&#xD;
		return this.activeConsumptionEnergyCarriers;&#xD;
	}&#xD;
	&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; getActiveEnergyCarriers() {&#xD;
		EnumSet&lt;OL_EnergyCarriers&gt; allActiveEnergyCarriers = EnumSet.copyOf(this.activeProductionEnergyCarriers);&#xD;
		allActiveEnergyCarriers.addAll(this.activeConsumptionEnergyCarriers);&#xD;
		return allActiveEnergyCarriers;&#xD;
	}&#xD;
	&#xD;
    //public void setUI_EnergyAsset(UI_EnergyAsset ui_energyAsset) {&#xD;
    	//this.ui_energyAsset = ui_energyAsset;&#xD;
    //}&#xD;
    &#xD;
    public J_FlowsMap getLastFlows() {&#xD;
    	//return lastFlowsArray;&#xD;
    	//return new Pair(this.lastFlowsMap, this.lastEnergyUse_kW);&#xD;
    	return this.lastFlowsMap;&#xD;
    }&#xD;
    &#xD;
	 public OL_EnergyAssetType getEAType() {&#xD;
		 return energyAssetType;&#xD;
	 }&#xD;
&#xD;
	 public void setEnergyAssetName(String name) {&#xD;
		 this.energyAssetName = name;&#xD;
	 }&#xD;
	 &#xD;
	 public void setEnergyAssetType(OL_EnergyAssetType assetType) {&#xD;
		 this.energyAssetType = assetType;&#xD;
	 }&#xD;
	 &#xD;
&#xD;
    &#xD;
//    public double getOutputTemperature_degC() {&#xD;
//   	return 0;&#xD;
//    }&#xD;
	/* &#xD;
    @Override    &#xD;
    public Object clone() { &#xD;
    	try {&#xD;
    		return super.clone(); &#xD;
    	} catch (CloneNotSupportedException e) {&#xD;
    		throw new RuntimeException(e);&#xD;
    	}&#xD;
    } &#xD;
    */&#xD;
	 &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"ownerAgent = " + parentAgent.getIndex() +" ";&#xD;
	}&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659117174456</Id>
				<Name>J_EAConversionGasBurner</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionGasBurner&#xD;
 */&#xD;
public class J_EAConversionGasBurner extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
	protected double outputTemperature_degC;&#xD;
&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionGasBurner() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
&#xD;
    public J_EAConversionGasBurner(Agent parentAgent, double outputHeatCapacity_kW, double efficiency_r, double timestep_h, double outputTemperature_degC) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.outputCapacity_kW = outputHeatCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.GAS_BURNER;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.METHANE;&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
	    &#xD;
	    if (outputHeatCapacity_kW == 0) {&#xD;
	    	throw new RuntimeException(String.format("Exception: J_EAGasBurner with capacityHeat_kW = 0, invalid state! Energy Asset: %s", this));&#xD;
	    }&#xD;
	    &#xD;
	    registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659117174457</Id>
				<Name>J_EAConversionBiogasMethane</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionBiogasMethane&#xD;
 */&#xD;
public class J_EAConversionBiogasMethane extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
	//private OL_EnergyCarriers energyCarrierProduced = OL_EnergyCarriers.METHANE;&#xD;
	//private OL_EnergyCarriers energyCarrierConsumed = OL_EnergyCarriers.METHANE;&#xD;
	public double capacityMethane_kW;&#xD;
	//protected double outputTemperature_degC;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionBiogasMethane() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAConversionBiogasMethane(Agent parentAgent, double capacityMethane_kW, double efficiency, double timestep_h) {&#xD;
	    this.parentAgent= parentAgent;&#xD;
	    this.capacityMethane_kW = capacityMethane_kW;&#xD;
	    this.eta_r = efficiency;&#xD;
	    this.timestep_h = timestep_h;&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
&#xD;
    @Override&#xD;
    public Pair&lt;J_FlowsMap, Double&gt; operate(double ratioOfCapacity) {&#xD;
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");&#xD;
    	this.methaneProduction_kW = capacityMethane_kW * ratioOfCapacity;&#xD;
		this.methaneConsumption_kW = methaneProduction_kW / eta_r;&#xD;
		energyUse_kW = methaneConsumption_kW - methaneProduction_kW;   	&#xD;
		this.energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!&#xD;
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };&#xD;
    	//return arr;&#xD;
		return returnEnergyFlows();&#xD;
    }&#xD;
&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +&#xD;
			"capacityMethane_kW = " + this.capacityMethane_kW +" "+&#xD;
			"eta_r = " + this.eta_r+" " +&#xD;
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " ";&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659117174458</Id>
				<Name>J_EAProfile</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAProfile&#xD;
 */&#xD;
public class J_EAProfile extends zero_engine.J_EA implements Serializable {&#xD;
&#xD;
	//private OL_EnergyCarriers energyCarrierProduced = OL_EnergyCarriers.METHANE;&#xD;
	public OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.ELECTRICITY;&#xD;
	//public double capacityMethane_kW;&#xD;
	public double[] a_energyProfile_kWh;&#xD;
	public OL_ProfileAssetType profileType;&#xD;
	private double profileTimestep_h;&#xD;
    private double profileStarTime_h = 0;&#xD;
	//protected double outputTemperature_degC;&#xD;
	public double loadLoad_kWh = 0;&#xD;
	private double profileScaling_fr = 1;&#xD;
	private boolean enableProfileLooping = true;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAProfile() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAProfile(Agent parentAgent, OL_EnergyCarriers energyCarrier, double[] profile_kWh, OL_ProfileAssetType profileType, double profileTimestep_h) {&#xD;
	    this.parentAgent= parentAgent;&#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.a_energyProfile_kWh = profile_kWh;&#xD;
	    this.profileType = profileType;&#xD;
	    this.profileTimestep_h = profileTimestep_h;&#xD;
&#xD;
	    if (parentAgent instanceof GridConnection) {&#xD;
	    	this.timestep_h = ((GridConnection)parentAgent).energyModel.p_timeStep_h;&#xD;
	    } else {&#xD;
	    	this.timestep_h = profileTimestep_h;&#xD;
	    }&#xD;
	    &#xD;
	    //this.activeProductionEnergyCarriers.add(this.energyCarrier);&#xD;
	    this.activeConsumptionEnergyCarriers.add(this.energyCarrier);&#xD;
	    &#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
    public void setStartTime_h(double startTime_h) {    	&#xD;
    	this.profileStarTime_h = startTime_h;&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    //public Pair&lt;J_FlowsMap, Double&gt; f_updateAllFlows(double time_h) {&#xD;
    public void f_updateAllFlows(double time_h) {&#xD;
    	//clear();    	&#xD;
    	//double[] arr=operate(time_h);&#xD;
    	//Pair&lt;J_FlowsMap, Double&gt; flowsPair = operate(time_h);&#xD;
    	operate(time_h-this.profileStarTime_h);&#xD;
    	//J_FlowsMap flowsMap = flowsPair.getFirst();&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	//if (ui_energyAsset!= null) {&#xD;
    		//ui_energyAsset.f_addFlows(flowsMap);&#xD;
    	//}&#xD;
    	//this.lastFlowsArray = arr;&#xD;
    	this.lastFlowsMap.cloneMap(flowsMap);&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	this.clear();&#xD;
    	/*traceln("flowsMap: %s", flowsMap);&#xD;
    	flowsMap.clear();&#xD;
    	traceln("flowsMap after reset: %s", flowsMap);&#xD;
    	traceln("lastflowsMap after flowsmap reset: %s", lastFlowsMap);*/&#xD;
    	&#xD;
    	//return flowsMap;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    //public Pair&lt;J_FlowsMap, Double&gt; operate(double time_h) {&#xD;
    public void operate(double time_h) {&#xD;
    	if (enableProfileLooping &amp;&amp; time_h &gt;= a_energyProfile_kWh.length * profileTimestep_h) {&#xD;
    		time_h = time_h % a_energyProfile_kWh.length * profileTimestep_h;&#xD;
    	} else if ( (int)floor(time_h/profileTimestep_h) &gt;= a_energyProfile_kWh.length ) {&#xD;
    		traceln("Time out of upper bound for evaluating J_EAProfile power in profile asset %s!", this.energyAssetName);&#xD;
//    		time_h = a_energyProfile_kWh.length * profileTimestep_h - 1;&#xD;
    		throw new RuntimeException(String.format("Time out of upper bound for evaluating J_EAProfile power! Time is: %s", time_h));&#xD;
    	}&#xD;
    	if ( time_h &lt; 0 ) {&#xD;
    		traceln("Time out of lower bound for evaluating J_EAProfile power in profile asset %s!", this.energyAssetName);&#xD;
    		//time_h = 0;&#xD;
    		throw new RuntimeException(String.format("Time out of lower bound for evaluating J_EAProfile power! Time is: %s", time_h));&#xD;
    	}&#xD;
    	/*if (energyCarrierConsumed == OL_EnergyCarriers.ELECTRICITY) {&#xD;
    		this.electricityConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
        	this.electricityProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);        	&#xD;
    	} else if (energyCarrierConsumed == OL_EnergyCarriers.METHANE) {&#xD;
    		this.methaneConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
        	this.methaneProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);    		    		&#xD;
    	} else if (energyCarrierConsumed == OL_EnergyCarriers.HYDROGEN) {&#xD;
    		this.hydrogenConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
        	this.hydrogenProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
    	} else if  (energyCarrierConsumed == OL_EnergyCarriers.HEAT) {&#xD;
    		this.heatConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
        	this.heatProduction_kW = -min(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
        	//traceln("Current heat consumption: %s", this.heatConsumption_kW);&#xD;
    	} else if  (energyCarrierConsumed == OL_EnergyCarriers.DIESEL) {&#xD;
    		this.dieselConsumption_kW = max(0,a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h);&#xD;
    	}*/&#xD;
		//traceln("Running custom demand profile for " + energyAssetName + " with current timestep demand " + (electricityConsumption_kW - electricityProduction_kW) + " kW. Array index is " + (int)floor(time_h/timestep_h) + ", time is: " + time_h + " hours, array size is " + a_energyProfile_kWh.length);	&#xD;
    	double currentPower_kW = a_energyProfile_kWh[(int)floor(time_h/profileTimestep_h)]/profileTimestep_h;&#xD;
    	this.energyUse_kW = currentPower_kW;&#xD;
		this.energyUsed_kWh += timestep_h * energyUse_kW; &#xD;
		this.flowsMap.put(this.energyCarrier, currentPower_kW);		&#xD;
    }&#xD;
&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
&#xD;
    //public Pair&lt;J_FlowsMap, Double&gt; curtailElectricityConsumption(double curtailmentSetpoint_kW) {&#xD;
    public void curtailElectricityConsumption(double curtailmentSetpoint_kW) {&#xD;
    	//double currentElectricityProduction_kW = lastFlowsArray[4];&#xD;
    	double currentElectricityConsumption_kW = this.lastFlowsMap.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    	double curtailmentPower_kW = max(0,min(currentElectricityConsumption_kW, curtailmentSetpoint_kW));&#xD;
    	energyUsed_kWh -= curtailmentPower_kW * timestep_h;&#xD;
    	loadLoad_kWh += curtailmentPower_kW * timestep_h;&#xD;
    	//double[] arr = {0, 0, 0, 0, -curtailmentPower_kW, 0, 0, 0, 0, -curtailmentPower_kW};&#xD;
    	J_FlowsMap flowsMap = new J_FlowsMap();&#xD;
    	flowsMap.put(OL_EnergyCarriers.ELECTRICITY, -curtailmentPower_kW);&#xD;
    	this.energyUse_kW = -curtailmentPower_kW;&#xD;
    	//flowsMap.put(OL_EnergyCarriers.ENERGY_USE, -curtailmentPower_kW);&#xD;
&#xD;
    	//lastFlowsArray[4] -= curtailmentPower_kW;&#xD;
    	this.lastFlowsMap.put(OL_EnergyCarriers.ELECTRICITY, this.lastFlowsMap.get(OL_EnergyCarriers.ELECTRICITY) - curtailmentPower_kW);&#xD;
    	//lastFlowsArray[9] -= curtailmentPower_kW;&#xD;
    	this.lastEnergyUse_kW -= curtailmentPower_kW;&#xD;
    	//lastFlowsMap.put(OL_EnergyCarriers.ENERGY_USE, lastFlowsMap.get(OL_EnergyCarriers.ENERGY_USE) - curtailmentPower_kW);&#xD;
&#xD;
    	//traceln("Electricity production of asset %s curtailed by %s kW!", this, curtailmentPower_kW);&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_removeFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	//if (ui_energyAsset!= null) {&#xD;
    		//ui_energyAsset.f_removeFlows(flowsMap);&#xD;
    	//}&#xD;
    	//return new Pair(flowsMap, this.energyUse_kW);&#xD;
    }&#xD;
&#xD;
    public void scaleEnergyProfile(double scaling_fr) {&#xD;
    	if (scaling_fr == 0) {&#xD;
    		traceln("Failed to scale J_EAProfile with factor of 0 to prevent loss of information.");&#xD;
    		return;&#xD;
    	}&#xD;
    	this.profileScaling_fr *= scaling_fr;&#xD;
    	for (int i = 0; i &lt; a_energyProfile_kWh.length; i++) {&#xD;
    		a_energyProfile_kWh[i] = a_energyProfile_kWh[i] * scaling_fr;&#xD;
    	}&#xD;
    	return;&#xD;
    }&#xD;
    &#xD;
    public void resetEnergyProfile() {&#xD;
    	if (this.profileScaling_fr == 1) {&#xD;
    		return;&#xD;
    	}&#xD;
    	for (int i = 0; i &lt; a_energyProfile_kWh.length; i++) {&#xD;
    		a_energyProfile_kWh[i] = a_energyProfile_kWh[i] / this.profileScaling_fr;&#xD;
    	}&#xD;
    	this.profileScaling_fr = 1;&#xD;
    	return;&#xD;
    }&#xD;
	&#xD;
    public double getProfileScaling_fr() {&#xD;
    	return profileScaling_fr;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +&#xD;
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " ";&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659446215929</Id>
				<Name>J_EAStorageElectric</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAStorageElectric&#xD;
 */&#xD;
public class J_EAStorageElectric extends J_EAStorage implements Serializable {&#xD;
	&#xD;
	private OL_EnergyCarriers storageMedium = OL_EnergyCarriers.ELECTRICITY;&#xD;
	&#xD;
	private double etaCharge_r; // charging efficiency&#xD;
	private double etaDischarge_r;&#xD;
	protected double capacityElectric_kW;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAStorageElectric() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAStorageElectric(Agent parentAgent, double capacityElectric_kW, double storageCapacity_kWh, double stateOfCharge_fr, double timestep_h ) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		this.capacityElectric_kW = capacityElectric_kW;&#xD;
		this.storageCapacity_kWh = storageCapacity_kWh;&#xD;
		this.initialstateOfCharge_fr = stateOfCharge_fr;&#xD;
		this.stateOfCharge_fr = this.initialstateOfCharge_fr;&#xD;
		this.timestep_h = timestep_h;&#xD;
		this.energyAssetType = OL_EnergyAssetType.STORAGE_ELECTRIC;&#xD;
		double eta_r=0.9; // Default cycle efficiency of 90%. Add this as an argument to constructor?&#xD;
		this.etaCharge_r = Math.sqrt(eta_r);&#xD;
		this.etaDischarge_r = Math.sqrt(eta_r);&#xD;
	    this.activeProductionEnergyCarriers.add(this.storageMedium);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.storageMedium);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public void operate(double ratioOfChargeCapacity_r) {&#xD;
    	double inputPower_kW = ratioOfChargeCapacity_r * capacityElectric_kW; // Electric power going into battery, before losses.&#xD;
    	double deltaEnergy_kWh;   // The change in energy stored in the battery this timestep ('internal' energy)&#xD;
    	&#xD;
    	// charging/discharging losses&#xD;
    	if (inputPower_kW &gt; 0) { // charging (the battery 'consumes' electricity)&#xD;
    		deltaEnergy_kWh = etaCharge_r * inputPower_kW * timestep_h; // Actual change of energy content of battery after losses. deltaEnergy_kWh is smaller than inputPower_kW * timestep_h!&#xD;
    	} else { // discharging (the battery 'produces' electricity)&#xD;
    		deltaEnergy_kWh = inputPower_kW / etaDischarge_r * timestep_h; // Actual change of energy content of battery after losses. deltaEnergy_kWh is larger than inputPower_kW * timestep_h!&#xD;
    	}&#xD;
&#xD;
    	// Limit SoC to feasible range (0-1)&#xD;
    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_fr * storageCapacity_kWh) ); // Prevent negative charge&#xD;
    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_fr) * storageCapacity_kWh ); // Prevent overcharge&#xD;
    	&#xD;
    	double electricityConsumption_kW = 0;&#xD;
    	double electricityProduction_kW = 0;&#xD;
    	if (deltaEnergy_kWh &gt; 0) { // charging, deltaEnergy_kWh and inputPower_kW positive&#xD;
    		inputPower_kW = deltaEnergy_kWh / timestep_h / etaCharge_r;&#xD;
    		electricityConsumption_kW = inputPower_kW;&#xD;
    		electricityProduction_kW = 0;&#xD;
    		energyUse_kW = (1-etaCharge_r)*inputPower_kW;    		&#xD;
    	} else { // discharging, deltaEnergy_kWh and inputPower_kW negative&#xD;
    		inputPower_kW = deltaEnergy_kWh / timestep_h * etaDischarge_r;&#xD;
    		electricityConsumption_kW = 0;&#xD;
    		electricityProduction_kW = -inputPower_kW; &#xD;
    		energyUse_kW = -deltaEnergy_kWh / timestep_h * (1-etaDischarge_r);&#xD;
    	}&#xD;
    	energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
    	&#xD;
		discharged_kWh += electricityProduction_kW * timestep_h; // Not the change-in-SoC, but the energy flowing out of the battery after losses.&#xD;
		charged_kWh += electricityConsumption_kW * timestep_h; // Not the change-in-SoC, but the energy flowing into the battery before losses.&#xD;
		&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		//traceln("Battery SoC: %s", stateOfCharge_fr);&#xD;
		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW-electricityProduction_kW);		&#xD;
	}&#xD;
	&#xD;
	public void setBatteryEfficiency_r(double eta_r) {&#xD;
		if (eta_r &lt; 0 || eta_r &gt; 1) {&#xD;
			traceln("Infeasible eta_r! Should be larger than 0 and no larger than 1! Setting eta_r=1. Input value is: %s", eta_r);&#xD;
			this.etaCharge_r = 1;			&#xD;
			this.etaDischarge_r = 1;&#xD;
		} else {&#xD;
			this.etaCharge_r = Math.sqrt(eta_r);			&#xD;
			this.etaDischarge_r = Math.sqrt(eta_r);&#xD;
		}		&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return &#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"stateOfCharge_fr = " + this.stateOfCharge_fr+" "+&#xD;
			"storageCapacity_kWh = " + this.storageCapacity_kWh +" "+&#xD;
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+&#xD;
			"discharged_kWh " + this.discharged_kWh+" "+&#xD;
			"charged_kWh " + this.charged_kWh+" ";&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {&#xD;
		stateOfCharge_fr += deltaEnergy_kWh / storageCapacity_kWh;&#xD;
	}&#xD;
&#xD;
	public double getCapacityAvailable_kW() {&#xD;
		double availableCapacity_kW;&#xD;
		if ( stateOfCharge_fr * storageCapacity_kWh  &gt; capacityElectric_kW * timestep_h) {&#xD;
			availableCapacity_kW = capacityElectric_kW;&#xD;
		}&#xD;
		else {&#xD;
			availableCapacity_kW =  stateOfCharge_fr * storageCapacity_kWh / timestep_h; // Allow to drain completely&#xD;
		}&#xD;
		return availableCapacity_kW;&#xD;
	}&#xD;
	&#xD;
	public double getCapacityElectric_kW() {&#xD;
		return this.capacityElectric_kW;&#xD;
	}&#xD;
&#xD;
	public double getTotalChargeAmount_kWh() {&#xD;
		return this.charged_kWh;&#xD;
	}&#xD;
	public double getTotalDischargeAmount_kWh() {&#xD;
		return this.discharged_kWh;&#xD;
	}&#xD;
	&#xD;
	public void setStorageCapacity_kWh(double storageCapacity_kWh) {&#xD;
		double difference_kWh = storageCapacity_kWh - this.storageCapacity_kWh;&#xD;
		this.storageCapacity_kWh = storageCapacity_kWh;&#xD;
		if (this.parentAgent instanceof GridConnection) {		&#xD;
			((GridConnection)this.parentAgent).v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += difference_kWh/1000;&#xD;
			((GridConnection) this.parentAgent).c_parentCoops.forEach( coop -&gt; coop.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += difference_kWh/1000);&#xD;
			((GridConnection)this.parentAgent).energyModel.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh += difference_kWh/1000;&#xD;
		}&#xD;
		// TODO: Fix for new FLOWSMAP&#xD;
		//if (storageCapacity_kWh == 0) {			&#xD;
			//Arrays.fill(lastFlowsArray,0);&#xD;
		//}&#xD;
	}&#xD;
&#xD;
	public void setCapacityElectric_kW(double capacityElectric_kW) {&#xD;
		this.capacityElectric_kW = capacityElectric_kW;&#xD;
	}&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659446215929</Id>
				<Name>J_EAStorageGas</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAStorageGas&#xD;
 */&#xD;
public class J_EAStorageGas extends zero_engine.J_EAStorage implements Serializable {&#xD;
&#xD;
	private OL_EnergyCarriers energyCarrier = OL_EnergyCarriers.METHANE;&#xD;
	private double lossFactor_r = 0;&#xD;
	protected double capacityGas_kW;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAStorageGas() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAStorageGas(Agent parentAgent, double capacityGas_kW, double storageCapacity_kWh, double stateOfCharge_fr, double timestep_h ) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		this.capacityGas_kW = capacityGas_kW;&#xD;
		this.storageCapacity_kWh = storageCapacity_kWh;&#xD;
		this.stateOfCharge_fr = stateOfCharge_fr;&#xD;
		this.timestep_h = timestep_h;&#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrier);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrier);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public void calculateLoss() {&#xD;
		//no loss for gas storage modeled.&#xD;
		energyUse_kW = 0;&#xD;
		energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public void operate(double ratioOfChargeCapacity_r) {&#xD;
    	double deltaEnergy_kWh;   // to check the request with the energy currently in storage&#xD;
    	double inputPower_kW = ratioOfChargeCapacity_r * capacityGas_kW; // Gas power going into Storage, negative if going out.&#xD;
&#xD;
    	deltaEnergy_kWh = inputPower_kW * timestep_h;&#xD;
    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_fr * storageCapacity_kWh) ); // Prevent negative charge&#xD;
    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_fr) * storageCapacity_kWh ); // Prevent overcharge&#xD;
&#xD;
    	inputPower_kW = deltaEnergy_kWh / timestep_h;&#xD;
&#xD;
		double methaneProduction_kW = max(-inputPower_kW, 0);&#xD;
		double methaneConsumption_kW = max(inputPower_kW, 0);&#xD;
		discharged_kWh += methaneProduction_kW * timestep_h;&#xD;
		charged_kWh += methaneConsumption_kW * timestep_h;&#xD;
		&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		flowsMap.put(OL_EnergyCarriers.METHANE, methaneConsumption_kW-methaneProduction_kW);&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return &#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"stateOfCharge_fr = " + this.stateOfCharge_fr+" "+&#xD;
			"storageCapacity_kWh = " + this.storageCapacity_kWh +" "+&#xD;
			"capacityGas_kW = " + this.capacityGas_kW +" "+&#xD;
			"discharged_kWh " + this.discharged_kWh+" "+&#xD;
			"charged_kWh " + this.charged_kWh+" ";&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {&#xD;
		stateOfCharge_fr += deltaEnergy_kWh / storageCapacity_kWh;&#xD;
	}&#xD;
&#xD;
	public double getCapacityAvailable_kW() {&#xD;
		double availableCapacity_kW;&#xD;
		if ( stateOfCharge_fr * storageCapacity_kWh  &gt; capacityGas_kW * timestep_h) {&#xD;
			availableCapacity_kW = capacityGas_kW;&#xD;
		}&#xD;
		else {&#xD;
			availableCapacity_kW =  stateOfCharge_fr * storageCapacity_kWh / timestep_h; // Allow to drain completely&#xD;
		}&#xD;
		return availableCapacity_kW;&#xD;
	}&#xD;
	&#xD;
    public double getCapacityGas_kW() {&#xD;
    	return capacityGas_kW;&#xD;
    }&#xD;
	&#xD;
	public double getTotalChargeAmount_kWh() {&#xD;
		return charged_kWh;&#xD;
	}&#xD;
	public double getTotalDischargeAmount_kWh() {&#xD;
		return discharged_kWh;&#xD;
	}&#xD;
&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
} &#xD;
 &#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659447107390</Id>
				<Name>J_EAStorageHeat</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAStorageHeat&#xD;
 */&#xD;
public class J_EAStorageHeat extends zero_engine.J_EAStorage implements Serializable {&#xD;
&#xD;
	private double capacityElectric_kW = 0;&#xD;
	public OL_EnergyCarriers storageMedium = OL_EnergyCarriers.HEAT;&#xD;
	private double storageCapacity_kWh;&#xD;
	&#xD;
	private double stateOfCharge_fr;&#xD;
	protected double lossFactor_WpK;&#xD;
	protected double capacityHeat_kW;&#xD;
	&#xD;
	private double temperature_degC;&#xD;
	private double temperatureStored_degC;&#xD;
	private double initialTemperature_degC;&#xD;
	private double minTemperature_degC;&#xD;
	private double maxTemperature_degC;&#xD;
	private double setTemperature_degC;&#xD;
	protected double heatCapacity_JpK;&#xD;
	protected double ambientTemperature_degC;&#xD;
	public boolean requiresHeat = false;&#xD;
	protected double energyAbsorbed_kWh=0;&#xD;
	protected double energyAbsorbedStored_kWh=0;&#xD;
	protected OL_AmbientTempType ambientTempType;&#xD;
	//Secureing updates&#xD;
	private boolean updateAmbientTemperatureHasBeenCalled = false;&#xD;
&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAStorageHeat() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAStorageHeat(Agent parentAgent, OL_EnergyAssetType energyAssetType, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double minTemperature_degC, double maxTemperature_degC, double setTemperature_degC, double heatCapacity_JpK, OL_AmbientTempType ambientTempType ) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		this.energyAssetType = energyAssetType;&#xD;
		this.capacityHeat_kW = capacityHeat_kW;&#xD;
		this.lossFactor_WpK = lossFactor_WpK;&#xD;
		this.timestep_h = timestep_h;&#xD;
		this.temperature_degC = initialTemperature_degC;&#xD;
		this.initialTemperature_degC = initialTemperature_degC;&#xD;
		this.minTemperature_degC = minTemperature_degC;&#xD;
		this.maxTemperature_degC = maxTemperature_degC;&#xD;
		this.setTemperature_degC = setTemperature_degC;&#xD;
		&#xD;
		if(this.initialTemperature_degC &gt; this.maxTemperature_degC || this.initialTemperature_degC &lt; this.minTemperature_degC) {&#xD;
			new RuntimeException("Heatbuffer initial temperature is not within the defined min/max temperature limits of the buffer");&#xD;
		}&#xD;
		if(this.setTemperature_degC &gt; this.maxTemperature_degC || this.setTemperature_degC &lt; this.minTemperature_degC) {&#xD;
			new RuntimeException("Heatbuffer set temperature is not within the defined min/max temperature limits of the buffer");&#xD;
		}&#xD;
		&#xD;
		this.heatCapacity_JpK = heatCapacity_JpK;&#xD;
		this.ambientTempType = ambientTempType;&#xD;
		this.storageCapacity_kWh = ( maxTemperature_degC - minTemperature_degC ) * heatCapacity_JpK / 3.6e+6;&#xD;
		this.stateOfCharge_fr = (( initialTemperature_degC - minTemperature_degC ) / (maxTemperature_degC - minTemperature_degC ) );&#xD;
	    this.activeProductionEnergyCarriers.add(OL_EnergyCarriers.HEAT);		&#xD;
		this.activeConsumptionEnergyCarriers.add(OL_EnergyCarriers.HEAT);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public void calculateLoss() {&#xD;
		if(ambientTempType != OL_AmbientTempType.FIXED &amp;&amp; !this.updateAmbientTemperatureHasBeenCalled) {&#xD;
			new RuntimeException("Ambient temperature has not been updated for the heat storage asset, make sure to call the updateAmbientTemperature() method while using a heat storage");&#xD;
		}&#xD;
		else {&#xD;
			updateAmbientTemperatureHasBeenCalled = false;&#xD;
		}&#xD;
		double heatLoss_W = lossFactor_WpK * ( temperature_degC - ambientTemperature_degC );&#xD;
		double deltaEnergy_kWh = ( -heatLoss_W / 1000 ) * timestep_h;&#xD;
		energyUse_kW = heatLoss_W / 1000;&#xD;
		energyUsed_kWh += max(0,energyUse_kW * timestep_h); // Only heat loss! Not heat gain when outside is hotter than inside!&#xD;
		energyAbsorbed_kWh += max(0,-energyUse_kW * timestep_h); // Only heat gain when outside is hotter than inside!&#xD;
		//traceln("Ambient temperature " + ambientTemperature_degC);&#xD;
		//traceln("heatCapacity JpK " + heatCapacity_JpK );&#xD;
		//traceln("tempdelta loss"+tempDelta);&#xD;
		//traceln("lossfacter: " + lossFactor_WpK);&#xD;
		&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public void operate(double ratioOfChargeCapacity_r) {&#xD;
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC);&#xD;
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC+" | powerFraction_fr = " + ratioOfChargeCapacity_r + ".");&#xD;
		//traceln("&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt; heatstorage reset heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+" heatProduced_kWh = "+heatProduced_kWh + "heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );&#xD;
		&#xD;
		calculateLoss(); // Heat lost to the environment; this call also updates energyUse_kW and the 'state of charge' (temperature).&#xD;
		&#xD;
		double inputPower_kW = ratioOfChargeCapacity_r * capacityHeat_kW; // positive power means adding heat to the buffer&#xD;
		double potentialTempDelta_degC = inputPower_kW * timestep_h / (heatCapacity_JpK / (3.6E6) ); // Calculate potential deltaT for check if capping of input is needed&#xD;
		&#xD;
		//Cap input to the temperature limits of the buffer&#xD;
		if(inputPower_kW &gt; 0 &amp;&amp; temperature_degC + potentialTempDelta_degC &gt; maxTemperature_degC) { // If it will go over max temp: cap the input power&#xD;
			inputPower_kW = (maxTemperature_degC - temperature_degC) * (heatCapacity_JpK / (3.6E6) )/timestep_h;&#xD;
		}&#xD;
		else if(inputPower_kW &lt; 0 &amp;&amp; temperature_degC + potentialTempDelta_degC &lt; minTemperature_degC) {//If it will go under min temp: cap the (negative) input power&#xD;
			inputPower_kW = (minTemperature_degC - temperature_degC) * (heatCapacity_JpK / (3.6E6) )/timestep_h;&#xD;
		}&#xD;
		&#xD;
    	double deltaEnergy_kWh = inputPower_kW * timestep_h; // to check the request with the energy currently in storage&#xD;
&#xD;
		double heatProduction_kW = max(-inputPower_kW, 0);&#xD;
		double heatConsumption_kW = max(inputPower_kW, 0);&#xD;
		heatProduced_kWh += heatProduction_kW * timestep_h;&#xD;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;&#xD;
&#xD;
		//traceln("tempdelta charge: "+deltaTemp_degC);&#xD;
		//traceln("&gt;&gt; Heat storage heatproduction = "+ heatProduced_kWh + ", heatconsumption_kW = "+ heatConsumption_kW +" heatConsumed_kWh = "+ heatConsumed_kWh +", heatProduced_kWh = "+ heatProduced_kWh );&#xD;
		&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		//traceln("&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt; heatstorage &lt;"+ownerAsset.getId()+"&gt; calculated heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+", heatProduced_kWh = "+heatProduced_kWh + ", heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );&#xD;
&#xD;
		flowsMap.put(OL_EnergyCarriers.HEAT, heatConsumption_kW-heatProduction_kW);		&#xD;
		&#xD;
		//return new Pair(this.flowsMap, this.energyUse_kW);&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyAbsorbedStored_kWh = energyAbsorbed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	energyAbsorbed_kWh = 0.0;&#xD;
    	temperatureStored_degC = temperature_degC;&#xD;
    	temperature_degC = initialTemperature_degC;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;&#xD;
    	energyAbsorbed_kWh = energyAbsorbedStored_kWh;&#xD;
    	temperature_degC = temperatureStored_degC;&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"Energy consumed = " + this.energyUsed_kWh +&#xD;
			" temp = " + this.temperature_degC + " " +&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"capacityElectric_kW = " + this.capacityElectric_kW +" "+&#xD;
			"capacityHeat_kW = " + this.capacityHeat_kW +" "+&#xD;
			"stateOfCharge_fr = " + this.stateOfCharge_fr+" "+&#xD;
			"minTemperature_degC = " + this.minTemperature_degC+" "+&#xD;
			"maxTemperature_degC = " + this.maxTemperature_degC+" "+&#xD;
			"setTemperature_degC = " + this.setTemperature_degC+" "+			&#xD;
			"ambientTemperature_degC = "+this.ambientTemperature_degC+" "+&#xD;
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+&#xD;
			"heatProduced_kWh = "+ this.heatProduced_kWh + " "+&#xD;
			"heatConsumed_kWh = "+ this.heatConsumed_kWh + " ";&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {&#xD;
		double tempDelta_degC = deltaEnergy_kWh / (heatCapacity_JpK / 3.6E6 );&#xD;
		temperature_degC += tempDelta_degC;&#xD;
		stateOfCharge_fr = ( temperature_degC - minTemperature_degC) / (maxTemperature_degC - minTemperature_degC);&#xD;
		if (temperature_degC &lt; setTemperature_degC) {&#xD;
			requiresHeat = true;&#xD;
		}&#xD;
		else if ( temperature_degC &gt;= maxTemperature_degC ) {&#xD;
			requiresHeat = false;&#xD;
		}&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return temperature_degC;&#xD;
	}&#xD;
&#xD;
	public double getSetTemperature_degC() {&#xD;
		return setTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	public double getMinTemperature_degC() {&#xD;
		return minTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	public double getMaxTemperature_degC() {&#xD;
		return maxTemperature_degC;&#xD;
	}&#xD;
&#xD;
	public double getStorageCapacity_kWh() {&#xD;
		return storageCapacity_kWh;&#xD;
	}&#xD;
&#xD;
	public double getCapacityHeat_kW() {&#xD;
		return this.capacityHeat_kW;&#xD;
	}&#xD;
	&#xD;
	public double getHeatCapacity_JpK() {&#xD;
		return heatCapacity_JpK;&#xD;
	}&#xD;
	&#xD;
	public double getLossFactor_WpK() {&#xD;
		return lossFactor_WpK;&#xD;
	}&#xD;
	&#xD;
	public OL_AmbientTempType getAmbientTempType() {&#xD;
		return this.ambientTempType;&#xD;
	}&#xD;
	&#xD;
	/*&#xD;
	@Override&#xD;
	public double getHeatCapacity_kW() {&#xD;
    	return capacityHeat_kW;&#xD;
    }&#xD;
	*/&#xD;
	&#xD;
	/*@Override //Storage assets limiteren de opname van warmte niet met 1. Dat is nodig voor de buffer. Die kan wel maximaal zijn capaciteit leverern, maar kan meer opnemen. @Gillis is dat logisch of willen we andere oplossing?&#xD;
    public double[] operateBounded(double ratioOfCapacity) {&#xD;
    	double limitedRatioOfCapacity = max(-1, ratioOfCapacity);&#xD;
    	double[] arr = operate(limitedRatioOfCapacity);&#xD;
    	return arr;&#xD;
    }*/&#xD;
&#xD;
	@Override&#xD;
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) {&#xD;
		this.updateAmbientTemperatureHasBeenCalled = true;&#xD;
		ambientTemperature_degC = currentAmbientTemperature_degC;&#xD;
	}&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659447107391</Id>
				<Name>J_EABuilding</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EABuilding&#xD;
 */&#xD;
public class J_EABuilding extends zero_engine.J_EAStorageHeat implements Serializable {&#xD;
&#xD;
	//public OL_EAStorageTypes heatStorageType;&#xD;
&#xD;
	private double temperature_degC;&#xD;
	private double temperatureStored_degC;&#xD;
	private double initialTemperature_degC;&#xD;
	private double minTemperature_degC;&#xD;
	private double maxTemperature_degC;&#xD;
&#xD;
	private double solarAbsorptionFactor_m2;&#xD;
	private double solarRadiation_Wpm2 = 0;&#xD;
	&#xD;
	// Optional Interior/Exterior Heat buffers&#xD;
	private double interiorDelayTime_h;&#xD;
	private double[] interiorReleaseSchedule_kWh;&#xD;
	private double[] interiorReleaseScheduleStored_kWh;&#xD;
	private int interiorReleaseScheduleIndex;&#xD;
	private double exteriorDelayTime_h;&#xD;
	private double[] exteriorReleaseSchedule_kWh;&#xD;
	private double[] exteriorReleaseScheduleStored_kWh;&#xD;
	private int exteriorReleaseScheduleIndex;	&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EABuilding() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EABuilding(Agent parentAgent, double capacityHeat_kW, double lossFactor_WpK, double timestep_h, double initialTemperature_degC, double heatCapacity_JpK, double solarAbsorptionFactor_m2 ) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		//this.heatStorageType = OL_EAStorageTypes.HEATMODEL_BUILDING;&#xD;
		this.capacityHeat_kW = capacityHeat_kW;&#xD;
		this.lossFactor_WpK = lossFactor_WpK;&#xD;
		this.timestep_h = timestep_h;&#xD;
		this.initialTemperature_degC = initialTemperature_degC;&#xD;
		this.temperature_degC = initialTemperature_degC;&#xD;
		this.heatCapacity_JpK = heatCapacity_JpK;&#xD;
		this.ambientTempType = OL_AmbientTempType.AMBIENT_AIR;&#xD;
		//this.storageCapacity_kWh = ( maxTemperature_degC - minTemperature_degC ) * heatCapacity_JpK / 3.6e+6;&#xD;
		this.solarAbsorptionFactor_m2 = solarAbsorptionFactor_m2;&#xD;
		this.energyAssetType = OL_EnergyAssetType.BUILDINGTHERMALS;&#xD;
	    if (lossFactor_WpK &lt; 0) {&#xD;
	    	throw new RuntimeException(String.format("Exception: J_EABuilding with negative lossfactor! %s", lossFactor_WpK));	    	&#xD;
	    }&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(OL_EnergyCarriers.HEAT);		&#xD;
		this.activeConsumptionEnergyCarriers.add(OL_EnergyCarriers.HEAT);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public void calculateLoss() {&#xD;
		double heatLoss_kW = this.lossFactor_WpK * ( this.temperature_degC - this.ambientTemperature_degC ) / 1000;&#xD;
		//traceln("heatLoss_kW: %s", heatLoss_kW);&#xD;
		double deltaEnergy_kWh = -heatLoss_kW * this.timestep_h;&#xD;
		this.energyUse_kW += heatLoss_kW;&#xD;
		//traceln("Ambient temperature " + ambientTemperature_degC);&#xD;
		//traceln("heatCapacity JpK " + heatCapacity_JpK );&#xD;
		//traceln("tempdelta loss in thermal building asset (kW) " + energyUse_kW);&#xD;
		//traceln("lossfacter: " + lossFactor_WpK);&#xD;
		&#xD;
		//traceln("deltaEnergy_kWh calculateLoss: %s", deltaEnergy_kWh);&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
&#xD;
	}&#xD;
&#xD;
	public void solarHeating() {&#xD;
		//traceln("solarAbsorptionFactor_m2: %s", solarAbsorptionFactor_m2);&#xD;
		//traceln("solarRadiation_Wpm2: %s", solarRadiation_Wpm2);&#xD;
&#xD;
		double solarHeating_kW = this.solarAbsorptionFactor_m2 * this.solarRadiation_Wpm2 / 1000;&#xD;
		//traceln("solarHeating_kW: %s", solarHeating_kW);		&#xD;
		this.energyUse_kW -= solarHeating_kW;&#xD;
		//traceln("solarHeating_kW: %s", solarHeating_kW);&#xD;
		//traceln("exteriorReleaseScheduleIndex: %s", exteriorReleaseScheduleIndex);&#xD;
		//traceln("exteriorReleaseSchedule_kWh: %s", Arrays.toString(exteriorReleaseSchedule_kWh));&#xD;
		double deltaEnergy_kWh;&#xD;
		if( this.exteriorDelayTime_h != 0.0) {&#xD;
			deltaEnergy_kWh = getExteriorHeatRelease( solarHeating_kW * this.timestep_h );&#xD;
		}&#xD;
		else {&#xD;
			deltaEnergy_kWh = solarHeating_kW * this.timestep_h; // Is always positive	&#xD;
		}&#xD;
		//traceln("deltaEnergy_kWh: %s", deltaEnergy_kWh);&#xD;
		//traceln("exteriorReleaseSchedule_kWh: %s", Arrays.toString(exteriorReleaseSchedule_kWh));&#xD;
&#xD;
		//traceln("deltaEnergy_kWh solar heating: %s", deltaEnergy_kWh);&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public void f_updateAllFlows(double powerFraction_fr) {&#xD;
		if (powerFraction_fr &gt; 1) {			&#xD;
			traceln("JEABuilding capacityHeat_kW is too low! "+ capacityHeat_kW);&#xD;
		}&#xD;
		super.f_updateAllFlows(powerFraction_fr);&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public void operate(double ratioOfChargeCapacity_r) {&#xD;
		//traceln("Building heatCapacity_JpK: %s", this.heatCapacity_JpK);&#xD;
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC);&#xD;
		//traceln("StorageAsset Heat Operatefunctie: ambienttemperature = "+ambientTemperature_degC+" | powerFraction_fr = " + ratioOfChargeCapacity_r + ".");&#xD;
		//traceln("&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt; heatstorage reset heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+" heatProduced_kWh = "+heatProduced_kWh + "heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );&#xD;
		if (ratioOfChargeCapacity_r &lt; 0) {&#xD;
			throw new RuntimeException("Cooling of the J_EABuilding is not yet supported.");&#xD;
		}&#xD;
		&#xD;
			&#xD;
		calculateLoss(); // Heat exchange with environment through convection&#xD;
		solarHeating(); // Heat influx from sunlight&#xD;
&#xD;
		this.energyUsed_kWh += max(0, this.energyUse_kW * this.timestep_h); // Only heat loss! Not heat gain when outside is hotter than inside!&#xD;
		this.energyAbsorbed_kWh += max(0, -this.energyUse_kW * this.timestep_h); // Only heat gain when outside is hotter than inside!&#xD;
&#xD;
		double inputPower_kW = ratioOfChargeCapacity_r * this.capacityHeat_kW; // positive power means lowering the buffer temperature!&#xD;
		//traceln("inputPower_kW: %s", inputPower_kW);		&#xD;
    	&#xD;
		double deltaEnergy_kWh;&#xD;
		if (this.interiorDelayTime_h != 0.0) {&#xD;
			deltaEnergy_kWh = getInteriorHeatRelease( inputPower_kW * this.timestep_h );&#xD;
    	}&#xD;
		else { &#xD;
			deltaEnergy_kWh = inputPower_kW * this.timestep_h; // to check the request with the energy currently in storage&#xD;
		}&#xD;
		&#xD;
		//traceln("deltaEnergy_kWh operate: %s", deltaEnergy_kWh);&#xD;
		&#xD;
    	&#xD;
		double heatConsumption_kW = inputPower_kW;&#xD;
		this.heatConsumed_kWh += heatConsumption_kW * this.timestep_h;&#xD;
		//traceln("Heat consumption delivered by heating asset kW " + heatConsumption_kW);&#xD;
		//traceln("Heatcapacity kWh: " + (heatCapacity_JpK / 3.6E6 ));&#xD;
		//traceln("tempdelta charge: " + deltaTemp_degC);&#xD;
		//traceln("&gt;&gt; Heat storage heatproduction = "+ heatProduced_kWh + ", heatconsumption_kW = "+ heatConsumption_kW +" heatConsumed_kWh = "+ heatConsumed_kWh +", heatProduced_kWh = "+ heatProduced_kWh );&#xD;
&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
		updateStateOfCharge( deltaEnergy_kWh );&#xD;
		//traceln("temperature_degC %s", this.temperature_degC);&#xD;
&#xD;
		//traceln("&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt; heatstorage &lt;"+ownerAsset.getId()+"&gt; calculated heatproduction = "+heatProduction_kW+", heatconsumption_kW = "+heatConsumption_kW+", heatProduced_kWh = "+heatProduced_kWh + ", heatConsumed = "+heatConsumed_kWh + ", losses= "+energyUsed_kWh );&#xD;
&#xD;
		this.flowsMap.put(OL_EnergyCarriers.HEAT, inputPower_kW);&#xD;
		/*if (Double.isNaN(this.energyUse_kW)) {&#xD;
    		throw new RuntimeException("Building thermal model energyUse_kW is NaN!");&#xD;
    	}*/&#xD;
		&#xD;
	}&#xD;
&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			this.getClass().toString() + " " +&#xD;
			"Energy consumed = " + this.energyUsed_kWh + "kWh, " + &#xD;
			"temp = " + this.temperature_degC + ", " +&#xD;
			"parentAgent = " + parentAgent + ", " +&#xD;
			"capacityHeat_kW = " + this.capacityHeat_kW + ", "+&#xD;
			"ambientTemperature_degC = "+this.ambientTemperature_degC + ", " +&#xD;
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + "kWh, " +&#xD;
			"heatConsumed_kWh = "+ this.heatConsumed_kWh + "kWh";&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	protected void updateStateOfCharge( double deltaEnergy_kWh ) {&#xD;
		double tempDelta_degC = deltaEnergy_kWh / (this.heatCapacity_JpK / 3.6E6 );&#xD;
		//traceln("heatCapacity_JpK: %s", heatCapacity_JpK);&#xD;
		this.temperature_degC += tempDelta_degC;&#xD;
		//this.stateOfCharge_fr = ( this.temperature_degC - this.minTemperature_degC) / (this.maxTemperature_degC - this.minTemperature_degC);&#xD;
		//traceln("SOC: " + stateOfCharge_fr);&#xD;
		&#xD;
		/*if (temperature_degC &lt; setTemperature_degC) {&#xD;
			requiresHeat = true;&#xD;
		}&#xD;
		else if ( temperature_degC &gt;= maxTemperature_degC ) {&#xD;
			requiresHeat = false;&#xD;
		}*/&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return this.temperature_degC;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getLossFactor_WpK() {&#xD;
		return this.lossFactor_WpK;&#xD;
	}&#xD;
	&#xD;
	public void setLossFactor_WpK( double lossFactor_WpK) {&#xD;
		this.lossFactor_WpK = lossFactor_WpK;&#xD;
	}&#xD;
	&#xD;
	public double getInitialTemperature_degC() {&#xD;
		return this.initialTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	/*@Override&#xD;
	public double getHeatCapacity_JpK() {&#xD;
		return heatCapacity_JpK;&#xD;
	}*/&#xD;
	&#xD;
	@Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
		this.energyUsedStored_kWh = this.energyUsed_kWh;&#xD;
		this.energyAbsorbedStored_kWh = this.energyAbsorbed_kWh;&#xD;
		this.energyUsed_kWh = 0.0;&#xD;
		this.energyAbsorbed_kWh = 0.0;&#xD;
		this.temperatureStored_degC = this.temperature_degC;&#xD;
		this.temperature_degC = this.initialTemperature_degC;&#xD;
		if (this.interiorReleaseSchedule_kWh != null) {&#xD;
			this.interiorReleaseScheduleStored_kWh = this.interiorReleaseSchedule_kWh;&#xD;
			Arrays.fill(this.interiorReleaseSchedule_kWh, 0.0);&#xD;
		}&#xD;
		if (this.exteriorReleaseSchedule_kWh != null) {&#xD;
			this.exteriorReleaseScheduleStored_kWh = this.exteriorReleaseSchedule_kWh;&#xD;
			Arrays.fill(this.exteriorReleaseSchedule_kWh, 0.0);&#xD;
		}&#xD;
		clear();&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
		this.energyUsed_kWh = this.energyUsedStored_kWh;&#xD;
		this.energyAbsorbed_kWh = this.energyAbsorbedStored_kWh;&#xD;
		this.temperature_degC = this.temperatureStored_degC;&#xD;
		this.interiorReleaseSchedule_kWh = this.interiorReleaseScheduleStored_kWh;&#xD;
		this.exteriorReleaseSchedule_kWh = this.exteriorReleaseScheduleStored_kWh;		&#xD;
    }&#xD;
&#xD;
	/*@Override&#xD;
	public double getMinTemperature_degC() {&#xD;
		return minTemperature_degC;&#xD;
	}*/&#xD;
&#xD;
	/*@Override&#xD;
	public double getMaxTemperature_degC() {&#xD;
		return maxTemperature_degC;&#xD;
	}*/&#xD;
&#xD;
	/*public double getStorageCapacity() {&#xD;
		return storageCapacity_kWh;&#xD;
	}*/&#xD;
&#xD;
	/*public double getHeatCapacity_JpK() {&#xD;
		return heatCapacity_JpK;&#xD;
	}*/&#xD;
&#xD;
	/*&#xD;
	@Override&#xD;
	public double getHeatCapacity_kW() {&#xD;
    	return capacityHeat_kW;&#xD;
    }&#xD;
	*/&#xD;
&#xD;
	/*@Override //Storage assets limiteren de opname van warmte niet met 1. Dat is nodig voor de buffer. Die kan wel maximaal zijn capaciteit leverern, maar kan meer opnemen. @Gillis is dat logisch of willen we andere oplossing?&#xD;
    public double[] operateBounded(double ratioOfCapacity) {&#xD;
    	double limitedRatioOfCapacity = max(-1, ratioOfCapacity);&#xD;
    	double[] arr = operate(limitedRatioOfCapacity);&#xD;
    	return arr;&#xD;
    }*/&#xD;
&#xD;
	@Override&#xD;
	public void updateAmbientTemperature(double currentAmbientTemperature_degC) { // TODO: Hoe zorgen we dat we deze niet vergeten aan te roepen??&#xD;
		this.ambientTemperature_degC = currentAmbientTemperature_degC;&#xD;
	}&#xD;
&#xD;
	public void updateSolarRadiation(double solarRadiation_Wpm2) { // TODO: Hoe zorgen we dat we deze niet vergeten aan te roepen??&#xD;
		this.solarRadiation_Wpm2 = solarRadiation_Wpm2;&#xD;
		//traceln("Updating solarRadiation of building to %s Wpm2!", solarRadiation_Wpm2);&#xD;
	}&#xD;
	&#xD;
	&#xD;
	// Methods for Optional Heat Buffer&#xD;
	// Interior heat buffer may represent the radiator or floor heating. Typical delay is 0.5 or 3 hours respectively.	&#xD;
	public void addInteriorHeatBuffer(double delayTime_h) {&#xD;
		this.interiorDelayTime_h = delayTime_h;&#xD;
		this.interiorReleaseSchedule_kWh = new double[ (int)(delayTime_h / this.timestep_h) ];&#xD;
		this.interiorReleaseScheduleIndex = 0;&#xD;
	}&#xD;
&#xD;
	// Exterior heat buffer may represent the walls and roof of the building. Typical delay is 8 hours.&#xD;
	public void addExteriorHeatBuffer(double delayTime_h) {&#xD;
		this.exteriorDelayTime_h = delayTime_h;&#xD;
		this.exteriorReleaseSchedule_kWh = new double[ (int)(delayTime_h / this.timestep_h) ];&#xD;
		this.exteriorReleaseScheduleIndex = 0;&#xD;
	}&#xD;
	&#xD;
    private double getInteriorHeatRelease(double heatAbsorbed_kWh) {&#xD;
    	// Distribute the added energy evenly over the release schedule&#xD;
    	//traceln("Interior schedule before: " + Arrays.toString(this.interiorReleaseSchedule_kWh));&#xD;
    	for (int x = 0; x &lt; this.interiorReleaseSchedule_kWh.length; x++) {&#xD;
    		this.interiorReleaseSchedule_kWh[x] += heatAbsorbed_kWh / this.interiorReleaseSchedule_kWh.length;&#xD;
    	}&#xD;
    	// Store the current value&#xD;
    	double heatReleased_kWh = this.interiorReleaseSchedule_kWh[this.interiorReleaseScheduleIndex];&#xD;
    	// Reset the current value&#xD;
        this.interiorReleaseSchedule_kWh[this.interiorReleaseScheduleIndex] = 0;&#xD;
    	// Shift over the index&#xD;
    	this.interiorReleaseScheduleIndex++;&#xD;
    	this.interiorReleaseScheduleIndex = this.interiorReleaseScheduleIndex % this.interiorReleaseSchedule_kWh.length;&#xD;
    	//traceln("Interior schedule after: " + Arrays.toString(this.interiorReleaseSchedule_kWh));    	&#xD;
 &#xD;
    	return heatReleased_kWh;&#xD;
    }&#xD;
    &#xD;
    private double getExteriorHeatRelease(double heatAbsorbed_kWh) {&#xD;
    	// Distribute the added energy evenly over the release schedule&#xD;
    	for (int x = 0; x &lt; this.exteriorReleaseSchedule_kWh.length; x++) {&#xD;
    		this.exteriorReleaseSchedule_kWh[x] += heatAbsorbed_kWh / this.exteriorReleaseSchedule_kWh.length;&#xD;
    	}&#xD;
    	// Store the current value&#xD;
    	double heatReleased_kWh = this.exteriorReleaseSchedule_kWh[this.exteriorReleaseScheduleIndex];&#xD;
    	// Reset the current value&#xD;
        this.exteriorReleaseSchedule_kWh[this.exteriorReleaseScheduleIndex] = 0;&#xD;
    	// Shift over the index&#xD;
    	this.exteriorReleaseScheduleIndex++;&#xD;
    	this.exteriorReleaseScheduleIndex = this.exteriorReleaseScheduleIndex % this.exteriorReleaseSchedule_kWh.length;&#xD;
    	&#xD;
    	return heatReleased_kWh;&#xD;
    }&#xD;
    &#xD;
    public double getRemainingHeatBufferHeat_kWh() {&#xD;
    	double remainingHeatBufferHeat_kWh = 0;&#xD;
		if( this.interiorDelayTime_h != 0.0) {&#xD;
	    	for (int x = 0; x &lt; this.interiorReleaseSchedule_kWh.length; x++) {&#xD;
	    		remainingHeatBufferHeat_kWh += this.interiorReleaseSchedule_kWh[x];&#xD;
	    	}&#xD;
		}&#xD;
		if( this.exteriorDelayTime_h != 0.0) {&#xD;
	    	for (int x = 0; x &lt; this.exteriorReleaseSchedule_kWh.length; x++) {&#xD;
	    		remainingHeatBufferHeat_kWh += this.exteriorReleaseSchedule_kWh[x];    		&#xD;
	    	}&#xD;
		}&#xD;
    	return remainingHeatBufferHeat_kWh;&#xD;
    }&#xD;
    &#xD;
    public boolean hasHeatBuffer() {&#xD;
    	if (this.exteriorDelayTime_h != 0 || this.interiorDelayTime_h != 0) {&#xD;
    		return true;&#xD;
    	}&#xD;
    	else {&#xD;
    		return false;&#xD;
    	}&#xD;
    }&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659513814164</Id>
				<Name>J_EAConversionHeatPump</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionHeatPump&#xD;
 */&#xD;
public class J_EAConversionHeatPump extends zero_engine.J_EAConversion implements Serializable {&#xD;
	private double COP_r;&#xD;
	private double belowZeroHeatpumpEtaReductionFactor;&#xD;
	protected double outputTemperature_degC;&#xD;
	private double baseTemperature_degC;&#xD;
	private double sourceAssetHeatPower_kW; // for water-water heatpump functionality&#xD;
	protected OL_AmbientTempType ambientTempType;&#xD;
	public double totalElectricityConsumed_kWh =0;&#xD;
	public J_EA p_linkedSourceEnergyAsset;&#xD;
	public double p_baseTemperatureReference;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionHeatPump() {&#xD;
    }&#xD;
&#xD;
    //Agent parentAgent, double outputCapacity_kW, double efficiency_r, double timestep_h, double outputTemperature_degC) {&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAConversionHeatPump(Agent parentAgent, double inputElectricCapacity_kW, double eta_r, double timestep_h, double outputTemperature_degC, double baseTemperature_degC, double sourceAssetHeatPower_kW, double belowZeroHeatpumpEtaReductionFactor, OL_AmbientTempType ambientTempType ) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.inputCapacity_kW = inputElectricCapacity_kW;&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.eta_r = eta_r;&#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
	    this.COP_r = eta_r * ( 273.15 + outputTemperature_degC ) / ( outputTemperature_degC - baseTemperature_degC );&#xD;
	    this.ambientTempType = ambientTempType;&#xD;
	    &#xD;
	    this.updateAmbientTemperature( this.baseTemperature_degC );&#xD;
	    &#xD;
	    this.sourceAssetHeatPower_kW = sourceAssetHeatPower_kW;&#xD;
	    this.belowZeroHeatpumpEtaReductionFactor = belowZeroHeatpumpEtaReductionFactor;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
    	this.energyCarrierConsumed= OL_EnergyCarriers.ELECTRICITY;  &#xD;
    	&#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);   	&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
&#xD;
	public void updateParameters(double baseTemperature_degC, double outputTemperature_degC) {&#xD;
		this.baseTemperature_degC = baseTemperature_degC;&#xD;
		this.outputTemperature_degC = outputTemperature_degC;&#xD;
		if ( this.baseTemperature_degC &gt; this.outputTemperature_degC) {&#xD;
			traceln("**** EXCEPTION **** Heatpump baseTemperature ( " + this.baseTemperature_degC + ") &gt; outputTemperature ( " + this.outputTemperature_degC + ") ");&#xD;
		}&#xD;
		this.COP_r = this.eta_r * ( 273.15 + this.outputTemperature_degC ) / ( this.outputTemperature_degC - this.baseTemperature_degC );&#xD;
		&#xD;
		// water heatpump should take sourceAsset power transfer limitations into account (e.g. residual heat). Ugly but effectively limiting heat power output.&#xD;
    	&#xD;
		if( this.sourceAssetHeatPower_kW &gt; 0) {&#xD;
	    	this.outputCapacity_kW = min( this.outputCapacity_kW, this.sourceAssetHeatPower_kW / (1 - (1 / COP_r )));&#xD;
	    	//traceln("Water water heatpump heat capacity limited from source! =" + this.capacityHeat_kW);&#xD;
		} &#xD;
		else {&#xD;
				this.outputCapacity_kW = this.inputCapacity_kW * this.COP_r; &#xD;
				//traceln("heatpump updating temp: " + baseTemperature_degC);&#xD;
				if( baseTemperature_degC &lt; 0 ) {&#xD;
					this.COP_r = this.COP_r / this.belowZeroHeatpumpEtaReductionFactor;&#xD;
				}&#xD;
		}&#xD;
    	//traceln("J_EAConversionHeatpump capacityHeat_kW = "+ this.capacityHeat_kW + ", sourceAssetHeatPower_kW " + this.sourceAssetHeatPower_kW );&#xD;
    &#xD;
	}&#xD;
&#xD;
	public void updateAmbientTemperature(double baseTemperature_degC) {&#xD;
		// water heatpump should take sourceAsset power transfer limitations into account (e.g. residual heat). Ugly but effectively limiting heat power output.&#xD;
    	&#xD;
		//traceln("J_EAHeatpump capacityHeat_kW = " + this.capacityHeat_kW + ", baseTemperature = "+ baseTemperature_degC + ", outputtemperature = "+ outputTemperature_degC);&#xD;
		updateParameters(baseTemperature_degC, this.outputTemperature_degC);&#xD;
		this.COP_r = this.eta_r * ( 273.15 + this.outputTemperature_degC ) / ( this.outputTemperature_degC - this.baseTemperature_degC );&#xD;
	    this.outputCapacity_kW = this.inputCapacity_kW * this.COP_r;&#xD;
	}&#xD;
&#xD;
	public void setCOP(double COP_r) {&#xD;
		this.COP_r = COP_r;&#xD;
		this.outputCapacity_kW = this.inputCapacity_kW * this.COP_r;&#xD;
	}&#xD;
	&#xD;
	public double getCOP() {&#xD;
		//traceln("Heatpump output temperature: " + this.outputTemperature_degC);&#xD;
		return this.COP_r;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public void operate(double ratioOfCapacity) {&#xD;
&#xD;
		double electricityConsumption_kW = ratioOfCapacity * this.inputCapacity_kW;&#xD;
		this.totalElectricityConsumed_kWh += electricityConsumption_kW * timestep_h;&#xD;
    	double heatProduction_kW = electricityConsumption_kW * this.COP_r;&#xD;
&#xD;
    	/*&#xD;
    	double heatConsumption_kW = 0;&#xD;
    	if(this.ambientTempType.equals("WATER")) {&#xD;
    		//traceln("test water heatpump EA code for heat consumption. WATER ambient temp type detected ");&#xD;
    		double maxAvailableSourcePower_kW = this.sourceAssetHeatPower_kW;&#xD;
    		&#xD;
    		heatConsumption_kW = heatProduction_kW - electricityConsumption_kW;&#xD;
    		//update effective energy production of source asset!&#xD;
    		this.p_linkedSourceEnergyAsset.v_powerFraction_fr += ( heatConsumption_kW / ((J_EAProduction)this.p_linkedSourceEnergyAsset).getCapacityHeat_kW() );&#xD;
//    		this.ownerAsset.p_linkedSourceEnergyAsset.j_ea.heatProduction_kW += this.heatConsumption_kW;&#xD;
       	}&#xD;
       	*/&#xD;
    	if (this.ambientTempType == OL_AmbientTempType.HEAT_GRID ) {&#xD;
    		this.energyUse_kW = 0;&#xD;
    		flowsMap.put(OL_EnergyCarriers.HEAT, -electricityConsumption_kW);&#xD;
    		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW);&#xD;
    	}&#xD;
    	else {&#xD;
	    	this.energyUse_kW = electricityConsumption_kW - heatProduction_kW; 		&#xD;
			flowsMap.put(OL_EnergyCarriers.HEAT, -heatProduction_kW);		&#xD;
			flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW);		&#xD;
	    	}&#xD;
		this.energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
	}&#xD;
&#xD;
	/*&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"capacityElectricity_kW = " + capacityElectric_kW +" "+&#xD;
			"capacityHeat_kW = " + capacityHeat_kW +" "+&#xD;
			"baseTemperature_degC = " + baseTemperature_degC + " "+&#xD;
			"ambientTempType = " + ambientTempType + " "+&#xD;
			"sourceAssetHeatPower_kW = " + sourceAssetHeatPower_kW + " " +&#xD;
			"outputTemperature_degC = " + outputTemperature_degC +" "+&#xD;
			"energyUsed_kWh = " + energyUsed_kWh + " "+&#xD;
			"heatProduced_kWh = " + heatProduced_kWh + " "+&#xD;
			"heatConsumed_kWh = " + heatConsumed_kWh + " ";&#xD;
	}&#xD;
	*/&#xD;
	&#xD;
	public void setSourceAssetHeatPower(double sourceAssetHeatPower_kW) {&#xD;
		this.sourceAssetHeatPower_kW = sourceAssetHeatPower_kW;&#xD;
		//traceln("sourceAssetHeatPower_kW is set to: "+sourceAssetHeatPower_kW);&#xD;
	}&#xD;
	&#xD;
	public void f_setLinkedVariable(EnergyModel main, String ambientTempType, J_EA j_ea) {&#xD;
		switch( ambientTempType ) {&#xD;
		case "AIR":&#xD;
			this.p_baseTemperatureReference = main.v_currentAmbientTemperature_degC ;&#xD;
		break;&#xD;
		case "GROUND":&#xD;
			this.p_baseTemperatureReference= main.p_undergroundTemperature_degC ;&#xD;
		break;&#xD;
		case "WATER":&#xD;
			//traceln("f_setLinkedVariable: water type parameter update!");&#xD;
			this.p_baseTemperatureReference = j_ea.getCurrentTemperature() ;&#xD;
			this.updateAmbientTemperature( p_baseTemperatureReference );&#xD;
		break;&#xD;
		default:&#xD;
			traceln("EXCEPTION: ENERGY ASSET WITH A NON-EXISTENT AMBIENT TEMPERATURE TYPE");				&#xD;
	}&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	public void setBaseTemperature_degC( double baseTemperature_degC) {&#xD;
		this.baseTemperature_degC = baseTemperature_degC;&#xD;
		this.updateParameters( this.baseTemperature_degC, this.outputTemperature_degC);&#xD;
	}&#xD;
&#xD;
    @Override&#xD;
	public void setEta_r( double efficiency_r) {&#xD;
		this.eta_r = efficiency_r;&#xD;
		this.COP_r = this.eta_r * ( 273.15 + this.outputTemperature_degC ) / ( this.outputTemperature_degC - this.baseTemperature_degC );&#xD;
		this.outputCapacity_kW = this.inputCapacity_kW * this.COP_r;&#xD;
	}&#xD;
    &#xD;
	public OL_AmbientTempType getAmbientTempType() {&#xD;
		return this.ambientTempType;&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1659534704067</Id>
				<Name>J_EAEV</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
* J_EAEV&#xD;
*/&#xD;
public class J_EAEV extends J_EAVehicle implements Serializable {&#xD;
 &#xD;
 &#xD;
	public OL_EnergyCarriers storageMedium = OL_EnergyCarriers.ELECTRICITY;&#xD;
	private double stateOfCharge_fr;&#xD;
	private double initialstateOfCharge_fr;&#xD;
	private double stateOfChargeStored_r;&#xD;
	protected double capacityElectric_kW;&#xD;
	private double storageCapacity_kWh;&#xD;
 &#xD;
	// Should this be in here?	&#xD;
	public double energyNeedForNextTrip_kWh;&#xD;
	public OL_EVChargingNeed chargingNeed;&#xD;
	private double energyChargedOutsideModelArea_kWh = 0;&#xD;
	private double energyChargedOutsideModelAreaStored_kWh;&#xD;
	public double charged_kWh = 0;&#xD;
	public double discharged_kWh = 0;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAEV() {&#xD;
    }&#xD;
 &#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAEV(Agent parentAgent, double capacityElectricity_kW, double storageCapacity_kWh, double stateOfCharge_fr, double timestep_h, double energyConsumption_kWhpkm, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker) {&#xD;
		this.parentAgent = parentAgent;&#xD;
		this.capacityElectric_kW = capacityElectricity_kW; // for EV, this is max charging power.&#xD;
		this.storageCapacity_kWh = storageCapacity_kWh;&#xD;
		this.initialstateOfCharge_fr = stateOfCharge_fr;&#xD;
		this.stateOfCharge_fr = initialstateOfCharge_fr;&#xD;
		this.timestep_h = timestep_h;&#xD;
		this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;&#xD;
		this.vehicleScaling = vehicleScaling;&#xD;
	    this.energyAssetType = energyAssetType; //OL_EnergyAssetType.ELECTRIC_VEHICLE; // AANPASSING ATE: VRAGEN AAN GILLIS: asset type meegeven in functie J_EAV, want scheelt switch statement in iEA functie.&#xD;
	    this.tripTracker = tripTracker;&#xD;
	    if (tripTracker != null) {&#xD;
	    	tripTracker.Vehicle=this;	    	&#xD;
	    }&#xD;
	    // Validation checks&#xD;
	    if (capacityElectric_kW == 0 || storageCapacity_kWh == 0 || timestep_h == 0 || energyConsumption_kWhpkm == 0) {&#xD;
	    	throw new RuntimeException(String.format("Exception: J_EAEV in invalid state! Energy Asset: %s, capacityElectric_kW: %s, storageCapacity_kWh: %s, timestep_h: %s, energyConsumption_kWhpkm %s", this, capacityElectric_kW, storageCapacity_kWh, timestep_h, energyConsumption_kWhpkm));&#xD;
	    	&#xD;
	    }&#xD;
	    this.activeProductionEnergyCarriers.add(this.storageMedium);   	&#xD;
		this.activeConsumptionEnergyCarriers.add(this.storageMedium);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
 &#xD;
	@Override&#xD;
	public void operate(double ratioOfChargeCapacity_r) {&#xD;
		//traceln( "ratio: " + ratioOfChargeCapacity_r);&#xD;
&#xD;
    	double discharge_kW = 0;&#xD;
    	double deltaEnergy_kWh;   // to check the request with the energy currently in storage&#xD;
    	&#xD;
    	deltaEnergy_kWh = ( ratioOfChargeCapacity_r * (capacityElectric_kW * vehicleScaling) * timestep_h ) ;&#xD;
    	deltaEnergy_kWh = - min( -deltaEnergy_kWh, (stateOfCharge_fr * (storageCapacity_kWh * vehicleScaling)) ); // Prevent negative charge&#xD;
    	deltaEnergy_kWh = min(deltaEnergy_kWh, ratioOfChargeCapacity_r * (capacityElectric_kW * vehicleScaling) * timestep_h ); // prevent charging faster than allowed&#xD;
    	deltaEnergy_kWh = min(deltaEnergy_kWh, (1 - stateOfCharge_fr) * (storageCapacity_kWh * vehicleScaling) ); // Prevent overcharge&#xD;
    &#xD;
		discharge_kW = -deltaEnergy_kWh / timestep_h;&#xD;
		//traceln("state of charge: " + stateOfCharge_fr * storageCapacity_kWh + ", charged: " + discharge_kW / 4+ " kWh, charging power kW: " + discharge_kW);&#xD;
		double electricityProduction_kW = max(discharge_kW, 0);&#xD;
		double electricityConsumption_kW = max(-discharge_kW, 0);&#xD;
		updateStateOfCharge( discharge_kW );&#xD;
		//traceln("new state of charge: " + stateOfCharge_fr * storageCapacity_kWh);&#xD;
		updateChargingHistory( electricityProduction_kW, electricityConsumption_kW );&#xD;
&#xD;
		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW - electricityProduction_kW);				&#xD;
		//return new Pair(this.flowsMap, this.energyUse_kW);&#xD;
	}&#xD;
 &#xD;
	public void updateStateOfCharge( double power_kW ) {&#xD;
		if(vehicleScaling &gt; 0){&#xD;
			stateOfCharge_fr -= ( power_kW * timestep_h ) / (storageCapacity_kWh * vehicleScaling);&#xD;
		}&#xD;
		else {&#xD;
			stateOfCharge_fr = 0;&#xD;
		}&#xD;
	}&#xD;
 &#xD;
&#xD;
	&#xD;
	@Override&#xD;
	public boolean startTrip() {&#xD;
		if (available) {&#xD;
			this.available = false;&#xD;
			//traceln("storage capacity start of trip: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_fr);&#xD;
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.remove(this);&#xD;
			&#xD;
			//Update (charging) flows to zero, becausde vehicle is away.&#xD;
			this.f_updateAllFlows(0.0);&#xD;
			return true;&#xD;
		} else {&#xD;
			traceln("Trip not started because EV not available!");&#xD;
			return false; // Trip not started because EV not available!&#xD;
		}&#xD;
	}&#xD;
 &#xD;
	@Override&#xD;
	public boolean endTrip(double tripDist_km) {&#xD;
	&#xD;
		if(available) {&#xD;
			traceln("Trip not ended because EV never left!");&#xD;
			return false;&#xD;
		}else if (this.vehicleScaling == 0) {&#xD;
			this.available = true;&#xD;
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.add(this);&#xD;
			return true;&#xD;
		} else {&#xD;
			mileage_km += tripDist_km;&#xD;
			//traceln( "J_EAEV comes back, trip distance: " + tripDist_km + ", energy consumption: " + tripDist_km * energyConsumption_kWhpkm);&#xD;
			//traceln("EV of type: " + this.energyAssetType + "state of charge: " + stateOfCharge_fr);&#xD;
			stateOfCharge_fr -= (tripDist_km * vehicleScaling * energyConsumption_kWhpkm) / (storageCapacity_kWh * vehicleScaling);&#xD;
			//traceln("storage capacity: " + storageCapacity_kWh + ", state of charge: " + stateOfCharge_fr);&#xD;
			energyUsed_kWh += tripDist_km * vehicleScaling * energyConsumption_kWhpkm;&#xD;
			energyUse_kW += tripDist_km * vehicleScaling * energyConsumption_kWhpkm / timestep_h;&#xD;
			//traceln("EV energy use at end of trip: %s kWh", tripDist_km * vehicleScaling * energyConsumption_kWhpkm );&#xD;
			if (stateOfCharge_fr &lt; 0) {&#xD;
				//traceln( ownerAsset.date());&#xD;
				//traceln( "Trip distance: " + tripDist_km + ", vehicle scaling: " + vehicleScaling + ", energy cons_kWhpkm: " + energyConsumption_kWhpkm );&#xD;
				//traceln("EV of type: " + this.energyAssetType + " from GC " + this.parentAgent + " arrived home with negative SOC: " + stateOfCharge_fr );&#xD;
						&#xD;
				//energyChargedOutsideModelArea_kWh += -stateOfCharge_fr * storageCapacity_kWh;&#xD;
				//traceln("energyChargedOutsideModelArea_kWh: " + energyChargedOutsideModelArea_kWh);&#xD;
				//stateOfCharge_fr = 0;&#xD;
			}&#xD;
			this.available = true;&#xD;
			((GridConnection)this.parentAgent).c_vehiclesAvailableForCharging.add(this);&#xD;
			//maxSpreadChargingRatio = (1-stateOfCharge_fr) * storageCapacity_kWh / (timeToNextTrip_min/60);&#xD;
			return true;&#xD;
		}&#xD;
	}&#xD;
 &#xD;
	public void updateChargingHistory(double electricityProduced_kW, double electricityConsumed_kW) {&#xD;
		discharged_kWh += electricityProduced_kW * timestep_h;&#xD;
		charged_kWh += electricityConsumed_kW * timestep_h;&#xD;
	}&#xD;
 &#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return this.energyUsed_kWh;&#xD;
	}&#xD;
 &#xD;
	public double getCurrentStateOfCharge_fr() {&#xD;
    	return this.stateOfCharge_fr;&#xD;
	}&#xD;
 &#xD;
	public double getStorageCapacity_kWh() {&#xD;
		return this.storageCapacity_kWh * this.vehicleScaling;&#xD;
	}&#xD;
&#xD;
	public double getCurrentStateOfCharge_kWh() {&#xD;
		return this.stateOfCharge_fr * this.getStorageCapacity_kWh();&#xD;
	}&#xD;
		&#xD;
	public double getCapacityElectric_kW() {&#xD;
		return this.capacityElectric_kW * this.vehicleScaling;&#xD;
	}&#xD;
	public double getTotalChargeAmount_kWh() {&#xD;
		return this.charged_kWh;&#xD;
	}&#xD;
	public double getTotalDischargeAmount_kWh() {&#xD;
		return this.discharged_kWh;&#xD;
	}&#xD;
	&#xD;
	public double getEnergyNeedForNextTrip_kWh() {&#xD;
		return this.energyNeedForNextTrip_kWh * this.vehicleScaling;&#xD;
	}&#xD;
 &#xD;
	public boolean getAvailability() {&#xD;
		return this.available;&#xD;
	}&#xD;
 &#xD;
	public double getChargingTimeToFull_MIN() {&#xD;
		double chargingTime_min = ceil( 60 * ((storageCapacity_kWh * vehicleScaling) - (storageCapacity_kWh * vehicleScaling) * stateOfCharge_fr) / (capacityElectric_kW * vehicleScaling) ) ;&#xD;
		return chargingTime_min;&#xD;
	}&#xD;
 &#xD;
	public double getEnergyChargedOutsideModelArea_kWh() {&#xD;
		return energyChargedOutsideModelArea_kWh;&#xD;
	}&#xD;
	@Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	stateOfChargeStored_r = stateOfCharge_fr;&#xD;
    	stateOfCharge_fr = initialstateOfCharge_fr;&#xD;
    	availableStored = available;&#xD;
    	available = true;&#xD;
    	energyChargedOutsideModelAreaStored_kWh = energyChargedOutsideModelArea_kWh;&#xD;
    	energyChargedOutsideModelArea_kWh = 0;&#xD;
    	mileage_km = 0;&#xD;
    	charged_kWh = 0;&#xD;
    	discharged_kWh = 0;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;    	&#xD;
    	stateOfCharge_fr = stateOfChargeStored_r;&#xD;
    	available = availableStored;&#xD;
    	energyChargedOutsideModelArea_kWh = energyChargedOutsideModelAreaStored_kWh;&#xD;
    	charged_kWh = 0;&#xD;
    	discharged_kWh = 0;&#xD;
    }&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"SOC = " + roundToDecimal( stateOfCharge_fr, 2 ) + " " +&#xD;
			"storageCapacity_kWh = " + storageCapacity_kWh + " " +&#xD;
			"charged_kWh = " + roundToDecimal( charged_kWh, 2 ) + " " +&#xD;
			"mileage = " + roundToDecimal( mileage_km, 2 ) + " ";&#xD;
	}&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
 &#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1660131551684</Id>
				<Name>J_EAConversionHeatDeliverySet</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionHeatDeliverySet&#xD;
 */&#xD;
public class J_EAConversionHeatDeliverySet extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
	protected double outputTemperature_degC;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionHeatDeliverySet() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    &#xD;
    public J_EAConversionHeatDeliverySet(Agent parentAgent, double outputHeatCapacity_kW, double efficiency_r, double timestep_h, double outputTemperature_degC) {&#xD;
&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.outputCapacity_kW = outputHeatCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.HEAT_DELIVERY_SET;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.HEAT;&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
	    &#xD;
	    if (outputHeatCapacity_kW == 0) {&#xD;
	    	throw new RuntimeException(String.format("Exception: J_EAConversionHeatDeliverySet with capacityHeat_kW = 0, invalid state! Energy Asset: %s", this));&#xD;
	    }&#xD;
	    &#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1661266990567</Id>
				<Name>J_ExperimentSettingsData</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * J_ExperimentSettingsData&#xD;
 */&#xD;
public class J_ExperimentSettingsData implements Serializable {&#xD;
&#xD;
	public String timeStep_h = "";&#xD;
	public String timeStepsElapsed = "";&#xD;
	public String modelHoursElapsed_h = "";&#xD;
	public String modelStartUpDuration_s = "";&#xD;
	public String modelRunDuration_s = "";&#xD;
	public String nGridNodes = "";&#xD;
	public String nGridConnections = "";&#xD;
	public String nEnergyAssets = "";&#xD;
	public String nConnectionOwners = "";&#xD;
	public String nEnergySuppliers = "";&#xD;
	public String nEnergyCoops = "";&#xD;
	public String nGridOperators = "";&#xD;
	public String nNationalEnergyMarket = "";&#xD;
	public double shareElectricvehiclesInHouseholds = 0.0;&#xD;
&#xD;
	 /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ExperimentSettingsData() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_ExperimentSettingsData(String timeStep_h) {&#xD;
		this.timeStep_h = timeStep_h;&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"timeStep_h = " + timeStep_h +" " +&#xD;
			"timeStepsElapsed = " + timeStepsElapsed +" " +&#xD;
			"modelHoursElapsed_h = " + modelHoursElapsed_h + " " +&#xD;
			"modelStartUpDuration_s = " + modelStartUpDuration_s + " " +&#xD;
			"modelRunDuration_s = " + modelRunDuration_s + " " +&#xD;
			"nGridNodes = " + nGridNodes + " " +&#xD;
			"nGridConnections = " + nGridConnections + " " +&#xD;
			"nEnergyAssets = " +	nEnergyAssets + " " +&#xD;
			"nConnectionOwners = " + nConnectionOwners + " " +&#xD;
			"nEnergySuppliers = "+ nEnergySuppliers + " " +&#xD;
			"nEnergyCoops = " + nEnergyCoops + " " +&#xD;
			"nGridOperators = " + nGridOperators + " " +&#xD;
			"nNationalEnergyMarket = " + nNationalEnergyMarket +&#xD;
			"shareElectricvehiclesInHouseholds = " + shareElectricvehiclesInHouseholds&#xD;
			;&#xD;
	}&#xD;
&#xD;
	public void updateData(String timeStep_h, String timeStepsElapsed, String modelHoursElapsed_h, String modelStartUpDuration_s, String modelRunDuration_s, String nGridNodes,	String nGridConnections, String nEnergyAssets, String nConnectionOwners, String nEnergySuppliers, String nEnergyCoops, String nGridOperators, String nNationalEnergyMarket, double shareElectricvehiclesInHouseholds) {&#xD;
		this.timeStep_h = timeStep_h;&#xD;
		this.timeStepsElapsed = timeStepsElapsed;&#xD;
		this.modelHoursElapsed_h = modelHoursElapsed_h;&#xD;
		this.modelStartUpDuration_s = modelStartUpDuration_s;&#xD;
		this.modelRunDuration_s = modelRunDuration_s;&#xD;
		this.nGridNodes = nGridNodes;&#xD;
		this.nGridConnections = nGridConnections;&#xD;
		this.nEnergyAssets = nEnergyAssets;&#xD;
		this.nConnectionOwners = nConnectionOwners;&#xD;
		this.nEnergySuppliers = nEnergySuppliers;&#xD;
		this.nEnergyCoops = nEnergyCoops;&#xD;
		this.nGridOperators = nGridOperators;&#xD;
		this.nNationalEnergyMarket = nNationalEnergyMarket;&#xD;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;&#xD;
	}&#xD;
&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1661349111073</Id>
				<Name>DataOut</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * DataOut&#xD;
 */&#xD;
public class DataOut implements Serializable {&#xD;
&#xD;
	public ArrayList actorData = new ArrayList();&#xD;
	public ArrayList runSettingsData = new ArrayList(1);&#xD;
	public ArrayList simulationResults = new ArrayList(2);&#xD;
	public ArrayList hourlyCurvesData = new ArrayList();&#xD;
	public ArrayList contractData = new ArrayList();&#xD;
	//public DataSet dataSet = new DataSet(8760); // Test to make dataobject with simulation results per agent, universal for different agenttypes, such as model-wide, gridconnection (building), gridconnection (neighbourhood)&#xD;
&#xD;
	public void clearData() {&#xD;
		actorData.clear();&#xD;
		runSettingsData.clear();&#xD;
		simulationResults.clear();&#xD;
		hourlyCurvesData.clear();&#xD;
		contractData.clear();&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1663238817163</Id>
				<Name>J_ActorData</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_ActorData&#xD;
 */&#xD;
public class J_ActorData implements Serializable {&#xD;
&#xD;
	public String actorID;&#xD;
	public String group;&#xD;
	public String gridOperator;&#xD;
	public String parentCoop;&#xD;
	public String energySupplier;&#xD;
	public String ownedGridConnection;&#xD;
	public String energySupplierDistrictHeat;&#xD;
	public String electricityVolume_kWh;&#xD;
	public String heatVolume_kWh;&#xD;
	public String methaneVolume_kWh;&#xD;
	public String hydrogenVolume_kWh;&#xD;
	public String dieselVolume_kWh;&#xD;
	//public String electricityContractType;&#xD;
	//public String heatContractType;&#xD;
	//public String methaneContractType;&#xD;
	//public String hydrogenContractType;&#xD;
	public String balanceElectricity_eur;&#xD;
	public String balanceElectricityDelivery_eur;&#xD;
	public String balanceElectricityTransport_eur;&#xD;
	public String balanceElectricityTax_eur;&#xD;
	public String deliveryContractScope;&#xD;
	public String transportContractScope;&#xD;
	public String taxContractScope;&#xD;
	public boolean b_methaneUsedWithoutContracts;&#xD;
	public boolean b_hydrogenUsedWithoutContracts;&#xD;
	 /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ActorData() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_ActorData(String actorID, String group) {&#xD;
		this.actorID = actorID;&#xD;
		this.group = group;&#xD;
		this.gridOperator = "";&#xD;
		this.parentCoop = "";&#xD;
		this.energySupplier = "";&#xD;
		this.ownedGridConnection = "";&#xD;
		this.energySupplierDistrictHeat = "";&#xD;
		this.electricityVolume_kWh = "";&#xD;
		this.heatVolume_kWh = "";&#xD;
		this.methaneVolume_kWh = "";&#xD;
		this.hydrogenVolume_kWh = "";&#xD;
		this.dieselVolume_kWh = "";&#xD;
		//this.electricityContractType = "";&#xD;
		//this.heatContractType = "";&#xD;
		//this.methaneContractType = "";&#xD;
		//this.hydrogenContractType = "";&#xD;
		this.balanceElectricity_eur = "";&#xD;
		this.balanceElectricityDelivery_eur = "";&#xD;
		this.balanceElectricityTransport_eur = "";&#xD;
		this.balanceElectricityTax_eur = "";&#xD;
		this.deliveryContractScope = "";&#xD;
		this.transportContractScope = "";&#xD;
		this.taxContractScope = "";&#xD;
		this.b_methaneUsedWithoutContracts = false;&#xD;
		this.b_hydrogenUsedWithoutContracts = false;&#xD;
		&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"actorID = " + actorID +" " +&#xD;
			"group = " + group +" " +&#xD;
			"gridOperator = " + gridOperator +" " +&#xD;
			"parentCoop = " + parentCoop +" " +&#xD;
			"energySupplier = " + energySupplier +" " +&#xD;
			"ownedGridConnection = " + ownedGridConnection +" " +&#xD;
			"energySupplierDistrictHeat = " + energySupplierDistrictHeat +" " +&#xD;
			"electricityVolume_kWh = " + electricityVolume_kWh +" " +&#xD;
			"heatVolume_kWh = " + heatVolume_kWh +" " +&#xD;
			"methaneVolume_kWh = " + methaneVolume_kWh +" " +&#xD;
			"hydrogenVolume_kWh = " + hydrogenVolume_kWh +" " +&#xD;
			"dieselVolume_kWh = " + dieselVolume_kWh + " " +&#xD;
			//"electricityContractType = " + electricityContractType +" " +&#xD;
			//"heatContractType = " + heatContractType +" " +&#xD;
			//"methaneContractType = " + methaneContractType +" " +&#xD;
			//"hydrogenContractType = " + hydrogenContractType +" " +&#xD;
			"balanceElectricity_eur = " + balanceElectricity_eur +" " +&#xD;
			"balanceElectricityDelivery_eur = " + balanceElectricityDelivery_eur +" " +&#xD;
			"balanceElectricityTransport_eur = " + balanceElectricityTransport_eur +" " +&#xD;
			"balanceElectricityTax_eur = " + balanceElectricityTax_eur +" " +&#xD;
			"deliveryContractScope = " + deliveryContractScope +" "+&#xD;
			"transportContractScope = " + transportContractScope +" "+&#xD;
			"taxContractScope = " + taxContractScope + " ";&#xD;
	}&#xD;
&#xD;
	public void updateData(String actorID, String group, String gridOperator, String parentCoop, String energySupplier, String ownedGridConnection, String energySupplierDistrictHeat,double electricityVolume_kWh, double heatVolume_kWh, double methaneVolume_kWh, double hydrogenVolume_kWh, double dieselVolume_kWh, /*String electricityContractType, String heatContractType, String methaneContractType, String hydrogenContractType,*/ double balanceElectricity_eur, double balanceElectricityDelivery_eur, double balanceElectricityTransport_eur, double balanceElectricityTax_eur, String deliveryContractScope, String transportContractScope, String taxContractScope, boolean b_methaneUsedWithoutContracts, boolean b_hydrogenUsedWithoutContracts) {&#xD;
		this.actorID = actorID;&#xD;
		this.group = group;&#xD;
		this.gridOperator = gridOperator;&#xD;
		this.parentCoop = parentCoop;&#xD;
		this.energySupplier = energySupplier;&#xD;
		this.ownedGridConnection = ownedGridConnection;&#xD;
		this.energySupplierDistrictHeat = energySupplierDistrictHeat +"";&#xD;
		this.electricityVolume_kWh = electricityVolume_kWh + "";&#xD;
		this.heatVolume_kWh = heatVolume_kWh  + "";&#xD;
		this.methaneVolume_kWh = methaneVolume_kWh + "";&#xD;
		this.hydrogenVolume_kWh = hydrogenVolume_kWh + "";&#xD;
		this.dieselVolume_kWh = dieselVolume_kWh + "";&#xD;
		//this.electricityContractType = electricityContractType + "";&#xD;
		//this.heatContractType = heatContractType + "";&#xD;
		//this.methaneContractType = methaneContractType + "";&#xD;
		//this.hydrogenContractType = hydrogenContractType + "";&#xD;
		this.balanceElectricity_eur = balanceElectricity_eur + "";&#xD;
		this.balanceElectricityDelivery_eur = balanceElectricityDelivery_eur + "";&#xD;
		this.balanceElectricityTransport_eur = balanceElectricityTransport_eur + "";&#xD;
		this.balanceElectricityTax_eur = balanceElectricityTax_eur + "";&#xD;
		this.deliveryContractScope = deliveryContractScope + "";&#xD;
		this.transportContractScope = transportContractScope + "";&#xD;
		this.taxContractScope = taxContractScope + "";	&#xD;
		this.b_methaneUsedWithoutContracts = b_methaneUsedWithoutContracts;&#xD;
		this.b_hydrogenUsedWithoutContracts = b_hydrogenUsedWithoutContracts;&#xD;
	}&#xD;
	/*&#xD;
	public ArrayList returnData() {&#xD;
		ArrayList data = new ArrayList({actorID, actorType, parentActorID, energySupplier, ownedGridConnection.toString(), energySupplierDistrictHeat.toString(), electricityVolume_kWh, heatVolume_kWh, methaneVolume_kWh, hydrogenVolume_kWh, balanceElectricity_eur, balanceHeat_eur, balanceMethane_eur, balanceHydrogen_eur});&#xD;
		return data;&#xD;
&#xD;
	}*/&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1665502017804</Id>
				<Name>J_EAConversionHydrogenBurner</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
* J_EAConversionGasBurner&#xD;
*/&#xD;
public class J_EAConversionHydrogenBurner extends zero_engine.J_EAConversion implements Serializable {&#xD;
 &#xD;
	protected double outputTemperature_degC;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionHydrogenBurner() {&#xD;
    }&#xD;
 &#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */    &#xD;
    public J_EAConversionHydrogenBurner(Agent parentAgent, double outputHeatCapacity_kW, double efficiency_r, double timestep_h, double outputTemperature_degC) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.outputCapacity_kW = outputHeatCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.HYDROGEN_BURNER;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.HYDROGEN;&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
 &#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
 &#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1666189454452</Id>
				<Name>J_EAConversionElectricHeater</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionElectricHeater&#xD;
 */&#xD;
public class J_EAConversionElectricHeater extends J_EAConversion implements Serializable {&#xD;
&#xD;
	protected double outputTemperature_degC;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
&#xD;
    public J_EAConversionElectricHeater(Agent parentAgent, double outputHeatCapacity_kW, double efficiency_r, double timestep_h, double outputTemperature_degC) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.outputCapacity_kW = outputHeatCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.ELECTRIC_HEATER;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.ELECTRICITY;&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1666189454453</Id>
				<Name>J_EAConversionCurtailer</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionCurtailer&#xD;
 */&#xD;
public class J_EAConversionCurtailer extends J_EAConversion implements Serializable {&#xD;
&#xD;
	private OL_EnergyCarriers energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	private OL_EnergyCarriers energyCarrierConsumed = OL_EnergyCarriers.ELECTRICITY;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionCurtailer(Agent parentAgent, double capacityElectric_kW, double efficiency, double timestep_h) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.capacityElectric_kW = capacityElectric_kW;&#xD;
	    this.eta_r = efficiency;&#xD;
	    this.capacityHeat_kW = this.capacityElectric_kW * this.eta_r;&#xD;
	    this.timestep_h = timestep_h;&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public double[] operate(double ratioOfCapacity) {&#xD;
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");&#xD;
		this.heatProduction_kW = capacityElectric_kW * ratioOfCapacity * eta_r;&#xD;
		this.electricityConsumption_kW = capacityElectric_kW * ratioOfCapacity;&#xD;
		this.energyUse_kW = (electricityConsumption_kW - heatProduction_kW);&#xD;
		this.energyUsed_kWh += timestep_h * (energyUse_kW); // This represents losses!&#xD;
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };&#xD;
    	//return arr;&#xD;
		return returnEnergyFlows();&#xD;
    }&#xD;
&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
&#xD;
	public void setCapacityElectric_kW(double capacityElectric_kW) {&#xD;
		this.capacityElectric_kW = capacityElectric_kW;&#xD;
	}&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1666879973864</Id>
				<Name>J_SimulationResults</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * J_SimulationResults&#xD;
 */&#xD;
public class J_SimulationResults implements Serializable {&#xD;
&#xD;
	public double HSMSPeakLoadElectricity_kW;&#xD;
	public double MSLSPeakLoadElectricity_kW;&#xD;
	public double cumulativeCapacityHS;&#xD;
	public double cumulativeCapacityLS;&#xD;
	public double netOverload_pct;&#xD;
	public Map&lt;String,Double&gt; timesOfNodePeakLoads_h = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	public Map&lt;String,Double&gt; gridConnectionMaxLoad_fr = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	public double MSLSnodePeakPositiveLoadElectricity_kW;&#xD;
	public double MSLSnodePeakNegativeLoadElectricity_kW;&#xD;
	//public double checkSumHourlyElectricityImport_MWh;&#xD;
	//public double checkSumHourlyElectricityExport_MWh;&#xD;
	public double totalElectricityImport_MWh;&#xD;
	public double totalElectricityExport_MWh;&#xD;
	public double totalMethaneImport_MWh;&#xD;
	public double totalMethaneExport_MWh;&#xD;
	public double totalHydrogenImport_MWh;&#xD;
	public double totalHydrogenExport_MWh;&#xD;
	public double totalDieselImport_MWh;&#xD;
	public Map&lt;String,Double&gt; totalBatteryUnitsInstalled = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	public Map&lt;String,Double&gt; totalBatteryChargeAmount_MWh = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	public Map&lt;String,Double&gt; totalBatteryDischargeAmount_MWh = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	public Map&lt;String,Double&gt; totalBatteryInstalledCapacity_MWh = new LinkedHashMap&lt;String,Double&gt;();&#xD;
	//public Map&lt;Integer,Double&gt; SystemHourlyElectricityImport_MWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	//public Map&lt;Integer,Double&gt; SystemHourlyElectricityExport_MWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	//public Map&lt;Integer,Double&gt; totalEVHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	//public Map&lt;Integer,Double&gt; totalEHGVHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	//public Map&lt;Integer,Double&gt; totalBatteryHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer, Double&gt;();&#xD;
	public double totalSelfConsumption_fr;&#xD;
	public double totalSelfSufficiency_fr;&#xD;
	public double TotalEnergyUsed_MWh;&#xD;
	public double TotalEnergyProduced_MWh;&#xD;
	public double TotalEnergyCurtailed_MWh;&#xD;
	public double shareElectricvehiclesInHouseholds;&#xD;
&#xD;
	 /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_SimulationResults() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_SimulationResults( double v_gridNodeLoadElectricityHSMS_kW, double v_gridNodeLoadElectricityMSLS_kW, double cumulativeCapacityHS, double cumulativeCapacityLS, double netOverload_pct, LinkedHashMap&lt;String,Double&gt; c_timesOfNodePeakLoads_h, LinkedHashMap&lt;String,Double&gt; gridConnectionMaxLoad_fr, double MSLSnodePeakPositiveLoadElectricity_kW, double MSLSnodePeakNegativeLoadElectricity_kW, double totalElectricityImport_MWh, double totalElectricityExport_MWh, double totalMethaneImport_MWh, double totalMethaneExport_MWh, double totalHydrogenImport_MWh, double totalHydrogenExport_MWh, double totalDieselImport_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryUnitsInstalled, LinkedHashMap&lt;String,Double&gt; totalBatteryChargeAmount_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryDischargeAmount_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryInstalledCapacity_MWh, LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityImportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityExportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; totalEVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalEHGVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalBatteryHourlyChargingProfile_kWh, double totalSelfConsumption_fr, double totalSelfSufficiency_fr, double TotalEnergyUsed_MWh, double TotalEnergyProduced_MWh, double TotalEnergyCurtailed_MWh, double shareElectricvehiclesInHouseholds) {&#xD;
		this.HSMSPeakLoadElectricity_kW = v_gridNodeLoadElectricityHSMS_kW;&#xD;
		this.MSLSPeakLoadElectricity_kW = v_gridNodeLoadElectricityMSLS_kW;&#xD;
		this.cumulativeCapacityHS = cumulativeCapacityHS;&#xD;
		this.cumulativeCapacityLS = cumulativeCapacityLS;&#xD;
		this.netOverload_pct = netOverload_pct;&#xD;
		this.timesOfNodePeakLoads_h = c_timesOfNodePeakLoads_h;&#xD;
		this.gridConnectionMaxLoad_fr = gridConnectionMaxLoad_fr;&#xD;
		this.MSLSnodePeakPositiveLoadElectricity_kW = MSLSnodePeakPositiveLoadElectricity_kW;&#xD;
		this.MSLSnodePeakNegativeLoadElectricity_kW = MSLSnodePeakNegativeLoadElectricity_kW;&#xD;
		this.totalElectricityImport_MWh = totalElectricityImport_MWh;&#xD;
		this.totalElectricityExport_MWh = totalElectricityExport_MWh;&#xD;
		this.totalMethaneImport_MWh = totalMethaneImport_MWh;&#xD;
		this.totalMethaneExport_MWh = totalMethaneExport_MWh;&#xD;
		this.totalHydrogenImport_MWh = totalHydrogenImport_MWh;&#xD;
		this.totalHydrogenExport_MWh = totalHydrogenExport_MWh;&#xD;
		this.totalDieselImport_MWh = totalDieselImport_MWh;&#xD;
		this.totalBatteryUnitsInstalled = totalBatteryUnitsInstalled;&#xD;
		this.totalBatteryChargeAmount_MWh = totalBatteryChargeAmount_MWh;&#xD;
		this.totalBatteryDischargeAmount_MWh = totalBatteryDischargeAmount_MWh;&#xD;
		this.totalBatteryInstalledCapacity_MWh = totalBatteryInstalledCapacity_MWh;&#xD;
		//this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;&#xD;
		//this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;&#xD;
		//this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;&#xD;
		//this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;&#xD;
		//this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;&#xD;
		this.totalSelfConsumption_fr = totalSelfConsumption_fr;&#xD;
		this.totalSelfSufficiency_fr = totalSelfSufficiency_fr;&#xD;
		this.TotalEnergyUsed_MWh = TotalEnergyUsed_MWh;&#xD;
		this.TotalEnergyProduced_MWh = TotalEnergyProduced_MWh;&#xD;
		this.TotalEnergyCurtailed_MWh = TotalEnergyCurtailed_MWh;&#xD;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"HSMSPeakLoadElectricity_kW = " + HSMSPeakLoadElectricity_kW + " " +&#xD;
			"MSLSPeakLoadElectricity_kW = " + MSLSPeakLoadElectricity_kW + " " +&#xD;
			"MSLSnodePeakPositiveLoadElectricity_kW = " + MSLSnodePeakPositiveLoadElectricity_kW + " " +&#xD;
			"MSLSnodePeakNegativeLoadElectricity_kW = " + MSLSnodePeakNegativeLoadElectricity_kW + " " +&#xD;
			//"checkSumHourlyElectricityImport_MWh = " + checkSumHourlyElectricityImport_MWh + " " +&#xD;
			//"checkSumHourlyElectricityExport_MWh = " + checkSumHourlyElectricityExport_MWh + " " +&#xD;
			"totalElectricityImport_MWh = " + totalElectricityImport_MWh + " " +&#xD;
			"totalElectricityExport_MWh = " + totalElectricityExport_MWh + " " +&#xD;
			"totalMethaneImport_MWh = " + totalMethaneImport_MWh + " " +&#xD;
			"totalMethaneExport_MWh = " + totalMethaneExport_MWh + " " +&#xD;
			"totalHydrogenImport_MWh = " + totalHydrogenImport_MWh + " " +&#xD;
			"totalHydrogenExport_MWh = " + totalHydrogenExport_MWh + " "+&#xD;
			"totalDieselImport_MWh = " + totalDieselImport_MWh + " " +&#xD;
			"totalBatteryUnitsInstalled = " + totalBatteryUnitsInstalled + " "+&#xD;
			"totalBatteryChargeAmount_MWh = " + totalBatteryChargeAmount_MWh + " "+&#xD;
			"totalBatteryDischargeAmount_MWh = " + totalBatteryDischargeAmount_MWh + " "+&#xD;
			"totalBatteryInstalledCapacity_MWh = " + totalBatteryInstalledCapacity_MWh + " "+&#xD;
			//"SystemHourlyElectricityImport_MWh = " + SystemHourlyElectricityImport_MWh.toString() + " " +&#xD;
			//"SystemHourlyElectricityExport_MWh = " + SystemHourlyElectricityExport_MWh.toString() + " " +&#xD;
			//"totalEVHourlyChargingProfile_kWh = " + totalEVHourlyChargingProfile_kWh + " "+&#xD;
			//"totalEHGVHourlyChargingProfile_kWh = " + totalEHGVHourlyChargingProfile_kWh + " "+&#xD;
			//"totalBatteryHourlyChargingProfile_kWh = " + totalBatteryHourlyChargingProfile_kWh + " " +&#xD;
			"totalSelfConsumption_fr = " + totalSelfConsumption_fr*100 + " %" +&#xD;
			"totalSelfSufficiency_fr = " + totalSelfSufficiency_fr*100 + " %" +&#xD;
			"totalEnergyUsed_MWh = " + TotalEnergyUsed_MWh + " MWh" +&#xD;
			"TotalEnergyProduced_MWh = " + TotalEnergyProduced_MWh + " MWh" +&#xD;
			"TotalEnergyCurtailed_MWh = " + TotalEnergyCurtailed_MWh + " MWh" +&#xD;
			"shareElectricvehiclesInHouseholds = " + shareElectricvehiclesInHouseholds + " fr";&#xD;
	}&#xD;
&#xD;
	public void updateData( double v_gridNodePeakLoadElectricityHSMS_kW, double v_gridNodePeakLoadElectricityMSLS_kW, double cumulativeCapacityHS, double cumulativeCapacityLS, double netOverload_pct, LinkedHashMap&lt;String,Double&gt; c_timesOfNodePeakLoads_h, LinkedHashMap&lt;String,Double&gt; gridConnectionMaxLoad_fr, double MSLSnodePeakPositiveLoadElectricity_kW, double MSLSnodePeakNegativeLoadElectricity_kW, double totalElectricityImport_MWh, double totalElectricityExport_MWh, double totalMethaneImport_MWh, double totalMethaneExport_MWh, double totalHydrogenImport_MWh, double totalHydrogenExport_MWh, double totalDieselImport_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryUnitsInstalled, LinkedHashMap&lt;String,Double&gt; totalBatteryChargeAmount_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryDischargeAmount_MWh, LinkedHashMap&lt;String,Double&gt; totalBatteryInstalledCapacity_MWh, double totalSelfConsumption_fr, double totalSelfSufficiency_fr, double TotalEnergyUsed_MWh, double TotalEnergyProduced_MWh, double TotalEnergyCurtailed_MWh, double shareElectricvehiclesInHouseholds) {&#xD;
		this.HSMSPeakLoadElectricity_kW = v_gridNodePeakLoadElectricityHSMS_kW;&#xD;
		this.MSLSPeakLoadElectricity_kW = v_gridNodePeakLoadElectricityMSLS_kW;&#xD;
		this.cumulativeCapacityHS =cumulativeCapacityHS;&#xD;
		this.cumulativeCapacityLS = cumulativeCapacityLS;&#xD;
		this.netOverload_pct = netOverload_pct;&#xD;
		this.timesOfNodePeakLoads_h = c_timesOfNodePeakLoads_h;&#xD;
		this.gridConnectionMaxLoad_fr = gridConnectionMaxLoad_fr;&#xD;
		this.MSLSnodePeakPositiveLoadElectricity_kW = MSLSnodePeakPositiveLoadElectricity_kW;&#xD;
		this.MSLSnodePeakNegativeLoadElectricity_kW = MSLSnodePeakNegativeLoadElectricity_kW;&#xD;
		this.totalElectricityImport_MWh = roundToDecimal( totalElectricityImport_MWh , 2 );&#xD;
		this.totalElectricityExport_MWh = roundToDecimal( totalElectricityExport_MWh, 2 );&#xD;
		this.totalMethaneImport_MWh = roundToDecimal( totalMethaneImport_MWh, 2 );&#xD;
		this.totalMethaneExport_MWh = roundToDecimal( totalMethaneExport_MWh, 2 );&#xD;
		this.totalHydrogenImport_MWh = roundToDecimal( totalHydrogenImport_MWh, 2 );&#xD;
		this.totalHydrogenExport_MWh = roundToDecimal( totalHydrogenExport_MWh, 2 );&#xD;
		this.totalDieselImport_MWh = roundToDecimal( totalDieselImport_MWh, 2 );&#xD;
		this.totalBatteryUnitsInstalled = totalBatteryUnitsInstalled;&#xD;
		this.totalBatteryChargeAmount_MWh = totalBatteryChargeAmount_MWh;&#xD;
		this.totalBatteryDischargeAmount_MWh = totalBatteryDischargeAmount_MWh;&#xD;
		this.totalBatteryInstalledCapacity_MWh = totalBatteryInstalledCapacity_MWh;&#xD;
		//this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;&#xD;
		//this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;&#xD;
		//this.checkSumHourlyElectricityImport_MWh = SystemHourlyElectricityImport_MWh.values().stream().mapToDouble(d -&gt; d).sum();&#xD;
		//this.checkSumHourlyElectricityExport_MWh = SystemHourlyElectricityExport_MWh.values().stream().mapToDouble(d -&gt; d).sum();&#xD;
		//this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;&#xD;
		//this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;&#xD;
		//this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;&#xD;
		this.totalSelfConsumption_fr = totalSelfConsumption_fr;&#xD;
		this.totalSelfSufficiency_fr = totalSelfSufficiency_fr;&#xD;
		this.TotalEnergyUsed_MWh = TotalEnergyUsed_MWh;&#xD;
		this.TotalEnergyProduced_MWh = TotalEnergyProduced_MWh;&#xD;
		this.TotalEnergyCurtailed_MWh = TotalEnergyCurtailed_MWh;&#xD;
		this.shareElectricvehiclesInHouseholds = shareElectricvehiclesInHouseholds;&#xD;
	}&#xD;
&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1666879973865</Id>
				<Name>J_HourlyCurvesData</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * J_HourlyCurvesData&#xD;
 */&#xD;
public class J_HourlyCurvesData implements Serializable {&#xD;
&#xD;
	public double checkSumHourlyElectricityImport_MWh;&#xD;
	public double checkSumHourlyElectricityExport_MWh;&#xD;
	public Map&lt;Integer,Double&gt; SystemHourlyElectricityImport_MWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	public Map&lt;Integer,Double&gt; SystemHourlyElectricityExport_MWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	public Map&lt;Integer,Double&gt; totalEVHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	public Map&lt;Integer,Double&gt; totalEHGVHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer,Double&gt;();&#xD;
	public Map&lt;Integer,Double&gt; totalBatteryHourlyChargingProfile_kWh = new LinkedHashMap&lt;Integer, Double&gt;();&#xD;
&#xD;
	 /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HourlyCurvesData() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_HourlyCurvesData(LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityImportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityExportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; totalEVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalEHGVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalBatteryHourlyChargingProfile_kWh) {&#xD;
&#xD;
		this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;&#xD;
		this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;&#xD;
		this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;&#xD;
		this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;&#xD;
		this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;&#xD;
		this.checkSumHourlyElectricityImport_MWh = 0;&#xD;
		this.checkSumHourlyElectricityExport_MWh = 0;	&#xD;
&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"SystemHourlyElectricityImport_MWh = " + SystemHourlyElectricityImport_MWh.toString() + " " +&#xD;
			"SystemHourlyElectricityExport_MWh = " + SystemHourlyElectricityExport_MWh.toString() + " " +&#xD;
			"totalEVHourlyChargingProfile_kWh = " + totalEVHourlyChargingProfile_kWh + " "+&#xD;
			"totalEHGVHourlyChargingProfile_kWh = " + totalEHGVHourlyChargingProfile_kWh + " "+&#xD;
			"totalBatteryHourlyChargingProfile_kWh = " + totalBatteryHourlyChargingProfile_kWh + " " ;&#xD;
	}&#xD;
&#xD;
	public void updateData(LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityImportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; c_globalElectricityExportProfile_MWhph, LinkedHashMap&lt;Integer,Double&gt; totalEVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalEHGVHourlyChargingProfile_kWh, LinkedHashMap&lt;Integer,Double&gt; totalBatteryHourlyChargingProfile_kWh) {&#xD;
		this.SystemHourlyElectricityImport_MWh = c_globalElectricityImportProfile_MWhph;&#xD;
		this.SystemHourlyElectricityExport_MWh = c_globalElectricityExportProfile_MWhph;&#xD;
		this.totalEVHourlyChargingProfile_kWh = totalEVHourlyChargingProfile_kWh;&#xD;
		this.totalEHGVHourlyChargingProfile_kWh = totalEHGVHourlyChargingProfile_kWh;&#xD;
		this.totalBatteryHourlyChargingProfile_kWh = totalBatteryHourlyChargingProfile_kWh;&#xD;
		this.checkSumHourlyElectricityImport_MWh = SystemHourlyElectricityImport_MWh.values().stream().mapToDouble(d -&gt; d).sum();&#xD;
		this.checkSumHourlyElectricityExport_MWh = SystemHourlyElectricityExport_MWh.values().stream().mapToDouble(d -&gt; d).sum();&#xD;
	}&#xD;
&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1668600448637</Id>
				<Name>J_EAHydrogenVehicle</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionHydrogenVehicle&#xD;
 */&#xD;
public class J_EAHydrogenVehicle extends J_EAVehicle implements Serializable {&#xD;
&#xD;
	private OL_EnergyCarriers energyCarrierConsumed = OL_EnergyCarriers.HYDROGEN;&#xD;
&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAHydrogenVehicle() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAHydrogenVehicle(Agent ownerAssetAgent, double energyConsumption_kWhpkm, double timestep_h, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker) {&#xD;
	    this.parentAgent = ownerAssetAgent;&#xD;
	    this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.vehicleScaling = vehicleScaling;&#xD;
	    this.energyAssetType = energyAssetType;&#xD;
	    this.tripTracker = tripTracker;&#xD;
	    if (tripTracker != null) {&#xD;
	    	tripTracker.Vehicle=this;	    	&#xD;
	    }	&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
    public void f_updateAllFlows(double powerFraction_fr) {&#xD;
    	&#xD;
    	flowsMap.put(OL_EnergyCarriers.HYDROGEN, this.energyUse_kW);&#xD;
    	    	&#xD;
    	if (parentAgent instanceof GridConnection) {&#xD;
    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	this.lastFlowsMap = flowsMap;&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	//Pair&lt;J_FlowsMap, Double&gt; flowspair = new Pair(this.flowsMap, this.energyUse_kW);&#xD;
    	clear();&#xD;
    	//return this.flowsMap;&#xD;
    }&#xD;
    &#xD;
    /*public double[] operate(double ratioOfChargeCapacity_r) {&#xD;
    	return returnEnergyFlows();&#xD;
    }*/&#xD;
    &#xD;
	@Override&#xD;
	public boolean startTrip() {&#xD;
		if (available) {&#xD;
			available = false;&#xD;
			//traceln("Hydrogen vehicle starting trip!");&#xD;
			return true;&#xD;
		} else {&#xD;
			traceln("Trip not started because vehicle not available!");&#xD;
			return false; // Trip not started because vehicle not available!&#xD;
		}&#xD;
	}	&#xD;
&#xD;
	@Override&#xD;
    public boolean endTrip(double tripDist_km) {&#xD;
		&#xD;
		if(available) {&#xD;
			traceln("Trip not ended because EV never left!");&#xD;
			return false;&#xD;
		} else {&#xD;
	    	available = true;&#xD;
	    	//traceln("Hydrogen vehicle finished trip!");&#xD;
	    	return true;&#xD;
&#xD;
		}&#xD;
    	//traceln("Current milage: " + mileage + ", energy consumption per km: " + energyConsumption_kWhpkm);&#xD;
    }&#xD;
	&#xD;
	public boolean progressTrip(double marginalTripDist_km) {&#xD;
		if( available) {&#xD;
			traceln("Trip not updated because vehicle never left!");&#xD;
			return false;&#xD;
		}&#xD;
		else {&#xD;
			mileage_km += marginalTripDist_km;&#xD;
	    	double energyUsedThisTimestep_kWh = marginalTripDist_km * vehicleScaling * energyConsumption_kWhpkm;&#xD;
	    	energyUsed_kWh += energyUsedThisTimestep_kWh;&#xD;
	    	//hydrogenConsumption_kW = energyUsedThisTimestep_kWh / timestep_h;&#xD;
	    	energyUse_kW += energyUsedThisTimestep_kWh / timestep_h;&#xD;
			return true;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
	&#xD;
	public boolean getAvailability() {&#xD;
		return available;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	availableStored = available;&#xD;
    	available = true;&#xD;
    	mileage_km = 0;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;    	&#xD;
    	available = availableStored;&#xD;
    }&#xD;
	&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"energyConsumption_kWhpkm =" + energyConsumption_kWhpkm +" " +&#xD;
			"vehicleScaling = " + vehicleScaling;&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1671107396262</Id>
				<Name>J_EAConversionElektrolyser</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionElektrolyser&#xD;
 */&#xD;
public class J_EAConversionElektrolyser extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
    /**&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionElektrolyser() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    &#xD;
    public J_EAConversionElektrolyser(Agent parentAgent, double inputElectricCapacity_kW, double efficiency_r, double timestep_h) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.inputCapacity_kW = inputElectricCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.outputCapacity_kW = this.inputCapacity_kW * this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.ELECTROLYSER;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HYDROGEN;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.ELECTRICITY;&#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
	public void setEta_r( double efficiency_r) {&#xD;
		this.eta_r = efficiency_r;&#xD;
		this.outputCapacity_kW = this.inputCapacity_kW * this.eta_r;&#xD;
	}&#xD;
    &#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}                         </Text>
			</JavaClass>
			<JavaClass>
				<Id>1671522756085</Id>
				<Name>J_EAConversionGasCHP</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionGasCHP&#xD;
 */&#xD;
public class J_EAConversionGasCHP extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
	protected double outputTemperature_degC;&#xD;
	protected double outputHeatCapacity_kW;&#xD;
	protected double outputElectricCapacity_kW;&#xD;
	protected List&lt;OL_EnergyCarriers&gt; energyCarriersProduced = new ArrayList&lt;&gt;();&#xD;
    &#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
	&#xD;
    public J_EAConversionGasCHP() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAConversionGasCHP(Agent parentAgent, double outputElectricCapacity_kW, double outputHeatCapacity_kW, double efficiency, double timestep_h, double outputTemperature_degC ) {&#xD;
	    if (outputElectricCapacity_kW &lt; 0 || outputHeatCapacity_kW &lt; 0 || (outputElectricCapacity_kW == 0 &amp;&amp; outputHeatCapacity_kW == 0)) {&#xD;
	    	throw new RuntimeException("Impossible capacities for J_EAConversionGasCHP. outputElectricCapacity_kW: " + outputElectricCapacity_kW + ", outputHeatCapacity_kW: " + outputHeatCapacity_kW);&#xD;
	    }&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.outputElectricCapacity_kW = outputElectricCapacity_kW;&#xD;
	    this.outputHeatCapacity_kW = outputHeatCapacity_kW; &#xD;
	    this.eta_r = efficiency;&#xD;
	    this.inputCapacity_kW = (outputElectricCapacity_kW + outputHeatCapacity_kW) / this.eta_r ;&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
	    &#xD;
	    this.energyAssetType = OL_EnergyAssetType.METHANE_CHP;&#xD;
	    &#xD;
    	this.energyCarriersProduced.add( OL_EnergyCarriers.ELECTRICITY );&#xD;
    	this.energyCarriersProduced.add( OL_EnergyCarriers.HEAT );&#xD;
    	this.energyCarrierConsumed= OL_EnergyCarriers.METHANE;&#xD;
    	&#xD;
        this.activeProductionEnergyCarriers.addAll(energyCarriersProduced);&#xD;
    	this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
	    registerEnergyAsset();&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
    public void operate(double ratioOfCapacity) {&#xD;
    	double electricityProduction_kW = this.outputElectricCapacity_kW * ratioOfCapacity;&#xD;
		double heatProduction_kW = this.outputHeatCapacity_kW * ratioOfCapacity;&#xD;
		double methaneConsumption_kW = this.inputCapacity_kW * ratioOfCapacity;&#xD;
		&#xD;
		this.energyUse_kW = methaneConsumption_kW - heatProduction_kW - electricityProduction_kW ;&#xD;
		this.energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
&#xD;
		this.heatProduced_kWh += heatProduction_kW * timestep_h;&#xD;
		this.electricityProduced_kWh += electricityProduction_kW * timestep_h;&#xD;
		&#xD;
		flowsMap.put(OL_EnergyCarriers.HEAT, -heatProduction_kW);		&#xD;
		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, -electricityProduction_kW);&#xD;
		flowsMap.put(OL_EnergyCarriers.METHANE, methaneConsumption_kW);&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public void setInputCapacity_kW( double inputCapacity_kW) {&#xD;
		double scaling_fr = inputCapacity_kW / this.inputCapacity_kW;&#xD;
		this.inputCapacity_kW = inputCapacity_kW;&#xD;
		this.outputHeatCapacity_kW = scaling_fr * this.outputHeatCapacity_kW;&#xD;
		this.outputElectricCapacity_kW = scaling_fr * this.outputElectricCapacity_kW;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public void setEta_r( double efficiency) {&#xD;
	    this.eta_r = efficiency;&#xD;
	    this.inputCapacity_kW = (this.outputElectricCapacity_kW + this.outputHeatCapacity_kW) / this.eta_r ;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public OL_EnergyCarriers getEnergyCarrierProduced() {&#xD;
		throw new RuntimeException("Can not get EnergyCarrierProduced from J_EAConversionGasCHP, use getEnergyCarriersProduced() instead.");&#xD;
	}&#xD;
	&#xD;
	public List&lt;OL_EnergyCarriers&gt; getEnergyCarriersProduced() {&#xD;
		return this.energyCarriersProduced;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {	&#xD;
		return  this.energyAssetType + " in GC: " + this.parentAgent + ", "				&#xD;
				+ "OutputElectricCapacity: " + this.outputElectricCapacity_kW + " kW, " &#xD;
				+ "OutputHeatCapacity: " + this.outputHeatCapacity_kW + " kW, "&#xD;
				+ "with efficiency: " + this.eta_r + ", "&#xD;
				+ "Current electric output: " + -this.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY) + " kW, "&#xD;
				+ "Current heat output: " + -this.getLastFlows().get(OL_EnergyCarriers.HEAT) + " kW";&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
	&#xD;
	public double getOutputHeatCapacity_kW() {&#xD;
		return outputHeatCapacity_kW;&#xD;
	}&#xD;
	public double getOutputElectricCapacity_kW() {&#xD;
		return outputElectricCapacity_kW;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getOutputCapacity_kW() {&#xD;
		throw new RuntimeException("Can't use the basic getOutputcapacity of this Asset, as it has 2 outputs. So You need to specify which output!");&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445448881</Id>
				<Name>J_EAElectricHob</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAElectricHob&#xD;
 */	&#xD;
public class J_EAElectricHob extends J_EAConversion implements Serializable {&#xD;
&#xD;
	protected double outputTemperature_degC;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
	// The efficiency is the amount of heat that is retained within the building&#xD;
    public J_EAElectricHob(Agent ownerAgent, double inputCapacity_kW, double efficiency, double timestep_h, double outputTemperature_degC) {&#xD;
    	this.parentAgent= ownerAgent;&#xD;
	    this.inputCapacity_kW = inputCapacity_kW;&#xD;
	    this.eta_r = efficiency;&#xD;
	    this.outputCapacity_kW = inputCapacity_kW * efficiency;&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.outputTemperature_degC = outputTemperature_degC;&#xD;
		this.energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
		this.energyCarrierConsumed = OL_EnergyCarriers.ELECTRICITY;&#xD;
	    this.energyAssetType = OL_EnergyAssetType.ELECTRIC_HOB;&#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public void operate( double ratioOfCapacity ) {&#xD;
    	double heatProduction_kW = this.inputCapacity_kW * ratioOfCapacity * eta_r;&#xD;
		double electricityConsumption_kW = this.inputCapacity_kW * ratioOfCapacity;&#xD;
		this.energyUse_kW = (electricityConsumption_kW - heatProduction_kW);&#xD;
		this.energyUsed_kWh += timestep_h * (electricityConsumption_kW - heatProduction_kW); // This represents losses!&#xD;
		this.heatProduced_kWh += heatProduction_kW * timestep_h;&#xD;
		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW);		&#xD;
		flowsMap.put(OL_EnergyCarriers.HEAT, -heatProduction_kW);		&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"AssetType = " + energyAssetType + &#xD;
			" parentAgent = " + parentAgent +", Energy consumed = " + this.energyUsed_kWh +&#xD;
			" capacityElectric_kW = " + this.inputCapacity_kW +" "+&#xD;
			"eta_r = " + this.eta_r+" " +&#xD;
			"outputTemperature_degC = " + this.outputTemperature_degC + " "+&#xD;
			"energyUsed_kWh (losses) = " + this.energyUsed_kWh + " "+&#xD;
			"heatProducted_kWh = " +this.heatProduced_kWh + " ";&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getCurrentTemperature() {&#xD;
		return outputTemperature_degC;&#xD;
	}&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445438882</Id>
				<Name>J_Contract</Name>
				<Folder>1752680962144</Folder>
				<Text>&#xD;
public class J_Contract implements Serializable {&#xD;
&#xD;
	public String contractScope; // Kan energySupplier of Coop zijn  (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements energy supplier')&#xD;
	public OL_EnergyCarriers energyCarrier;&#xD;
	public OL_ContractType contractType;&#xD;
	public double EnergyTransactionVolume_kWh=0;&#xD;
	public double FinancialTransactionVolume_eur=0;&#xD;
	public String contractHolder;&#xD;
	public double annualFee_eur=0;&#xD;
	&#xD;
    public J_Contract() {&#xD;
    }&#xD;
	  /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_Contract(String contractScope, OL_EnergyCarriers energyCarrier) {&#xD;
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.&#xD;
	    //this.contractType = contractType; // Fixed or variable energy price?&#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"contractScope = " + contractScope +" ";&#xD;
	}&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445448882</Id>
				<Name>J_DeliveryContract</Name>
				<Text>/**&#xD;
 * J_DeliveryContract&#xD;
 */&#xD;
public class J_DeliveryContract extends zero_engine.J_Contract implements Serializable {&#xD;
&#xD;
	//public String contractScope; // Kan energySupplier of Coop zijn  (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements energy supplier')&#xD;
	public OL_DeliveryContractType deliveryContractType; // Fixed of variable&#xD;
	public double deliveryPrice_eurpkWh;&#xD;
	public double feedinPrice_eurpkWh;&#xD;
	public double idx;&#xD;
	//public OL_EnergyCarriers energyCarrier;&#xD;
	&#xD;
	  /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_DeliveryContract(String contractScope, OL_DeliveryContractType contractType, OL_EnergyCarriers energyCarrier, double deliveryPrice_eurpkWh, double feedinPrice_eurpkWh, double annualFee_eur ) {&#xD;
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.&#xD;
	    this.deliveryContractType = contractType; // Fixed or variable energy price?&#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.deliveryPrice_eurpkWh = deliveryPrice_eurpkWh;&#xD;
	    this.feedinPrice_eurpkWh = feedinPrice_eurpkWh;&#xD;
	    this.contractType = OL_ContractType.DELIVERY;&#xD;
	    this.annualFee_eur = annualFee_eur;&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"type = " + this.getClass().toString() + " " +&#xD;
			"contractScope = " + contractScope +" " +&#xD;
			"deliveryContractType = " + deliveryContractType.toString() +" "+&#xD;
			"deliveryPrice_eurpkWh = " + deliveryPrice_eurpkWh +" "+&#xD;
			"feedinPrice_eurpkWh = " + feedinPrice_eurpkWh +" ";&#xD;
	}&#xD;
}&#xD;
&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445448883</Id>
				<Name>J_TransportContract</Name>
				<Text>/**&#xD;
 * J_TransportContract&#xD;
 */&#xD;
public class J_TransportContract extends zero_engine.J_Contract implements Serializable {&#xD;
&#xD;
	//public String contractScope; // Kan GridOperator of Coop zijn (dus kan niet specifieker zijn dan 'String' hier, tenzij we Interfaces gaan gebruiken. ('Implements grid operator')&#xD;
	//public OL_TransportContractType contractType; // Nodal-pricing, bandwidth, peak&#xD;
	public OL_TransportContractType transportContractType; //&#xD;
	public double bandwidthTreshold_kW;&#xD;
	public double bandwidthTariff_eurpkWh;&#xD;
	public double idx;&#xD;
	//public OL_EnergyCarriers energyCarrier;&#xD;
	&#xD;
	  /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_TransportContract(String contractScope, OL_TransportContractType transportContractType, OL_EnergyCarriers energyCarrier, double bandwidthTreshold_kW, double bandwidthTariff_eurpkWh, double annualFee_eur ) {&#xD;
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.	    &#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.transportContractType = transportContractType;&#xD;
	    this.bandwidthTreshold_kW = bandwidthTreshold_kW;&#xD;
	    this.bandwidthTariff_eurpkWh = bandwidthTariff_eurpkWh;&#xD;
	    this.contractType = OL_ContractType.TRANSPORT;&#xD;
	    this.annualFee_eur = annualFee_eur;&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
   	public String toString() {&#xD;
   		return&#xD;
   			"type = " + this.getClass().toString() + " " +&#xD;
   			"contractScope = " + contractScope +" ";&#xD;
   	}&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445448884</Id>
				<Name>J_TaxContract</Name>
				<Text>/**&#xD;
 * J_TaxContract&#xD;
 */&#xD;
public class J_TaxContract extends zero_engine.J_Contract implements Serializable {&#xD;
&#xD;
	//public String contractScope; // Kan energySupplier of Coop zijn&#xD;
	//public OL_ContractType contractType; // Fixed of variable&#xD;
	public double deliveryTax_eurpkWh;&#xD;
	public double feedinTax_eurpkWh;&#xD;
	public double proportionalTax_pct;&#xD;
	public double idx;&#xD;
	//public OL_EnergyCarriers energyCarrier;&#xD;
	&#xD;
	  /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_TaxContract(String contractScope, OL_EnergyCarriers energyCarrier, double deliveryTax_eurpkWh, double feedinTax_eurpkWh, double proportionalTax_pct, double annualFee_eur ) {&#xD;
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.	    &#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.deliveryTax_eurpkWh = deliveryTax_eurpkWh;&#xD;
	    this.feedinTax_eurpkWh = feedinTax_eurpkWh;&#xD;
	    this.proportionalTax_pct = proportionalTax_pct;&#xD;
	    this.contractType = OL_ContractType.TAX;&#xD;
	    this.annualFee_eur = annualFee_eur;&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1673445448885</Id>
				<Name>J_ConnectionContract</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_ConnectionContract&#xD;
 */&#xD;
public class J_ConnectionContract extends zero_engine.J_Contract implements Serializable {&#xD;
&#xD;
	//public String contractScope; // Kan energySupplier of Coop zijn&#xD;
	public OL_ConnectionContractType connectionContractType; // Fixed of variable&#xD;
	public double nfATOstart_h = 0;&#xD;
	public double nfATOend_h = 0;&#xD;
	public double nfATOpower_kW = 0;&#xD;
	public double idx;&#xD;
	&#xD;
    public J_ConnectionContract() {&#xD;
    }&#xD;
	  /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_ConnectionContract(String contractScope, OL_ConnectionContractType contractType, OL_EnergyCarriers energyCarrier, double nfATOstart_h, double nfATOend_h, double nfATOpower_kW, double annualFee_eur ) {&#xD;
	    this.contractScope = contractScope; // ID of actor that is the other 'end' of this contract.&#xD;
	    this.connectionContractType = contractType; // Fixed or variable energy price?&#xD;
	    this.energyCarrier = energyCarrier;&#xD;
	    this.nfATOstart_h = nfATOstart_h;&#xD;
	    this.nfATOend_h = nfATOend_h;&#xD;
	    this.nfATOpower_kW = nfATOpower_kW;&#xD;
	    this.contractType = OL_ContractType.CONNECTION;&#xD;
	    this.annualFee_eur = annualFee_eur;&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1678469210821</Id>
				<Name>J_EAConversionCurtailerHeat</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionCurtailerHeat&#xD;
 */&#xD;
public class J_EAConversionCurtailerHeat extends J_EAConversion implements Serializable {&#xD;
&#xD;
	private OL_EnergyCarriers energyCarrierProduced = OL_EnergyCarriers.HEAT;&#xD;
	private OL_EnergyCarriers energyCarrierConsumed = OL_EnergyCarriers.HEAT;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionCurtailerHeat(Agent parentAgent, double capacityHeat_kW, double efficiency, double timestep_h) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.capacityHeat_kW = capacityHeat_kW;&#xD;
	    this.eta_r = efficiency;&#xD;
//	    this.capacityHeat_kW = this.capacityHeat_kW * this.eta_r;&#xD;
	    this.timestep_h = timestep_h;&#xD;
		registerEnergyAsset();&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public double[] operate(double ratioOfCapacity) {&#xD;
		//traceln("I convert now! GasBurner @ " + (ratioOfCapacity * 100) + " %");&#xD;
		heatProduction_kW = capacityHeat_kW * ratioOfCapacity * eta_r;&#xD;
		heatConsumption_kW = capacityHeat_kW * ratioOfCapacity;&#xD;
		energyUse_kW = (heatConsumption_kW - heatProduction_kW);&#xD;
		energyUsed_kWh += timestep_h * energyUse_kW; // This represents losses!&#xD;
		//double[] arr = {this.electricityProduction_kW, this.methaneProduction_kW, this.hydrogenProduction_kW, this.heatProduction_kW, this.electricityConsumption_kW, this.methaneConsumption_kW, this.hydrogenConsumption_kW, this.heatConsumption_kW };&#xD;
    	//return arr;&#xD;
		heatConsumed_kWh += heatConsumption_kW * timestep_h;&#xD;
		heatProduced_kWh += heatProduction_kW * timestep_h;&#xD;
		&#xD;
		return returnEnergyFlows();&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public double getHeatCapacity_kW() {&#xD;
		return capacityHeat_kW;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"parentAgent = " + parentAgent +", Energy consumed = " + energyUsed_kWh + " " +&#xD;
			"capacityHeat_kW = " + capacityHeat_kW +" "+&#xD;
			"eta_r = " + eta_r+" " +&#xD;
			"energyUsed_kWh (losses) = " + energyUsed_kWh + " "+&#xD;
			"heatConsumed_kWh = " + heatConsumed_kWh + " "+&#xD;
			"heatProduced_kWh = " + heatProduced_kWh + " ";&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1692861398767</Id>
				<Name>J_ActivityTracker</Name>
				<Folder>1752681639768</Folder>
				<Text>/**&#xD;
 * J_ActivityTracker&#xD;
 */	&#xD;
public class J_ActivityTracker implements Serializable {&#xD;
	protected EnergyModel energyModel;&#xD;
&#xD;
	// Tripdata&#xD;
	protected ArrayList&lt;Double&gt; starttimes_min = new ArrayList&lt;&gt;();&#xD;
	protected ArrayList&lt;Double&gt; endtimes_min = new ArrayList&lt;&gt;();&#xD;
	//private ArrayList&lt;Double&gt; eventMagnitude = new ArrayList&lt;&gt;();&#xD;
    public int nbActivities = 0;&#xD;
	public int v_eventIndex = 0;&#xD;
	protected int v_eventIndexStored =0;&#xD;
&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ActivityTracker() {&#xD;
    }&#xD;
    &#xD;
    public J_ActivityTracker(EnergyModel main, int rowIndex, double time_min) {&#xD;
    }&#xD;
    &#xD;
    public void storeAndResetState() {&#xD;
    	v_eventIndexStored = v_eventIndex;&#xD;
    	v_eventIndex = 0;&#xD;
    }&#xD;
    &#xD;
    public void restoreState() {&#xD;
    	v_eventIndex = v_eventIndexStored;&#xD;
	}&#xD;
    &#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
} </Text>
			</JavaClass>
			<JavaClass>
				<Id>1692862190945</Id>
				<Name>J_ActivityTrackerTrips</Name>
				<Folder>1752681639768</Folder>
				<Text>/**&#xD;
 * J_ActivityTrackerTrips&#xD;
 */	&#xD;
public class J_ActivityTrackerTrips extends J_ActivityTracker implements Serializable {&#xD;
	&#xD;
	public ArrayList&lt;Double&gt; distances_km = new ArrayList&lt;&gt;();&#xD;
	private int rowIndex;&#xD;
	public J_EAVehicle Vehicle;&#xD;
	public double v_idleTimeToNextTrip_min;&#xD;
	public double v_tripDist_km;&#xD;
	public double v_energyNeedForNextTrip_kWh;&#xD;
	public double v_nextEventStartTime_min;&#xD;
	public double distanceScaling_fr = 1.0;&#xD;
	public double currentTripTimesteps_n;&#xD;
	public String tripPatternIdentifier; &#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ActivityTrackerTrips() {&#xD;
    }&#xD;
    &#xD;
    public J_ActivityTrackerTrips(EnergyModel main, TextFile tripsCsv, int rowIndex, double time_min, J_EAVehicle Vehicle) {&#xD;
    	this.energyModel = main;&#xD;
    	this.rowIndex = rowIndex;&#xD;
    	this.Vehicle = Vehicle;		&#xD;
    	&#xD;
    	tripsCsv.close();&#xD;
    	tripsCsv.canReadMore();&#xD;
&#xD;
		tripsCsv.readLine(); // Skips first line&#xD;
		 &#xD;
    	while (roundToInt(tripsCsv.readDouble())!=rowIndex &amp;&amp; tripsCsv.canReadMore()) { // Skip until rowIndex found&#xD;
    		tripsCsv.readLine(); &#xD;
    		//String line = tripsCsv.readLine(); // Does this also skip to the next line?&#xD;
    		//traceln("Skipping line: " + line);&#xD;
    	}&#xD;
    	int currentLineNb = tripsCsv.getLineNumber();&#xD;
    	//traceln("rowIndex %s found on line: %s", rowIndex, currentLineNb);&#xD;
    	int nbActivities = tripsCsv.readInt();&#xD;
    	&#xD;
    			&#xD;
    	for (int i = 0; i &lt; nbActivities; i++){&#xD;
    		starttimes_min.add(tripsCsv.readDouble());&#xD;
    		endtimes_min.add(tripsCsv.readDouble());&#xD;
    		distances_km.add(tripsCsv.readDouble());&#xD;
    	}&#xD;
	    &#xD;
	    //traceln("Starttimes: %s", starttimes_min);&#xD;
	    //traceln("Endtimes: %s", endtimes_min);&#xD;
	    //traceln("Distances: %s", distances_km);&#xD;
    	&#xD;
	    // If trips have in inputdata have a 1-week schedule (endtime &lt; 10080), then duplicate activities until the end of the year&#xD;
    	if (endtimes_min.get(nbActivities-1) &lt; 10080) {&#xD;
		    for (int weeks = 1; weeks &lt; 53; weeks++) {&#xD;
		    	for (int eventIdx = 0; eventIdx &lt; nbActivities; eventIdx++) {&#xD;
		    		starttimes_min.add(starttimes_min.get(eventIdx) + 10080*weeks);&#xD;
		    		endtimes_min.add(endtimes_min.get(eventIdx) + 10080*weeks);&#xD;
		    		distances_km.add(distances_km.get(eventIdx));&#xD;
		    	}&#xD;
		    }&#xD;
	    }&#xD;
    	&#xD;
    	double currentAnnualDistance_km = distances_km.stream().mapToDouble(a -&gt; a).sum();&#xD;
    	//traceln("Number of trips: %s, total annual distance: %s km", nbActivities, currentAnnualDistance_km);    	&#xD;
    	//traceln("Total annual distance: %s", currentAnnualDistance_km);&#xD;
	    // 'forward' to current activity if tripTracker is instantiated not at the start of the simulation or year&#xD;
	    while ( starttimes_min.get(v_eventIndex) &lt; time_min ) {	&#xD;
	    	v_eventIndex++;&#xD;
	    	if ( v_eventIndex &gt; starttimes_min.size() - 1 ) {	&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    prepareNextActivity(time_min);    	&#xD;
    }&#xD;
   &#xD;
   public void setVehicle(J_EAVehicle Vehicle) {&#xD;
	   this.Vehicle = Vehicle;&#xD;
   }&#xD;
   &#xD;
   public void setDistanceScaling_fr(double distanceScaling_fr) {&#xD;
	   this.distanceScaling_fr = distanceScaling_fr;&#xD;
   }&#xD;
   &#xD;
   public void setAnnualDistance_km(double desiredAnnualDistance_km) { // Scale trips to come to a certain total annual distance traveled. This can lead to unfeasibly long trips for EVs!!&#xD;
	   /* double currentAnnualDistance_km = 0;&#xD;
	   int tripNo=0;&#xD;
	   // Get current annual distance&#xD;
	   while (endtimes_min.get(tripNo) &lt; 60*24*365) {&#xD;
		   currentAnnualDistance_km += distances_km.get(tripNo);&#xD;
		   tripNo++;&#xD;
	   }&#xD;
	   */&#xD;
	   double currentAnnualDistance_km = distances_km.stream().mapToDouble(a -&gt; a).sum();&#xD;
	   double scalingFactor_f = desiredAnnualDistance_km / currentAnnualDistance_km;&#xD;
	   &#xD;
	   //distances_km = (ArrayList&lt;Double&gt;)distances_km.stream().map(a -&gt; scalingFactor_f*a).toList();&#xD;
       ListIterator&lt;Double&gt; iterator = distances_km.listIterator();                                                              &#xD;
	   for (int i = 0; i&lt;distances_km.size(); i++) {&#xD;
		   //distances_km[i] = distances(i)*scalingFactor_f;		   &#xD;
		     iterator.next();&#xD;
		     iterator.set(distances_km.get(i)*scalingFactor_f);&#xD;
	   }&#xD;
	   //traceln("Annual distance of triptracker set to: %s km", distances_km.stream().mapToDouble(a -&gt; a).sum());                                &#xD;
	   //traceln("Desired annual distance was: %s km", desiredAnnualDistance_km);&#xD;
   }&#xD;
    &#xD;
   public void manageActivities(double time_min) {&#xD;
    	if (Vehicle.getAvailability()) { // at start of timestep! check for multiple 'events' in timestep!&#xD;
    		//if (time_min == roundToInt(starttimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h * 60) ) { // is a trip starting this timestep?&#xD;
        	if (time_min &gt;= starttimes_min.get(v_eventIndex) ) { // is a trip starting this timestep?&#xD;
    			//currentTripDuration = roundToInt(endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) / (energyModel.p_timeStep_h * 60));&#xD;
    			currentTripTimesteps_n = max(1,roundToInt(((endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex)) / (energyModel.p_timeStep_h * 60))));&#xD;
&#xD;
    			Vehicle.startTrip();&#xD;
    			//main.v_activeTrips.incrementAndGet();&#xD;
        		//if (time_min == roundToInt(endtimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h*60) ) { // is the trip also ending this timestep?&#xD;
            	if (time_min &gt;= endtimes_min.get(v_eventIndex) ) { // is the trip also ending this timestep?&#xD;
        			Vehicle.endTrip(v_tripDist_km);&#xD;
        			v_eventIndex++;&#xD;
        			//main.v_activeTrips.decrementAndGet();&#xD;
        			prepareNextActivity(time_min);&#xD;
        		}&#xD;
    		}&#xD;
&#xD;
    	} else {&#xD;
    		if (Vehicle instanceof J_EADieselVehicle) {&#xD;
    			J_EADieselVehicle dieselVehicle = (J_EADieselVehicle)Vehicle;&#xD;
    			dieselVehicle.progressTrip(v_tripDist_km / currentTripTimesteps_n);&#xD;
    		}&#xD;
    		else if (Vehicle instanceof J_EAHydrogenVehicle) {&#xD;
    			J_EAHydrogenVehicle hydrogenVehicle = (J_EAHydrogenVehicle)Vehicle;&#xD;
    			hydrogenVehicle.progressTrip(v_tripDist_km / currentTripTimesteps_n);&#xD;
    		}&#xD;
    		//if (time_min == roundToInt(endtimes_min.get(v_eventIndex)/ (60*energyModel.p_timeStep_h)) * 60*energyModel.p_timeStep_h ) { // is a trip ending this timestep?&#xD;
        	if (time_min &gt;= endtimes_min.get(v_eventIndex) ) { // is a trip ending this timestep?&#xD;
    			Vehicle.endTrip(v_tripDist_km);&#xD;
    			v_eventIndex++;&#xD;
    			//main.v_activeTrips.decrementAndGet();&#xD;
    			prepareNextActivity(time_min);&#xD;
        		//if (time_min == roundToInt(starttimes_min.get(v_eventIndex) / (60*energyModel.p_timeStep_h)) * (energyModel.p_timeStep_h*60) ) { // is the next trip also starting this timestep?&#xD;
            	if (time_min &gt;= starttimes_min.get(v_eventIndex) ) { // is the next trip also starting this timestep?&#xD;
        			//currentTripDuration = roundToInt(endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) / (energyModel.p_timeStep_h * 60));&#xD;
        			currentTripTimesteps_n = max(1,roundToInt(((endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex)) / (energyModel.p_timeStep_h * 60))));&#xD;
        			//traceln("Hello! :P");&#xD;
        			Vehicle.startTrip();&#xD;
        			//main.v_activeTrips.incrementAndGet();&#xD;
        		}&#xD;
    		}&#xD;
&#xD;
    	}&#xD;
    }&#xD;
   &#xD;
   	public void setStartIndex(double t_h) {&#xD;
   		// 'forward' to current activity if tripTracker is instantiated not at the start of the simulation or year&#xD;
   		double time_min = t_h * 60.0;&#xD;
	    while ( starttimes_min.get(v_eventIndex) &lt; time_min ) {	&#xD;
	    	v_eventIndex++;&#xD;
	    	if ( v_eventIndex &gt; starttimes_min.size() - 1 ) {	&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    prepareNextActivity(time_min);    	&#xD;
   	}&#xD;
    &#xD;
    public void prepareNextActivity(double time_min) {&#xD;
		if ( v_eventIndex &gt;= starttimes_min.size()  ) {&#xD;
			v_eventIndex = 0;&#xD;
		}&#xD;
		&#xD;
	    v_nextEventStartTime_min = starttimes_min.get(v_eventIndex);&#xD;
		v_idleTimeToNextTrip_min = v_nextEventStartTime_min - time_min;&#xD;
		v_tripDist_km = distanceScaling_fr * distances_km.get( v_eventIndex ); // Update upcoming trip distance&#xD;
&#xD;
		if (Vehicle instanceof J_EAEV) {&#xD;
			J_EAEV EV = (J_EAEV)Vehicle;&#xD;
			v_energyNeedForNextTrip_kWh = EV.energyConsumption_kWhpkm * v_tripDist_km;&#xD;
&#xD;
			// Check if more charging is needed for next trip!&#xD;
			double nextTripDist_km = 0;&#xD;
			double nextTripStartTime_min = 0;&#xD;
&#xD;
			if ( v_eventIndex == starttimes_min.size() - 1 ) {&#xD;
				nextTripDist_km = 0;//distances_km.get( 0 );&#xD;
				nextTripStartTime_min = endtimes_min.get(v_eventIndex);&#xD;
			} else {		&#xD;
				nextTripDist_km = distanceScaling_fr*distances_km.get( v_eventIndex+1 );&#xD;
				nextTripStartTime_min = starttimes_min.get( v_eventIndex+1 );&#xD;
			}&#xD;
			double additionalChargingNeededForNextTrip_kWh = max(0,nextTripDist_km * EV.energyConsumption_kWhpkm - (nextTripStartTime_min - endtimes_min.get(v_eventIndex))/60*EV.getCapacityElectric_kW());&#xD;
			//if (additionalChargingNeededForNextTrip_kWh&gt;0) {&#xD;
			//	traceln("*******Additional charging required to prepare for trip after next trip!*********");&#xD;
			//}&#xD;
			v_energyNeedForNextTrip_kWh += additionalChargingNeededForNextTrip_kWh;&#xD;
			EV.energyNeedForNextTrip_kWh = v_energyNeedForNextTrip_kWh;&#xD;
			/*if ( (v_energyNeedForNextTrip_kWh - EV.getCurrentStateOfCharge() * EV.getStorageCapacity_kWh()) / (v_idleTimeToNextTrip_min/60) &gt; EV.capacityElectric_kW ) {&#xD;
				traceln("Infeasible trip pattern for EV, not enough time to charge for next trip! Required charging power is: " + (v_energyNeedForNextTrip_kWh - EV.getCurrentStateOfCharge() * EV.getStorageCapacity_kWh()) / (v_idleTimeToNextTrip_min/60) + " kW");&#xD;
				traceln("RowIndex: " + rowIndex + " tripDistance: " + v_tripDist_km + " km, time to next trip: " + v_idleTimeToNextTrip_min + " minutes");&#xD;
			} */&#xD;
		}&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"Number of trips = " + this.nbActivities + " " + &#xD;
			"Row index = " + this.rowIndex + " " + &#xD;
			"Distance Scaling = " + this.distanceScaling_fr + " ";&#xD;
	}&#xD;
	&#xD;
	public double getDistanceScaling_fr( ) {&#xD;
		return this.distanceScaling_fr;&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1692862773194</Id>
				<Name>J_EAVehicle</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAVehicle&#xD;
 */	&#xD;
public abstract class J_EAVehicle extends J_EA implements Serializable {&#xD;
	public boolean available = true;&#xD;
	protected boolean availableStored = true;&#xD;
	protected double energyConsumption_kWhpkm;&#xD;
	//private MobilityTracker mobilityTracker = null;&#xD;
	public double vehicleScaling;&#xD;
	public double mileage_km = 0;&#xD;
	public J_ActivityTrackerTrips tripTracker;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAVehicle() {&#xD;
    }&#xD;
&#xD;
    public boolean startTrip() {&#xD;
    	return false;&#xD;
    }&#xD;
    &#xD;
    public boolean endTrip(double tripDist_km) {&#xD;
    	return false;&#xD;
    }&#xD;
    &#xD;
    public void operate(double ratioOfCapacity) {&#xD;
    	traceln("***Warning*** abstract J_EAVehicle operate! This is a dummy function, doing nothing!");&#xD;
		//return null;&#xD;
    }&#xD;
    &#xD;
    public void setVehicleScaling(double vehicleScaling) {&#xD;
    	this.vehicleScaling = vehicleScaling;&#xD;
    }&#xD;
    &#xD;
	public void setTripTracker(J_ActivityTrackerTrips tracker) {&#xD;
		tripTracker = tracker;&#xD;
	}&#xD;
&#xD;
	public J_ActivityTrackerTrips getTripTracker() {&#xD;
		return tripTracker;&#xD;
	}&#xD;
    &#xD;
	public boolean getAvailability() {&#xD;
		return available;&#xD;
	}&#xD;
	&#xD;
	public double getVehicleScaling() {&#xD;
		return vehicleScaling;&#xD;
	}&#xD;
	&#xD;
	public double getEnergyConsumption_kWhpkm() {&#xD;
		return energyConsumption_kWhpkm * vehicleScaling;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1692876125447</Id>
				<Name>J_ActivityTrackerCooking</Name>
				<Folder>1752681639768</Folder>
				<Text>/**&#xD;
 * J_ActivityTrackerCooking&#xD;
 */	&#xD;
public class J_ActivityTrackerCooking extends zero_engine.J_ActivityTracker implements Serializable {&#xD;
	private ArrayList&lt;Double&gt; powerFractions_fr = new ArrayList&lt;&gt;();&#xD;
	public J_EAConversion HOB;&#xD;
	public double powerFraction_fr=0;&#xD;
	private int rowIndex;&#xD;
	private boolean cooking = false;&#xD;
	private double timeStep_min;&#xD;
	private ArrayList&lt;Double&gt; initalStarttimes_min;&#xD;
	private ArrayList&lt;Double&gt; initalEndtimes_min;&#xD;
	private ArrayList&lt;Double&gt; storedStarttimes_min;&#xD;
	private ArrayList&lt;Double&gt; storedEndtimes_min;&#xD;
&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ActivityTrackerCooking() {&#xD;
    }&#xD;
&#xD;
    public J_ActivityTrackerCooking(TextFile inputCookingActivities, int rowIndex, double time_min, J_EAConversion HOB) {&#xD;
  &#xD;
    	this.rowIndex = rowIndex;&#xD;
    	this.HOB=HOB;&#xD;
    	//int rowIndex = uniform_discr(2, 300); &#xD;
&#xD;
    	this.timeStep_min = 60 * this.HOB.timestep_h;&#xD;
    	&#xD;
    	inputCookingActivities.close();&#xD;
    	inputCookingActivities.canReadMore();&#xD;
    	inputCookingActivities.readLine(); // Skips first line&#xD;
    	&#xD;
    	while (roundToInt(inputCookingActivities.readDouble())!=rowIndex &amp;&amp; inputCookingActivities.canReadMore()) { // Skip until rowIndex found&#xD;
    		inputCookingActivities.readLine(); &#xD;
    		//String line = tripsCsv.readLine(); // Does this also skip to the next line?&#xD;
    		//traceln("Skipping line: " + line);&#xD;
    	}&#xD;
    	int currentLineNb = inputCookingActivities.getLineNumber();&#xD;
    	traceln("rowIndex %s found on line: %s", rowIndex, currentLineNb);&#xD;
    	int nbActivities = inputCookingActivities.readInt();&#xD;
    	traceln("Number of trips: %s", nbActivities);    	&#xD;
   	&#xD;
    			&#xD;
    	for (int i = 0; i &lt; nbActivities; i++){&#xD;
    		starttimes_min.add(inputCookingActivities.readDouble());&#xD;
    		endtimes_min.add(inputCookingActivities.readDouble());&#xD;
    		&#xD;
    		double ratio = inputCookingActivities.readDouble() / HOB.getOutputCapacity_kW();&#xD;
    		powerFractions_fr.add(ratio);&#xD;
    	}&#xD;
    	&#xD;
    	while ( starttimes_min.get(v_eventIndex) - time_min &lt; 0) {&#xD;
    		starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );&#xD;
    		endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );&#xD;
    		v_eventIndex++;&#xD;
    		if ( v_eventIndex &gt; starttimes_min.size() - 1 ) {&#xD;
    			v_eventIndex = 0;&#xD;
    		}&#xD;
    	}&#xD;
    	&#xD;
    	&#xD;
    	initalStarttimes_min = new ArrayList&lt;&gt;(starttimes_min);&#xD;
    	initalEndtimes_min = new ArrayList&lt;&gt;(endtimes_min);&#xD;
    	//traceln("Current model time in minutes: " + energyModel.t_h*60 + ", nb sessions: " + nbOfCookingSessions);&#xD;
    	//traceln("Starttimes: %s", starttimes_min);&#xD;
    	//traceln("Endtimes: %s", endtimes_min);&#xD;
    }&#xD;
    &#xD;
    public void manageActivities(double time_min) {&#xD;
    	//traceln("Cooking tracker current time: " + time_min);&#xD;
    	//traceln("Event index: " + v_eventIndex);&#xD;
    	//traceln("startTimes: " + starttimes_min);&#xD;
    	//traceln("endTimes: " + endtimes_min);&#xD;
    	//traceln("powerFractions_fr: "  + powerFractions_fr);&#xD;
    	&#xD;
    	if (cooking) {&#xD;
	    	if (time_min &gt;= endtimes_min.get(v_eventIndex) ) { // end cooking session. Also check if a new one starts in this timestep!&#xD;
&#xD;
	    		//main.v_activeCookingSessions.decrementAndGet();&#xD;
	    		//traceln("End of cooking session, currently active cooking sessions %s", main.v_activeCookingSessions);&#xD;
				// factor to compensate for the fact that you might not be cooking for the entire timestep.&#xD;
				double fr = (time_min - this.endtimes_min.get(this.v_eventIndex)) / this.timeStep_min;&#xD;
				this.powerFraction_fr = fr * this.powerFractions_fr.get(this.v_eventIndex);&#xD;
	    		&#xD;
				starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );&#xD;
				endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );&#xD;
				v_eventIndex++;&#xD;
				if ( v_eventIndex &gt;= starttimes_min.size() ) {&#xD;
					v_eventIndex = 0;&#xD;
				}&#xD;
				cooking=false;&#xD;
				&#xD;
				if (time_min &gt;= starttimes_min.get(v_eventIndex)) {&#xD;
					// factor to compensate for the fact that you might not be cooking for the entire timestep.&#xD;
					fr = (time_min - this.starttimes_min.get(this.v_eventIndex)) / this.timeStep_min;&#xD;
					this.powerFraction_fr = fr * this.powerFractions_fr.get(this.v_eventIndex);	    		&#xD;
					//main.v_activeCookingSessions.incrementAndGet();&#xD;
					cooking=true;&#xD;
					traceln("Starting next cooking session in same timestep as previous session ended!! Rowindex %s, eventIndex %s\", rowIndex, v_eventIndex");&#xD;
				}&#xD;
	    	}&#xD;
	    	else {&#xD;
	    		this.powerFraction_fr = this.starttimes_min.get(this.v_eventIndex);&#xD;
	    	}&#xD;
    	} else if (time_min &gt;= starttimes_min.get(v_eventIndex) ) { // start cooking session. Also check if it ends within this timestep!&#xD;
    		/*if (endtimes_min.get(v_eventIndex) - starttimes_min.get(v_eventIndex) &gt; 100) {&#xD;
			traceln("Cooking event longer than 100 minutes!! Rowindex %s, eventIndex %s.", rowIndex, v_eventIndex);&#xD;
			}*/&#xD;
    		&#xD;
			// factor to compensate for the fact that you might not be cooking for the entire timestep.&#xD;
			double fr = (time_min - this.starttimes_min.get(this.v_eventIndex)) / this.timeStep_min;&#xD;
			this.powerFraction_fr = fr * this.powerFractions_fr.get(this.v_eventIndex);	    		&#xD;
			//main.v_activeCookingSessions.incrementAndGet();&#xD;
			cooking=true;&#xD;
			if (time_min &gt;= endtimes_min.get(v_eventIndex) ) { // end cooking session in the same timestep? Still need to fix energy use for this case!! &#xD;
	    	&#xD;
	    		//main.v_activeCookingSessions.decrementAndGet();&#xD;
	    		//traceln("End of cooking session, currently active cooking sessions %s", main.v_activeCookingSessions);&#xD;
				fr = (this.endtimes_min.get(this.v_eventIndex) - this.starttimes_min.get(this.v_eventIndex)) / this.timeStep_min;	    		&#xD;
				this.powerFraction_fr = fr * this.powerFractions_fr.get(this.v_eventIndex);	    		&#xD;
	    		&#xD;
				starttimes_min.set( v_eventIndex, starttimes_min.get(v_eventIndex) + 1440 );&#xD;
				endtimes_min.set( v_eventIndex, endtimes_min.get(v_eventIndex) + 1440 );&#xD;
				v_eventIndex++;&#xD;
				if ( v_eventIndex &gt;= starttimes_min.size() ) {&#xD;
					v_eventIndex = 0;&#xD;
				}&#xD;
				cooking=false;&#xD;
			}&#xD;
    	}&#xD;
    	else {&#xD;
    		this.powerFraction_fr = 0;&#xD;
    	}&#xD;
    	//if (powerFraction_fr &gt; 0 ) { traceln("Cooking event in progress!"); }&#xD;
    	HOB.f_updateAllFlows(powerFraction_fr);&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void storeAndResetState() {&#xD;
    	v_eventIndexStored = v_eventIndex;&#xD;
    	storedStarttimes_min = new ArrayList&lt;&gt;(starttimes_min);&#xD;
    	storedEndtimes_min = new ArrayList&lt;&gt;(endtimes_min);    	&#xD;
		starttimes_min = new ArrayList&lt;&gt;(initalStarttimes_min);&#xD;
		endtimes_min = new ArrayList&lt;&gt;(initalEndtimes_min);&#xD;
    	v_eventIndex = 0;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void restoreState() {&#xD;
    	v_eventIndex = v_eventIndexStored;&#xD;
		starttimes_min = new ArrayList&lt;&gt;(storedStarttimes_min);&#xD;
		endtimes_min = new ArrayList&lt;&gt;(storedEndtimes_min);&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1707991094535</Id>
				<Name>J_EAConversionElectrolyser</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionElektrolyser&#xD;
 */&#xD;
public class J_EAConversionElectrolyser extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
    private OL_ElectrolyserState electrolyserState;&#xD;
    private int remainingPowerUpDuration_timesteps; // amount of time steps left in power up mode&#xD;
    private double startUpTimeStandby_h;&#xD;
    private double loadChangeTime_h;&#xD;
    private double startUpTimeShutdown_h;&#xD;
    private double startUpTimeIdle_h;&#xD;
	/**&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionElectrolyser() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EAConversionElectrolyser(Agent parentAgent, double inputElectricCapacity_kW, double efficiency_r, double  timestep_h, OL_ElectrolyserState electrolyserState, double loadChangeTime_s, double startUpTimeShutdown_s, double startUpTimeStandby_s, double startUpTimeIdle_s) {&#xD;
	    this.parentAgent = parentAgent;&#xD;
	    this.electrolyserState = electrolyserState;&#xD;
	    this.inputCapacity_kW = inputElectricCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.outputCapacity_kW = this.inputCapacity_kW * this.eta_r;&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.startUpTimeStandby_h = startUpTimeStandby_s/3600;&#xD;
	    &#xD;
	    this.loadChangeTime_h = loadChangeTime_s/3600;&#xD;
	    this.startUpTimeShutdown_h = startUpTimeShutdown_s/3600;&#xD;
	    this.startUpTimeIdle_h = startUpTimeIdle_s/3600;&#xD;
&#xD;
		this.energyAssetType = OL_EnergyAssetType.ELECTROLYSER;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.HYDROGEN;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.ELECTRICITY;	   &#xD;
	    &#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
    public void f_updateAllFlows( double powerFraction_fr ) {&#xD;
		this.operate( min(1, max(0,powerFraction_fr)) );&#xD;
    	if (parentAgent instanceof GridConnection) {    		&#xD;
    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);		&#xD;
    	}&#xD;
    	this.lastFlowsMap.cloneMap(this.flowsMap);&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	this.clear();&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void operate(double ratioOfCapacity) {&#xD;
		double electricityConsumption_kW = inputCapacity_kW * ratioOfCapacity;&#xD;
		double hydrogenProduction_kW = 0;&#xD;
		if (electrolyserState == OL_ElectrolyserState.POWER_UP) {&#xD;
			this.remainingPowerUpDuration_timesteps--;&#xD;
		}&#xD;
		else if (electrolyserState == OL_ElectrolyserState.IDLE) {&#xD;
		}&#xD;
		else {&#xD;
			hydrogenProduction_kW = electricityConsumption_kW * eta_r;&#xD;
		}&#xD;
    	&#xD;
    	this.energyUse_kW = (electricityConsumption_kW - hydrogenProduction_kW);&#xD;
		this.energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
&#xD;
		flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW);&#xD;
		flowsMap.put(OL_EnergyCarriers.HYDROGEN, -hydrogenProduction_kW);&#xD;
    }&#xD;
    &#xD;
    public void setElectrolyserState(OL_ElectrolyserState electrolyserState) { // Used for regime control&#xD;
    	this.electrolyserState = electrolyserState;&#xD;
    }&#xD;
    &#xD;
    public void setRemainingPowerUpDuration_timesteps(int remainingPowerUpDuration_timesteps) {&#xD;
    	this.remainingPowerUpDuration_timesteps = remainingPowerUpDuration_timesteps;&#xD;
    }&#xD;
    &#xD;
    public void setStartUpTimeStandby_h( double startUpTimeStandby_h ) { &#xD;
        this.startUpTimeStandby_h = startUpTimeStandby_h;&#xD;
	}&#xD;
	&#xD;
    public void setLoadChangeTime_h( double loadChangeTime_h ) {&#xD;
    	this.loadChangeTime_h = loadChangeTime_h;&#xD;
	}&#xD;
	&#xD;
    public void setStartUpTimeShutdown_h( double startUpTimeShutdown_h ) {&#xD;
    	this.startUpTimeShutdown_h = startUpTimeShutdown_h;&#xD;
	}&#xD;
	&#xD;
    public void setStartUpTimeIdle_h( double startUpTimeIdle_h ) {&#xD;
    	this.startUpTimeIdle_h = startUpTimeIdle_h;&#xD;
	}&#xD;
&#xD;
    @Override&#xD;
	public void setEta_r( double efficiency_r) {&#xD;
		this.eta_r = efficiency_r;&#xD;
		this.outputCapacity_kW = this.inputCapacity_kW * this.eta_r;&#xD;
	}&#xD;
    &#xD;
	public OL_ElectrolyserState getState() { // Used for regime control&#xD;
    	return this.electrolyserState;&#xD;
    }&#xD;
	&#xD;
    public int getRemainingPowerUpDuration_timesteps() {&#xD;
    	return this.remainingPowerUpDuration_timesteps;&#xD;
    }&#xD;
&#xD;
    public double getStartUpTimeStandby_h() { &#xD;
        return this.startUpTimeStandby_h;&#xD;
	}&#xD;
    &#xD;
	public double getLoadChangeTime_h() { &#xD;
		return this.loadChangeTime_h;&#xD;
	}&#xD;
	&#xD;
	public double getStartUpTimeShutdown_h() {&#xD;
		return this.startUpTimeShutdown_h;&#xD;
	}&#xD;
	&#xD;
	public double getStartUpTimeIdle_h() {&#xD;
		return this.startUpTimeIdle_h;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {	&#xD;
		return  this.energyAssetType + " in GC: " + this.parentAgent + ", "&#xD;
				+ "Current state: " + this.electrolyserState + ", "&#xD;
				+ "InputCapacity: " + this.inputCapacity_kW + " kW, " &#xD;
				+ "with efficiency: " + this.eta_r + ", "&#xD;
				+ "Current output: " + -this.getLastFlows().get(this.energyCarrierProduced) + " kW";&#xD;
	}&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}                         </Text>
			</JavaClass>
			<JavaClass>
				<Id>1707992650964</Id>
				<Name>J_EAConversionFuelCell</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionFuelCell&#xD;
 */&#xD;
public class J_EAConversionFuelCell extends zero_engine.J_EAConversion implements Serializable {&#xD;
&#xD;
    /**&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAConversionFuelCell() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
&#xD;
    public J_EAConversionFuelCell(Agent parentAgent, double outputElectricCapacity_kW, double efficiency_r, double timestep_h) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
	    this.outputCapacity_kW = outputElectricCapacity_kW;&#xD;
	    this.eta_r = efficiency_r;&#xD;
	    this.inputCapacity_kW = this.outputCapacity_kW / this.eta_r;&#xD;
	    this.timestep_h = timestep_h;	    &#xD;
&#xD;
	    this.energyAssetType = OL_EnergyAssetType.FUEL_CELL;&#xD;
&#xD;
	    this.energyCarrierProduced = OL_EnergyCarriers.ELECTRICITY;&#xD;
	    this.energyCarrierConsumed = OL_EnergyCarriers.HYDROGEN;&#xD;
	    this.activeProductionEnergyCarriers.add(this.energyCarrierProduced);		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}                         </Text>
			</JavaClass>
			<JavaClass>
				<Id>1711009967838</Id>
				<Name>J_EADieselVehicle</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EAConversionDieselVehicle&#xD;
 */&#xD;
public class J_EADieselVehicle extends J_EAVehicle implements Serializable {&#xD;
&#xD;
	private OL_EnergyCarriers energyCarrierConsumed = OL_EnergyCarriers.DIESEL;&#xD;
&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EADieselVehicle() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public J_EADieselVehicle(Agent ownerAssetAgent, double energyConsumption_kWhpkm, double timestep_h, double vehicleScaling, OL_EnergyAssetType energyAssetType, J_ActivityTrackerTrips tripTracker ) {&#xD;
	    this.parentAgent = ownerAssetAgent;&#xD;
	    this.energyConsumption_kWhpkm = energyConsumption_kWhpkm;&#xD;
	    /*if (energyAssetType == OL_EnergyAssetType.DIESEL_VAN) {&#xD;
	    	traceln("DieselVan energyconsumption: %s", energyConsumption_kWhpkm);&#xD;
	    }*/&#xD;
	    this.timestep_h = timestep_h;&#xD;
	    this.vehicleScaling = vehicleScaling;&#xD;
	    this.energyAssetType = energyAssetType; //OL_EnergyAssetType.DIESEL_VEHICLE; // AANPASSING ATE, scheelt code in Interface&#xD;
	    this.tripTracker = tripTracker; &#xD;
	    if (tripTracker != null) {&#xD;
	    	tripTracker.Vehicle=this;&#xD;
	    }		&#xD;
		this.activeConsumptionEnergyCarriers.add(this.energyCarrierConsumed);&#xD;
		registerEnergyAsset();&#xD;
	}&#xD;
    &#xD;
    @Override&#xD;
    public void f_updateAllFlows(double powerFraction_fr) {&#xD;
    	&#xD;
    	flowsMap.put(OL_EnergyCarriers.DIESEL, this.energyUse_kW);&#xD;
    	    	&#xD;
    	if (parentAgent instanceof GridConnection) {&#xD;
    		((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
    	}&#xD;
    	this.lastFlowsMap = flowsMap;&#xD;
    	this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
    	/*if (Double.isNaN(this.energyUse_kW)) {&#xD;
    		throw new RuntimeException("Diesel vehicle energyUse_kW is NaN!");&#xD;
    	}*/&#xD;
    	//Pair&lt;J_FlowsMap, Double&gt; flowspair = new Pair(this.flowsMap, this.energyUse_kW);&#xD;
    	clear(); &#xD;
    	//return this.flowsMap;&#xD;
    }&#xD;
    &#xD;
    /*public double[] operate(double ratioOfChargeCapacity_r) {&#xD;
    	return returnEnergyFlows();&#xD;
    }*/&#xD;
    &#xD;
	@Override&#xD;
	public boolean startTrip() {&#xD;
		if (available) {&#xD;
			this.available = false;&#xD;
			//traceln("Diesel vehicle starting trip!");&#xD;
			return true;&#xD;
		} else {&#xD;
			traceln("Trip not started because vehicle not available!");&#xD;
			return false; // Trip not started because vehicle not available!&#xD;
		}&#xD;
	}	&#xD;
&#xD;
	@Override&#xD;
    public boolean endTrip(double tripDist_km) {&#xD;
		&#xD;
		if(available) {&#xD;
			traceln("Trip not ended because vehicle never left!, tripIdentifier = " + tripTracker.tripPatternIdentifier);&#xD;
			return false;&#xD;
		} else {&#xD;
	    	this.available = true;&#xD;
	    	return true;&#xD;
		}&#xD;
    }&#xD;
&#xD;
	public boolean progressTrip(double marginalTripDist_km) {&#xD;
		if( available) {&#xD;
			traceln("Trip not updated because vehicle never left!");&#xD;
			return false;&#xD;
		}&#xD;
		else {&#xD;
			mileage_km += marginalTripDist_km;&#xD;
	    	double energyUsedThisTimestep_kWh = marginalTripDist_km * vehicleScaling * energyConsumption_kWhpkm;&#xD;
	    	energyUsed_kWh += energyUsedThisTimestep_kWh;&#xD;
	    	//dieselConsumption_kW = energyUsedThisTimestep_kWh / timestep_h;&#xD;
	    	energyUse_kW += energyUsedThisTimestep_kWh / timestep_h;&#xD;
			return true;&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public double getEnergyUsed_kWh() {&#xD;
		return energyUsed_kWh;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
    public void storeStatesAndReset() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
    	energyUsed_kWh = 0.0;&#xD;
    	availableStored = available;&#xD;
    	available = true;&#xD;
    	mileage_km = 0;&#xD;
    	clear();    	&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
    public void restoreStates() {&#xD;
    	// Each energy asset that has some states should overwrite this function!&#xD;
    	energyUsed_kWh = energyUsedStored_kWh;    	&#xD;
    	available = availableStored;&#xD;
    }&#xD;
	&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return&#xD;
			"parentAgent = " + parentAgent +" " +&#xD;
			"energyConsumption_kWhpkm =" + energyConsumption_kWhpkm +" " +&#xD;
			"vehicleScaling = " + vehicleScaling;&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */&#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1715862850276</Id>
				<Name>J_AVGC_data</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_AVGC_data&#xD;
 */	&#xD;
public class J_AVGC_data implements Serializable {&#xD;
	public double p_avgHouseGasConsumption_m3_yr;&#xD;
	public double p_avgHouseElectricityConsumption_kWh_yr;&#xD;
	public double p_avgEVMaxChargePowerVan_kW;&#xD;
	public double p_avgHouseConnectionCapacity_kW;&#xD;
	public OL_GridConnectionHeatingType p_avgHouseHeatingMethod;&#xD;
	public double p_ratioEVHousePersonalCars;&#xD;
	public double p_avgEVMaxChargePowerCar_kW;&#xD;
	public double p_avgEVMaxChargePowerTruck_kW;&#xD;
	public double p_avgEVStorageCar_kWh;&#xD;
	public double p_avgEVStorageVan_kWh;&#xD;
	public double p_avgHousePVInstallationPower_kWp;&#xD;
	public double p_avgEVStorageTruck_kWh;&#xD;
	public double p_ratioHouseInstalledPV;&#xD;
	public double p_gas_kWhpm3;&#xD;
	public double p_diesel_kWhpl;&#xD;
	public double p_gasoline_kWhpl;&#xD;
	public double p_waterHeatCapacity_JpkgK;&#xD;
	public double p_waterDensity_kgpm3;&#xD;
	public OL_GridConnectionHeatingType p_avgUtilityHeatingMethod;&#xD;
	public double p_avgUtilityConnectionCapacity_kW;&#xD;
	public double p_avgUtilityPVPower_kWp;&#xD;
	public double p_ratioElectricTrucks;&#xD;
	public OL_GridConnectionHeatingType p_avgCompanyHeatingMethod;&#xD;
	public double p_avgEVEnergyConsumptionCar_kWhpkm;&#xD;
	public double p_avgEVEnergyConsumptionVan_kWhpkm;&#xD;
	public double p_avgEVEnergyConsumptionTruck_kWhpkm;&#xD;
	public double p_hydrogenEnergyDensity_kWh_Nm3;&#xD;
	public double p_avgDieselConsumptionCar_kmpl;&#xD;
	public double p_avgGasolineConsumptionCar_kmpl;&#xD;
	public double p_hydrogenSpecificEnergy_kWh_kg;&#xD;
	public double p_hydrogenDensity_kg_Nm3;&#xD;
	public double p_oxygenDensity_kg_Nm3;&#xD;
	public double p_avgCOPHeatpump;&#xD;
	public double p_avgEfficiencyHeatpump;&#xD;
	public double p_avgDieselConsumptionCar_kWhpkm;&#xD;
	public double p_oxygenProduction_kgO2pkgH2;&#xD;
	public double p_avgGasolineConsumptionCar_kWhpkm;&#xD;
	public double p_avgDieselConsumptionVan_kmpl;&#xD;
	public double p_avgDieselConsumptionVan_kWhpkm;&#xD;
	public double p_avgDieselConsumptionTruck_kmpl;&#xD;
	public double p_avgDieselConsumptionTruck_kWhpkm;&#xD;
	public double p_avgOutputTemperatureHeatpump_degC;&#xD;
	public double p_avgHydrogenConsumptionCar_kWhpkm;&#xD;
	public double p_avgEfficiencyGasBurner;&#xD;
	public double p_avgHydrogenConsumptionVan_kWhpkm;&#xD;
	public double p_avgHydrogenConsumptionTruck_kWhpkm;&#xD;
	public double p_avgOutputTemperatureGasBurner_degC;&#xD;
	public double p_avgEfficiencyHydrogenBurner;&#xD;
	public double p_avgOutputTemperatureHydrogenBurner_degC;&#xD;
	public double p_avgPVPower_kWpm2;&#xD;
	public double p_avgAnnualProductionPV_kWhpWp;&#xD;
	public double p_avgRatioRoofPotentialPV;&#xD;
	public double p_avgRatioBatteryCapacity_v_Power;&#xD;
	public double p_avgSolarFieldPower_kWppha;&#xD;
	public double p_avgEfficiencyCHP_thermal_fr;&#xD;
	public double p_avgEfficiencyCHP_electric_fr;&#xD;
	public double p_avgOutputTemperatureCHP_degC;&#xD;
	public double p_avgEfficiencyDistrictHeatingDeliverySet_fr;&#xD;
	public double p_avgOutputTemperatureDistrictHeatingDeliverySet_degC;&#xD;
	public double p_v1gProbability;&#xD;
	public double p_v2gProbability;&#xD;
	public int p_avgEVsPerPublicCharger;&#xD;
	public double p_avgPTPower_kWpm2;&#xD;
	public double p_avgMaxHeatBufferTemperature_degC;&#xD;
	public double p_avgMinHeatBufferTemperature_degC;&#xD;
	public double p_avgHeatBufferWaterVolumePerPTSurface_m3pm2;&#xD;
	public double p_avgHeatBufferWaterVolumePerHPPower_m3pkW;&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_AVGC_data() {&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1726148464063</Id>
				<Name>J_Address</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_Address&#xD;
 */	&#xD;
public class J_Address implements Serializable {&#xD;
&#xD;
	private String streetName;&#xD;
	private int houseNumber;&#xD;
	private String houseLetter;&#xD;
	private String houseAddition;&#xD;
	private String postalcode;&#xD;
	private String city;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_Address() {&#xD;
    }&#xD;
    &#xD;
    public String getAddress() {&#xD;
    	StringBuilder sb = new StringBuilder();&#xD;
    	&#xD;
    	if ( this.streetName != null ) {&#xD;
    		sb.append(this.streetName);&#xD;
    	}&#xD;
    	else {&#xD;
    		sb.append("Onbekend adres");&#xD;
    		return sb.toString();&#xD;
    	}&#xD;
    	sb.append(" ");&#xD;
    	sb.append(this.houseNumber);&#xD;
		if ( this.houseLetter != null ) {&#xD;
	    	sb.append(" ");&#xD;
	    	sb.append(this.houseLetter);&#xD;
	    }&#xD;
		if ( this.houseAddition != null ) {&#xD;
	    	sb.append(" ");&#xD;
	    	sb.append(this.houseAddition);&#xD;
	    }&#xD;
		if ( this.postalcode != null || this.city != null) {&#xD;
			sb.append(",");&#xD;
		}&#xD;
		if ( this.postalcode != null ){&#xD;
			sb.append(" ");&#xD;
			sb.append(this.postalcode);&#xD;
		}&#xD;
		if ( this.city != null ){&#xD;
			sb.append(" ");&#xD;
			sb.append(this.city);&#xD;
		}&#xD;
		&#xD;
		return sb.toString();&#xD;
    }&#xD;
    &#xD;
    &#xD;
    public void setStreetName( String streetName ) { &#xD;
        this.streetName = streetName;&#xD;
	}&#xD;
	public void setHouseNumber( int houseNumber ) { &#xD;
	        this.houseNumber = houseNumber;&#xD;
	}&#xD;
	public void setHouseLetter( String houseLetter ) { &#xD;
	        this.houseLetter = houseLetter;&#xD;
	}&#xD;
	public void setHouseAddition( String houseAddition ) { &#xD;
	        this.houseAddition = houseAddition;&#xD;
	}&#xD;
	public void setPostalcode( String postalcode ) { &#xD;
	        this.postalcode = postalcode;&#xD;
	}&#xD;
	public void setCity( String city ) {&#xD;
	        this.city = city;&#xD;
	}&#xD;
	&#xD;
	public String getStreetName() { &#xD;
        return this.streetName;&#xD;
	}&#xD;
	public int getHouseNumber() {&#xD;
	        return this.houseNumber;&#xD;
	}&#xD;
	public String getHouseLetter() {&#xD;
	        return this.houseLetter;&#xD;
	}&#xD;
	public String getHouseAddition() {&#xD;
	        return this.houseAddition;&#xD;
	}&#xD;
	public String getPostalcode() {&#xD;
	        return this.postalcode;&#xD;
	}&#xD;
	public String getCity() {&#xD;
	        return this.city;&#xD;
	}&#xD;
	&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return "J_Address(" + getAddress() + ")";&#xD;
	}&#xD;
&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1727774738469</Id>
				<Name>J_ProfileForecaster</Name>
				<Text>/**&#xD;
 * J_ProfileForecaster&#xD;
 */	&#xD;
public class J_ProfileForecaster implements Serializable {&#xD;
	&#xD;
	private String name = "";&#xD;
	private J_ProfilePointer profilePointer;&#xD;
	private double forecastTime_h = 0;&#xD;
	private double timeStep_h = 0;&#xD;
	private double currentForecast = 0;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ProfileForecaster(String forecastName, J_ProfilePointer pp, double forecastTime_h, double currentTime_h, double timeStep_h) {&#xD;
    	if (forecastName == null) {&#xD;
    		this.name = pp.name + " " + forecastTime_h + " h";&#xD;
    	}&#xD;
    	else {&#xD;
    		this.name = forecastName;&#xD;
    	}&#xD;
    	this.profilePointer = pp;&#xD;
    	this.forecastTime_h = forecastTime_h;&#xD;
    	this.timeStep_h = timeStep_h;&#xD;
    	this.initializeForecast(currentTime_h);&#xD;
    }&#xD;
&#xD;
    public void initializeForecast(double currentTime_h) {&#xD;
    	this.currentForecast = 0;&#xD;
    	for (double t_h = currentTime_h; t_h &lt; currentTime_h + this.forecastTime_h; t_h += this.timeStep_h) {&#xD;
    		this.currentForecast += this.profilePointer.getValue(t_h) / (this.forecastTime_h/this.timeStep_h);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void updateForecast(double t_h) {&#xD;
    	this.currentForecast += (this.profilePointer.getValue(t_h + this.forecastTime_h) - this.profilePointer.getValue(t_h)) / (this.forecastTime_h/this.timeStep_h);&#xD;
    }&#xD;
    &#xD;
    public double getForecast() {&#xD;
    	return this.currentForecast;&#xD;
    }&#xD;
    &#xD;
    public String getName() {&#xD;
    	return this.name;&#xD;
    }&#xD;
    &#xD;
    public double getForecastTime_h() {&#xD;
    	return this.forecastTime_h;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return "forecast name: " + this.name + ", current forecast: " + this.currentForecast;&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1727775512403</Id>
				<Name>J_ProfilePointer</Name>
				<Text>/**&#xD;
 * J_ProfilePointer&#xD;
 */	&#xD;
public class J_ProfilePointer implements Serializable {&#xD;
	public String name = "";&#xD;
	private double currentValue = 0;&#xD;
	private TableFunction tableFunction;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ProfilePointer(String name, TableFunction tableFunction) {&#xD;
    	this.name = name;&#xD;
    	this.tableFunction = tableFunction;&#xD;
    }&#xD;
&#xD;
    public void updateValue(double t_h) {&#xD;
    	this.currentValue = this.tableFunction.get(t_h);&#xD;
    }&#xD;
    &#xD;
    public double getCurrentValue() {&#xD;
    	return this.currentValue;&#xD;
    }&#xD;
    &#xD;
    public double getValue(double t_h) {&#xD;
    	return this.tableFunction.get(t_h);&#xD;
    }&#xD;
    &#xD;
    public double[] getAllValues() {&#xD;
    	return this.tableFunction.getValues();&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return "profile: " + this.name + " current value: " + this.currentValue; &#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1729171686537</Id>
				<Name>J_FlowsMapEnumMap</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * J_FlowsMap&#xD;
 */	&#xD;
import java.util.EnumMap;&#xD;
&#xD;
public class J_FlowsMapEnumMap extends EnumMap&lt;OL_EnergyCarriers, Double&gt; {&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_FlowsMapEnumMap() {&#xD;
    	super(OL_EnergyCarriers.class);&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public Double get(Object key) {&#xD;
    	if (super.get(key) == null) {&#xD;
    		return 0.0;&#xD;
    	}&#xD;
    	else {&#xD;
        	return super.get(key);&#xD;
    	}&#xD;
    	&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap addFlows( J_FlowsMap f) {&#xD;
    	for (OL_EnergyCarriers key : f.keySet()) {&#xD;
    		this.addFlow(key, f.get(key));&#xD;
    	}    	&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap addFlow ( OL_EnergyCarriers key, double value) {&#xD;
    	double currentValue = this.get(key);&#xD;
    	this.put(key, currentValue + value);&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap cloneMap(J_FlowsMap flowsMap) {&#xD;
    	//J_FlowsMap flowsMap = new J_FlowsMapEnumMap();&#xD;
    	this.clear();&#xD;
    	//this.addFlows(flowsMap);&#xD;
    	this.putAll(flowsMap);&#xD;
    	return this;    	&#xD;
    }&#xD;
    	&#xD;
    /*&#xD;
    public J_FlowsMap addReducedFlows( J_FlowsMap f) {&#xD;
    	for (OL_EnergyCarriers key : f.keySet()) {&#xD;
    		this.put(key, this.get(key) + f.get(key));&#xD;
    	}&#xD;
    	return this;&#xD;
    }&#xD;
    */&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}&#xD;
&#xD;
/**&#xD;
 * J_FlowsMap&#xD;
 */	&#xD;
&#xD;
//import java.util.EnumMap;&#xD;
&#xD;
//public class J_FlowsMap extends EnumMap&lt;OL_FlowsMapKeys, Double&gt; {&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
 /*   public J_FlowsMapEnumMap() {&#xD;
    	super(OL_FlowsMapKeys.class);&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public Double get(Object key) {&#xD;
    	if (super.get(key) == null) {&#xD;
    		return 0.0;&#xD;
    	}&#xD;
    	else {&#xD;
        	return super.get(key);&#xD;
    	}&#xD;
    	&#xD;
    }&#xD;
    &#xD;
    public void clear() {&#xD;
    	for (OL_FlowsMapKeys key : this.keySet()) {&#xD;
    		this.remove(key);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap addFlows( J_FlowsMap f) {&#xD;
    	for (OL_FlowsMapKeys key : f.keySet()) {&#xD;
    		this.put(key, this.get(key) + f.get(key));&#xD;
    	}&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap addFlow ( OL_FlowsMapKeys key, double value) {&#xD;
    	double currentValue = this.get(key);&#xD;
    	this.put(key, currentValue + value);&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap addReducedFlows ( J_FlowsMap f) {&#xD;
    	for (OL_EnergyCarriers energyCarrier : f.keySet()) {&#xD;
    		if (f.get(energyCarrier) &lt; 0 ) { //production&#xD;
    			OL_FlowsMapKeys key = translateMapKeys(energyCarrier, false);&#xD;
        		this.put(key, this.get(key) - f.get(energyCarrier));&#xD;
    		}&#xD;
    		else { // consumption&#xD;
    			OL_FlowsMapKeys key = translateMapKeys(energyCarrier, true);&#xD;
        		this.put(key, this.get(key) + f.get(energyCarrier));&#xD;
&#xD;
    		}&#xD;
    	}&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    // TODO: test if a hardcoded enummap is faster (probably place it on the energyModel canvas)&#xD;
    public  OL_FlowsMapKeys translateMapKeys(OL_EnergyCarriers energyCarrier, boolean isConsumption) {&#xD;
	    if (isConsumption) {&#xD;
	    	switch (energyCarrier) {&#xD;
	    		case ELECTRICITY:&#xD;
	    			return ELECTRICITY_CONSUMPTION_KW;&#xD;
	    		case HEAT:&#xD;
	    			return HEAT_CONSUMPTION_KW;&#xD;
	    		case METHANE:&#xD;
	    			return METHANE_CONSUMPTION_KW;&#xD;
	    		case DIESEL:&#xD;
	    			return DIESEL_CONSUMPTION_KW;&#xD;
	    		case HYDROGEN:&#xD;
	    			return HYDROGEN_CONSUMPTION_KW;&#xD;
	    		default:&#xD;
	    			throw new RuntimeException("Incorrect FlowsMapKey in translateMapKeys");&#xD;
	    	}&#xD;
	    }&#xD;
	    else {&#xD;
	    	switch (energyCarrier) {&#xD;
	    		case ELECTRICITY:&#xD;
	    			return ELECTRICITY_PRODUCTION_KW;&#xD;
	    		case HEAT:&#xD;
	    			return HEAT_PRODUCTION_KW;&#xD;
	    		case METHANE:&#xD;
	    			return METHANE_PRODUCTION_KW;&#xD;
	    		case DIESEL:&#xD;
	    			return DIESEL_PRODUCTION_KW;&#xD;
	    		case HYDROGEN:&#xD;
	    			return HYDROGEN_PRODUCTION_KW;&#xD;
	    		default:&#xD;
	    			throw new RuntimeException("Incorrect FlowsMapKey in translateMapKeys");&#xD;
	    	}&#xD;
	    }&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap getProductionFlows() {&#xD;
    	J_FlowsMap flowsMap = new J_FlowsMapEnumMap();&#xD;
    	for (OL_EnergyCarriers energyCarrier : OL_EnergyCarriers.values()) {&#xD;
    		OL_FlowsMapKeys key = translateMapKeys(energyCarrier, false);&#xD;
    		flowsMap.put(energyCarrier, this.get(key));&#xD;
    	}&#xD;
    	return flowsMap;&#xD;
    }&#xD;
    &#xD;
    public J_FlowsMap getConsumptionFlows() {&#xD;
    	J_FlowsMap flowsMap = new J_FlowsMapEnumMap();&#xD;
    	for (OL_EnergyCarriers energyCarrier : OL_EnergyCarriers.values()) {&#xD;
    		OL_FlowsMapKeys key = translateMapKeys(energyCarrier, true);&#xD;
    		flowsMap.put(energyCarrier, this.get(key));&#xD;
    	}&#xD;
    	return flowsMap;&#xD;
    }&#xD;
    &#xD;
    public double getNetFlow(OL_EnergyCarriers key) {&#xD;
    	double consumptionFlow = this.get(translateMapKeys(key, true));&#xD;
    	double productionFlow = this.get(translateMapKeys(key, false));&#xD;
    	return consumptionFlow - productionFlow;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
*/&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
//	private static final long serialVersionUID = 1L;&#xD;
&#xD;
//}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1729262288167</Id>
				<Name>J_DataSetMap</Name>
				<Folder>1752679379816</Folder>
				<Text>/**&#xD;
 * J_DataSetMap&#xD;
 */	&#xD;
//import java.util.EnumMap;&#xD;
import java.util.EnumSet;&#xD;
&#xD;
public class J_DataSetMap implements Serializable {&#xD;
	private DataSet[] datasetArray = new DataSet[OL_EnergyCarriers.values().length]; // Use array with size of all possible energyCarriers; more than strictly needed but memory footprint is negligable anyway.;&#xD;
	private EnumSet&lt;OL_EnergyCarriers&gt; energyCarrierList = EnumSet.noneOf(OL_EnergyCarriers.class);&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_DataSetMap() {&#xD;
    	//super(OL_EnergyCarriers.class);&#xD;
    }&#xD;
&#xD;
    public void createEmptyDataSets(EnumSet&lt;OL_EnergyCarriers&gt; selectedFlows, int size) {&#xD;
    	for (OL_EnergyCarriers key : selectedFlows) {&#xD;
    		this.put(key, new DataSet(size));&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public DataSet get(OL_EnergyCarriers key) {&#xD;
		return datasetArray[key.ordinal()];&#xD;
	}&#xD;
    	&#xD;
&#xD;
	public void put(OL_EnergyCarriers key, DataSet ds) {&#xD;
		datasetArray[key.ordinal()] = ds;&#xD;
		energyCarrierList.add(key);		&#xD;
	}&#xD;
	&#xD;
	public void clear() {&#xD;
		datasetArray = new DataSet[OL_EnergyCarriers.values().length];&#xD;
		energyCarrierList.clear();&#xD;
	}&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
        if (this.energyCarrierList.size() == 0) {&#xD;
            return "{}";        	&#xD;
        }&#xD;
        StringBuilder sb = new StringBuilder();&#xD;
        sb.append('{');&#xD;
        for (OL_EnergyCarriers key : this.energyCarrierList) {&#xD;
        	DataSet value = this.get(key);&#xD;
        	int len = value.toString().length();&#xD;
            sb.append(key);&#xD;
            sb.append(" = ");&#xD;
            sb.append(value.toString().substring(0,min(400, len)));&#xD;
            sb.append(", \n");&#xD;
        }&#xD;
        sb.delete(sb.length()-4, sb.length());&#xD;
        sb.append('}');&#xD;
        return sb.toString();&#xD;
    }&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1729510354900</Id>
				<Name>J_AccumulatorMap</Name>
				<Folder>1752679379816</Folder>
				<Text>/**&#xD;
 * J_AccumulatorMap&#xD;
 */	&#xD;
//import java.util.EnumMap;&#xD;
import java.util.EnumSet;&#xD;
//import zeroPackage.ZeroAccumulator;&#xD;
&#xD;
public class J_AccumulatorMap implements Serializable {&#xD;
	&#xD;
	private ZeroAccumulator[] accumulatorArray = new ZeroAccumulator[OL_EnergyCarriers.values().length]; // Use array with size of all possible energyCarriers; more than strictly needed but memory footprint is negligable anyway.;&#xD;
	private EnumSet&lt;OL_EnergyCarriers&gt; energyCarrierList = EnumSet.noneOf(OL_EnergyCarriers.class);&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_AccumulatorMap() {&#xD;
    	//super(OL_EnergyCarriers.class);&#xD;
    }&#xD;
&#xD;
    public void createEmptyAccumulators(EnumSet&lt;OL_EnergyCarriers&gt; selectedFlows, boolean hasTimeSeries, double signalResolution_h, double duration_h) {&#xD;
    	for (OL_EnergyCarriers key : selectedFlows) {&#xD;
    		this.put(key, new ZeroAccumulator(hasTimeSeries, signalResolution_h, duration_h));&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public J_AccumulatorMap getClone() {&#xD;
    	J_AccumulatorMap am = new J_AccumulatorMap();&#xD;
    	for (var EC : this.energyCarrierList) {&#xD;
    		am.put(EC, accumulatorArray[EC.ordinal()].getClone());&#xD;
    	}&#xD;
    	return am;&#xD;
    }&#xD;
   &#xD;
    public ZeroAccumulator get(OL_EnergyCarriers key) {&#xD;
		return accumulatorArray[key.ordinal()];&#xD;
	}&#xD;
    	&#xD;
&#xD;
	public void put(OL_EnergyCarriers key, ZeroAccumulator acc) {&#xD;
		accumulatorArray[key.ordinal()] = acc;&#xD;
		energyCarrierList.add(key);		&#xD;
	}&#xD;
    /*&#xD;
	public double totalSum() {&#xD;
		double totalSum = 0.0;&#xD;
		for (var EC : energyCarrierList) {&#xD;
			totalSum += accumulatorArray[EC.ordinal()].getSum();&#xD;
		}&#xD;
		return totalSum;&#xD;
	}&#xD;
	*/&#xD;
	public double totalIntegral_kWh() {&#xD;
		double totalIntegral_kWh = 0.0;&#xD;
		for (var EC : energyCarrierList) {&#xD;
			totalIntegral_kWh += accumulatorArray[EC.ordinal()].getIntegral_kWh();&#xD;
		}&#xD;
		return totalIntegral_kWh;&#xD;
	}&#xD;
	&#xD;
	public double totalIntegral_MWh() {&#xD;
		return this.totalIntegral_kWh() / 1000;&#xD;
	}&#xD;
	&#xD;
	public double totalIntegralPos_kWh() {&#xD;
		double totalIntegralPos_kWh = 0.0;&#xD;
		for (var EC : energyCarrierList) {&#xD;
			totalIntegralPos_kWh += accumulatorArray[EC.ordinal()].getIntegralPos_kWh();&#xD;
		}&#xD;
		return totalIntegralPos_kWh;&#xD;
	}&#xD;
	&#xD;
	public double totalIntegralPos_MWh() {&#xD;
		return this.totalIntegralPos_kWh() / 1000;&#xD;
	}&#xD;
	&#xD;
	public double totalIntegralNeg_kWh() {&#xD;
		double totalIntegralNeg_kWh = 0.0;&#xD;
		for (var EC : energyCarrierList) {&#xD;
			totalIntegralNeg_kWh += accumulatorArray[EC.ordinal()].getIntegralNeg_kWh();&#xD;
		}&#xD;
		return totalIntegralNeg_kWh;&#xD;
	}&#xD;
	&#xD;
	public double totalIntegralNeg_MWh() {&#xD;
		return this.totalIntegralNeg_kWh() / 1000;&#xD;
	}&#xD;
	&#xD;
	public void clear() {&#xD;
		accumulatorArray = new ZeroAccumulator[OL_EnergyCarriers.values().length];&#xD;
		energyCarrierList.clear();&#xD;
	}&#xD;
	&#xD;
	public void reset() {&#xD;
		for (var EC : energyCarrierList) {&#xD;
			accumulatorArray[EC.ordinal()].reset();&#xD;
		}&#xD;
	}&#xD;
	&#xD;
	public J_AccumulatorMap add( J_AccumulatorMap accumulatorMap ) {&#xD;
		for (var EC : accumulatorMap.energyCarrierList) {&#xD;
			if (!this.energyCarrierList.contains(EC)) {&#xD;
				// make a new one?&#xD;
				throw new RuntimeException("Tried to add an AccumulatorMap with a new EnergyCarrier.");&#xD;
			}&#xD;
			this.get(EC).add(accumulatorMap.get(EC));&#xD;
		}&#xD;
		return this;&#xD;
	}&#xD;
	&#xD;
	public J_AccumulatorMap subtract( J_AccumulatorMap accumulatorMap ) {&#xD;
		for (var EC : accumulatorMap.energyCarrierList) {&#xD;
			if (!this.energyCarrierList.contains(EC)) {&#xD;
				// make a new one?&#xD;
				throw new RuntimeException("Tried to subtract an AccumulatorMap with a new EnergyCarrier.");&#xD;
			}&#xD;
			this.get(EC).subtract(accumulatorMap.get(EC));&#xD;
		}&#xD;
		return this;&#xD;
	}&#xD;
	&#xD;
	public J_DataSetMap getDataSetMap( double startTime_h ) {&#xD;
		J_DataSetMap dsm = new J_DataSetMap();&#xD;
		for (var EC : this.energyCarrierList) {&#xD;
			dsm.put(EC, this.get(EC).getDataSet(startTime_h));&#xD;
		}&#xD;
		return dsm;&#xD;
	}&#xD;
	&#xD;
    public String toString() {&#xD;
        if (this.accumulatorArray.length == 0) {&#xD;
            return "{}";        	&#xD;
        }&#xD;
        StringBuilder sb = new StringBuilder();&#xD;
        sb.append('{');&#xD;
        for (OL_EnergyCarriers key : this.energyCarrierList) {&#xD;
        	ZeroAccumulator acc = this.get(key);&#xD;
        	//double value = this.get(key);&#xD;
        	if (acc.getIntegral_kWh() == 0.0) {&#xD;
        		continue;&#xD;
        	}&#xD;
        	&#xD;
        	sb.append(key);&#xD;
        	sb.append(" ");&#xD;
            sb.append(acc.toString());&#xD;
            //sb.append(" = ");&#xD;
            //sb.append(value);&#xD;
            sb.append(", ");&#xD;
        }&#xD;
        //sb.delete(sb.length()-2, sb.length());&#xD;
        sb.append('}');&#xD;
        return sb.toString();&#xD;
    }&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1729586334721</Id>
				<Name>J_ReducedFlowsMap</Name>
				<ExcludeFromBuild>true</ExcludeFromBuild>
				<Folder>1752737189062</Folder>
				<Text>/**&#xD;
 * J_ReducedFlowsMap&#xD;
 */	&#xD;
import java.util.EnumMap;&#xD;
&#xD;
public class J_ReducedFlowsMap extends EnumMap&lt;OL_EnergyCarriers, Double&gt; {&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ReducedFlowsMap() {&#xD;
    	super(OL_EnergyCarriers.class);&#xD;
    }&#xD;
&#xD;
    @Override&#xD;
    public Double get(Object key) {&#xD;
    	if (super.get(key) == null) {&#xD;
    		return 0.0;&#xD;
    	}&#xD;
    	else {&#xD;
        	return super.get(key);&#xD;
    	}&#xD;
    	&#xD;
    }&#xD;
    &#xD;
    public void clear() {&#xD;
    	for (OL_EnergyCarriers key : this.keySet()) {&#xD;
    		this.remove(key);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public J_ReducedFlowsMap addFlow ( OL_EnergyCarriers key, double value) {&#xD;
    	double currentValue = this.get(key);&#xD;
    	this.put(key, currentValue + value);&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public J_ReducedFlowsMap addReducedFlows( J_FlowsMap f) {&#xD;
    	for (OL_EnergyCarriers key : f.keySet()) {&#xD;
    		this.put(key, this.get(key) + f.get(key));&#xD;
    	}&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1731483284975</Id>
				<Name>J_FlowsMap</Name>
				<Folder>1752679379816</Folder>
				<Text>/**&#xD;
 * J_FlowsMap&#xD;
 */	&#xD;
import zeroPackage.ZeroMath;&#xD;
import java.util.EnumSet;&#xD;
&#xD;
public class J_FlowsMap implements Serializable {&#xD;
	&#xD;
	private double[] valuesArray = new double[OL_EnergyCarriers.values().length]; // Use array with size of all possible energyCarriers; more than strictly needed but memory footprint is negligable anyway.;&#xD;
	private EnumSet&lt;OL_EnergyCarriers&gt; energyCarrierList = EnumSet.noneOf(OL_EnergyCarriers.class);&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_FlowsMap() {&#xD;
    	&#xD;
    }&#xD;
&#xD;
    public final double get(OL_EnergyCarriers key) {&#xD;
		return valuesArray[key.ordinal()];&#xD;
	}&#xD;
    	&#xD;
&#xD;
	public final void put(OL_EnergyCarriers key, double value) {&#xD;
		valuesArray[key.ordinal()] = value;&#xD;
		energyCarrierList.add(key);&#xD;
	}&#xD;
	&#xD;
	public final void clear() {&#xD;
		energyCarrierList.clear();&#xD;
		Arrays.fill(valuesArray, 0.0);&#xD;
		/*for(int i=0; i&lt;valuesArray.length; i++) {&#xD;
			valuesArray[i]=0.0;&#xD;
		}*/&#xD;
	}&#xD;
    &#xD;
    //public J_FlowsMap addFlows( J_FlowsMap f) {&#xD;
    public final J_FlowsMap addFlowsSlow( J_FlowsMap f) {&#xD;
    	for (OL_EnergyCarriers key : f.energyCarrierList) {&#xD;
    		this.addFlow(key, f.get(key));&#xD;
    	}&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    //public J_FlowsMap addToExistingFlows( J_FlowsMap f) {&#xD;
    public final J_FlowsMap addFlows( J_FlowsMap f) {&#xD;
    	int len = valuesArray.length;&#xD;
		for(int i=0; i&lt;len; i++) {&#xD;
			//this.valuesArray[i]=this.valuesArray[i]+f.valuesArray[i];&#xD;
			this.valuesArray[i]+=f.valuesArray[i];&#xD;
		}&#xD;
		this.energyCarrierList.addAll(f.energyCarrierList); &#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public final J_FlowsMap addFlow( OL_EnergyCarriers key, double value) {&#xD;
    	energyCarrierList.add(key);&#xD;
    	this.valuesArray[key.ordinal()]+=value;&#xD;
    	//double currentValue = this.get(key);&#xD;
    	//this.put(key, currentValue + value);&#xD;
    	return this;&#xD;
    }&#xD;
    &#xD;
    public final J_FlowsMap cloneMap(J_FlowsMap flowMap) {&#xD;
    	//this.clear();&#xD;
    	//this.addFlows(flowMap);&#xD;
    	&#xD;
    	// Custom 'addflows' version that doesn't add, just 'copies'. Might be faster?&#xD;
    	int len = valuesArray.length;&#xD;
		for(int i=0; i&lt;len; i++) {&#xD;
			this.valuesArray[i]=flowMap.valuesArray[i];&#xD;
		}&#xD;
		&#xD;
		//this.energyCarrierList = flowMap.energyCarrierList.clone(); // This or first clear list and then addAll? Which is faster?&#xD;
		this.energyCarrierList.clear();&#xD;
		this.energyCarrierList.addAll(flowMap.energyCarrierList); &#xD;
    	return this;    	&#xD;
    }&#xD;
    &#xD;
    public double totalSum() {&#xD;
    	return ZeroMath.arraySum(valuesArray);&#xD;
    }&#xD;
    &#xD;
    public final EnumSet&lt;OL_EnergyCarriers&gt; keySet(){&#xD;
    	return energyCarrierList;&#xD;
    }&#xD;
        &#xD;
    public String toString() {&#xD;
        if (this.energyCarrierList.size() == 0) {&#xD;
            return "{}";        	&#xD;
        }&#xD;
        StringBuilder sb = new StringBuilder();&#xD;
        sb.append('{');&#xD;
        for (OL_EnergyCarriers key : this.energyCarrierList) {&#xD;
        	double value = this.get(key);&#xD;
            sb.append(key);&#xD;
            sb.append(" = ");&#xD;
            sb.append(value);&#xD;
            sb.append(", ");&#xD;
        }&#xD;
        sb.delete(sb.length()-2, sb.length());&#xD;
        sb.append('}');&#xD;
        return sb.toString();&#xD;
    }&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1737025326025</Id>
				<Name>J_LoadDurationCurves</Name>
				<Text>/**&#xD;
 * J_LoadDurationCurves&#xD;
 */	&#xD;
public class J_LoadDurationCurves implements Serializable {&#xD;
	private boolean firstRun = true;&#xD;
	private EnergyModel energyModel;&#xD;
	&#xD;
	public int arraySize;&#xD;
	private double[] netLoadArrayAnnual_kW;&#xD;
	public double[] loadDuractionCurveTotal_kW;&#xD;
	private double[] netLoadArraySummerweek_kW;&#xD;
	private double[] netLoadArrayWinterweek_kW;&#xD;
	private double[] netLoadArrayDaytime_kW;&#xD;
	private double[] netLoadArrayNighttime_kW;&#xD;
	private double[] netLoadArrayWeekday_kW;&#xD;
	private double[] netLoadArrayWeekend_kW;&#xD;
	public DataSet ds_loadDurationCurveTotal_kW;&#xD;
	//area.v_dataNetbelastingDuurkrommeYearVorige_kW = new DataSet(roundToInt(365*24/energyModel.p_timeStep_h));&#xD;
&#xD;
	public DataSet ds_loadDurationCurveSummer_kW;// = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));&#xD;
	public DataSet ds_loadDurationCurveWinter_kW;// = new DataSet(roundToInt(7*24/energyModel.p_timeStep_h));&#xD;
	public DataSet ds_loadDurationCurveDaytime_kW;// = new DataSet(roundToInt((energyModel.p_runEndTime_h-energyModel.p_runStartTime_h)/2/energyModel.p_timeStep_h));&#xD;
	public DataSet ds_loadDurationCurveNighttime_kW;// = new DataSet(roundToInt((energyModel.p_runEndTime_h-energyModel.p_runStartTime_h)/2/energyModel.p_timeStep_h));&#xD;
	public DataSet ds_loadDurationCurveWeekday_kW;// = new DataSet(roundToInt(arraySize/7.0*5)+100);&#xD;
	public DataSet ds_loadDurationCurveWeekend_kW;// = new DataSet(roundToInt(arraySize/7.0*2)+100);&#xD;
	&#xD;
	public DataSet ds_previousLoadDurationCurveTotal_kW;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_LoadDurationCurves() {&#xD;
    }&#xD;
   &#xD;
    public J_LoadDurationCurves(double[] loadArray_kW, EnergyModel energyModel) {&#xD;
    	this.energyModel = energyModel;&#xD;
    	calculateLoadDurationCurves(loadArray_kW);	&#xD;
    }    &#xD;
     &#xD;
    public void calculateLoadDurationCurves(double[] loadArray_kW) {&#xD;
    	this.arraySize = loadArray_kW.length;&#xD;
    	if (ds_loadDurationCurveTotal_kW != null) {	&#xD;
    		if (ds_previousLoadDurationCurveTotal_kW != null) { // Not second run either!&#xD;
    			ds_previousLoadDurationCurveTotal_kW.reset();&#xD;
    		} else {&#xD;
    			ds_previousLoadDurationCurveTotal_kW = new DataSet(arraySize);&#xD;
    		}&#xD;
    		firstRun = false;&#xD;
    	}&#xD;
    &#xD;
    	this.netLoadArrayAnnual_kW = Arrays.copyOf(loadArray_kW,arraySize);&#xD;
    	this.loadDuractionCurveTotal_kW = new double[arraySize];&#xD;
    	this.netLoadArraySummerweek_kW = new double[roundToInt(168 / energyModel.p_timeStep_h)];&#xD;
    	this.netLoadArrayWinterweek_kW= new double[roundToInt(168 / energyModel.p_timeStep_h)];&#xD;
    	this.netLoadArrayDaytime_kW = new double[arraySize/2];&#xD;
    	this.netLoadArrayNighttime_kW = new double[arraySize/2];&#xD;
    	// For different years the amount of weekdays and weekend days may be different, so the size will be variable for now&#xD;
    	ArrayList&lt;Double&gt; listNetLoadArrayWeekday_kW = new ArrayList&lt;&gt;();&#xD;
    	ArrayList&lt;Double&gt; listNetLoadArrayWeekend_kW = new ArrayList&lt;&gt;();&#xD;
    	 &#xD;
    	int i_winter=0;&#xD;
    	int i_summer=0;&#xD;
    	int i_day=0;&#xD;
    	int i_night=0;&#xD;
    	int i_weekday=0;&#xD;
    	int i_weekend=0;&#xD;
&#xD;
    	//double[] annualElectricityBalanceTimeSeries_kW = acc_annualElectricityBalance_kW.getTimeSeries();&#xD;
&#xD;
    	for(int i=0; i&lt;arraySize ; i++) {&#xD;
    		if (!firstRun) {&#xD;
    			// First we make sure to store our previous Load Curve&#xD;
    			ds_previousLoadDurationCurveTotal_kW.add(i*energyModel.p_timeStep_h,ds_loadDurationCurveTotal_kW.getY(i));		&#xD;
    		}&#xD;
    		// summer/winter&#xD;
    		if (energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h &gt; energyModel.p_startOfSummerWeek_h &amp;&amp; energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h&lt;= energyModel.p_startOfSummerWeek_h+24*7) {&#xD;
    			netLoadArraySummerweek_kW[i_summer]=-netLoadArrayAnnual_kW[i];&#xD;
    			i_summer++;&#xD;
    		}&#xD;
    		if (energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h &gt; energyModel.p_startOfWinterWeek_h &amp;&amp; energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h&lt;= energyModel.p_startOfWinterWeek_h+24*7) {&#xD;
    			netLoadArrayWinterweek_kW[i_winter]=-netLoadArrayAnnual_kW[i];&#xD;
    			i_winter++;&#xD;
    		}&#xD;
    		// day/night&#xD;
    		if (i*energyModel.p_timeStep_h % 24 &gt; 6 &amp;&amp; i*energyModel.p_timeStep_h % 24 &lt;= 18) { //daytime&#xD;
    			netLoadArrayDaytime_kW[i_day]=-netLoadArrayAnnual_kW[i];&#xD;
    			i_day++;&#xD;
    		} else {&#xD;
    			netLoadArrayNighttime_kW[i_night]=-netLoadArrayAnnual_kW[i];&#xD;
    			i_night++;&#xD;
    		}&#xD;
    		//Weekday/weekend&#xD;
    		if (((energyModel.p_runStartTime_h + i*energyModel.p_timeStep_h+ 24*(energyModel.v_dayOfWeek1jan-1)) % (24*7)) &lt; (24*5)) { // Simulation starts on a Thursday, hence the +3 day offset on t_h&#xD;
    			listNetLoadArrayWeekday_kW.add(-netLoadArrayAnnual_kW[i]);&#xD;
    			i_weekday++;&#xD;
    		} else {&#xD;
    			listNetLoadArrayWeekend_kW.add(-netLoadArrayAnnual_kW[i]);&#xD;
    			i_weekend++;&#xD;
    		}&#xD;
    		&#xD;
    	}&#xD;
    	 &#xD;
    	// Now we have the size of the weekday &amp; weekend arrays.&#xD;
    	this.netLoadArrayWeekday_kW = new double[listNetLoadArrayWeekday_kW.size()];&#xD;
    	this.netLoadArrayWeekend_kW = new double[listNetLoadArrayWeekend_kW.size()];&#xD;
    	for (int i = 0; i &lt; listNetLoadArrayWeekday_kW.size(); i++) {&#xD;
    		this.netLoadArrayWeekday_kW[i] = listNetLoadArrayWeekday_kW.get(i);&#xD;
    	}&#xD;
    	for (int i = 0; i &lt; listNetLoadArrayWeekend_kW.size(); i++) {&#xD;
    		this.netLoadArrayWeekend_kW[i] = listNetLoadArrayWeekend_kW.get(i);&#xD;
    	}&#xD;
    	 &#xD;
    	 &#xD;
    	// Sort all arrays&#xD;
    	Arrays.sort(netLoadArrayAnnual_kW);&#xD;
&#xD;
    	Arrays.sort(netLoadArraySummerweek_kW);&#xD;
    	Arrays.sort(netLoadArrayWinterweek_kW);&#xD;
    	Arrays.sort(netLoadArrayDaytime_kW);&#xD;
    	Arrays.sort(netLoadArrayNighttime_kW);&#xD;
    	Arrays.sort(netLoadArrayWeekday_kW);&#xD;
    	Arrays.sort(netLoadArrayWeekend_kW);&#xD;
&#xD;
    	//int arraySize;&#xD;
    	// Year&#xD;
    	//   	arraySize = netLoadArrayAnnual_kW.length;&#xD;
    	//ArrayUtils.reverse(netLoadArrayAnnual_kW);&#xD;
    	ds_loadDurationCurveTotal_kW = new DataSet(roundToInt(arraySize));&#xD;
    	for(int i=0; i&lt; arraySize; i++) {&#xD;
    		loadDuractionCurveTotal_kW[i]=netLoadArrayAnnual_kW[arraySize-i-1];&#xD;
    		ds_loadDurationCurveTotal_kW.add(i*energyModel.p_timeStep_h, loadDuractionCurveTotal_kW[i] );    		&#xD;
    	}&#xD;
    	&#xD;
    	// Week&#xD;
    	arraySize = netLoadArraySummerweek_kW.length;&#xD;
    	ds_loadDurationCurveSummer_kW = new DataSet(arraySize);&#xD;
    	ds_loadDurationCurveWinter_kW = new DataSet(arraySize);&#xD;
    	for(int i=0; i&lt; arraySize; i++) {&#xD;
    		ds_loadDurationCurveSummer_kW.add(i*energyModel.p_timeStep_h, -netLoadArraySummerweek_kW[i]);&#xD;
    		ds_loadDurationCurveWinter_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWinterweek_kW[i]);&#xD;
    	}&#xD;
    	    	// Day / Night&#xD;
    	arraySize = netLoadArrayDaytime_kW.length;&#xD;
    	ds_loadDurationCurveDaytime_kW = new DataSet(arraySize);&#xD;
    	ds_loadDurationCurveNighttime_kW = new DataSet(arraySize);&#xD;
    	for(int i=0; i&lt; arraySize; i++) {&#xD;
    		ds_loadDurationCurveDaytime_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayDaytime_kW[i]);&#xD;
    		ds_loadDurationCurveNighttime_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayNighttime_kW[i]);&#xD;
    	}&#xD;
    	// Weekday&#xD;
    	arraySize = netLoadArrayWeekday_kW.length;&#xD;
    	ds_loadDurationCurveWeekday_kW = new DataSet(arraySize);&#xD;
    	for(int i=0; i&lt; arraySize; i++) {&#xD;
    		ds_loadDurationCurveWeekday_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekday_kW[i]);&#xD;
    	}&#xD;
    	// Weekend&#xD;
    	arraySize = netLoadArrayWeekend_kW.length;&#xD;
    	ds_loadDurationCurveWeekend_kW = new DataSet(arraySize);&#xD;
    	for(int i=0; i&lt; arraySize; i++) {&#xD;
    		ds_loadDurationCurveWeekend_kW.add(i*energyModel.p_timeStep_h, -netLoadArrayWeekend_kW[i]);&#xD;
    	}&#xD;
    }&#xD;
&#xD;
    &#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1737633433233</Id>
				<Name>J_EADieselTractor</Name>
				<Folder>1752677832758</Folder>
				<Text>import java.util.*;&#xD;
&#xD;
public class J_EADieselTractor extends J_EAProfile implements Serializable {&#xD;
    final static double DIESEL_ENERGY_DENSITY_KWH_PER_L = 9.7;&#xD;
    &#xD;
    final double[] dieselConsumptionPerWeek_L;&#xD;
    final double workDayStart_h = 6;&#xD;
    final double workDayEnd_h = 17;&#xD;
 &#xD;
    /**&#xD;
     * @param parentAgent&#xD;
     * @param yearlyDieselConsumption_l diesel consumption of a single tractor for a whole year&#xD;
     * @param dieselConsumptionPerWeek profile of a year of diesel consumption. &#xD;
     *  Usually expressed in L per ha per week for a specific crop or mix of crops. &#xD;
     *  For our purpose the unit doesn't matter.&#xD;
     * @param timeStep_h&#xD;
     */&#xD;
    public J_EADieselTractor(Agent parentAgent, double yearlyDieselConsumption_L, double[] dieselConsumptionPerWeek, double timeStep_h) {&#xD;
        if (parentAgent == null) {&#xD;
            throw new RuntimeException("Diesel tractor missing parent agent");&#xD;
        }&#xD;
        &#xD;
        if (yearlyDieselConsumption_L &lt;= 100.0) {&#xD;
            throw new RuntimeException(&#xD;
                String.format("Diesel tractor fuel usage conspicuously low: %d L", yearlyDieselConsumption_L)&#xD;
            );&#xD;
        }&#xD;
        &#xD;
        if (dieselConsumptionPerWeek == null) {&#xD;
            throw new RuntimeException("Tractor diesel consumption profile is null");&#xD;
        }&#xD;
        &#xD;
        if (dieselConsumptionPerWeek.length != 52) {&#xD;
            throw new RuntimeException(&#xD;
                String.format("Tractor diesel consumption profile has %d weeks instead of 52", dieselConsumptionPerWeek.length)&#xD;
            );&#xD;
        }&#xD;
        &#xD;
        if (timeStep_h &lt;= 0.0) {&#xD;
            throw new RuntimeException("Tractor timestep is off");&#xD;
        }&#xD;
        &#xD;
        this.parentAgent = parentAgent;&#xD;
        this.dieselConsumptionPerWeek_L = calculateDieselConsumptionPerWeek_L(yearlyDieselConsumption_L, dieselConsumptionPerWeek);&#xD;
        this.timestep_h = timeStep_h;&#xD;
        &#xD;
        this.activeConsumptionEnergyCarriers.add(OL_EnergyCarriers.DIESEL);&#xD;
        registerEnergyAsset();&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void f_updateAllFlows(double t_h) {&#xD;
         operate(t_h);&#xD;
         if (parentAgent instanceof GridConnection) {        &#xD;
            ((GridConnection)parentAgent).f_addFlows(flowsMap, this.energyUse_kW, this);&#xD;
        }&#xD;
        this.lastFlowsMap.cloneMap(this.flowsMap);&#xD;
        this.lastEnergyUse_kW = this.energyUse_kW;&#xD;
        this.clear();&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public void operate(double t_h) {&#xD;
        if (!shouldWork(t_h)) {&#xD;
            this.flowsMap.clear();&#xD;
            return;&#xD;
        }&#xD;
        &#xD;
        double currentPower_kW = currentPower_kW(t_h);    &#xD;
        &#xD;
        this.flowsMap.put(OL_EnergyCarriers.DIESEL, currentPower_kW);&#xD;
        this.energyUse_kW = currentPower_kW;&#xD;
        this.energyUsed_kWh += currentPower_kW * timestep_h;    &#xD;
    }&#xD;
    &#xD;
    private static double[] calculateDieselConsumptionPerWeek_L(double yearlyDieselConsumption_l, double[] weekProfile) {&#xD;
        var profileSum = Arrays.stream(weekProfile).sum();&#xD;
        &#xD;
        return Arrays.stream(weekProfile)&#xD;
                .map(weekValue -&gt; yearlyDieselConsumption_l * weekValue / profileSum)&#xD;
                .toArray();&#xD;
    }&#xD;
    &#xD;
    private boolean shouldWork(double currentStep_h) {&#xD;
        return isWorkTime(currentStep_h) &amp;&amp; isWorkDay();&#xD;
    }&#xD;
    &#xD;
    private boolean isWorkTime(double currentStep_h) {&#xD;
        double timeOfDay = currentStep_h % 24;&#xD;
        &#xD;
        return timeOfDay &gt;= workDayStart_h &amp;&amp; timeOfDay &lt; workDayEnd_h;&#xD;
    }&#xD;
    &#xD;
    private boolean isWorkDay() {&#xD;
        return ((GridConnection)parentAgent).energyModel.b_isWeekday;&#xD;
    }&#xD;
    &#xD;
    private double workHoursPerWeek() {&#xD;
        return 5 * (workDayEnd_h - workDayStart_h);&#xD;
    }&#xD;
    &#xD;
    private int workTimeStepsPerWeek() {&#xD;
        return roundToInt(workHoursPerWeek() / this.timestep_h);&#xD;
    }&#xD;
    &#xD;
    private double currentPower_kW(double currentStep_h) {&#xD;
        int week = (int) Math.round(currentStep_h / (7 * 24));&#xD;
        if(week == 52) {&#xD;
        	week = 51;&#xD;
        }&#xD;
        double thisWeekDieselConsumption_L = this.dieselConsumptionPerWeek_L[week];&#xD;
        double thisWeekDieselConsumption_kWh = thisWeekDieselConsumption_L * DIESEL_ENERGY_DENSITY_KWH_PER_L;&#xD;
        double power_kW = thisWeekDieselConsumption_kWh / workHoursPerWeek();&#xD;
        return power_kW;&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
     * It needs to be changed when this class gets changed&#xD;
     */ &#xD;
    private static final long serialVersionUID = 1L;&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1740048926477</Id>
				<Name>ZeroAccumulator</Name>
				<Folder>1752679379816</Folder>
				<Text>/**&#xD;
 * ZeroAccumulator&#xD;
 */	&#xD;
&#xD;
import zeroPackage.ZeroMath;&#xD;
import java.lang.Math;&#xD;
import java.util.Arrays;&#xD;
import java.lang.RuntimeException;&#xD;
&#xD;
public class ZeroAccumulator {&#xD;
    public boolean hasTimeSeries = false;&#xD;
    private double[] timeSeries;&#xD;
    private double duration_h;&#xD;
    private double signalResolution_h = 0.25;&#xD;
    private double timeStep_h = 0.25;&#xD;
    private double sampleWeight_fr = timeStep_h / signalResolution_h;&#xD;
    private int arraySize;&#xD;
    &#xD;
    private double totalEnergy_kWh = 0;&#xD;
    private double totalPositiveEnergy_kWh = 0;&#xD;
    private double totalNegativeEnergy_kWh = 0;&#xD;
    private double maxPower_kW = 0;&#xD;
    private double minPower_kW = 0;&#xD;
&#xD;
    private int numStepsAdded = 0;&#xD;
    private int numStepsAddedThisEntry = 0; // Used when signal resolution is different from the timestep&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public ZeroAccumulator() {&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * Constructor initializing the fields&#xD;
     */&#xD;
    public ZeroAccumulator(boolean hasTimeSeries, double signalResolution_h, double duration_h) {&#xD;
        if (signalResolution_h &lt; this.timeStep_h) {&#xD;
        	throw new RuntimeException("Impossible to construct a ZeroAccumulator with Signal Resolution: " + signalResolution_h + " h, as it is shorter than the timestep.");&#xD;
        }&#xD;
    	this.hasTimeSeries = hasTimeSeries;&#xD;
        this.signalResolution_h = signalResolution_h;&#xD;
        this.sampleWeight_fr = timeStep_h / signalResolution_h;&#xD;
        this.duration_h = duration_h;&#xD;
        this.arraySize = (int) Math.round(duration_h / signalResolution_h);&#xD;
        if (hasTimeSeries) { // Allocate memory for timeSeries, only when timeSeries is used.&#xD;
            timeSeries = new double[(int) Math.round(duration_h / signalResolution_h)];&#xD;
        }&#xD;
    }&#xD;
&#xD;
    public ZeroAccumulator getClone() {&#xD;
    	ZeroAccumulator zeroAccumulator = new ZeroAccumulator(this.hasTimeSeries, this.signalResolution_h, this.duration_h);&#xD;
    	zeroAccumulator.sampleWeight_fr = this.sampleWeight_fr;&#xD;
    	if (hasTimeSeries) { &#xD;
    		zeroAccumulator.timeSeries = this.timeSeries.clone();&#xD;
    		zeroAccumulator.maxPower_kW = Arrays.stream(this.timeSeries).max().getAsDouble();&#xD;
    		zeroAccumulator.minPower_kW = Arrays.stream(this.timeSeries).min().getAsDouble();&#xD;
    	} else {&#xD;
    		zeroAccumulator.totalEnergy_kWh = this.totalEnergy_kWh;&#xD;
    		zeroAccumulator.totalNegativeEnergy_kWh = this.totalNegativeEnergy_kWh;&#xD;
    		zeroAccumulator.totalPositiveEnergy_kWh = this.totalPositiveEnergy_kWh;&#xD;
    		zeroAccumulator.maxPower_kW = this.maxPower_kW;&#xD;
    		zeroAccumulator.minPower_kW = this.minPower_kW;&#xD;
    	}&#xD;
		zeroAccumulator.numStepsAdded = this.numStepsAdded;&#xD;
		zeroAccumulator.numStepsAddedThisEntry = this.numStepsAddedThisEntry;&#xD;
    	return zeroAccumulator;&#xD;
    }&#xD;
    &#xD;
    public void setTimeStep_h(double timeStep_h) {&#xD;
        this.timeStep_h = timeStep_h;&#xD;
        sampleWeight_fr = timeStep_h / signalResolution_h;&#xD;
    }&#xD;
&#xD;
    public void reset() {&#xD;
    	totalEnergy_kWh = 0;&#xD;
    	totalPositiveEnergy_kWh = 0;&#xD;
    	totalNegativeEnergy_kWh = 0;&#xD;
        numStepsAdded = 0;&#xD;
        maxPower_kW = 0;&#xD;
        minPower_kW = 0;&#xD;
        if (hasTimeSeries) { // Allocate memory for timeSeries, only when timeSeries is used.&#xD;
            timeSeries = new double[(int) Math.round(duration_h / signalResolution_h)];&#xD;
        }&#xD;
    }&#xD;
&#xD;
&#xD;
    &#xD;
    public void addStep(double power_kW) {&#xD;
        if (hasTimeSeries) {&#xD;
            // averages multiple timesteps when timeSeries has longer resolution than timestep.        	&#xD;
            this.timeSeries[this.numStepsAdded] += power_kW * this.sampleWeight_fr;&#xD;
        } else {&#xD;
        	totalEnergy_kWh += power_kW  * this.timeStep_h;&#xD;
        	totalPositiveEnergy_kWh += Math.max(0.0, power_kW) * this.timeStep_h;&#xD;
        	totalNegativeEnergy_kWh += Math.min(0.0, power_kW) * this.timeStep_h;&#xD;
        }&#xD;
        if (power_kW &gt; maxPower_kW) {&#xD;
        	maxPower_kW = power_kW;&#xD;
        }&#xD;
        if (power_kW &lt; minPower_kW) {&#xD;
        	minPower_kW = power_kW;&#xD;
        }&#xD;
        &#xD;
        this.numStepsAddedThisEntry ++;&#xD;
        if (this.numStepsAddedThisEntry == roundToInt(this.signalResolution_h / this.timeStep_h)) {&#xD;
        	this.numStepsAddedThisEntry = 0;&#xD;
        	this.numStepsAdded++;&#xD;
        }&#xD;
    }&#xD;
&#xD;
    public double getIntegral_kWh() { // For getting total energy when addSteps was called with power as value&#xD;
        if (this.hasTimeSeries) {&#xD;
        	this.totalEnergy_kWh = ZeroMath.arraySum(this.timeSeries) * this.signalResolution_h;&#xD;
        }&#xD;
    	return this.totalEnergy_kWh;&#xD;
    }&#xD;
    &#xD;
    public double getIntegralPos_kWh() { // For getting total energy when addSteps was called with power as value&#xD;
        if (this.hasTimeSeries) {&#xD;
        	this.totalPositiveEnergy_kWh = ZeroMath.arraySumPos(this.timeSeries) * this.signalResolution_h;&#xD;
        }&#xD;
        return this.totalPositiveEnergy_kWh;&#xD;
    }&#xD;
    &#xD;
&#xD;
    public double getIntegralNeg_kWh() { // For getting total energy when addSteps was called with power as value&#xD;
        if (this.hasTimeSeries) {&#xD;
        	this.totalNegativeEnergy_kWh = ZeroMath.arraySumNeg(this.timeSeries) * this.signalResolution_h;&#xD;
        }&#xD;
        return this.totalNegativeEnergy_kWh;&#xD;
    }&#xD;
    &#xD;
    public double getIntegral_MWh() { // For getting total energy when addSteps was called with power as value&#xD;
    	return this.getIntegral_kWh()/1000;&#xD;
    }&#xD;
    &#xD;
    public double getIntegralPos_MWh() { // For getting total energy when addSteps was called with power as value&#xD;
    	return this.getIntegralPos_kWh()/1000;&#xD;
    }&#xD;
&#xD;
    public double getIntegralNeg_MWh() { // For getting total energy when addSteps was called with power as value&#xD;
    	return this.getIntegralNeg_kWh()/1000;&#xD;
    }&#xD;
    &#xD;
    &#xD;
    public double[] getTimeSeries_kW() {&#xD;
        if (!hasTimeSeries) { // Fill timeseries with constant value&#xD;
            double[] timeSeriesTemp = new double[arraySize];&#xD;
            double avgValue = this.totalEnergy_kWh / this.duration_h;&#xD;
            Arrays.fill(timeSeriesTemp, avgValue);&#xD;
            return timeSeriesTemp;&#xD;
        } else {&#xD;
            return timeSeries;&#xD;
        }&#xD;
    }&#xD;
&#xD;
    /* What does this do?&#xD;
    public double[] getTimeSeriesIntegral_kWh() {&#xD;
        if (!hasTimeSeries) { // Fill timeseries with constant value&#xD;
            double[] timeSeriesTemp = new double[arraySize];&#xD;
            double avgValue = this.totalEnergy_kWh / arraySize;&#xD;
            Arrays.fill(timeSeriesTemp, avgValue);&#xD;
            return timeSeriesTemp;&#xD;
        } else {&#xD;
            return ZeroMath.arrayMultiply(timeSeries.clone(), this.signalResolution_h);&#xD;
        }&#xD;
    } */&#xD;
&#xD;
    public Double getY(int i) {&#xD;
        if (!hasTimeSeries) {&#xD;
            return null;&#xD;
        } else {&#xD;
            return timeSeries[i];&#xD;
        }&#xD;
    }&#xD;
&#xD;
    public double getMaxPower_kW() {&#xD;
        return maxPower_kW;&#xD;
    }&#xD;
&#xD;
    public double getMinPower_kW() {&#xD;
        return minPower_kW;&#xD;
    }&#xD;
    &#xD;
    public double getSignalResolution_h() {&#xD;
    	return this.signalResolution_h;&#xD;
    }&#xD;
&#xD;
    public ZeroAccumulator add(ZeroAccumulator acc) {&#xD;
        if ((this.hasTimeSeries &amp;&amp; acc.hasTimeSeries) &amp;&amp; (this.duration_h == acc.duration_h)&#xD;
                &amp;&amp; (this.signalResolution_h == acc.signalResolution_h)) {&#xD;
            for (int i = 0; i &lt; timeSeries.length; i++) {&#xD;
                this.timeSeries[i] += acc.timeSeries[i];&#xD;
            }&#xD;
            this.maxPower_kW = Arrays.stream(this.timeSeries).max().getAsDouble();&#xD;
            this.minPower_kW = Arrays.stream(this.timeSeries).min().getAsDouble();&#xD;
            &#xD;
        } else if ((!this.hasTimeSeries &amp;&amp; !acc.hasTimeSeries) &amp;&amp; (this.duration_h == acc.duration_h)&#xD;
                &amp;&amp; (this.signalResolution_h == acc.signalResolution_h)) {&#xD;
            this.totalEnergy_kWh += acc.totalEnergy_kWh;&#xD;
            // These values below we can not determine since we have no timeSeries (but you can still call getSumPos()...)&#xD;
            this.totalPositiveEnergy_kWh = 0;&#xD;
            this.totalNegativeEnergy_kWh = 0;&#xD;
            this.maxPower_kW = 0;&#xD;
            this.minPower_kW = 0;&#xD;
        }    &#xD;
        else {&#xD;
            throw new RuntimeException("Impossible to add these incompatible accumulators");&#xD;
        }&#xD;
        return this;&#xD;
    }&#xD;
&#xD;
    public ZeroAccumulator subtract(ZeroAccumulator acc) {&#xD;
        if ((this.hasTimeSeries &amp;&amp; acc.hasTimeSeries) &amp;&amp; (this.duration_h == acc.duration_h)&#xD;
                &amp;&amp; (this.signalResolution_h == acc.signalResolution_h)) {&#xD;
            for (int i = 0; i &lt; timeSeries.length; i++) {&#xD;
                this.timeSeries[i] -= acc.timeSeries[i];&#xD;
            }&#xD;
            this.maxPower_kW = Arrays.stream(this.timeSeries).max().getAsDouble();&#xD;
            this.minPower_kW = Arrays.stream(this.timeSeries).min().getAsDouble();&#xD;
        } else if ((!this.hasTimeSeries &amp;&amp; !acc.hasTimeSeries) &amp;&amp; (this.duration_h == acc.duration_h)&#xD;
                &amp;&amp; (this.signalResolution_h == acc.signalResolution_h)) {&#xD;
        	this.totalEnergy_kWh -= acc.totalEnergy_kWh;&#xD;
            // These values below we can not determine since we have no timeSeries (but you can still call getSumPos()...)&#xD;
            this.totalPositiveEnergy_kWh = 0;&#xD;
            this.totalNegativeEnergy_kWh = 0;&#xD;
            this.maxPower_kW = 0;&#xD;
            this.minPower_kW = 0;&#xD;
        } else {&#xD;
            throw new RuntimeException("Impossible to subtract these incompatible accumulators");&#xD;
        }&#xD;
        return this;&#xD;
    }&#xD;
    &#xD;
    public DataSet getDataSet(double startTime_h) {&#xD;
    	if (this.hasTimeSeries) {&#xD;
			DataSet ds = new DataSet(timeSeries.length);&#xD;
			for (int i = 0; i &lt; timeSeries.length; i++) {&#xD;
				ds.add(startTime_h + i * this.signalResolution_h, this.timeSeries[i] );&#xD;
			}&#xD;
			return ds;&#xD;
    	} else {&#xD;
    		throw new RuntimeException("Impossible to create DataSet from accumulator without timeSeries.");    		&#xD;
    	}&#xD;
    }&#xD;
	&#xD;
    @Override&#xD;
    public String toString() {&#xD;
        StringBuilder sb = new StringBuilder();&#xD;
&#xD;
        sb.append("ZeroAccumulator, totalEnergy_kWh: ");&#xD;
        sb.append(this.totalEnergy_kWh);&#xD;
&#xD;
        return sb.toString();&#xD;
    }&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1740048926478</Id>
				<Name>ZeroTimeSeries</Name>
				<Folder>1752679379816</Folder>
				<Text>/**&#xD;
 * ZeroTimeSeries&#xD;
 */	&#xD;
&#xD;
import zeroPackage.ZeroMath;&#xD;
import java.lang.Math;&#xD;
import java.util.Arrays;&#xD;
import java.lang.RuntimeException;&#xD;
public class ZeroTimeSeries implements Serializable {&#xD;
&#xD;
	    private double[] timeSeries;&#xD;
	    private double duration_h;&#xD;
	    private double signalResolution_h = 0.25;&#xD;
	    private double timeStep_h = 0.25;&#xD;
	    private double sampleWeight = timeStep_h / signalResolution_h;&#xD;
	    &#xD;
	    private double max = 0;&#xD;
	    private double min = 0;&#xD;
&#xD;
	    private int numStepsAdded = 0;&#xD;
	    private int numStepsAddedThisEntry = 0; // Used when signal resolution is different from the timestep&#xD;
	    /**&#xD;
	     * Default constructor&#xD;
	     */&#xD;
	    public ZeroTimeSeries() {&#xD;
	    }&#xD;
&#xD;
	    /**&#xD;
	     * Constructor initializing the fields&#xD;
	     */&#xD;
	    public ZeroTimeSeries(double signalResolution_h, double duration_h) {&#xD;
	        if (signalResolution_h &lt; this.timeStep_h) {&#xD;
	        	throw new RuntimeException("Impossible to construct a ZeroAccumulator with Signal Resolution: " + signalResolution_h + " h, as it is shorter than the timestep.");&#xD;
	        }&#xD;
&#xD;
	        this.signalResolution_h = signalResolution_h;&#xD;
	        this.sampleWeight = timeStep_h / signalResolution_h;&#xD;
	        this.duration_h = duration_h;&#xD;
	        //this.arraySize = (int) Math.round(duration_h / signalResolution_h);&#xD;
            timeSeries = new double[(int) Math.round(duration_h / signalResolution_h)];&#xD;
	    }&#xD;
&#xD;
	    public void setTimeStep_h(double timeStep_h) {&#xD;
	        this.timeStep_h = timeStep_h;&#xD;
	        sampleWeight = timeStep_h / signalResolution_h;&#xD;
	    }&#xD;
&#xD;
	    public void reset() {&#xD;
&#xD;
	        numStepsAdded = 0;&#xD;
	        max = 0;&#xD;
	        min = 0;&#xD;
	        timeSeries = new double[(int) Math.round(duration_h / signalResolution_h)];&#xD;
	        &#xD;
	    }&#xD;
	    &#xD;
	    public ZeroTimeSeries getClone() {&#xD;
	    	ZeroTimeSeries ts = new ZeroTimeSeries(this.signalResolution_h, this.duration_h);&#xD;
	    	ts.timeStep_h = this.timeStep_h;&#xD;
    		ts.timeSeries = this.timeSeries.clone();&#xD;
    		ts.max = this.max;&#xD;
    		ts.min = this.min;&#xD;
    		ts.numStepsAdded = this.numStepsAdded;&#xD;
			ts.numStepsAddedThisEntry = this.numStepsAddedThisEntry;&#xD;
	    	return ts;&#xD;
	    }&#xD;
	    &#xD;
    &#xD;
	    public void addStep(double value) {&#xD;
            this.timeSeries[this.numStepsAdded] += value * sampleWeight;&#xD;
	        &#xD;
	        if (value &gt; max) {&#xD;
	            max = value;&#xD;
	        }&#xD;
	        if (value &lt; min) {&#xD;
	            min = value;&#xD;
	        }&#xD;
	        &#xD;
	        this.numStepsAddedThisEntry ++;&#xD;
	        if (this.numStepsAddedThisEntry == roundToInt(this.signalResolution_h / this.timeStep_h)) {&#xD;
	        	this.numStepsAddedThisEntry = 0;&#xD;
	        	this.numStepsAdded++;&#xD;
	        }&#xD;
	    }&#xD;
&#xD;
	    public double getSum() {&#xD;
            return ZeroMath.arraySum(timeSeries);&#xD;
	        //return sum;&#xD;
	    }&#xD;
&#xD;
	    public double getSumPos() {&#xD;
            return ZeroMath.arraySumPos(timeSeries);&#xD;
	        //return posSum;&#xD;
	    }&#xD;
	    &#xD;
	    public double getSumNeg() {&#xD;
            return ZeroMath.arraySumNeg(timeSeries);&#xD;
	        //return negSum;&#xD;
	    }&#xD;
&#xD;
	    public double[] getTimeSeries() {&#xD;
            return this.timeSeries;&#xD;
	    }&#xD;
&#xD;
	    public void setTimeSeries(double[] timeSeries) {&#xD;
            this.timeSeries = timeSeries;&#xD;
	    }&#xD;
	    &#xD;
	    public Double getY(int i) {&#xD;
            return timeSeries[i];&#xD;
	    }&#xD;
&#xD;
	    public double getMax() {&#xD;
	        return max;&#xD;
	    }&#xD;
&#xD;
	    public double getMin() {&#xD;
	        return min;&#xD;
	    }&#xD;
	    &#xD;
	    public double getSignalResolution_h() {&#xD;
	    	return this.signalResolution_h;&#xD;
	    }&#xD;
&#xD;
	    public ZeroTimeSeries add(ZeroTimeSeries zts) {&#xD;
	        if ((this.duration_h == zts.duration_h) &amp;&amp; (this.signalResolution_h == zts.signalResolution_h)) {&#xD;
	            for (int i = 0; i &lt; this.timeSeries.length; i++) {&#xD;
	                this.timeSeries[i] += zts.timeSeries[i];&#xD;
	            }&#xD;
	        } else {&#xD;
	            throw new RuntimeException("Impossible to add these incompatible timeSeries");&#xD;
	        }&#xD;
	        return this;&#xD;
	    }&#xD;
&#xD;
	    public ZeroTimeSeries subtract(ZeroTimeSeries zts) {&#xD;
	        if ((this.duration_h == zts.duration_h) &amp;&amp; (this.signalResolution_h == zts.signalResolution_h)) {&#xD;
	            for (int i = 0; i &lt; this.timeSeries.length; i++) {&#xD;
	                this.timeSeries[i] -= zts.timeSeries[i];&#xD;
	            }&#xD;
	        } else {&#xD;
	            throw new RuntimeException("Impossible to subtract these incompatible timeSeries");&#xD;
	        }&#xD;
	        return this;&#xD;
	    }&#xD;
	    &#xD;
	    public DataSet getDataSet(double startTime_h) {&#xD;
			DataSet ds = new DataSet(timeSeries.length);&#xD;
			for (int i = 0; i &lt; timeSeries.length; i++) {&#xD;
				ds.add(startTime_h + i * this.signalResolution_h, this.timeSeries[i] );&#xD;
			}&#xD;
			&#xD;
			return ds;&#xD;
	    }&#xD;
	    &#xD;
	    public int getLength() {&#xD;
	    	return timeSeries.length;&#xD;
	    }&#xD;
		&#xD;
	    @Override&#xD;
	    public String toString() {&#xD;
	        StringBuilder sb = new StringBuilder();&#xD;
&#xD;
	        sb.append("ZeroTimeSeries, current number of steps in time-series: ");&#xD;
	        sb.append(this.numStepsAdded);&#xD;
&#xD;
	        return sb.toString();&#xD;
	    }&#xD;
&#xD;
		/**&#xD;
		 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
		 * It needs to be changed when this class gets changed&#xD;
		 */ &#xD;
		private static final long serialVersionUID = 1L;&#xD;
&#xD;
	}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1741163937278</Id>
				<Name>I_EnergyData</Name>
				<Text>public interface I_EnergyData{&#xD;
	J_RapidRunData getRapidRunData();&#xD;
    J_LiveData getLiveData();&#xD;
    J_RapidRunData getPreviousRapidRunData();&#xD;
    OL_ResultScope getScope();&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1741180550081</Id>
				<Name>J_RapidRunData</Name>
				<Folder>1752680962144</Folder>
				<Text>import java.util.EnumSet;&#xD;
import zeroPackage.ZeroMath;&#xD;
/**&#xD;
 * J_RapidRunData&#xD;
 */	&#xD;
public class J_RapidRunData {&#xD;
	&#xD;
	public Agent parentAgent;&#xD;
	private double timeStep_h;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeEnergyCarriers;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeConsumptionEnergyCarriers;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeProductionEnergyCarriers;&#xD;
	&#xD;
	public J_AssetsMetaData assetsMetaData;&#xD;
	public J_ConnectionMetaData connectionMetaData;&#xD;
	&#xD;
	////Full simulation&#xD;
	public J_AccumulatorMap am_totalBalanceAccumulators_kW = new J_AccumulatorMap();&#xD;
	&#xD;
    public ZeroAccumulator acc_totalEnergyCurtailed_kW;&#xD;
    public ZeroAccumulator acc_totalPrimaryEnergyProductionHeatpumps_kW;&#xD;
    &#xD;
    public J_AccumulatorMap am_dailyAverageConsumptionAccumulators_kW = new J_AccumulatorMap();&#xD;
    public J_AccumulatorMap am_dailyAverageProductionAccumulators_kW = new J_AccumulatorMap();&#xD;
    &#xD;
	public ZeroAccumulator acc_dailyAverageFinalEnergyConsumption_kW;&#xD;
	public ZeroAccumulator acc_dailyAverageEnergyProduction_kW;&#xD;
	&#xD;
	public ZeroAccumulator acc_dailyAverageBaseloadElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageHeatPumpElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageElectricVehicleConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageBatteriesConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageElectricCookingConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageElectrolyserElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageDistrictHeatingConsumption_kW;&#xD;
    &#xD;
    public ZeroAccumulator acc_dailyAveragePVProduction_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageWindProduction_kW;&#xD;
    public ZeroAccumulator acc_dailyAveragePTProduction_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageV2GProduction_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageBatteriesProduction_kW;&#xD;
    public ZeroAccumulator acc_dailyAverageCHPElectricityProduction_kW;&#xD;
    public ZeroTimeSeries ts_dailyAverageBatteriesStoredEnergy_MWh;&#xD;
    public ZeroTimeSeries ts_dailyAverageBatteriesSOC_fr;&#xD;
    &#xD;
    ////Summer week&#xD;
    public J_AccumulatorMap am_summerWeekBalanceAccumulators_kW = new J_AccumulatorMap();&#xD;
&#xD;
    public ZeroAccumulator acc_summerWeekDeliveryCapacity_kW;&#xD;
    public ZeroAccumulator acc_summerWeekFeedinCapacity_kW;&#xD;
    &#xD;
    public ZeroAccumulator acc_summerWeekFinalEnergyConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekEnergyCurtailed_kW;&#xD;
    public ZeroAccumulator acc_summerWeekEnergyProduction_kW;&#xD;
&#xD;
    public J_AccumulatorMap am_summerWeekConsumptionAccumulators_kW = new J_AccumulatorMap();&#xD;
    public J_AccumulatorMap am_summerWeekProductionAccumulators_kW = new J_AccumulatorMap();&#xD;
&#xD;
    public ZeroAccumulator acc_summerWeekBaseloadElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekHeatPumpElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekElectricVehicleConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekBatteriesConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekElectricCookingConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekElectrolyserElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekDistrictHeatingConsumption_kW;&#xD;
    public ZeroAccumulator acc_summerWeekPVProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekWindProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekPTProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekV2GProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekBatteriesProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekCHPElectricityProduction_kW;&#xD;
    public ZeroAccumulator acc_summerWeekPrimaryEnergyProductionHeatpumps_kW;&#xD;
    public ZeroTimeSeries ts_summerWeekBatteriesStoredEnergy_MWh;&#xD;
    public ZeroTimeSeries ts_summerWeekBatteriesSOC_fr;&#xD;
    &#xD;
    ////Winter week&#xD;
    public J_AccumulatorMap am_winterWeekBalanceAccumulators_kW = new J_AccumulatorMap();&#xD;
    &#xD;
    public ZeroAccumulator acc_winterWeekDeliveryCapacity_kW;&#xD;
    public ZeroAccumulator acc_winterWeekFeedinCapacity_kW;&#xD;
    &#xD;
    public ZeroAccumulator acc_winterWeekFinalEnergyConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekEnergyProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekEnergyCurtailed_kW;&#xD;
    &#xD;
    public J_AccumulatorMap am_winterWeekConsumptionAccumulators_kW = new J_AccumulatorMap();&#xD;
    public J_AccumulatorMap am_winterWeekProductionAccumulators_kW = new J_AccumulatorMap();  &#xD;
    &#xD;
    public ZeroAccumulator acc_winterWeekBaseloadElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekHeatPumpElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekElectricVehicleConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekBatteriesConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekElectricCookingConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekElectrolyserElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekDistrictHeatingConsumption_kW;&#xD;
    public ZeroAccumulator acc_winterWeekPVProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekWindProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekPTProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekV2GProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekBatteriesProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekCHPElectricityProduction_kW;&#xD;
    public ZeroAccumulator acc_winterWeekPrimaryEnergyProductionHeatpumps_kW;&#xD;
    public ZeroTimeSeries ts_winterWeekBatteriesStoredEnergy_MWh;&#xD;
    public ZeroTimeSeries ts_winterWeekBatteriesSOC_fr;&#xD;
    &#xD;
    ////Daytime / Nighttime&#xD;
	public J_AccumulatorMap am_daytimeExports_kW = new J_AccumulatorMap();&#xD;
    public J_AccumulatorMap am_daytimeImports_kW = new J_AccumulatorMap();&#xD;
    &#xD;
    public ZeroAccumulator acc_daytimeFinalEnergyConsumption_kW;&#xD;
    public ZeroAccumulator acc_daytimeEnergyProduction_kW;&#xD;
    public ZeroAccumulator acc_daytimeElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_daytimeElectricityProduction_kW;&#xD;
    &#xD;
    public ZeroAccumulator acc_daytimePrimaryEnergyProductionHeatpumps_kW;&#xD;
    &#xD;
    //Weekend/day&#xD;
    public J_AccumulatorMap am_weekendExports_kW = new J_AccumulatorMap();&#xD;
    public J_AccumulatorMap am_weekendImports_kW = new J_AccumulatorMap();&#xD;
    &#xD;
    public ZeroAccumulator acc_weekendElectricityConsumption_kW;&#xD;
    public ZeroAccumulator acc_weekendElectricityProduction_kW;&#xD;
    public ZeroAccumulator acc_weekendFinalEnergyConsumption_kW;&#xD;
    public ZeroAccumulator acc_weekendEnergyProduction_kW;&#xD;
&#xD;
    public ZeroAccumulator acc_weekendPrimaryEnergyProductionHeatpumps_kW;&#xD;
&#xD;
    &#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_RapidRunData(Agent parentAgent) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
    }&#xD;
    &#xD;
    public void initializeAccumulators(double simDuration_h, double timeStep_h, EnumSet&lt;OL_EnergyCarriers&gt; v_activeEnergyCarriers, EnumSet&lt;OL_EnergyCarriers&gt; v_activeConsumptionEnergyCarriers, EnumSet&lt;OL_EnergyCarriers&gt; v_activeProductionEnergyCarriers) {&#xD;
    	this.timeStep_h = timeStep_h;&#xD;
    	this.activeEnergyCarriers = EnumSet.copyOf(v_activeEnergyCarriers);&#xD;
    	this.activeConsumptionEnergyCarriers = EnumSet.copyOf(v_activeConsumptionEnergyCarriers);&#xD;
    	this.activeProductionEnergyCarriers = EnumSet.copyOf(v_activeProductionEnergyCarriers);&#xD;
	    //========== TOTAL ACCUMULATORS ==========//&#xD;
		am_totalBalanceAccumulators_kW.createEmptyAccumulators( this.activeEnergyCarriers, true, 24.0, simDuration_h );&#xD;
	    am_totalBalanceAccumulators_kW.put( OL_EnergyCarriers.ELECTRICITY, new ZeroAccumulator(true, timeStep_h, simDuration_h) );&#xD;
	    am_dailyAverageConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, 24.0, simDuration_h);&#xD;
	    am_dailyAverageProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, 24.0, simDuration_h);&#xD;
	&#xD;
	    acc_dailyAverageEnergyProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageFinalEnergyConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	&#xD;
	    acc_totalEnergyCurtailed_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_totalPrimaryEnergyProductionHeatpumps_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	&#xD;
	    acc_dailyAverageBaseloadElectricityConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageHeatPumpElectricityConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageElectricVehicleConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageBatteriesConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageElectricCookingConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageElectrolyserElectricityConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageDistrictHeatingConsumption_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    &#xD;
	    acc_dailyAveragePVProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageWindProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAveragePTProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageV2GProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageBatteriesProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	    acc_dailyAverageCHPElectricityProduction_kW = new ZeroAccumulator(true, 24.0, simDuration_h);&#xD;
	&#xD;
	    ts_dailyAverageBatteriesStoredEnergy_MWh = new ZeroTimeSeries(24.0, simDuration_h);&#xD;
	    ts_dailyAverageBatteriesSOC_fr = new ZeroTimeSeries(24.0, simDuration_h);&#xD;
	    &#xD;
	    //========== SUMMER WEEK ACCUMULATORS ==========//&#xD;
	    am_summerWeekBalanceAccumulators_kW.createEmptyAccumulators(this.activeEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	    am_summerWeekConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	    am_summerWeekProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_summerWeekEnergyProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekFinalEnergyConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_summerWeekEnergyCurtailed_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekPrimaryEnergyProductionHeatpumps_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_summerWeekFeedinCapacity_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekDeliveryCapacity_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_summerWeekBaseloadElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekHeatPumpElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekElectricVehicleConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekBatteriesConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekElectricCookingConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekElectrolyserElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekDistrictHeatingConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_summerWeekPVProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekWindProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekPTProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekV2GProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekBatteriesProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_summerWeekCHPElectricityProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    ts_summerWeekBatteriesStoredEnergy_MWh = new ZeroTimeSeries(timeStep_h, 168.0);&#xD;
	    ts_summerWeekBatteriesSOC_fr = new ZeroTimeSeries(timeStep_h, 168.0);&#xD;
	    &#xD;
	    //========== WINTER WEEK ACCUMULATORS ==========//&#xD;
	    am_winterWeekBalanceAccumulators_kW.createEmptyAccumulators(this.activeEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	    am_winterWeekConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	    am_winterWeekProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_winterWeekEnergyProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekFinalEnergyConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_winterWeekEnergyCurtailed_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekPrimaryEnergyProductionHeatpumps_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_winterWeekFeedinCapacity_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekDeliveryCapacity_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_winterWeekBaseloadElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekHeatPumpElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekElectricVehicleConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekBatteriesConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekElectricCookingConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekElectrolyserElectricityConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekDistrictHeatingConsumption_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    acc_winterWeekPVProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekWindProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekPTProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekV2GProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekBatteriesProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	    acc_winterWeekCHPElectricityProduction_kW = new ZeroAccumulator(true, timeStep_h, 168.0);&#xD;
	&#xD;
	    ts_winterWeekBatteriesStoredEnergy_MWh = new ZeroTimeSeries(timeStep_h, 168.0);&#xD;
	    ts_winterWeekBatteriesSOC_fr = new ZeroTimeSeries(timeStep_h, 168.0);&#xD;
	    &#xD;
	    //========== DAYTIME ACCUMULATORS ==========//&#xD;
	    am_daytimeImports_kW.createEmptyAccumulators( this.activeConsumptionEnergyCarriers, false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	    am_daytimeExports_kW.createEmptyAccumulators( this.activeProductionEnergyCarriers, false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	&#xD;
	    acc_daytimeEnergyProduction_kW = new ZeroAccumulator(false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	    acc_daytimeFinalEnergyConsumption_kW = new ZeroAccumulator(false, timeStep_h,0.5 * (simDuration_h));&#xD;
	    //acc_daytimeEnergyCurtailed_kW = new ZeroAccumulator(false, timeStep_h, simDuration_h);&#xD;
	    acc_daytimeElectricityProduction_kW = new ZeroAccumulator(false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	    acc_daytimeElectricityConsumption_kW = new ZeroAccumulator(false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	&#xD;
	    acc_daytimePrimaryEnergyProductionHeatpumps_kW = new ZeroAccumulator(false, timeStep_h, 0.5 * (simDuration_h));&#xD;
	    		&#xD;
	    //========== WEEKEND ACCUMULATORS ==========//&#xD;
	    am_weekendImports_kW.createEmptyAccumulators( this.activeConsumptionEnergyCarriers, false, timeStep_h, 2 / 7  * (simDuration_h) + 48);&#xD;
	    am_weekendExports_kW.createEmptyAccumulators( this.activeProductionEnergyCarriers, false, timeStep_h, 2 / 7 * (simDuration_h) + 48);&#xD;
	&#xD;
	    acc_weekendEnergyProduction_kW = new ZeroAccumulator(false, timeStep_h, 2 / 7  * (simDuration_h) + 48);&#xD;
	    acc_weekendFinalEnergyConsumption_kW = new ZeroAccumulator(false, timeStep_h,2 / 7  * (simDuration_h) + 48);&#xD;
	    //acc_weekendEnergyCurtailed_kW = new ZeroAccumulator(false, timeStep_h, simDuration_h);&#xD;
	    acc_weekendElectricityProduction_kW = new ZeroAccumulator(false, timeStep_h, 2 / 7  * (simDuration_h) + 48);&#xD;
	    acc_weekendElectricityConsumption_kW = new ZeroAccumulator(false, timeStep_h, 2 / 7  * (simDuration_h) + 48);&#xD;
	&#xD;
	    acc_weekendPrimaryEnergyProductionHeatpumps_kW = new ZeroAccumulator(false, timeStep_h,  2 / 7 * (simDuration_h) + 48);&#xD;
    }&#xD;
&#xD;
    public void resetAccumulators(double simDuration_h, double timeStep_h, EnumSet&lt;OL_EnergyCarriers&gt; v_activeEnergyCarriers, EnumSet&lt;OL_EnergyCarriers&gt; v_activeConsumptionEnergyCarriers, EnumSet&lt;OL_EnergyCarriers&gt; v_activeProductionEnergyCarriers) {&#xD;
    	this.activeEnergyCarriers = EnumSet.copyOf(v_activeEnergyCarriers);&#xD;
    	this.activeConsumptionEnergyCarriers = EnumSet.copyOf(v_activeConsumptionEnergyCarriers);&#xD;
    	this.activeProductionEnergyCarriers = EnumSet.copyOf(v_activeProductionEnergyCarriers);&#xD;
    	//Total simulation&#xD;
		am_totalBalanceAccumulators_kW.createEmptyAccumulators( this.activeEnergyCarriers, true, 24.0, simDuration_h );&#xD;
    	am_totalBalanceAccumulators_kW.put( OL_EnergyCarriers.ELECTRICITY, new ZeroAccumulator(true, timeStep_h, simDuration_h) );&#xD;
    	am_dailyAverageConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, 24.0, simDuration_h);&#xD;
    	am_dailyAverageProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, 24.0, simDuration_h);&#xD;
&#xD;
    	acc_dailyAverageEnergyProduction_kW.reset();&#xD;
    	acc_dailyAverageFinalEnergyConsumption_kW.reset();&#xD;
&#xD;
    	acc_totalEnergyCurtailed_kW.reset();&#xD;
    	acc_totalPrimaryEnergyProductionHeatpumps_kW.reset();&#xD;
&#xD;
    	acc_dailyAverageBaseloadElectricityConsumption_kW.reset();&#xD;
    	acc_dailyAverageHeatPumpElectricityConsumption_kW.reset();&#xD;
    	acc_dailyAverageElectricVehicleConsumption_kW.reset();&#xD;
    	acc_dailyAverageBatteriesConsumption_kW.reset();&#xD;
    	acc_dailyAverageElectricCookingConsumption_kW.reset();&#xD;
    	acc_dailyAverageElectrolyserElectricityConsumption_kW.reset();&#xD;
    	acc_dailyAverageDistrictHeatingConsumption_kW.reset();&#xD;
    	&#xD;
    	acc_dailyAveragePVProduction_kW.reset();&#xD;
    	acc_dailyAverageWindProduction_kW.reset();&#xD;
    	acc_dailyAveragePTProduction_kW.reset();&#xD;
    	acc_dailyAverageV2GProduction_kW.reset();&#xD;
    	acc_dailyAverageBatteriesProduction_kW.reset();&#xD;
    	acc_dailyAverageCHPElectricityProduction_kW.reset();&#xD;
&#xD;
        ts_dailyAverageBatteriesStoredEnergy_MWh.reset();&#xD;
        ts_dailyAverageBatteriesSOC_fr.reset();&#xD;
        &#xD;
    	//Summerweek&#xD;
    	am_summerWeekBalanceAccumulators_kW.createEmptyAccumulators(this.activeEnergyCarriers, true, timeStep_h, 24*7);&#xD;
    	am_summerWeekConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, timeStep_h, 24*7);&#xD;
    	am_summerWeekProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, timeStep_h, 24*7);&#xD;
&#xD;
    	acc_summerWeekEnergyProduction_kW.reset();&#xD;
    	acc_summerWeekFinalEnergyConsumption_kW.reset();&#xD;
&#xD;
    	acc_summerWeekEnergyCurtailed_kW.reset();&#xD;
    	acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.reset();&#xD;
&#xD;
    	acc_summerWeekFeedinCapacity_kW.reset();&#xD;
    	acc_summerWeekDeliveryCapacity_kW.reset();&#xD;
&#xD;
    	acc_summerWeekBaseloadElectricityConsumption_kW.reset();&#xD;
    	acc_summerWeekHeatPumpElectricityConsumption_kW.reset();&#xD;
    	acc_summerWeekElectricVehicleConsumption_kW.reset();&#xD;
    	acc_summerWeekBatteriesConsumption_kW.reset();&#xD;
    	acc_summerWeekElectricCookingConsumption_kW.reset();&#xD;
    	acc_summerWeekElectrolyserElectricityConsumption_kW.reset();&#xD;
    	acc_summerWeekDistrictHeatingConsumption_kW.reset();&#xD;
&#xD;
    	acc_summerWeekPVProduction_kW.reset();&#xD;
    	acc_summerWeekWindProduction_kW.reset();&#xD;
    	acc_summerWeekPTProduction_kW.reset();&#xD;
    	acc_summerWeekV2GProduction_kW.reset();&#xD;
    	acc_summerWeekBatteriesProduction_kW.reset();&#xD;
    	acc_summerWeekCHPElectricityProduction_kW.reset();&#xD;
&#xD;
	    ts_summerWeekBatteriesStoredEnergy_MWh.reset();&#xD;
	    ts_summerWeekBatteriesSOC_fr.reset();&#xD;
	    &#xD;
    	//Winterweek&#xD;
    	am_winterWeekBalanceAccumulators_kW.createEmptyAccumulators(v_activeEnergyCarriers, true, timeStep_h, 24*7);&#xD;
    	am_winterWeekConsumptionAccumulators_kW.createEmptyAccumulators(this.activeConsumptionEnergyCarriers, true, timeStep_h, 24*7);&#xD;
    	am_winterWeekProductionAccumulators_kW.createEmptyAccumulators(this.activeProductionEnergyCarriers, true, timeStep_h, 24*7);&#xD;
&#xD;
    	acc_winterWeekEnergyProduction_kW.reset();&#xD;
    	acc_winterWeekFinalEnergyConsumption_kW.reset();&#xD;
&#xD;
    	acc_winterWeekEnergyCurtailed_kW.reset();&#xD;
    	acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.reset();&#xD;
&#xD;
    	acc_winterWeekFeedinCapacity_kW.reset();&#xD;
    	acc_winterWeekDeliveryCapacity_kW.reset();&#xD;
&#xD;
    	acc_winterWeekBaseloadElectricityConsumption_kW.reset();&#xD;
    	acc_winterWeekHeatPumpElectricityConsumption_kW.reset();&#xD;
    	acc_winterWeekElectricVehicleConsumption_kW.reset();&#xD;
    	acc_winterWeekBatteriesConsumption_kW.reset();&#xD;
    	acc_winterWeekElectricCookingConsumption_kW.reset();&#xD;
    	acc_winterWeekElectrolyserElectricityConsumption_kW.reset();&#xD;
    	acc_winterWeekDistrictHeatingConsumption_kW.reset();&#xD;
&#xD;
    	acc_winterWeekPVProduction_kW.reset();&#xD;
    	acc_winterWeekWindProduction_kW.reset();&#xD;
    	acc_winterWeekPTProduction_kW.reset();&#xD;
    	acc_winterWeekV2GProduction_kW.reset();&#xD;
    	acc_winterWeekBatteriesProduction_kW.reset();&#xD;
    	acc_winterWeekCHPElectricityProduction_kW.reset();&#xD;
    	&#xD;
	    ts_winterWeekBatteriesStoredEnergy_MWh.reset();&#xD;
	    ts_winterWeekBatteriesSOC_fr.reset();&#xD;
	    &#xD;
    	// Daytime &#xD;
    	am_daytimeImports_kW.createEmptyAccumulators( this.activeConsumptionEnergyCarriers, false, timeStep_h, 0.5 * (simDuration_h));&#xD;
    	am_daytimeExports_kW.createEmptyAccumulators( this.activeProductionEnergyCarriers, false, timeStep_h, 0.5 * (simDuration_h));&#xD;
    	&#xD;
    	acc_daytimeElectricityProduction_kW.reset();&#xD;
    	acc_daytimeElectricityConsumption_kW.reset();&#xD;
    	acc_daytimeEnergyProduction_kW.reset();&#xD;
    	acc_daytimeFinalEnergyConsumption_kW.reset();&#xD;
&#xD;
    	acc_daytimePrimaryEnergyProductionHeatpumps_kW.reset();&#xD;
    	&#xD;
    	// Weekend&#xD;
    	am_weekendImports_kW.createEmptyAccumulators( this.activeConsumptionEnergyCarriers, false, timeStep_h, 2 / 7  * (simDuration_h) + 48);&#xD;
    	am_weekendExports_kW.createEmptyAccumulators( this.activeProductionEnergyCarriers, false, timeStep_h, 2 / 7 * (simDuration_h) + 48);&#xD;
&#xD;
    	acc_weekendElectricityProduction_kW.reset();&#xD;
    	acc_weekendElectricityConsumption_kW.reset();&#xD;
    	acc_weekendEnergyProduction_kW.reset();&#xD;
    	acc_weekendFinalEnergyConsumption_kW.reset();&#xD;
    	&#xD;
    	acc_weekendPrimaryEnergyProductionHeatpumps_kW.reset();&#xD;
    }&#xD;
    &#xD;
    public J_RapidRunData getClone() {&#xD;
    	J_RapidRunData clone = new J_RapidRunData(this.parentAgent);&#xD;
&#xD;
    	clone.activeEnergyCarriers=this.activeEnergyCarriers.clone();&#xD;
    	clone.activeConsumptionEnergyCarriers=this.activeConsumptionEnergyCarriers.clone();&#xD;
    	clone.activeProductionEnergyCarriers=this.activeProductionEnergyCarriers.clone();&#xD;
    	////Full simulation&#xD;
    	clone.am_totalBalanceAccumulators_kW=this.am_totalBalanceAccumulators_kW.getClone();&#xD;
    	clone.acc_totalEnergyCurtailed_kW=this.acc_totalEnergyCurtailed_kW.getClone();&#xD;
        clone.acc_totalPrimaryEnergyProductionHeatpumps_kW=this.acc_totalPrimaryEnergyProductionHeatpumps_kW.getClone();&#xD;
        clone.am_dailyAverageConsumptionAccumulators_kW=this.am_dailyAverageConsumptionAccumulators_kW.getClone();&#xD;
        clone.am_dailyAverageProductionAccumulators_kW=this.am_dailyAverageProductionAccumulators_kW.getClone();&#xD;
        clone.acc_dailyAverageFinalEnergyConsumption_kW=this.acc_dailyAverageFinalEnergyConsumption_kW.getClone();&#xD;
    	clone.acc_dailyAverageEnergyProduction_kW=this.acc_dailyAverageEnergyProduction_kW.getClone();&#xD;
    	clone.acc_dailyAverageBaseloadElectricityConsumption_kW=this.acc_dailyAverageBaseloadElectricityConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageHeatPumpElectricityConsumption_kW=this.acc_dailyAverageHeatPumpElectricityConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageElectricVehicleConsumption_kW=this.acc_dailyAverageElectricVehicleConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageBatteriesConsumption_kW=this.acc_dailyAverageBatteriesConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageElectricCookingConsumption_kW=this.acc_dailyAverageElectricCookingConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageElectrolyserElectricityConsumption_kW=this.acc_dailyAverageElectrolyserElectricityConsumption_kW.getClone();&#xD;
        clone.acc_dailyAverageDistrictHeatingConsumption_kW=this.acc_dailyAverageDistrictHeatingConsumption_kW.getClone();&#xD;
        clone.acc_dailyAveragePVProduction_kW=this.acc_dailyAveragePVProduction_kW.getClone();&#xD;
        clone.acc_dailyAverageWindProduction_kW=this.acc_dailyAverageWindProduction_kW.getClone();&#xD;
        clone.acc_dailyAveragePTProduction_kW=this.acc_dailyAveragePTProduction_kW.getClone();&#xD;
        clone.acc_dailyAverageV2GProduction_kW=this.acc_dailyAverageV2GProduction_kW.getClone();&#xD;
        clone.acc_dailyAverageBatteriesProduction_kW=this.acc_dailyAverageBatteriesProduction_kW.getClone();&#xD;
        clone.acc_dailyAverageCHPElectricityProduction_kW=this.acc_dailyAverageCHPElectricityProduction_kW.getClone();&#xD;
        clone.ts_dailyAverageBatteriesStoredEnergy_MWh=this.ts_dailyAverageBatteriesStoredEnergy_MWh.getClone();&#xD;
        clone.ts_dailyAverageBatteriesSOC_fr=this.ts_dailyAverageBatteriesSOC_fr.getClone();&#xD;
        ////Summer week&#xD;
        clone.am_summerWeekBalanceAccumulators_kW=this.am_summerWeekBalanceAccumulators_kW.getClone();&#xD;
        clone.acc_summerWeekDeliveryCapacity_kW=this.acc_summerWeekDeliveryCapacity_kW.getClone();&#xD;
        clone.acc_summerWeekFeedinCapacity_kW=this.acc_summerWeekFeedinCapacity_kW.getClone();&#xD;
        clone.acc_summerWeekFinalEnergyConsumption_kW=this.acc_summerWeekFinalEnergyConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekEnergyCurtailed_kW=this.acc_summerWeekEnergyCurtailed_kW.getClone();&#xD;
        clone.acc_summerWeekEnergyProduction_kW=this.acc_summerWeekEnergyProduction_kW.getClone();&#xD;
        clone.am_summerWeekConsumptionAccumulators_kW=this.am_summerWeekConsumptionAccumulators_kW.getClone();&#xD;
        clone.am_summerWeekProductionAccumulators_kW=this.am_summerWeekProductionAccumulators_kW.getClone();&#xD;
        clone.acc_summerWeekBaseloadElectricityConsumption_kW=this.acc_summerWeekBaseloadElectricityConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekHeatPumpElectricityConsumption_kW=this.acc_summerWeekHeatPumpElectricityConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekElectricVehicleConsumption_kW=this.acc_summerWeekElectricVehicleConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekBatteriesConsumption_kW=this.acc_summerWeekBatteriesConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekElectricCookingConsumption_kW=this.acc_summerWeekElectricCookingConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekElectrolyserElectricityConsumption_kW=this.acc_summerWeekElectrolyserElectricityConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekDistrictHeatingConsumption_kW=this.acc_summerWeekDistrictHeatingConsumption_kW.getClone();&#xD;
        clone.acc_summerWeekPVProduction_kW=this.acc_summerWeekPVProduction_kW.getClone();&#xD;
        clone.acc_summerWeekWindProduction_kW=this.acc_summerWeekWindProduction_kW.getClone();&#xD;
        clone.acc_summerWeekPTProduction_kW=this.acc_summerWeekPTProduction_kW.getClone();&#xD;
        clone.acc_summerWeekV2GProduction_kW=this.acc_summerWeekV2GProduction_kW.getClone();&#xD;
        clone.acc_summerWeekBatteriesProduction_kW=this.acc_summerWeekBatteriesProduction_kW.getClone();&#xD;
        clone.acc_summerWeekCHPElectricityProduction_kW=this.acc_summerWeekCHPElectricityProduction_kW.getClone();&#xD;
        clone.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW=this.acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.getClone();&#xD;
        clone.ts_summerWeekBatteriesStoredEnergy_MWh=this.ts_summerWeekBatteriesStoredEnergy_MWh.getClone();&#xD;
        clone.ts_summerWeekBatteriesSOC_fr=this.ts_summerWeekBatteriesSOC_fr.getClone();&#xD;
        ////Winter week&#xD;
        clone.am_winterWeekBalanceAccumulators_kW = this.am_winterWeekBalanceAccumulators_kW.getClone();&#xD;
        clone.acc_winterWeekDeliveryCapacity_kW = this.acc_winterWeekDeliveryCapacity_kW.getClone();&#xD;
        clone.acc_winterWeekFeedinCapacity_kW = this.acc_winterWeekFeedinCapacity_kW.getClone();&#xD;
        clone.acc_winterWeekFinalEnergyConsumption_kW = this.acc_winterWeekFinalEnergyConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekEnergyProduction_kW = this.acc_winterWeekEnergyProduction_kW.getClone();&#xD;
        clone.acc_winterWeekEnergyCurtailed_kW = this.acc_winterWeekEnergyCurtailed_kW.getClone();&#xD;
        clone.am_winterWeekConsumptionAccumulators_kW = this.am_winterWeekConsumptionAccumulators_kW.getClone();&#xD;
        clone.am_winterWeekProductionAccumulators_kW = this.am_winterWeekProductionAccumulators_kW.getClone();  &#xD;
        clone.acc_winterWeekBaseloadElectricityConsumption_kW = this.acc_winterWeekBaseloadElectricityConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekHeatPumpElectricityConsumption_kW = this.acc_winterWeekHeatPumpElectricityConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekElectricVehicleConsumption_kW = this.acc_winterWeekElectricVehicleConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekBatteriesConsumption_kW = this.acc_winterWeekBatteriesConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekElectricCookingConsumption_kW = this.acc_winterWeekElectricCookingConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekElectrolyserElectricityConsumption_kW = this.acc_winterWeekElectrolyserElectricityConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekDistrictHeatingConsumption_kW = this.acc_winterWeekDistrictHeatingConsumption_kW.getClone();&#xD;
        clone.acc_winterWeekPVProduction_kW = this.acc_winterWeekPVProduction_kW.getClone();&#xD;
        clone.acc_winterWeekWindProduction_kW = this.acc_winterWeekWindProduction_kW.getClone();&#xD;
        clone.acc_winterWeekPTProduction_kW = this.acc_winterWeekPTProduction_kW.getClone();&#xD;
        clone.acc_winterWeekV2GProduction_kW = this.acc_winterWeekV2GProduction_kW.getClone();&#xD;
        clone.acc_winterWeekBatteriesProduction_kW = this.acc_winterWeekBatteriesProduction_kW.getClone();&#xD;
        clone.acc_winterWeekCHPElectricityProduction_kW = this.acc_winterWeekCHPElectricityProduction_kW.getClone();&#xD;
        clone.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW = this.acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.getClone();&#xD;
        clone.ts_winterWeekBatteriesStoredEnergy_MWh = this.ts_winterWeekBatteriesStoredEnergy_MWh.getClone();&#xD;
        clone.ts_winterWeekBatteriesSOC_fr = this.ts_winterWeekBatteriesSOC_fr.getClone();&#xD;
        ////Daytime / Nighttime&#xD;
    	clone.am_daytimeExports_kW = am_daytimeExports_kW.getClone();&#xD;
        clone.am_daytimeImports_kW = am_daytimeImports_kW.getClone();&#xD;
        clone.acc_daytimeFinalEnergyConsumption_kW = acc_daytimeFinalEnergyConsumption_kW.getClone();&#xD;
        clone.acc_daytimeEnergyProduction_kW = acc_daytimeEnergyProduction_kW.getClone();&#xD;
        clone.acc_daytimeElectricityConsumption_kW = acc_daytimeElectricityConsumption_kW.getClone();&#xD;
        clone.acc_daytimeElectricityProduction_kW = acc_daytimeElectricityProduction_kW.getClone();&#xD;
        clone.acc_daytimePrimaryEnergyProductionHeatpumps_kW = acc_daytimePrimaryEnergyProductionHeatpumps_kW.getClone();&#xD;
        //Weekend/day&#xD;
        clone.acc_weekendElectricityConsumption_kW = this.acc_weekendElectricityConsumption_kW.getClone();&#xD;
        clone.acc_weekendElectricityProduction_kW = this.acc_weekendElectricityProduction_kW.getClone();&#xD;
        clone.acc_weekendFinalEnergyConsumption_kW = this.acc_weekendFinalEnergyConsumption_kW.getClone();&#xD;
        clone.acc_weekendEnergyProduction_kW = this.acc_weekendEnergyProduction_kW.getClone();&#xD;
        clone.am_weekendExports_kW = this.am_weekendExports_kW.getClone();&#xD;
        clone.am_weekendImports_kW = this.am_weekendImports_kW.getClone();&#xD;
        clone.acc_weekendPrimaryEnergyProductionHeatpumps_kW = acc_weekendPrimaryEnergyProductionHeatpumps_kW.getClone();&#xD;
        &#xD;
        clone.assetsMetaData = this.assetsMetaData.getClone();&#xD;
        clone.connectionMetaData = this.connectionMetaData.getClone();&#xD;
        return clone;&#xD;
&#xD;
    }&#xD;
    &#xD;
    public J_LoadDurationCurves getLoadDurationCurves(EnergyModel energyModel) {&#xD;
    	return new J_LoadDurationCurves(this.am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW(), energyModel);    		&#xD;
    }&#xD;
    &#xD;
    public double getTotalOverloadDurationDelivery_hr() {&#xD;
    	double totalOverloadDurationDelivery_hr = 0.0;&#xD;
    	double signalResolution_h = am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getSignalResolution_h();&#xD;
    	for (double electricityBalance_kW : am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW()) {&#xD;
        	if(electricityBalance_kW &gt; connectionMetaData.contractedDeliveryCapacity_kW){&#xD;
        		totalOverloadDurationDelivery_hr += signalResolution_h;&#xD;
        	}&#xD;
    	}&#xD;
    	return totalOverloadDurationDelivery_hr;&#xD;
    }&#xD;
    &#xD;
    public double getTotalOverloadDurationFeedin_hr() {&#xD;
    	double totalOverloadDurationFeedin_hr = 0.0;&#xD;
    	double signalResolution_h = am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getSignalResolution_h();&#xD;
    	for (double electricityBalance_kW : am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW()) {&#xD;
        	if(electricityBalance_kW &lt; -connectionMetaData.contractedFeedinCapacity_kW){&#xD;
        		totalOverloadDurationFeedin_hr += signalResolution_h;&#xD;
        	}&#xD;
    	}&#xD;
    	return totalOverloadDurationFeedin_hr;&#xD;
    }   &#xD;
   &#xD;
    public double getPeakDelivery_kW() {&#xD;
    	double peakDelivery_kW = 0.0;&#xD;
    	for (double electricityBalance_kW : am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW()) {&#xD;
    		peakDelivery_kW = max(peakDelivery_kW, electricityBalance_kW);&#xD;
    	}&#xD;
    	return peakDelivery_kW;&#xD;
    }&#xD;
    &#xD;
    public double getPeakFeedin_kW() {&#xD;
    	double peakFeedin_kW = 0.0;&#xD;
    	for (double electricityBalance_kW : am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW()) {&#xD;
    		peakFeedin_kW = max(peakFeedin_kW, -electricityBalance_kW);&#xD;
    	}&#xD;
    	return peakFeedin_kW;&#xD;
    }&#xD;
    &#xD;
    public Pair&lt;Double, Double&gt; getFlexPotential() {&#xD;
    	// Check if capacity is known&#xD;
    	Double possibleGrowthFactor_fr;&#xD;
    	Double requiredBatteryCapacity_kWh;&#xD;
    	if (connectionMetaData.contractedDeliveryCapacityKnown) {&#xD;
    		// Find day with max capacity utilisation	&#xD;
    		ZeroAccumulator acc_dailyAvgElectricityConsumption_kW = am_dailyAverageConsumptionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    		ZeroAccumulator acc_dailyAvgElectricityProduction_kW = am_dailyAverageProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    		ZeroAccumulator acc_dailyAvgNettElectricityDelivery_kW = acc_dailyAvgElectricityConsumption_kW.getClone().subtract(acc_dailyAvgElectricityProduction_kW);&#xD;
    		double[] dailyAvgs_kW = acc_dailyAvgNettElectricityDelivery_kW.getTimeSeries_kW();&#xD;
    		&#xD;
    		int maxDay = 0;&#xD;
    		for (int i = 0; i &lt; dailyAvgs_kW.length; i++) {&#xD;
    			maxDay = dailyAvgs_kW[i] &gt; dailyAvgs_kW[maxDay] ? i : maxDay;&#xD;
    		}&#xD;
    		//traceln("Max day: %s, average power %s kW", maxDay, dailyAvgs_kW[maxDay]);&#xD;
    		// Maximum growth is when dailyAvg delivery would be equal to contracted delivery capacity.&#xD;
    		possibleGrowthFactor_fr = connectionMetaData.contractedDeliveryCapacity_kW / dailyAvgs_kW[maxDay];&#xD;
    		if ( possibleGrowthFactor_fr &lt; 1.0) {&#xD;
    			//traceln("Already overutilising contracted delivery capacity over one day!! Probably an infeasible results...Growth factor: %s", possibleGrowthFactor_fr);&#xD;
    			requiredBatteryCapacity_kWh = 0.0;&#xD;
    		} else {&#xD;
	    		//traceln("possibleGrowth: %s ", possibleGrowthFactor_fr);&#xD;
	    		double[] dayProfile_kW = Arrays.copyOfRange(am_totalBalanceAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getTimeSeries_kW(),roundToInt(24.0/timeStep_h * maxDay), roundToInt(24.0/timeStep_h * (maxDay+1)));&#xD;
	    		double[] dayProfileScaled_kW = ZeroMath.arrayMultiply(dayProfile_kW, possibleGrowthFactor_fr);&#xD;
	    		double[] SoC_kWh = new double[roundToInt(24/timeStep_h)+1];&#xD;
	    		double minSoC_kWh = 0.0;&#xD;
	    		double maxSoC_kWh = 0.0;&#xD;
	    		for(int i = 0; i &lt; roundToInt(24/timeStep_h); i++) {&#xD;
	    			SoC_kWh[i+1] = SoC_kWh[i] + (dayProfileScaled_kW[i] - possibleGrowthFactor_fr * dailyAvgs_kW[maxDay] ) * timeStep_h;&#xD;
	    			minSoC_kWh = min(minSoC_kWh, SoC_kWh[i+1]);&#xD;
	    			maxSoC_kWh = max(maxSoC_kWh, SoC_kWh[i+1]);&#xD;
	    		}&#xD;
	    		requiredBatteryCapacity_kWh = maxSoC_kWh - minSoC_kWh;&#xD;
	    		traceln("Battery size to allow growth: %s kWh", requiredBatteryCapacity_kWh);&#xD;
    		}&#xD;
    	} else {&#xD;
    		traceln("Gridconnection contracted delivery capacity unknown!");&#xD;
    		possibleGrowthFactor_fr = null;&#xD;
    		requiredBatteryCapacity_kWh = 0.0;&#xD;
    	}    	&#xD;
    	&#xD;
    	return new Pair(possibleGrowthFactor_fr, requiredBatteryCapacity_kWh);&#xD;
    }&#xD;
    &#xD;
    public double getTotalElectricityConsumed_MWh() { &#xD;
        return am_dailyAverageConsumptionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalElectricityProduced_MWh() { &#xD;
        return am_dailyAverageProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalElectricitySelfConsumed_MWh() { &#xD;
        return max(0, getTotalElectricityConsumed_MWh() - getTotalImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getTotalEnergyConsumed_MWh() { &#xD;
        return acc_dailyAverageFinalEnergyConsumption_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalEnergyProduced_MWh() { &#xD;
        return acc_dailyAverageEnergyProduction_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalEnergyCurtailed_MWh() { &#xD;
        return acc_totalEnergyCurtailed_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalEnergyImport_MWh() { &#xD;
        return this.am_totalBalanceAccumulators_kW.totalIntegralPos_MWh();&#xD;
    }&#xD;
    public double getTotalEnergyExport_MWh() { &#xD;
        return -this.am_totalBalanceAccumulators_kW.totalIntegralNeg_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getTotalExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return -this.am_totalBalanceAccumulators_kW.get(EC).getIntegralNeg_MWh();&#xD;
    }&#xD;
    public double getTotalImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_totalBalanceAccumulators_kW.get(EC).getIntegralPos_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getTotalEnergySelfConsumed_MWh() { &#xD;
        return max(0, getTotalEnergyConsumed_MWh() - getTotalEnergyImport_MWh()); &#xD;
    }&#xD;
    public double getTotalPrimaryEnergyProductionHeatpumps_MWh() { &#xD;
        return acc_totalPrimaryEnergyProductionHeatpumps_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getTotalDistrictHeatingConsumption_MWh() {&#xD;
    	return acc_dailyAverageDistrictHeatingConsumption_kW.getIntegral_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getTotalBatteryCycles() { &#xD;
    	return acc_dailyAverageBatteriesConsumption_kW.getIntegral_MWh()/this.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
    }&#xD;
&#xD;
// Summerweek Getters&#xD;
    public double getSummerWeekElectricityConsumed_MWh() {&#xD;
        return am_summerWeekConsumptionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh();&#xD;
    }&#xD;
    public double getSummerWeekElectricityProduced_MWh() {&#xD;
        return am_summerWeekProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh();&#xD;
    }&#xD;
    public double getSummerWeekElectricitySelfConsumed_MWh() {&#xD;
        return max(0, getSummerWeekElectricityConsumed_MWh() - getSummerWeekImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getSummerWeekEnergyConsumed_MWh() {&#xD;
        return acc_summerWeekFinalEnergyConsumption_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getSummerWeekEnergyProduced_MWh() {&#xD;
        return acc_summerWeekEnergyProduction_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getSummerWeekEnergyCurtailed_MWh() {&#xD;
        return acc_summerWeekEnergyCurtailed_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getSummerWeekEnergyImport_MWh() {&#xD;
        return this.am_summerWeekBalanceAccumulators_kW.totalIntegralPos_MWh();&#xD;
    }&#xD;
    public double getSummerWeekEnergyExport_MWh() {&#xD;
        return -this.am_summerWeekBalanceAccumulators_kW.totalIntegralNeg_MWh();&#xD;
    }    &#xD;
    &#xD;
    public double getSummerWeekExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return -this.am_summerWeekBalanceAccumulators_kW.get(EC).getIntegralNeg_MWh();&#xD;
    }&#xD;
    public double getSummerWeekImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_summerWeekBalanceAccumulators_kW.get(EC).getIntegralPos_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getSummerWeekEnergySelfConsumed_MWh() {&#xD;
        return max(0, getSummerWeekEnergyConsumed_MWh() - getSummerWeekEnergyImport_MWh());&#xD;
    }&#xD;
    public double getSummerWeekPrimaryEnergyProductionHeatpumps_MWh() {&#xD;
        return acc_summerWeekPrimaryEnergyProductionHeatpumps_kW.getIntegral_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getSummerWeekBatteryCycles() { &#xD;
    	return acc_summerWeekBatteriesConsumption_kW.getIntegral_MWh()/this.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
    }&#xD;
    &#xD;
// Winterweek Getters&#xD;
    public double getWinterWeekElectricityConsumed_MWh() {&#xD;
        return am_winterWeekConsumptionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh();&#xD;
    }&#xD;
    public double getWinterWeekElectricityProduced_MWh() {&#xD;
        return am_winterWeekProductionAccumulators_kW.get(OL_EnergyCarriers.ELECTRICITY).getIntegral_MWh();&#xD;
    }&#xD;
    public double getWinterWeekElectricitySelfConsumed_MWh() {&#xD;
        return max(0, getWinterWeekElectricityConsumed_MWh() - getWinterWeekImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getWinterWeekEnergyConsumed_MWh() {&#xD;
        return acc_winterWeekFinalEnergyConsumption_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getWinterWeekEnergyProduced_MWh() {&#xD;
        return acc_winterWeekEnergyProduction_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getWinterWeekEnergyCurtailed_MWh() {&#xD;
        return acc_winterWeekEnergyCurtailed_kW.getIntegral_MWh();&#xD;
    }&#xD;
    public double getWinterWeekEnergyImport_MWh() {&#xD;
        return this.am_winterWeekBalanceAccumulators_kW.totalIntegralPos_MWh();&#xD;
    }&#xD;
    public double getWinterWeekEnergyExport_MWh() {&#xD;
        return -this.am_winterWeekBalanceAccumulators_kW.totalIntegralNeg_MWh();&#xD;
    }    &#xD;
    public double getWinterWeekExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return -this.am_winterWeekBalanceAccumulators_kW.get(EC).getIntegralNeg_MWh();&#xD;
    }&#xD;
    public double getWinterWeekImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_winterWeekBalanceAccumulators_kW.get(EC).getIntegralPos_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getWinterWeekEnergySelfConsumed_MWh() {&#xD;
        return max(0, getWinterWeekEnergyConsumed_MWh() - getWinterWeekEnergyImport_MWh());&#xD;
    }&#xD;
    public double getWinterWeekPrimaryEnergyProductionHeatpumps_MWh() {&#xD;
        return acc_winterWeekPrimaryEnergyProductionHeatpumps_kW.getIntegral_MWh();&#xD;
    }&#xD;
    &#xD;
    public double getWinterWeekBatteryCycles() { &#xD;
    	return acc_winterWeekBatteriesConsumption_kW.getIntegral_MWh()/this.assetsMetaData.totalInstalledBatteryStorageCapacity_MWh;&#xD;
    }&#xD;
    &#xD;
// Daytime getters    &#xD;
    public double getDaytimeElectricityConsumed_MWh() { &#xD;
        return acc_daytimeElectricityConsumption_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeElectricityProduced_MWh() { &#xD;
        return acc_daytimeElectricityProduction_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeElectricitySelfConsumed_MWh() { &#xD;
        return max(0, getDaytimeElectricityConsumed_MWh() - getDaytimeImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getDaytimeEnergyConsumed_MWh() { &#xD;
        return acc_daytimeFinalEnergyConsumption_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeEnergyProduced_MWh() { &#xD;
        return acc_daytimeEnergyProduction_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeEnergyExport_MWh() { &#xD;
        return am_daytimeExports_kW.totalIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeEnergyImport_MWh() { &#xD;
        return am_daytimeImports_kW.totalIntegral_MWh(); &#xD;
    }&#xD;
    public double getDaytimeEnergySelfConsumed_MWh() { &#xD;
        return max(0, getDaytimeEnergyProduced_MWh() - getDaytimeEnergyExport_MWh()); &#xD;
    }&#xD;
    public double getDaytimeExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_daytimeExports_kW.get(EC).getIntegral_MWh();&#xD;
    }&#xD;
    public double getDaytimeImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_daytimeImports_kW.get(EC).getIntegral_MWh();&#xD;
    }&#xD;
    public double getDaytimePrimaryEnergyProductionHeatpumps_MWh() {&#xD;
    	return this.acc_daytimePrimaryEnergyProductionHeatpumps_kW.getIntegral_MWh();&#xD;
    }&#xD;
//Nighttime Getters&#xD;
    public double getNighttimeElectricityConsumed_MWh() { &#xD;
        return getTotalElectricityConsumed_MWh() - getDaytimeElectricityConsumed_MWh(); &#xD;
    }&#xD;
    public double getNighttimeElectricityProduced_MWh() { &#xD;
        return getTotalElectricityProduced_MWh() - getDaytimeElectricityProduced_MWh(); &#xD;
    }&#xD;
    public double getNighttimeElectricitySelfConsumed_MWh() { &#xD;
        return max(0, getNighttimeElectricityConsumed_MWh() - getNighttimeImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getNighttimeEnergyConsumed_MWh() { &#xD;
        return getTotalEnergyConsumed_MWh() - getDaytimeEnergyConsumed_MWh(); &#xD;
    }&#xD;
    public double getNighttimeEnergyProduced_MWh() { &#xD;
        return getTotalEnergyProduced_MWh() - getDaytimeEnergyProduced_MWh(); &#xD;
    }&#xD;
    public double getNighttimeEnergyExport_MWh() { &#xD;
        return getTotalEnergyExport_MWh() - getDaytimeEnergyExport_MWh(); &#xD;
    }&#xD;
    public double getNighttimeEnergyImport_MWh() { &#xD;
        return getTotalEnergyImport_MWh() - getDaytimeEnergyImport_MWh(); &#xD;
    }&#xD;
    public double getNighttimeEnergySelfConsumed_MWh() { &#xD;
        return max(0, getNighttimeEnergyProduced_MWh() - getNighttimeEnergyExport_MWh()); &#xD;
    } &#xD;
    public double getNighttimeExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return -this.am_totalBalanceAccumulators_kW.get(EC).getIntegralNeg_MWh() - this.getDaytimeExport_MWh(EC);&#xD;
    }&#xD;
    public double getNighttimeImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_totalBalanceAccumulators_kW.get(EC).getIntegralPos_MWh() - this.getDaytimeImport_MWh(EC);&#xD;
    }&#xD;
    public double getNighttimePrimaryEnergyProductionHeatpumps_MWh() {&#xD;
    	return this.getTotalPrimaryEnergyProductionHeatpumps_MWh() - this.getDaytimePrimaryEnergyProductionHeatpumps_MWh();&#xD;
    }&#xD;
// Weekday Getters&#xD;
    public double getWeekdayElectricityConsumed_MWh() { &#xD;
        return getTotalElectricityConsumed_MWh() - getWeekendElectricityConsumed_MWh(); &#xD;
    }&#xD;
    public double getWeekdayElectricityProduced_MWh() { &#xD;
        return getTotalElectricityProduced_MWh() - getWeekendElectricityProduced_MWh(); &#xD;
    }&#xD;
    public double getWeekdayElectricitySelfConsumed_MWh() { &#xD;
        return max(0, getWeekdayElectricityConsumed_MWh() - getWeekdayImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getWeekdayEnergyConsumed_MWh() { &#xD;
        return getTotalEnergyConsumed_MWh() - getWeekendEnergyConsumed_MWh(); &#xD;
    }&#xD;
    public double getWeekdayEnergyProduced_MWh() { &#xD;
        return getTotalEnergyProduced_MWh() - getWeekendEnergyProduced_MWh(); &#xD;
    }&#xD;
    public double getWeekdayEnergyExport_MWh() { &#xD;
        return getTotalEnergyExport_MWh() - getWeekendEnergyExport_MWh(); &#xD;
    }&#xD;
    public double getWeekdayEnergyImport_MWh() { &#xD;
        return getTotalEnergyImport_MWh() - getWeekendEnergyImport_MWh(); &#xD;
    }&#xD;
    public double getWeekdayEnergySelfConsumed_MWh() { &#xD;
        return max(0, getWeekdayEnergyProduced_MWh() - getWeekdayEnergyExport_MWh()); &#xD;
    } &#xD;
    public double getWeekdayExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return -this.am_totalBalanceAccumulators_kW.get(EC).getIntegralNeg_MWh() - this.getWeekendExport_MWh(EC);&#xD;
    }&#xD;
    public double getWeekdayImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_totalBalanceAccumulators_kW.get(EC).getIntegralPos_MWh() - this.getWeekendImport_MWh(EC);&#xD;
    }&#xD;
    public double getWeekdayPrimaryEnergyProductionHeatpumps_MWh() {&#xD;
    	return this.getTotalPrimaryEnergyProductionHeatpumps_MWh() - this.getWeekendPrimaryEnergyProductionHeatpumps_MWh();&#xD;
    }    &#xD;
//Weekend Getters&#xD;
    public double getWeekendElectricityConsumed_MWh() { &#xD;
        return acc_weekendElectricityConsumption_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendElectricityProduced_MWh() { &#xD;
        return acc_weekendElectricityProduction_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendElectricitySelfConsumed_MWh() { &#xD;
        return max(0, getWeekendElectricityConsumed_MWh() - getWeekendImport_MWh(OL_EnergyCarriers.ELECTRICITY));&#xD;
    }&#xD;
    public double getWeekendEnergyConsumed_MWh() { &#xD;
        return acc_weekendFinalEnergyConsumption_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendEnergyProduced_MWh() { &#xD;
        return acc_weekendEnergyProduction_kW.getIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendEnergyExport_MWh() { &#xD;
        return am_weekendExports_kW.totalIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendEnergyImport_MWh() { &#xD;
        return am_weekendImports_kW.totalIntegral_MWh(); &#xD;
    }&#xD;
    public double getWeekendEnergySelfConsumed_MWh() { &#xD;
        return max(0, getWeekendEnergyProduced_MWh() - getWeekendEnergyExport_MWh()); &#xD;
    }&#xD;
    public double getWeekendExport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_weekendExports_kW.get(EC).getIntegral_MWh();&#xD;
    }&#xD;
    public double getWeekendImport_MWh( OL_EnergyCarriers EC ) {&#xD;
    	if (!this.activeEnergyCarriers.contains(EC)) {&#xD;
    		throw new RuntimeException("RapidRunData class does not contain energycarrier: " + EC);&#xD;
    	}&#xD;
    	return this.am_weekendImports_kW.get(EC).getIntegral_MWh();&#xD;
    }&#xD;
    public double getWeekendPrimaryEnergyProductionHeatpumps_MWh() {&#xD;
    	return this.acc_weekendPrimaryEnergyProductionHeatpumps_kW.getIntegral_MWh();&#xD;
    } &#xD;
	&#xD;
&#xD;
//toString()&#xD;
    public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1741180880935</Id>
				<Name>J_LiveData</Name>
				<Folder>1752680962144</Folder>
				<Text>import java.util.EnumSet;&#xD;
/**&#xD;
 * J_LiveData&#xD;
 */	&#xD;
public class J_LiveData {&#xD;
	&#xD;
	public Agent parentAgent;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeEnergyCarriers;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeConsumptionEnergyCarriers;&#xD;
	public EnumSet&lt;OL_EnergyCarriers&gt; activeProductionEnergyCarriers;&#xD;
	&#xD;
	public J_AssetsMetaData assetsMetaData;&#xD;
	public J_ConnectionMetaData connectionMetaData;&#xD;
&#xD;
	public J_DataSetMap dsm_liveDemand_kW = new J_DataSetMap(); &#xD;
	public J_DataSetMap dsm_liveSupply_kW = new J_DataSetMap(); &#xD;
	public DataSet data_baseloadElectricityDemand_kW = new DataSet(672);&#xD;
	public DataSet data_hydrogenElectricityDemand_kW = new DataSet(672);&#xD;
	public DataSet data_heatPumpElectricityDemand_kW = new DataSet(672);&#xD;
	public DataSet data_electricVehicleDemand_kW = new DataSet(672);&#xD;
	public DataSet data_batteryCharging_kW = new DataSet(672);&#xD;
	public DataSet data_PVGeneration_kW = new DataSet(672);&#xD;
	public DataSet data_windGeneration_kW = new DataSet(672);&#xD;
	public DataSet data_PTGeneration_kW = new DataSet(672);&#xD;
	public DataSet data_batteryDischarging_kW = new DataSet(672);&#xD;
	public DataSet data_V2GSupply_kW = new DataSet(672);&#xD;
	public DataSet data_CHPElectricityProductionLiveWeek_kW = new DataSet(672);&#xD;
	public DataSet data_totalDemand_kW = new DataSet(672); &#xD;
	public DataSet data_totalSupply_kW = new DataSet(672);&#xD;
	public DataSet data_liveElectricityBalance_kW = new DataSet(672);&#xD;
	public DataSet data_gridCapacityDemand_kW = new DataSet(672); &#xD;
	public DataSet data_gridCapacitySupply_kW = new DataSet(672);&#xD;
	public DataSet data_cookingElectricityDemand_kW = new DataSet(672);&#xD;
	public DataSet data_districtHeatDelivery_kW = new DataSet(672);&#xD;
	public DataSet data_batteryStoredEnergyLiveWeek_MWh = new DataSet(672);&#xD;
	public DataSet data_batterySOC_fr = new DataSet(672);&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_LiveData(Agent parentAgent) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
    }&#xD;
	&#xD;
    public void resetLiveDatasets(double startTime, double endTime, double timeStep_h) {&#xD;
    	for(OL_EnergyCarriers EC : activeConsumptionEnergyCarriers){&#xD;
    		DataSet dsDemand = new DataSet( (int)(168 / timeStep_h) );&#xD;
    		for (double t = startTime; t &lt;= endTime; t += timeStep_h) {&#xD;
    			dsDemand.add( t, 0);&#xD;
    		}&#xD;
    		dsm_liveDemand_kW.put( EC, dsDemand);&#xD;
    	}&#xD;
    	&#xD;
    	for(OL_EnergyCarriers EC : activeProductionEnergyCarriers){&#xD;
    		DataSet dsSupply = new DataSet( (int)(168 / timeStep_h) );&#xD;
    		for (double t = startTime; t &lt;= endTime; t += timeStep_h) {&#xD;
    			dsSupply.add( t, 0);&#xD;
    		}&#xD;
    		dsm_liveSupply_kW.put( EC, dsSupply);&#xD;
    	}&#xD;
    	&#xD;
		for (double t = startTime; t &lt;= endTime; t += timeStep_h) {&#xD;
	    	data_baseloadElectricityDemand_kW.add( t, 0);&#xD;
	    	data_hydrogenElectricityDemand_kW.add( t, 0);&#xD;
	    	data_heatPumpElectricityDemand_kW.add( t, 0);&#xD;
	    	data_electricVehicleDemand_kW.add( t, 0);&#xD;
	    	data_batteryCharging_kW.add( t, 0);&#xD;
	    	data_PVGeneration_kW.add( t, 0);&#xD;
	    	data_windGeneration_kW.add( t, 0);&#xD;
	    	data_PTGeneration_kW.add( t, 0);&#xD;
	    	data_batteryDischarging_kW.add( t, 0);&#xD;
	    	data_V2GSupply_kW.add( t, 0);&#xD;
	    	data_CHPElectricityProductionLiveWeek_kW.add( t, 0);&#xD;
	    	data_totalDemand_kW.add( t, 0); &#xD;
	    	data_totalSupply_kW.add( t, 0);&#xD;
	    	data_liveElectricityBalance_kW.add( t, 0);&#xD;
	    	data_gridCapacityDemand_kW.add( t, 0); &#xD;
	    	data_gridCapacitySupply_kW.add( t, 0);&#xD;
	    	data_cookingElectricityDemand_kW.add( t, 0);&#xD;
	    	data_districtHeatDelivery_kW.add( t, 0);&#xD;
	    	data_batteryStoredEnergyLiveWeek_MWh.add( t, 0);&#xD;
	    	data_batterySOC_fr.add( t, 0);	&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1741361867834</Id>
				<Name>J_AssetsMetaData</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_AssetsMetaData&#xD;
 */	&#xD;
&#xD;
import java.util.EnumSet;&#xD;
&#xD;
public class J_AssetsMetaData {&#xD;
	&#xD;
	public Agent parentAgent;&#xD;
&#xD;
	public boolean hasElectricHeating = false;&#xD;
	public boolean hasElectricTransport = false;&#xD;
	public boolean hasPV = false;&#xD;
	public boolean hasWindturbine = false;&#xD;
	public boolean hasPT = false;&#xD;
	public boolean hasBattery = false;&#xD;
	public boolean hasHeatGridConnection = false;&#xD;
	public boolean hasElectrolyser = false;&#xD;
	public boolean hasCHP = false;&#xD;
	public boolean hasV2G = false;&#xD;
	public boolean hasElectricCooking = false;&#xD;
	&#xD;
	public Double totalInstalledPVPower_kW = 0.0;&#xD;
	public Double totalInstalledWindPower_kW = 0.0;&#xD;
	public Double totalInstalledBatteryStorageCapacity_MWh = 0.0;&#xD;
	&#xD;
	public Double initialPV_kW = 0.0;&#xD;
	public Double PVPotential_kW = 0.0;&#xD;
	public Double windPotential_kW = 0.0;&#xD;
	&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_AssetsMetaData(Agent parentAgent) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
    }&#xD;
    &#xD;
    public void updateActiveAssetData(ArrayList&lt;GridConnection&gt; gcList) {&#xD;
    	this.hasElectricHeating = false;&#xD;
	    this.hasElectricTransport = false;&#xD;
	    this.hasPV = false;&#xD;
	    this.hasWindturbine = false;&#xD;
	    this.hasBattery = false;&#xD;
	    this.hasHeatGridConnection = false;  // read as: has heatgrid connection, not has heat gridconnection&#xD;
	    this.hasElectrolyser = false;&#xD;
	    this.hasCHP = false;&#xD;
	    this.hasV2G = false;&#xD;
	    this.hasElectricCooking = false;&#xD;
	&#xD;
	    //Electric heating&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.c_electricHeatpumpAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasElectricHeating = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //Electric vehicles&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.c_EvAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasElectricTransport = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //PV&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if (GC.v_liveAssetsMetaData.totalInstalledPVPower_kW &gt; 0 &amp;&amp; GC.v_isActive) {&#xD;
	    		this.hasPV = true;&#xD;
	    		break;	    		&#xD;
	    	}&#xD;
	    }&#xD;
	    //Wind&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if (GC.v_liveAssetsMetaData.totalInstalledWindPower_kW &gt; 0 &amp;&amp; GC.v_isActive) {&#xD;
	    		this.hasWindturbine = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //PT&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if (GC.c_ptAssets.size()&gt;0 &amp;&amp; GC.v_isActive) {&#xD;
	    		this.hasPT = true;&#xD;
	    		break;	    		&#xD;
	    	}&#xD;
	    }&#xD;
	    //Battery&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if (GC.v_liveAssetsMetaData.totalInstalledBatteryStorageCapacity_MWh &gt; 0 &amp;&amp; GC.v_isActive) {&#xD;
				this.hasBattery = true;&#xD;
				break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //Heat grid&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.p_parentNodeHeat != null &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasHeatGridConnection = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //Electrolyser&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.c_electrolyserAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasElectrolyser = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //CHP&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.c_chpAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasCHP = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //V2g&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.p_chargingAttitudeVehicles == OL_ChargingAttitude.V2G &amp;&amp; GC.c_EvAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasV2G = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	    //Electric cooking&#xD;
	    for(GridConnection GC : gcList){&#xD;
	    	if(GC.c_electricHobAssets.size()&gt;0 &amp;&amp; GC.v_isActive){&#xD;
	    		this.hasElectricCooking = true;&#xD;
	    		break;&#xD;
	    	}&#xD;
	    }&#xD;
	}&#xD;
&#xD;
    public J_AssetsMetaData getClone() {&#xD;
    	J_AssetsMetaData clone = new J_AssetsMetaData(this.parentAgent);&#xD;
    	clone.hasElectricHeating = this.hasElectricHeating;&#xD;
    	clone.hasElectricTransport = this.hasElectricTransport;&#xD;
    	clone.hasPV = this.hasPV;&#xD;
    	clone.hasWindturbine = this.hasWindturbine;&#xD;
    	clone.hasPT = this.hasPT;&#xD;
    	clone.hasBattery = this.hasBattery;&#xD;
    	clone.hasHeatGridConnection = this.hasHeatGridConnection;&#xD;
    	clone.hasElectrolyser = this.hasElectrolyser;&#xD;
    	clone.hasCHP = this.hasCHP;&#xD;
    	clone.hasV2G = this.hasV2G;&#xD;
    	clone.hasElectricCooking = this.hasElectricCooking;&#xD;
    	clone.totalInstalledPVPower_kW = this.totalInstalledPVPower_kW.doubleValue();&#xD;
    	clone.totalInstalledWindPower_kW = this.totalInstalledWindPower_kW.doubleValue();&#xD;
    	clone.totalInstalledBatteryStorageCapacity_MWh = this.totalInstalledBatteryStorageCapacity_MWh.doubleValue();&#xD;
    	clone.PVPotential_kW = this.PVPotential_kW.doubleValue();&#xD;
    	clone.windPotential_kW = this.windPotential_kW.doubleValue();&#xD;
    	return clone;&#xD;
    }&#xD;
    &#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return "totalInstalledPVPower_kW: " + totalInstalledPVPower_kW + &#xD;
				", totalInstalledWindPower_kW: " + totalInstalledWindPower_kW + &#xD;
	            ", totalInstalledBatteryStorageCapacity_MWh: " + totalInstalledBatteryStorageCapacity_MWh + &#xD;
	            ", hasPV: " + hasPV +&#xD;
	            ", hasElectricHeating: " + hasElectricHeating + &#xD;
	            ", hasElectricTransport: " + hasElectricTransport + &#xD;
	            ", hasWindturbine: " + hasWindturbine +&#xD;
	            ", hasPT: " + hasPT +&#xD;
		        ", hasBattery: " + hasBattery +&#xD;
		        ", hasHeatGridConnection: " + hasHeatGridConnection +&#xD;
		        ", hasElectrolyser: " + hasElectrolyser +&#xD;
		        ", hasCHP: " + hasCHP +&#xD;
		        ", hasV2G: " + hasV2G +&#xD;
		        ", hasElectricCooking: " + hasElectricCooking;&#xD;
	}&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1741864496371</Id>
				<Name>J_ConnectionMetaData</Name>
				<Folder>1752680962144</Folder>
				<Text>/**&#xD;
 * J_ConnectionMetaData&#xD;
 */	&#xD;
public class J_ConnectionMetaData implements Serializable {&#xD;
&#xD;
	public Agent parentAgent;&#xD;
&#xD;
	public Double contractedDeliveryCapacity_kW  = 0.0;&#xD;
	public Double contractedFeedinCapacity_kW  = 0.0;&#xD;
	public Double physicalCapacity_kW  = 0.0;&#xD;
	public Boolean contractedDeliveryCapacityKnown  = false;&#xD;
	public Boolean contractedFeedinCapacityKnown  = false;&#xD;
	public Boolean physicalCapacityKnown  = false;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ConnectionMetaData( Agent parentAgent) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
    	if (parentAgent instanceof GridConnection) {&#xD;
    		&#xD;
    	}&#xD;
    	//public double getDeliveryCapacity_kW(){return p_contractedDeliveryCapacity_kW;}&#xD;
    	//public double getFeedinCapacity_kW(){return p_contractedFeedinCapacity_kW;}&#xD;
    	//public boolean getDeliveryCapacityKnown(){return b_isRealDeliveryCapacityAvailable;}&#xD;
    	//public boolean getFeedinCapacityKnown(){return b_isRealFeedinCapacityAvailable;}&#xD;
    }&#xD;
&#xD;
    public J_ConnectionMetaData getClone() {&#xD;
    	J_ConnectionMetaData clone = new J_ConnectionMetaData(this.parentAgent);&#xD;
    	clone.contractedDeliveryCapacity_kW = this.contractedDeliveryCapacity_kW.doubleValue();&#xD;
    	clone.contractedFeedinCapacity_kW = this.contractedFeedinCapacity_kW.doubleValue();&#xD;
    	if (this.physicalCapacity_kW!=null) {&#xD;
    		clone.physicalCapacity_kW = this.physicalCapacity_kW.doubleValue();&#xD;
    	}&#xD;
    	clone.contractedDeliveryCapacityKnown = this.contractedDeliveryCapacityKnown.booleanValue();&#xD;
    	clone.contractedFeedinCapacityKnown = this.contractedFeedinCapacityKnown.booleanValue();&#xD;
    	if (this.physicalCapacityKnown!=null) {&#xD;
    		clone.physicalCapacityKnown = this.physicalCapacityKnown.booleanValue();&#xD;
    	}&#xD;
    	return clone;&#xD;
    }&#xD;
    &#xD;
    @Override&#xD;
    public String toString() {&#xD;
        return "ContractedDeliveryCapacity_kW: " + contractedDeliveryCapacity_kW + &#xD;
               ", ContractedFeedinCapacity_kW: " + contractedFeedinCapacity_kW + &#xD;
               ", PhysicalCapacity_kW: " + physicalCapacity_kW + &#xD;
               ", ContractedDeliveryCapacityKnown: " + contractedDeliveryCapacityKnown + &#xD;
               ", ContractedFeedinCapacityKnown: " + contractedFeedinCapacityKnown + &#xD;
               ", PhysicalCapacityKnown: " + physicalCapacityKnown;&#xD;
    }&#xD;
&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749648342034</Id>
				<Name>J_EAAirco</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * Airco&#xD;
 */	&#xD;
public class J_EAAirco extends zero_engine.J_EA implements Serializable {&#xD;
	&#xD;
	double capacityElectric_kW;&#xD;
	int remainingONtimesteps = 0;&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_EAAirco(Agent parentAgent, double capacityElectric_kW, double timestep_h) {&#xD;
    	this.parentAgent = parentAgent;&#xD;
    	this.capacityElectric_kW = capacityElectric_kW;&#xD;
    	this.timestep_h = timestep_h;	&#xD;
		this.activeConsumptionEnergyCarriers.add(OL_EnergyCarriers.ELECTRICITY);&#xD;
		this.registerEnergyAsset();&#xD;
    }&#xD;
    &#xD;
    &#xD;
	@Override&#xD;
    public void operate(double ratioOfCapacity) {&#xD;
		if( remainingONtimesteps &gt; 0) {&#xD;
			this.remainingONtimesteps--;&#xD;
			double electricityConsumption_kW = ratioOfCapacity * this.capacityElectric_kW;&#xD;
			this.energyUse_kW = electricityConsumption_kW;&#xD;
			this.energyUsed_kWh += this.energyUse_kW * this.timestep_h;&#xD;
			this.flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW);&#xD;
		}&#xD;
	}&#xD;
&#xD;
	public void turnOnAirco(int nbTimesteps) {&#xD;
		this.remainingONtimesteps = nbTimesteps;&#xD;
	}&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749649002419</Id>
				<Name>J_ChargingSession</Name>
				<Text>/**&#xD;
 * J_ChargingSession&#xD;
 */	&#xD;
public class J_ChargingSession implements Serializable {&#xD;
&#xD;
	int startTime;&#xD;
	int endTime;&#xD;
	double chargingDemand_kWh;&#xD;
	double batterySize_kWh;&#xD;
	double stateOfCharge_kWh;&#xD;
	double chargingPower_kW;&#xD;
	int socket;&#xD;
	double timeStep_hr;&#xD;
	&#xD;
	boolean V1GCapable;&#xD;
	boolean V2GCapable;&#xD;
	int availableStepsForV2G;&#xD;
	int availableStepsForV1G;&#xD;
	int timeStepsToDisconnect;&#xD;
	int openTimeSlots;&#xD;
	int V2GRemainingTimesteps = 0;&#xD;
	int V1GRemainingTimesteps = 0;&#xD;
	double currentPower;&#xD;
	&#xD;
	double shiftedLoadV1GThisTimestep;&#xD;
	double shiftedLoadV2GThisTimestep;&#xD;
&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_ChargingSession(int startTime_quaterhours, int endTime_quaterhours, double chargingDemand_kWh, double batterySize_kWh, double chargingPower_kW, int socket, double timeStep_hr) {&#xD;
    &#xD;
    	this.startTime = startTime_quaterhours;&#xD;
    	this.endTime = endTime_quaterhours;&#xD;
    	this.chargingDemand_kWh = chargingDemand_kWh;&#xD;
    	this.batterySize_kWh = batterySize_kWh;&#xD;
    	stateOfCharge_kWh = batterySize_kWh - chargingDemand_kWh;&#xD;
    	this.chargingPower_kW = chargingPower_kW; &#xD;
    	this.socket = socket;&#xD;
    	timeStepsToDisconnect = endTime - startTime;&#xD;
    	openTimeSlots = timeStepsToDisconnect - ((int)Math.ceil(4 * chargingDemand_kWh / chargingPower_kW)) ; &#xD;
    	this.timeStep_hr = timeStep_hr;&#xD;
    	&#xD;
    	if(this.startTime &gt; this.endTime){&#xD;
    		new RuntimeException("StartTime is later then the endtime for J_ChargingSession");&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public double operate(boolean doV1G, boolean doV2G) {&#xD;
    	this.V1GCapable = doV1G;&#xD;
    	this.V2GCapable = doV2G;&#xD;
    	timeStepsToDisconnect --;&#xD;
    	openTimeSlots --;&#xD;
    	double power = determineChargingPower();&#xD;
    	setSmartChargingAvailabilities();&#xD;
    	currentPower = power;&#xD;
    	stateOfCharge_kWh += power * timeStep_hr;&#xD;
    	return currentPower;&#xD;
    }&#xD;
    &#xD;
    public double determineChargingPower(){&#xD;
    	double power;&#xD;
    	if (V2GRemainingTimesteps &gt; 0) {&#xD;
    		power = - chargingPower_kW;&#xD;
    		shiftedLoadV2GThisTimestep = 2 * power;&#xD;
    		V2GRemainingTimesteps--;&#xD;
    		//if you are doing V2G this timestep you reduce your opentimeslots by 2&#xD;
    		openTimeSlots --;&#xD;
    		openTimeSlots --;&#xD;
    	}&#xD;
    	else if( V1GRemainingTimesteps &gt; 0){&#xD;
    		power = 0;&#xD;
    		shiftedLoadV1GThisTimestep = power;&#xD;
    		V1GRemainingTimesteps--;&#xD;
    		//if you are doing V1G this timestep you reduce your opentimeslots by 1&#xD;
    		openTimeSlots --;&#xD;
    	}&#xD;
    	else if (batterySize_kWh &gt; stateOfCharge_kWh) {&#xD;
    		power = chargingPower_kW;&#xD;
    		shiftedLoadV1GThisTimestep = 0;&#xD;
    		shiftedLoadV2GThisTimestep = 0;&#xD;
    	}&#xD;
    	else {&#xD;
    		power = 0;&#xD;
    		shiftedLoadV1GThisTimestep = 0;&#xD;
    		shiftedLoadV2GThisTimestep =0;&#xD;
    	}&#xD;
    	return power;&#xD;
    }&#xD;
    &#xD;
    public void setSmartChargingAvailabilities() {&#xD;
    	//determine if the vehicle if this session is available for V2G and V1G next timestep&#xD;
    	if( openTimeSlots &gt; 3 &amp;&amp; V2GCapable &amp;&amp; (stateOfCharge_kWh &gt; (0.2 * batterySize_kWh + 0.5 * chargingPower_kW )) ) { //you need at least 4 timesteps for V2G (a minimum for 2 timestep V2G sessions were defined)&#xD;
    		availableStepsForV2G = (int) Math.floor(openTimeSlots / 2);&#xD;
    	}&#xD;
    	else {&#xD;
    		availableStepsForV2G = 0;&#xD;
    	}&#xD;
    	&#xD;
    	if (openTimeSlots &gt; 1 &amp;&amp; (stateOfCharge_kWh &lt; batterySize_kWh)) {&#xD;
    		availableStepsForV1G = openTimeSlots;&#xD;
    	}&#xD;
    	else {&#xD;
    		availableStepsForV1G = 0;&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void requestV2G(int timeStepsV2G) {&#xD;
    	if( V2GRemainingTimesteps != 0 || V1GRemainingTimesteps != 0) {&#xD;
    		traceln( "ERROR TRYING TO SET CHARGING SESSION TO V2G, BUT IS ALREADY IN A V1G or V2G SESSION");&#xD;
    	}&#xD;
    	V2GRemainingTimesteps = timeStepsV2G;&#xD;
    	&#xD;
    }&#xD;
    &#xD;
    public void requestV1G(int timeStepsV1G) {&#xD;
    	if( V2GRemainingTimesteps != 0 || V1GRemainingTimesteps != 0) {&#xD;
    		traceln( "ERROR TRYING TO SET CHARGING SESSION TO V1G, BUT IS ALREADY IN A V1G or V2G SESSION");&#xD;
    	}&#xD;
    	V1GRemainingTimesteps = timeStepsV1G;&#xD;
    }&#xD;
    &#xD;
    public double getShiftedLoadV1GCurrentTimestep() {&#xD;
    	return shiftedLoadV1GThisTimestep;&#xD;
    }&#xD;
    &#xD;
    public double getShiftedLoadV2GCurrentTimestep() {&#xD;
    	return shiftedLoadV2GThisTimestep;&#xD;
    }&#xD;
&#xD;
    &#xD;
    public J_ChargingSession getClone() {&#xD;
    	return new J_ChargingSession(this.startTime, this.endTime, this.chargingDemand_kWh, this.batterySize_kWh, this.chargingPower_kW, this.socket, this.timeStep_hr);&#xD;
    }&#xD;
    &#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return "Power: " + currentPower + "kW, start: " + startTime + ", end: " + endTime + ", Pmax: " + chargingPower_kW +"kW, demand: " + chargingDemand_kWh + "kWh";&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1749651263461</Id>
				<Name>J_EACharger</Name>
				<Folder>1752677832758</Folder>
				<Text>/**&#xD;
 * J_EACharger&#xD;
 */	&#xD;
public class J_EACharger extends zero_engine.J_EA implements Serializable {&#xD;
		public double discharged_kWh;&#xD;
		public double charged_kWh;&#xD;
		public double capacityElectric_kW;&#xD;
		public List&lt;J_ChargingSession&gt; chargerProfile;&#xD;
		public boolean V1GCapable;&#xD;
		public boolean V2GCapable;&#xD;
		&#xD;
		private int currentChargingSessionIndexSocket1;&#xD;
		private J_ChargingSession currentChargingSessionSocket1;&#xD;
		private int currentChargingSessionIndexSocket2;&#xD;
		private J_ChargingSession currentChargingSessionSocket2;&#xD;
		&#xD;
		private double totalShiftedLoadV1G_kWh;&#xD;
		private double totalShiftedLoadV2G_kWh;&#xD;
		&#xD;
		&#xD;
		private double dischargedStored_kWh;&#xD;
		private double chargedStored_kWh;&#xD;
		private J_ChargingSession currentChargingSessionSocket1Stored;&#xD;
		private int currentChargingSessionIndexSocket1Stored;&#xD;
		private J_ChargingSession currentChargingSessionSocket2Stored;&#xD;
		private int currentChargingSessionIndexSocket2Stored;&#xD;
		private double totalShiftedLoadV1GStored_kWh;&#xD;
		private double totalShiftedLoadV2GStored_kWh;&#xD;
		&#xD;
	    /**&#xD;
	     * Default constructor&#xD;
	     */&#xD;
	    public J_EACharger(Agent parentAgent, double electricCapacity_kW, double timestep_h, List&lt;J_ChargingSession&gt; chargerProfile, boolean V1GCapable, boolean V2GCapable) {&#xD;
	    	this.parentAgent = parentAgent;&#xD;
	    	this.capacityElectric_kW = electricCapacity_kW;&#xD;
	    	this.timestep_h = timestep_h;&#xD;
	    	this.chargerProfile = chargerProfile;&#xD;
		    this.V1GCapable = V1GCapable;&#xD;
		    this.V2GCapable = V2GCapable;&#xD;
	    	this.activeProductionEnergyCarriers.add(OL_EnergyCarriers.ELECTRICITY);		&#xD;
			this.activeConsumptionEnergyCarriers.add(OL_EnergyCarriers.ELECTRICITY);&#xD;
			this.registerEnergyAsset();&#xD;
	    }&#xD;
	    &#xD;
	    &#xD;
	    public void f_updateAllFlows( double t_h, boolean doV1G, boolean doV2G) {&#xD;
	    	// Powerfraction is calculated below, argument is the current time (energyModel.t_h)&#xD;
	    	&#xD;
	    	// Check if the charger is capable of smart charging&#xD;
	    	doV1G = doV1G &amp;&amp; this.V1GCapable;&#xD;
	    	doV2G = doV2G &amp;&amp; this.V2GCapable;&#xD;
	    	&#xD;
	    	// Update the J_ChargingSessions of the sockets&#xD;
			this.manageSocket1();&#xD;
			this.manageSocket2();&#xD;
	    	&#xD;
			// Calculate the power output of the sockets&#xD;
			double power_kW = 0.0;&#xD;
			int currentTimeInQuarterHours = roundToInt(t_h * 4);&#xD;
			if ( this.currentChargingSessionSocket1 != null &amp;&amp; currentTimeInQuarterHours &gt;= this.currentChargingSessionSocket1.startTime &amp;&amp; currentTimeInQuarterHours &lt; this.currentChargingSessionSocket1.endTime ) {		&#xD;
				//null check for currentChargingSessionSocket1 (and 2) is required for end of year when there are no more scheduled sessions&#xD;
				power_kW += this.operateChargerSocket1(doV1G, doV2G);&#xD;
			}&#xD;
			if ( this.currentChargingSessionSocket2 != null &amp;&amp; currentTimeInQuarterHours &gt;= this.currentChargingSessionSocket2.startTime &amp;&amp; currentTimeInQuarterHours &lt; this.currentChargingSessionSocket2.endTime ) {	&#xD;
				power_kW += this.operateChargerSocket2(doV1G, doV2G);&#xD;
			}&#xD;
			&#xD;
			double powerFraction_fr = power_kW / this.capacityElectric_kW;&#xD;
			&#xD;
			// Call the regular J_EA updateAllFlows and operate&#xD;
			super.f_updateAllFlows( powerFraction_fr );&#xD;
	    	return;&#xD;
	    }&#xD;
	    &#xD;
	    &#xD;
		@Override&#xD;
	    public void operate(double ratioOfCapacity) {			&#xD;
			double charge_kW = ratioOfCapacity * capacityElectric_kW;&#xD;
	    	&#xD;
			double electricityProduction_kW = max(-charge_kW, 0);&#xD;
			double electricityConsumption_kW = max(charge_kW, 0);&#xD;
			&#xD;
			discharged_kWh += electricityProduction_kW * timestep_h;&#xD;
			charged_kWh += electricityConsumption_kW * timestep_h;&#xD;
			&#xD;
	    	energyUse_kW = electricityConsumption_kW - electricityProduction_kW;&#xD;
	    	energyUsed_kWh += energyUse_kW * timestep_h;&#xD;
	    	&#xD;
			flowsMap.put(OL_EnergyCarriers.ELECTRICITY, electricityConsumption_kW - electricityProduction_kW);	&#xD;
	   	}&#xD;
		&#xD;
		private void manageSocket1() {&#xD;
			if ( this.currentChargingSessionSocket1 == null ) { // || energyModel.t_h &gt;= v_currentChargingSessionSocket1.endTime / 4.0) {&#xD;
				 // check if we are not already past the last charging session&#xD;
				if (this.currentChargingSessionIndexSocket1 &gt;= this.chargerProfile.size()) {&#xD;
					//v_currentChargingSessionSocket1 = null;&#xD;
					return;&#xD;
				}&#xD;
				while (this.chargerProfile.get(this.currentChargingSessionIndexSocket1).socket != 1) {&#xD;
					this.currentChargingSessionIndexSocket1++;&#xD;
					if (this.currentChargingSessionIndexSocket1 &gt;= this.chargerProfile.size()) {&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
				this.currentChargingSessionSocket1 = this.chargerProfile.get(this.currentChargingSessionIndexSocket1).getClone();&#xD;
				this.currentChargingSessionIndexSocket1++;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		private void manageSocket2() {		&#xD;
			if ( this.currentChargingSessionSocket2 == null ) {&#xD;
				 // check if we are not already past the last charging session&#xD;
				if (this.currentChargingSessionIndexSocket2 &gt;= this.chargerProfile.size()) {&#xD;
					return;&#xD;
				}&#xD;
				while (this.chargerProfile.get(this.currentChargingSessionIndexSocket2).socket != 2) {&#xD;
					this.currentChargingSessionIndexSocket2++;&#xD;
					if (this.currentChargingSessionIndexSocket2 &gt;= this.chargerProfile.size()) {&#xD;
						return;&#xD;
					}&#xD;
				}&#xD;
				this.currentChargingSessionSocket2 = this.chargerProfile.get(this.currentChargingSessionIndexSocket2).getClone();&#xD;
				this.currentChargingSessionIndexSocket2++;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		private double operateChargerSocket1(boolean doV1G, boolean doV2G) {&#xD;
			double chargingPower_kW = this.currentChargingSessionSocket1.operate( doV1G, doV2G );&#xD;
			this.totalShiftedLoadV1G_kWh += this.currentChargingSessionSocket1.getShiftedLoadV1GCurrentTimestep();&#xD;
			this.totalShiftedLoadV2G_kWh += this.currentChargingSessionSocket1.getShiftedLoadV2GCurrentTimestep();&#xD;
			if ( this.currentChargingSessionSocket1.timeStepsToDisconnect == 0 ){&#xD;
				this.currentChargingSessionSocket1 = null;&#xD;
			}&#xD;
			return chargingPower_kW;&#xD;
		}&#xD;
		&#xD;
		private double operateChargerSocket2(boolean doV1G, boolean doV2G) {&#xD;
			double chargingPower_kW = this.currentChargingSessionSocket2.operate( doV1G, doV2G );&#xD;
			this.totalShiftedLoadV1G_kWh += this.currentChargingSessionSocket2.getShiftedLoadV1GCurrentTimestep();&#xD;
			this.totalShiftedLoadV2G_kWh += this.currentChargingSessionSocket2.getShiftedLoadV2GCurrentTimestep();&#xD;
			if ( this.currentChargingSessionSocket2.timeStepsToDisconnect == 0 ){&#xD;
				this.currentChargingSessionSocket2 = null;&#xD;
			}&#xD;
			return chargingPower_kW;&#xD;
		}&#xD;
		&#xD;
		@Override&#xD;
		public void storeStatesAndReset() {&#xD;
	    	energyUsedStored_kWh = energyUsed_kWh;&#xD;
	    	energyUsed_kWh = 0.0;&#xD;
			dischargedStored_kWh = discharged_kWh;&#xD;
			discharged_kWh = 0.0;&#xD;
			chargedStored_kWh = charged_kWh;&#xD;
			charged_kWh = 0.0;&#xD;
			&#xD;
			currentChargingSessionSocket1Stored = currentChargingSessionSocket1;&#xD;
			currentChargingSessionSocket1 = null;&#xD;
			currentChargingSessionIndexSocket1Stored = currentChargingSessionIndexSocket1;&#xD;
			currentChargingSessionIndexSocket1 = 0;&#xD;
			&#xD;
			currentChargingSessionSocket2Stored = currentChargingSessionSocket2;&#xD;
			currentChargingSessionSocket2 = null;&#xD;
			currentChargingSessionIndexSocket2Stored = currentChargingSessionIndexSocket2;&#xD;
			currentChargingSessionIndexSocket2 = 0;&#xD;
			&#xD;
			totalShiftedLoadV1GStored_kWh = totalShiftedLoadV1G_kWh;&#xD;
			totalShiftedLoadV1G_kWh = 0.0;&#xD;
			totalShiftedLoadV2GStored_kWh = totalShiftedLoadV2G_kWh;&#xD;
			totalShiftedLoadV2G_kWh = 0.0;&#xD;
	    	clear();&#xD;
		}&#xD;
		&#xD;
		@Override&#xD;
		public void restoreStates() {&#xD;
	    	energyUsed_kWh = energyUsedStored_kWh;&#xD;
			discharged_kWh = dischargedStored_kWh;&#xD;
			charged_kWh = chargedStored_kWh;&#xD;
			&#xD;
			currentChargingSessionSocket1 = currentChargingSessionSocket1Stored;&#xD;
			currentChargingSessionIndexSocket1 = currentChargingSessionIndexSocket1Stored;&#xD;
			&#xD;
			currentChargingSessionSocket2 = currentChargingSessionSocket2Stored;&#xD;
			currentChargingSessionIndexSocket2 = currentChargingSessionIndexSocket2Stored;&#xD;
			&#xD;
			totalShiftedLoadV1G_kWh = totalShiftedLoadV1GStored_kWh;&#xD;
			totalShiftedLoadV2G_kWh = totalShiftedLoadV2GStored_kWh;&#xD;
		}&#xD;
		&#xD;
		@Override&#xD;
		public String toString() {&#xD;
			return "Power: " + getLastFlows().get(OL_EnergyCarriers.ELECTRICITY) + " kW, capacity: " + capacityElectric_kW + " kW" ;&#xD;
		}&#xD;
&#xD;
		/**&#xD;
		 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
		 * It needs to be changed when this class gets changed&#xD;
		 */ &#xD;
		private static final long serialVersionUID = 1L;&#xD;
&#xD;
}&#xD;
</Text>
			</JavaClass>
			<JavaClass>
				<Id>1752677257516</Id>
				<Name>I_BatteryManagement</Name>
				<Folder>1752677826356</Folder>
				<Text>public interface I_BatteryManagement&#xD;
{&#xD;
void manageBattery();&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1752677992581</Id>
				<Name>J_BatteryManagementSelfConsumption</Name>
				<Folder>1752677826356</Folder>
				<Text>/**&#xD;
 * J_BatteryManagementSelfConsumption&#xD;
 */	&#xD;
public class J_BatteryManagementSelfConsumption implements I_BatteryManagement {&#xD;
&#xD;
    private GridConnection gc;&#xD;
&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_BatteryManagementSelfConsumption( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * One of the simplest battery algorithms.&#xD;
     * This algorithm tries to steer the GridConnection load towards 0.&#xD;
     * If there is overproduction and room in the battery it will charge.&#xD;
     * If there is more consumption than production it will discharge the battery to make up for the difference untill the battery is empty.&#xD;
     */&#xD;
    public void manageBattery() {&#xD;
    	gc.p_batteryAsset.f_updateAllFlows( -gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) / gc.p_batteryAsset.getCapacityElectric_kW() );&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1752678003039</Id>
				<Name>J_BatteryManagementPrice</Name>
				<Folder>1752677826356</Folder>
				<Text>/**&#xD;
 * J_BatteryManagementPrice&#xD;
 */	&#xD;
public class J_BatteryManagementPrice implements I_BatteryManagement {&#xD;
&#xD;
    private GridConnection gc;&#xD;
    // Parameters used:&#xD;
    private boolean stayWithinConnectionLimits = true; // When this flag is true the battery stays within the contracted capacity of the GC&#xD;
    private double chargeDischarge_offset_eurpkWh = 0.0; // This term determines the minimal price difference before the battery is used&#xD;
    private double WTPfeedbackGain_eurpSOC = 0.5; // This term determines the unwillingness to use the battery when it is almost full or empty&#xD;
    private double priceGain_kWhpeur = 2.0; // This term determines how strongly to ramp up power with price-delta's&#xD;
    private double lowPassFactor_fr = 0.001;&#xD;
    &#xD;
    // Internal State&#xD;
    private double electricityPriceLowPassed_eurpkWh;&#xD;
    &#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_BatteryManagementPrice( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
    &#xD;
    public J_BatteryManagementPrice( GridConnection gc, boolean stayWithinConnectionLimits, double chargeDischarge_offset_eurpkWh, double WTPfeedbackGain_eurpSOC, double priceGain_kWhpeur, double priceTimescale_h ) {&#xD;
    	this.gc = gc;&#xD;
    	this.stayWithinConnectionLimits = stayWithinConnectionLimits;&#xD;
    	this.chargeDischarge_offset_eurpkWh = chargeDischarge_offset_eurpkWh;&#xD;
    	this.WTPfeedbackGain_eurpSOC = WTPfeedbackGain_eurpSOC;&#xD;
    	this.priceGain_kWhpeur = priceGain_kWhpeur;&#xD;
        this.lowPassFactor_fr = gc.energyModel.p_timeStep_h / priceTimescale_h;&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * This algorithm determines the battery behaviour with the historical national EPEX price. &#xD;
     * It has a boolean flag wether or not to take the GC's connection capacity into account.&#xD;
     */&#xD;
    public void manageBattery() {&#xD;
	    // Get the national EPEX price&#xD;
	    double currentElectricityPriceCharge_eurpkWh = gc.energyModel.nationalEnergyMarket.f_getNationalElectricityPrice_eurpMWh()/1000;&#xD;
	&#xD;
	    // Base the WTP on a moving average price and the SOC&#xD;
	    electricityPriceLowPassed_eurpkWh += lowPassFactor_fr * ( currentElectricityPriceCharge_eurpkWh - electricityPriceLowPassed_eurpkWh );&#xD;
	    &#xD;
	    double SOC_setpoint_fr = 0.5;&#xD;
	    double SOC_deficit_fr = SOC_setpoint_fr - gc.p_batteryAsset.getCurrentStateOfCharge_fr(); // How far away from desired SOC? SOC too LOW is a POSITIVE deficit&#xD;
	&#xD;
	    // Define WTP price for charging and discharging!&#xD;
	    double WTP_charge_eurpkWh = electricityPriceLowPassed_eurpkWh - chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;&#xD;
	    double WTP_discharge_eurpkWh = electricityPriceLowPassed_eurpkWh + chargeDischarge_offset_eurpkWh + SOC_deficit_fr * WTPfeedbackGain_eurpSOC;&#xD;
	&#xD;
	    // Choose charging power based on prices and desired SOC level&#xD;
	    double chargeSetpoint_kW = 0;&#xD;
	    if ( WTP_charge_eurpkWh &gt; currentElectricityPriceCharge_eurpkWh ) {&#xD;
	    	chargeSetpoint_kW = gc.p_batteryAsset.getCapacityElectric_kW()*(WTP_charge_eurpkWh - currentElectricityPriceCharge_eurpkWh)*priceGain_kWhpeur;&#xD;
	    }&#xD;
	    else if (WTP_discharge_eurpkWh &lt; currentElectricityPriceCharge_eurpkWh) {&#xD;
	    	chargeSetpoint_kW = -gc.p_batteryAsset.getCapacityElectric_kW()*(currentElectricityPriceCharge_eurpkWh - WTP_discharge_eurpkWh)*priceGain_kWhpeur;&#xD;
	    }&#xD;
	&#xD;
	    // limit charging power to available connection capacity&#xD;
	    if( stayWithinConnectionLimits ) {&#xD;
	    	double availableChargePower_kW = gc.v_liveConnectionMetaData.contractedDeliveryCapacity_kW - gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY); // Max battery charging power within grid capacity&#xD;
	    	double availableDischargePower_kW = gc.v_liveConnectionMetaData.contractedFeedinCapacity_kW + gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY); // Max discharging power within grid capacity&#xD;
	    	chargeSetpoint_kW = min(max(chargeSetpoint_kW, -availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!&#xD;
	    }&#xD;
	&#xD;
	    gc.p_batteryAsset.f_updateAllFlows( chargeSetpoint_kW / gc.p_batteryAsset.getCapacityElectric_kW() );&#xD;
    }&#xD;
&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1752678015847</Id>
				<Name>J_BatteryManagementPeakShaving</Name>
				<Folder>1752677826356</Folder>
				<Text>/**&#xD;
 * J_BatteryManagementPeakShaving&#xD;
 */	&#xD;
public class J_BatteryManagementPeakShaving implements I_BatteryManagement {&#xD;
&#xD;
	private GridConnection gc;&#xD;
	private Agent target = gc;&#xD;
	private OL_ResultScope targetType = OL_ResultScope.GRIDCONNECTION;&#xD;
	&#xD;
	// Parameters used:&#xD;
	private double SOC_setpoint_fr = 0.5; // If there are no other influences such as vehicles or production the battery will aim for this SOC_fr&#xD;
	private double feedbackGain_fr = 1.5; // This parameter determines how strongly to aim for the SOC setpoint&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_BatteryManagementPeakShaving( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    	if (gc instanceof GCGridBattery) {&#xD;
    		target = null;&#xD;
    		this.targetType = null;    		&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public J_BatteryManagementPeakShaving( GridConnection gc, double SOC_setpoint_fr, double feedbackGain_fr ) {&#xD;
    	this.gc = gc;&#xD;
    	this.SOC_setpoint_fr = SOC_setpoint_fr;&#xD;
    	this.feedbackGain_fr = feedbackGain_fr;&#xD;
    	if (gc instanceof GCGridBattery) {&#xD;
    		target = null;&#xD;
    		this.targetType = null;    		&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    /**&#xD;
     * This algorithm tries to aim for a fixed SOC (0.5 by default) &#xD;
     * so that it can take the connection capacity of the GC into account and prevent any peaks when they occur.&#xD;
     */&#xD;
    public void manageBattery() {&#xD;
    	if (this.target == null) {&#xD;
    		gc.p_batteryAsset.f_updateAllFlows(0);&#xD;
    		return;&#xD;
    	}&#xD;
    	double feedbackGain_kWpSOC = feedbackGain_fr * gc.p_batteryAsset.getCapacityElectric_kW();&#xD;
    	double chargeSetpoint_kW = (SOC_setpoint_fr - gc.p_batteryAsset.getCurrentStateOfCharge_fr()) * feedbackGain_kWpSOC;&#xD;
    	&#xD;
    	// Try to stay within the target connection capacity&#xD;
    	double v_allowedDeliveryCapacity_kW = getDeliveryCapacity_kW();&#xD;
    	double v_allowedFeedinCapacity_kW = getFeedinCapacity_kW();&#xD;
    	double balanceElectricity_kW = getBalanceElectricity_kW();&#xD;
    	double availableChargePower_kW = v_allowedDeliveryCapacity_kW - balanceElectricity_kW; // Max battery charging power within safety margins&#xD;
    	double availableDischargePower_kW = v_allowedFeedinCapacity_kW + balanceElectricity_kW; // Max discharging power within safety margins&#xD;
&#xD;
    	chargeSetpoint_kW = min(max(chargeSetpoint_kW, -availableDischargePower_kW),availableChargePower_kW); // Don't allow too much (dis)charging!&#xD;
    	&#xD;
    	gc.p_batteryAsset.f_updateAllFlows( chargeSetpoint_kW / gc.p_batteryAsset.getCapacityElectric_kW() );&#xD;
    }&#xD;
  &#xD;
    public void setTarget( Agent agent ) {&#xD;
    	if ( agent == null) {&#xD;
    		target = null;&#xD;
    		this.targetType = null;&#xD;
    	}&#xD;
    	else if (agent == this.gc) {&#xD;
    		target = agent;&#xD;
    		this.targetType = OL_ResultScope.GRIDCONNECTION;&#xD;
    	}&#xD;
    	else if (agent instanceof GridNode) {&#xD;
    		target = agent;&#xD;
    		this.targetType = OL_ResultScope.GRIDNODE;&#xD;
    	}&#xD;
    	else if (agent instanceof EnergyCoop) {&#xD;
    		target = agent;&#xD;
    		this.targetType = OL_ResultScope.ENERGYCOOP;&#xD;
    	}&#xD;
    	else {&#xD;
    		throw new RuntimeException("Not able to set " + agent + " as a target for J_BatteryPeakShaving");&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public Agent getTarget() {&#xD;
    	return this.target;&#xD;
    }&#xD;
    &#xD;
    public void setTargetType( OL_ResultScope targetType ) {&#xD;
    	this.targetType = targetType;&#xD;
    }&#xD;
    &#xD;
    public OL_ResultScope getTargetType() {&#xD;
    	return this.targetType;&#xD;
    }&#xD;
    &#xD;
    // TODO: Make an interface with at least these 3 functions and make the agents implement it.&#xD;
    private double getDeliveryCapacity_kW() {&#xD;
	    	switch (targetType) {&#xD;
			case GRIDCONNECTION:&#xD;
	    		return gc.v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
			case GRIDNODE:&#xD;
	    		return ((GridNode)target).p_capacity_kW;&#xD;
			case ENERGYCOOP:&#xD;
	    		return ((EnergyCoop)target).v_liveConnectionMetaData.contractedDeliveryCapacity_kW;&#xD;
	    	default:&#xD;
	    		throw new RuntimeException("Was not able to find the delivery capacity of the target of the battery in GridConnection: " + gc.p_gridConnectionID);&#xD;
		}&#xD;
    }&#xD;
    &#xD;
    private double getFeedinCapacity_kW() {&#xD;
    	switch (targetType) {&#xD;
			case GRIDCONNECTION:&#xD;
	    		return gc.v_liveConnectionMetaData.contractedFeedinCapacity_kW;&#xD;
			case GRIDNODE:&#xD;
	    		return ((GridNode)target).p_capacity_kW;&#xD;
			case ENERGYCOOP:&#xD;
	    		return ((EnergyCoop)target).v_liveConnectionMetaData.contractedFeedinCapacity_kW;&#xD;
	    	default:&#xD;
	    		throw new RuntimeException("Was not able to find the feedin capacity of the target of the battery in GridConnection: " + gc.p_gridConnectionID);&#xD;
		}&#xD;
    }&#xD;
    &#xD;
    private double getBalanceElectricity_kW() {&#xD;
    	switch (targetType) {&#xD;
    		case GRIDCONNECTION:&#xD;
        		return gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    		case GRIDNODE:&#xD;
        		return ((GridNode)target).v_currentLoad_kW - gc.p_batteryAsset.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
    		case ENERGYCOOP:&#xD;
        		return ((EnergyCoop)target).fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.ELECTRICITY) - gc.p_batteryAsset.getLastFlows().get(OL_EnergyCarriers.ELECTRICITY);&#xD;
        	default:&#xD;
        		throw new RuntimeException("Was not able to find the electricity balance of the target of the battery in GridConnection: " + gc.p_gridConnectionID);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
    &#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1752678031327</Id>
				<Name>J_BatteryManagementPeakShavingForecast</Name>
				<Folder>1752677826356</Folder>
				<Text>import zeroPackage.ZeroMath;&#xD;
/**&#xD;
 * J_BatteryManagementPeakShavingForecast&#xD;
 */	&#xD;
public class J_BatteryManagementPeakShavingForecast implements I_BatteryManagement {&#xD;
	&#xD;
	private double[] batteryChargingForecast_kW = new double[96];&#xD;
    private GridConnection gc;&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_BatteryManagementPeakShavingForecast( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    /**&#xD;
     * &#xD;
     */&#xD;
    public void manageBattery() {&#xD;
		int index = roundToInt((gc.energyModel.t_h % 24)/gc.energyModel.p_timeStep_h);&#xD;
		if(index == 0){&#xD;
			this.f_peakShavingForecast();&#xD;
		}&#xD;
		gc.p_batteryAsset.f_updateAllFlows( this.batteryChargingForecast_kW[index] / gc.p_batteryAsset.getCapacityElectric_kW() );&#xD;
    }&#xD;
    &#xD;
    private void f_peakShavingForecast() {&#xD;
    	double amountOfHoursInADay = 24;&#xD;
    	double[] nettoBalance_kW = new double[96];&#xD;
&#xD;
    	//Get elec consumption profile&#xD;
    	J_EAProfile elecConsumptionProfile = findFirst(gc.c_profileAssets, profile -&gt; profile.profileType == OL_ProfileAssetType.ELECTRICITYBASELOAD);&#xD;
&#xD;
    	J_EAConsumption elecConsumptionConsumptionAsset = findFirst(gc.c_consumptionAssets, cons -&gt; cons.energyAssetType == OL_EnergyAssetType.ELECTRICITY_DEMAND);&#xD;
&#xD;
    	J_EAProduction elecProductionAsset = findFirst(gc.c_productionAssets, prod -&gt; prod.energyAssetType == OL_EnergyAssetType.PHOTOVOLTAIC);&#xD;
&#xD;
    	//For simulation that cross the year end&#xD;
    	double hour_of_simulation_year = gc.energyModel.t_h - gc.energyModel.p_runStartTime_h;&#xD;
    	//traceln("hour_of_year: " + hour_of_simulation_year);&#xD;
&#xD;
    	int startTimeDayIndex = roundToInt(hour_of_simulation_year/gc.energyModel.p_timeStep_h);&#xD;
    	int endTimeDayIndex = roundToInt((hour_of_simulation_year + 24)/gc.energyModel.p_timeStep_h);&#xD;
&#xD;
    	if(elecConsumptionProfile != null){&#xD;
    		nettoBalance_kW = ZeroMath.arrayMultiply(Arrays.copyOfRange(elecConsumptionProfile.a_energyProfile_kWh, startTimeDayIndex, endTimeDayIndex), 1/gc.energyModel.p_timeStep_h);&#xD;
    	}&#xD;
    	if(elecConsumptionConsumptionAsset != null){&#xD;
    		for(double time = gc.energyModel.t_h; time &lt; gc.energyModel.t_h + 24; time += gc.energyModel.p_timeStep_h){&#xD;
    			nettoBalance_kW[roundToInt((time-gc.energyModel.t_h)/gc.energyModel.p_timeStep_h)] += elecConsumptionConsumptionAsset.profilePointer.getValue(time)*elecConsumptionConsumptionAsset.yearlyDemand_kWh*elecConsumptionConsumptionAsset.getConsumptionScaling_fr();&#xD;
    		}&#xD;
    	}&#xD;
&#xD;
    	if(elecProductionAsset != null){&#xD;
    		for(double time = gc.energyModel.t_h; time &lt; gc.energyModel.t_h + 24; time += gc.energyModel.p_timeStep_h){&#xD;
    			nettoBalance_kW[roundToInt((time-gc.energyModel.t_h)/gc.energyModel.p_timeStep_h)] -= elecProductionAsset.profilePointer.getValue(time)*elecProductionAsset.getCapacityElectric_kW();&#xD;
    		}&#xD;
    	}&#xD;
&#xD;
&#xD;
    	////Fill chargesetpoint Array&#xD;
&#xD;
    	//Initialize chargepoint array&#xD;
    	this.batteryChargingForecast_kW = new double[96];&#xD;
&#xD;
&#xD;
    	//Calculate the total export over the day that can be collected by the battery&#xD;
    	double totalExport_kWh = 0;&#xD;
    	for(int i = 0; i &lt; nettoBalance_kW.length; i++){&#xD;
    		if(nettoBalance_kW[i] &lt; 0){&#xD;
    			totalExport_kWh += min(gc.p_batteryAsset.getCapacityElectric_kW(), -nettoBalance_kW[i])*gc.energyModel.p_timeStep_h;&#xD;
    		}&#xD;
    	}&#xD;
    		&#xD;
&#xD;
    	//Flatten the morning net balance while charging&#xD;
    	double totalDailyImport_kWh = 0;&#xD;
    	for(int i = 0; i &lt; nettoBalance_kW.length; i++){&#xD;
    		if(i&lt; amountOfHoursInADay/gc.energyModel.p_timeStep_h){&#xD;
    			totalDailyImport_kWh += max(0,nettoBalance_kW[i]*gc.energyModel.p_timeStep_h);&#xD;
    		}&#xD;
    	}&#xD;
    	double batteryEnergyNeeded_kWh = max(0,(gc.p_batteryAsset.getStorageCapacity_kWh()*(1-gc.p_batteryAsset.getCurrentStateOfCharge_fr()))-totalExport_kWh);&#xD;
    	double averageDailyConsumption_kW = (totalDailyImport_kWh + batteryEnergyNeeded_kWh)/amountOfHoursInADay;&#xD;
&#xD;
    	//If 24 hours&#xD;
    	for(int i = 0; i &lt; nettoBalance_kW.length; i++){&#xD;
    		this.batteryChargingForecast_kW[i] += averageDailyConsumption_kW - nettoBalance_kW[i];&#xD;
    	}&#xD;
    	return;&#xD;
    }&#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753169766770</Id>
				<Name>J_BatteryManagementOff</Name>
				<Folder>1752677826356</Folder>
				<Text>/**&#xD;
 * J_BatteryManagementOff&#xD;
 */	&#xD;
public class J_BatteryManagementOff implements I_BatteryManagement {&#xD;
&#xD;
	GridConnection gc;&#xD;
	&#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_BatteryManagementOff( GridConnection gc) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    public void manageBattery() {&#xD;
    	gc.p_batteryAsset.f_updateAllFlows(0.0);&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753088272170</Id>
				<Name>I_HeatingManagement</Name>
				<Folder>1753194088788</Folder>
				<Text>public interface I_HeatingManagement&#xD;
{&#xD;
void manageHeating();&#xD;
// Initiliaze throws an exception when the configuration of assets is not a valid combination&#xD;
void initializeAssets();&#xD;
// not initialized sets the isInitialized flag to false. Is called when the (heating) assets in the GC change&#xD;
void notInitialized();&#xD;
// Every implementation must have a list of all its valid heating types that it supports&#xD;
List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes();&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753088398654</Id>
				<Name>J_HeatingManagementBuildingSimple</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementBuildingSimple&#xD;
 */	&#xD;
public class J_HeatingManagementBuildingSimple implements I_HeatingManagement {&#xD;
&#xD;
    private boolean isInitialized = false;&#xD;
    private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.GASBURNER, &#xD;
		OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP, &#xD;
		OL_GridConnectionHeatingType.HYDROGENBURNER,&#xD;
		OL_GridConnectionHeatingType.HEATPUMP_AIR,&#xD;
		OL_GridConnectionHeatingType.DISTRICTHEAT,&#xD;
		OL_GridConnectionHeatingType.LT_DISTRICTHEAT&#xD;
	);&#xD;
	private J_EABuilding building;	&#xD;
    private J_EAConversion heatingAsset;&#xD;
    &#xD;
    private double startOfDay_h = 8;&#xD;
    private double startOfNight_h = 23;&#xD;
    private double dayTimeSetPoint_degC = 19;&#xD;
    private double nightTimeSetPoint_degC = 19;&#xD;
    private double heatingKickinTreshhold_degC = 1;&#xD;
    &#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementBuildingSimple( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    	this.building = gc.p_BuildingThermalAsset;&#xD;
    }&#xD;
&#xD;
    public J_HeatingManagementBuildingSimple( GridConnection gc, double startOfDay_h, double startOfNight_h, double dayTimeSetPoint_degC, double nightTimeSetPoint_degC, double heatingKickinTreshhold_degC ) {&#xD;
    	this.gc = gc;&#xD;
    	this.building = gc.p_BuildingThermalAsset;&#xD;
    	this.startOfDay_h = startOfDay_h;&#xD;
        this.startOfNight_h = startOfNight_h;&#xD;
        this.dayTimeSetPoint_degC = dayTimeSetPoint_degC;&#xD;
        this.nightTimeSetPoint_degC = nightTimeSetPoint_degC;&#xD;
        this.heatingKickinTreshhold_degC = heatingKickinTreshhold_degC;	&#xD;
    }&#xD;
    &#xD;
    public void manageHeating() {&#xD;
    	if ( !isInitialized ) {&#xD;
    		this.initializeAssets();&#xD;
    	}&#xD;
    	double heatDemand_kW = gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    	double buildingTemp_degC = building.getCurrentTemperature();&#xD;
    	double timeOfDay_h = gc.energyModel.t_hourOfDay;&#xD;
    	if (timeOfDay_h &lt; startOfDay_h || timeOfDay_h &gt;= startOfNight_h) {&#xD;
    		if (buildingTemp_degC &lt; nightTimeSetPoint_degC - heatingKickinTreshhold_degC) {&#xD;
    			// Nighttime and building temperature too low&#xD;
    			double buildingPower_kW = heatingAsset.getOutputCapacity_kW() - heatDemand_kW;&#xD;
    			building.f_updateAllFlows( buildingPower_kW / building.getCapacityHeat_kW() );&#xD;
    			heatingAsset.f_updateAllFlows( 1.0 );&#xD;
    			return;&#xD;
    		}&#xD;
    		else {&#xD;
    			// Nighttime and building temperature acceptable&#xD;
    			building.f_updateAllFlows( 0.0 );&#xD;
    			heatingAsset.f_updateAllFlows( heatDemand_kW / heatingAsset.getOutputCapacity_kW() );&#xD;
    			return;&#xD;
    		}&#xD;
    	}&#xD;
    	else {&#xD;
    		if (buildingTemp_degC &lt; dayTimeSetPoint_degC - heatingKickinTreshhold_degC) {&#xD;
    			// Daytime and building temperature too low&#xD;
    			double buildingPower_kW = heatingAsset.getOutputCapacity_kW() - heatDemand_kW;&#xD;
    			building.f_updateAllFlows( buildingPower_kW / building.getCapacityHeat_kW() );&#xD;
    			heatingAsset.f_updateAllFlows( 1.0 );&#xD;
    			return;&#xD;
    		}&#xD;
    		else {&#xD;
    			// Daytime and building temperature acceptable&#xD;
    			building.f_updateAllFlows( 0.0 );&#xD;
    			heatingAsset.f_updateAllFlows( heatDemand_kW / heatingAsset.getOutputCapacity_kW() );&#xD;
    			return;&#xD;
    		}&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (building == null) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a building asset.");&#xD;
    	}&#xD;
    	J_EAConsumption heatProfile = findFirst(gc.c_consumptionAssets, x -&gt; x.getEAType() == OL_EnergyAssetType.HEAT_DEMAND &amp;&amp; x.getEAType() != OL_EnergyAssetType.HOT_WATER_CONSUMPTION);&#xD;
    	if (heatProfile != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support HEAT_DEMAND profiles.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() == 0) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires at least one heating asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() &gt; 1) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support more than one heating asset.");&#xD;
    	}&#xD;
    	// TODO: Add a check if the power of the asset is sufficient?&#xD;
    	// TODO: Add a check if the heatingAsset is of the correct type, e.g. not a hydrogen burner or not a CHP.&#xD;
    	this.heatingAsset = gc.c_heatingAssets.get(0);&#xD;
    	this.isInitialized = true;&#xD;
    }&#xD;
    &#xD;
    public void notInitialized() {&#xD;
    	this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753090559114</Id>
				<Name>J_HeatingManagementProfileSimple</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementProfileSimple&#xD;
 */	&#xD;
public class J_HeatingManagementProfileSimple implements I_HeatingManagement {&#xD;
&#xD;
	private boolean isInitialized = false;&#xD;
	private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.GASBURNER, &#xD;
		OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP, &#xD;
		OL_GridConnectionHeatingType.HYDROGENBURNER,&#xD;
		OL_GridConnectionHeatingType.HEATPUMP_AIR,&#xD;
		OL_GridConnectionHeatingType.DISTRICTHEAT,&#xD;
		OL_GridConnectionHeatingType.LT_DISTRICTHEAT&#xD;
	);&#xD;
	private J_EAConversion heatingAsset;&#xD;
    &#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementProfileSimple( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    public void manageHeating() {&#xD;
    	if ( !isInitialized ) {&#xD;
    		this.initializeAssets();&#xD;
    	}&#xD;
    	double heatDemand_kW = gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    	heatingAsset.f_updateAllFlows( heatDemand_kW / heatingAsset.getOutputCapacity_kW() );&#xD;
    	//blah blah&#xD;
    	// 2 assets :)&#xD;
    }&#xD;
    &#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.c_heatingTypes.size() != 1) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (gc.p_BuildingThermalAsset != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support a building asset.");&#xD;
    	}&#xD;
    	J_EAConsumption heatProfile = findFirst(gc.c_consumptionAssets, x -&gt; x.getEAType() == OL_EnergyAssetType.HEAT_DEMAND &amp;&amp; x.getEAType() != OL_EnergyAssetType.HOT_WATER_CONSUMPTION);&#xD;
    	if (heatProfile == null) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a HEAT_DEMAND profile.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() == 0) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires at least one heating asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() &gt; 1) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support more than one heating asset.");&#xD;
    	}&#xD;
    	// TODO: Add a check if the power of the asset is sufficient?&#xD;
    	// TODO: Add a check if the heatingAsset is of the correct type, e.g. not a hydrogen burner or not a CHP.&#xD;
    	this.heatingAsset = gc.c_heatingAssets.get(0);&#xD;
    	this.isInitialized = true;&#xD;
    }&#xD;
    &#xD;
    public void notInitialized() {&#xD;
    	this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753100278618</Id>
				<Name>J_HeatingManagementProfileHybridHeatPump</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementProfileHybridHeatPump&#xD;
 */	&#xD;
public class J_HeatingManagementProfileHybridHeatPump implements I_HeatingManagement {&#xD;
	&#xD;
	private boolean isInitialized = false;&#xD;
	private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.HYBRID_HEATPUMP&#xD;
	);&#xD;
	private J_EAConversionHeatPump heatPumpAsset;&#xD;
	private J_EAConversionGasBurner gasBurnerAsset;&#xD;
    &#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementProfileHybridHeatPump( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    public void manageHeating() {&#xD;
    	if ( !isInitialized ) {&#xD;
    		this.initializeAssets();&#xD;
    	}&#xD;
    	double heatDemand_kW = gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    	if (heatPumpAsset.getCOP() &gt; 3.0 ) {&#xD;
    		if (heatDemand_kW &lt; heatPumpAsset.getOutputCapacity_kW()) {&#xD;
    			heatPumpAsset.f_updateAllFlows( heatDemand_kW / heatPumpAsset.getOutputCapacity_kW() );&#xD;
    			gasBurnerAsset.f_updateAllFlows( 0.0 );&#xD;
    			return;&#xD;
    		}&#xD;
    		else if (heatDemand_kW &lt; heatPumpAsset.getOutputCapacity_kW() + gasBurnerAsset.getOutputCapacity_kW() ) {&#xD;
    			heatPumpAsset.f_updateAllFlows( 1.0 );&#xD;
    			gasBurnerAsset.f_updateAllFlows( (heatDemand_kW - heatPumpAsset.getOutputCapacity_kW()) / gasBurnerAsset.getOutputCapacity_kW() );&#xD;
    			return;&#xD;
    		}&#xD;
    		else {&#xD;
    			throw new RuntimeException(this.getClass() + " in GC: " + gc.p_gridConnectionID + " does not have enough combined capacity to fulfil the heat demand");&#xD;
    		}&#xD;
    	}&#xD;
    	else {&#xD;
    		if (heatDemand_kW &lt; gasBurnerAsset.getOutputCapacity_kW()) {&#xD;
    			gasBurnerAsset.f_updateAllFlows( heatDemand_kW / gasBurnerAsset.getOutputCapacity_kW() );&#xD;
    			heatPumpAsset.f_updateAllFlows( 0.0 );&#xD;
    			return;&#xD;
    		}&#xD;
    		else if (heatDemand_kW &lt; gasBurnerAsset.getOutputCapacity_kW() + heatPumpAsset.getOutputCapacity_kW() ) {&#xD;
    			gasBurnerAsset.f_updateAllFlows( 1.0 );&#xD;
    			heatPumpAsset.f_updateAllFlows( (heatDemand_kW - gasBurnerAsset.getOutputCapacity_kW()) / heatPumpAsset.getOutputCapacity_kW() );&#xD;
    			return;&#xD;
    		}&#xD;
    		else {&#xD;
    			throw new RuntimeException(this.getClass() + " in GC: " + gc.p_gridConnectionID + " does not have enough combined capacity to fulfil the heat demand");&#xD;
    		}&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (gc.p_BuildingThermalAsset != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support a building asset.");&#xD;
    	}&#xD;
    	J_EAConsumption heatProfile = findFirst(gc.c_consumptionAssets, x -&gt; x.getEAType() == OL_EnergyAssetType.HEAT_DEMAND &amp;&amp; x.getEAType() != OL_EnergyAssetType.HOT_WATER_CONSUMPTION);&#xD;
    	if (heatProfile == null) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a HEAT_DEMAND profile.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() != 2) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires exactly two heating assets.");&#xD;
    	}&#xD;
    	// TODO: Add a check if the power of the asset is sufficient?&#xD;
    	if (gc.c_heatingAssets.get(0) instanceof J_EAConversionGasBurner) {&#xD;
    		this.gasBurnerAsset = (J_EAConversionGasBurner)gc.c_heatingAssets.get(0);&#xD;
    	}&#xD;
    	else if (gc.c_heatingAssets.get(1) instanceof J_EAConversionGasBurner) {&#xD;
    		this.gasBurnerAsset = (J_EAConversionGasBurner)gc.c_heatingAssets.get(1);    		&#xD;
    	}&#xD;
    	else {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a Gas Burner");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.get(0) instanceof J_EAConversionHeatPump) {&#xD;
    		this.heatPumpAsset = (J_EAConversionHeatPump)gc.c_heatingAssets.get(0);&#xD;
    	}&#xD;
    	else if (gc.c_heatingAssets.get(1) instanceof J_EAConversionHeatPump) {&#xD;
    		this.heatPumpAsset = (J_EAConversionHeatPump)gc.c_heatingAssets.get(1);    		&#xD;
    	}&#xD;
    	else {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a Heat Pump");&#xD;
    	}&#xD;
    	this.isInitialized = true;&#xD;
    }&#xD;
    &#xD;
    public void notInitialized() {&#xD;
    	this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753102129145</Id>
				<Name>J_HeatingManagementDistrictHeating</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementDistrictHeating&#xD;
 */	&#xD;
public class J_HeatingManagementDistrictHeating implements Serializable {&#xD;
&#xD;
	private boolean isInitialized = false;&#xD;
	private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.GAS_BURNER,&#xD;
		OL_GridConnectionHeatingType.ELECTRIC_HEATPUMP, &#xD;
		OL_GridConnectionHeatingType.HYDROGENBURNER&#xD;
	);&#xD;
	private J_EAConversion heatingAsset;&#xD;
	&#xD;
	private double previousHeatFeedin_kW = 0;&#xD;
&#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementDistrictHeating( GridConnection gc ) {&#xD;
    	if (!(gc instanceof GCDistrictHeating)) {&#xD;
    		throw new RuntimeException("Impossible to connect " + this.getClass() + " to a GC that is not GCDistrictHeating");&#xD;
    	}&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    public void manageHeating() {&#xD;
    	if ( !isInitialized ) {&#xD;
    		this.initializeAssets();&#xD;
    	}&#xD;
    	// v_currentLoad_kW is the GN load of the previous timestep&#xD;
    	double heatTransferToNetwork_kW = max(0, gc.p_parentNodeHeat.v_currentLoad_kW + previousHeatFeedin_kW);&#xD;
    	if (heatTransferToNetwork_kW &gt; heatingAsset.getOutputCapacity_kW()) {&#xD;
    		throw new RuntimeException("Heating asset in " + this.getClass() + " does not have sufficient capacity.");&#xD;
    	}&#xD;
    	heatingAsset.f_updateAllFlows( heatTransferToNetwork_kW / heatingAsset.getOutputCapacity_kW() );&#xD;
    	previousHeatFeedin_kW = -gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    }&#xD;
    &#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_parentNodeHeat == null) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires the GC: " + gc.p_gridConnectionID + " to be connected to a GridNodeHeat");&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (gc.p_BuildingThermalAsset != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support a building asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() == 0) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires at least one heating asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() &gt; 1) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support more than one heating asset.");&#xD;
    	}&#xD;
    	this.heatingAsset = gc.c_heatingAssets.get(0);&#xD;
    	this.isInitialized = true;&#xD;
    }&#xD;
    &#xD;
    public void notInitialized() {&#xD;
    	this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753172542012</Id>
				<Name>J_HeatingManagementNeighborhood</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementNeighborhood&#xD;
 */	&#xD;
public class J_HeatingManagementNeighborhood implements I_HeatingManagement {&#xD;
&#xD;
    private boolean isInitialized = false;&#xD;
    private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.OTHER&#xD;
	);&#xD;
    private J_EAConversionGasBurner gasBurner;&#xD;
    private J_EAConversionHeatPump heatPump;&#xD;
    private J_EAConversionHeatDeliverySet heatDeliverySet;&#xD;
    private J_EAConversionHydrogenBurner hydrogenBurner;&#xD;
    private J_EAConversionHeatPump lowTempHeatGridHeatPump;&#xD;
        &#xD;
    private HashMap&lt;String, J_EAConsumption&gt; heatDemandProfiles = new HashMap&lt;String, J_EAConsumption&gt;();&#xD;
&#xD;
    private double thresholdCOP_hybridHeatpump = 3.5;&#xD;
&#xD;
    // Services&#xD;
    public double amountOfGasBurners_services_fr = 1;&#xD;
    public double amountOfHybridHeatpump_services_fr = 0;&#xD;
    public double amountOfElectricHeatpumps_services_fr = 0;&#xD;
    public double amountOfDistrictHeating_services_fr = 0;&#xD;
    public double amountOfLowTempHeatgrid_services_fr = 0;&#xD;
     &#xD;
    // Houses&#xD;
    public double amountOfGasBurners_houses_fr = 1;&#xD;
    public double amountOfHybridHeatpump_houses_fr = 0;&#xD;
    public double amountOfElectricHeatpumps_houses_fr = 0;&#xD;
    public double amountOfDistrictHeating_houses_fr = 0;&#xD;
    public double amountOfLowTempHeatgrid_houses_fr = 0;&#xD;
     &#xD;
    // Industry&#xD;
    public double amountOfGasBurners_industry_fr = 1;&#xD;
    public double amountOfHybridHeatpump_industry_fr = 0;&#xD;
    public double amountOfElectricHeatpumps_industry_fr = 0;&#xD;
    public double amountOfDistrictHeating_industry_fr = 0;&#xD;
    public double amountOfHydrogenUseForHeating_industry_fr = 0;&#xD;
     &#xD;
    // Agriculture&#xD;
    public double amountOfGasBurners_agriculture_fr = 1;&#xD;
    public double amountOfHybridHeatpump_agriculture_fr = 0;&#xD;
    public double amountOfElectricHeatpumps_agriculture_fr = 0;&#xD;
    public double amountOfDistrictHeating_agriculture_fr = 0;&#xD;
    &#xD;
    /**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementNeighborhood( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
    &#xD;
    public void manageHeating() {&#xD;
    	if (!isInitialized) {&#xD;
    		initializeAssets();&#xD;
    	}&#xD;
&#xD;
    	//Division of the power demand //{Gasburner power request, HP power request, DH power request, Hydrogenburner power request}&#xD;
    	double powerDemandDivision_kW[] = this.dividePowerDemandHeatingAssets(); &#xD;
&#xD;
    	//Split the power fractions (powerDemandDivision[] = {Gasburner power request, HP power request, DH power request}&#xD;
    	if(gasBurner.getOutputCapacity_kW() != 0){&#xD;
    		double powerFraction_GASBURNER = powerDemandDivision_kW[0] / gasBurner.getOutputCapacity_kW();    		&#xD;
    		//Gas burner control (always assigned to primary heating asset)	&#xD;
    		gasBurner.f_updateAllFlows(powerFraction_GASBURNER);&#xD;
    	}&#xD;
    	if(heatPump.getOutputCapacity_kW() != 0){&#xD;
    		double powerFraction_HEATPUMP  = powerDemandDivision_kW[1] / heatPump.getOutputCapacity_kW();    		&#xD;
    		//Heatpump control (always assigned to secondary heating asset)&#xD;
    		heatPump.f_updateAllFlows(powerFraction_HEATPUMP);&#xD;
    	}&#xD;
    	if(heatDeliverySet.getOutputCapacity_kW() != 0){&#xD;
    		double powerFraction_HEATDELIVERYSET = powerDemandDivision_kW[2] / heatDeliverySet.getOutputCapacity_kW();    		&#xD;
    		//Heat delivery set control (always assigned to tertiary heating asset)&#xD;
    		heatDeliverySet.f_updateAllFlows(powerFraction_HEATDELIVERYSET);&#xD;
    	}&#xD;
    	if(hydrogenBurner.getOutputCapacity_kW() != 0){&#xD;
    		double powerFraction_HYDROGENBURNER = powerDemandDivision_kW[3] / hydrogenBurner.getOutputCapacity_kW();&#xD;
    		//Hydrogen burner(always assigned to quaternary heating asset)&#xD;
    		hydrogenBurner.f_updateAllFlows(powerFraction_HYDROGENBURNER);&#xD;
    	}&#xD;
    	if(lowTempHeatGridHeatPump.getOutputCapacity_kW() != 0){&#xD;
    		double powerFraction_LOWTEMPHEATGRID = powerDemandDivision_kW[4] / lowTempHeatGridHeatPump.getOutputCapacity_kW();&#xD;
    		//Hydrogen burner(always assigned to quaternary heating asset)&#xD;
    		lowTempHeatGridHeatPump.f_updateAllFlows(powerFraction_LOWTEMPHEATGRID);&#xD;
    	}&#xD;
    }&#xD;
    &#xD;
    public double[] dividePowerDemandHeatingAssets() {&#xD;
    	//Initialize power demand division array&#xD;
    	double powerDemandDivision_kW[] = {0, 0, 0, 0, 0}; // {Gasburner power request, HP power request, DH power request, Hydrogenburner power request, lowTempHeatgridPowerDemand}&#xD;
&#xD;
    	//Calculate fraction of total heat demand delivered by the CHP&#xD;
    	/*&#xD;
    	double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    	double fractionOfTotalHeatDemandDeliveredyByCHP = max(0,p_chpAsset.getLastFlows().get(OL_EnergyCarriers.HEAT))/powerDemand_kW;&#xD;
    	double remainingFraction = fractionOfTotalHeatDemandDeliveredyByCHP;&#xD;
    	*/&#xD;
    	//Demanded total heating power at the current time step&#xD;
    	//double powerDemand_kW = fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
&#xD;
    	//Demanded heating power for companies and household seperatly the current time step&#xD;
    	double powerDemand_households_kW = max(0,heatDemandProfiles.get("HOUSEHOLDS").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
    	double powerDemand_agriculture_kW = max(0,heatDemandProfiles.get("AGRICULTURE").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
    	double powerDemand_industry_kW = max(0,heatDemandProfiles.get("INDUSTRY").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
    	double powerDemand_services_kW = max(0,heatDemandProfiles.get("SERVICES").getLastFlows().get(OL_EnergyCarriers.HEAT));&#xD;
&#xD;
    	//Divide the powerdemand per heating type&#xD;
    	double gasBurnerPowerDemand_kW 		= powerDemand_households_kW*amountOfGasBurners_houses_fr + &#xD;
    										  powerDemand_agriculture_kW*amountOfGasBurners_agriculture_fr +&#xD;
    										  powerDemand_industry_kW*amountOfGasBurners_industry_fr + &#xD;
    										  powerDemand_services_kW*amountOfGasBurners_services_fr;&#xD;
    										  &#xD;
    	double electricHPPowerDemand_kW 		= powerDemand_households_kW*amountOfElectricHeatpumps_houses_fr + &#xD;
    										  powerDemand_agriculture_kW*amountOfElectricHeatpumps_agriculture_fr + &#xD;
    										  powerDemand_industry_kW*amountOfElectricHeatpumps_industry_fr + &#xD;
    										  powerDemand_services_kW*amountOfElectricHeatpumps_services_fr;&#xD;
    										  &#xD;
    	double hybridHPPowerDemand_kW 	   		= powerDemand_households_kW*amountOfHybridHeatpump_houses_fr +&#xD;
    										  powerDemand_agriculture_kW*amountOfHybridHeatpump_agriculture_fr +&#xD;
    										  powerDemand_industry_kW*amountOfHybridHeatpump_industry_fr + &#xD;
    										  powerDemand_services_kW*amountOfHybridHeatpump_services_fr;&#xD;
    										  &#xD;
    	double districtHeatingPowerDemand_kW   = powerDemand_households_kW*amountOfDistrictHeating_houses_fr +&#xD;
    										  powerDemand_agriculture_kW*amountOfDistrictHeating_agriculture_fr + &#xD;
    										  powerDemand_industry_kW*amountOfDistrictHeating_industry_fr + &#xD;
    										  powerDemand_services_kW*amountOfDistrictHeating_services_fr;&#xD;
    															  &#xD;
    	double hydrogenBurnerPowerDemand_kW	= powerDemand_industry_kW*amountOfHydrogenUseForHeating_industry_fr;&#xD;
&#xD;
    	double lowTempHeatgridPowerDemand_kW 	= powerDemand_households_kW*amountOfLowTempHeatgrid_houses_fr + &#xD;
    										  powerDemand_services_kW*amountOfLowTempHeatgrid_services_fr;&#xD;
    	//double lowTempHeatgridPowerDemand_kW = (powerDemand_households_kW + powerDemand_agriculture_kW + powerDemand_industry_kW + powerDemand_services_kW) - hybridHPPowerDemand - electricHPPowerDemand - gasBurnerPowerDemand - districtHeatingPowerDemand - hydrogenBurnerPowerDemand; // To make sure all power demand is met&#xD;
    										  &#xD;
    	//Get the current Heatpump COP&#xD;
    	double HP_COP = ((J_EAConversionHeatPump)heatPump).getCOP();&#xD;
&#xD;
    	if ( HP_COP &lt; thresholdCOP_hybridHeatpump ) { // switch to gasburner when HP COP is below treshold&#xD;
    		powerDemandDivision_kW[0] = max(0, gasBurnerPowerDemand_kW + hybridHPPowerDemand_kW);&#xD;
    		powerDemandDivision_kW[1] = max(0, electricHPPowerDemand_kW);&#xD;
    	}&#xD;
    	else{&#xD;
    		powerDemandDivision_kW[0] = max(0, gasBurnerPowerDemand_kW);&#xD;
    		powerDemandDivision_kW[1] = max(0, electricHPPowerDemand_kW + hybridHPPowerDemand_kW);&#xD;
    	}&#xD;
    	powerDemandDivision_kW[2] = max(0, districtHeatingPowerDemand_kW);&#xD;
    	powerDemandDivision_kW[3] = max(0, hydrogenBurnerPowerDemand_kW);&#xD;
    	powerDemandDivision_kW[4] = max(0, lowTempHeatgridPowerDemand_kW);&#xD;
&#xD;
    	return powerDemandDivision_kW; //{Gasburner power request, HP power request, DH power request, Hydrogenburner power request, lowTempHeatgridPowerDemand};&#xD;
    }&#xD;
    &#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (gc.p_BuildingThermalAsset != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support a building asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() != 5) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires exactly 5 heating assets");&#xD;
    	}&#xD;
    	if (heatDemandProfiles.size() != 4) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires exactly 4 heating profiles");&#xD;
    	}&#xD;
    	&#xD;
    	gasBurner = null;&#xD;
    	heatPump = null;&#xD;
    	lowTempHeatGridHeatPump = null;&#xD;
    	heatDeliverySet = null;&#xD;
    	hydrogenBurner = null;&#xD;
    	&#xD;
    	for (J_EAConversion heatingAsset : gc.c_heatingAssets) {&#xD;
    		if (heatingAsset instanceof J_EAConversionGasBurner) {&#xD;
    			if (gasBurner != null) {&#xD;
    	    		throw new RuntimeException(this.getClass() + " does not support two gasburners");&#xD;
    			}&#xD;
    			gasBurner = (J_EAConversionGasBurner)heatingAsset;&#xD;
    		}&#xD;
    		else if (heatingAsset instanceof J_EAConversionHeatPump) {&#xD;
    			if (((J_EAConversionHeatPump)heatingAsset).getAmbientTempType() == OL_AmbientTempType.AMBIENT_AIR) {&#xD;
        			if (heatPump != null) {&#xD;
        	    		throw new RuntimeException(this.getClass() + " does not support two ambient air heatpumps");&#xD;
        			}&#xD;
        			heatPump = (J_EAConversionHeatPump)heatingAsset;&#xD;
    			}&#xD;
    			else if (((J_EAConversionHeatPump)heatingAsset).getAmbientTempType() == OL_AmbientTempType.HEAT_GRID) {&#xD;
        			if (lowTempHeatGridHeatPump != null) {&#xD;
        	    		throw new RuntimeException(this.getClass() + " does not support two heat grid heatpumps");&#xD;
        			}&#xD;
        			lowTempHeatGridHeatPump = (J_EAConversionHeatPump)heatingAsset;&#xD;
    			}&#xD;
    			else {&#xD;
    	    		throw new RuntimeException(this.getClass() + " does not support heatpumps with ambient type: " + ((J_EAConversionHeatPump)heatingAsset).getAmbientTempType());&#xD;
    			}&#xD;
    		}&#xD;
    		else if (heatingAsset instanceof J_EAConversionHeatDeliverySet) {&#xD;
    			if (heatDeliverySet != null) {&#xD;
    	    		throw new RuntimeException(this.getClass() + " does not support two heat delivery sets");&#xD;
    			}&#xD;
    			heatDeliverySet = (J_EAConversionHeatDeliverySet)heatingAsset;&#xD;
    		}&#xD;
    		else if (heatingAsset instanceof J_EAConversionHydrogenBurner) {&#xD;
    			if (hydrogenBurner != null) {&#xD;
    	    		throw new RuntimeException(this.getClass() + " does not support two hydrogenburners");&#xD;
    			}&#xD;
    			hydrogenBurner = (J_EAConversionHydrogenBurner)heatingAsset;&#xD;
    		}&#xD;
    		else {&#xD;
	    		throw new RuntimeException(this.getClass() + " does not support heating assets of type: " + heatingAsset.getClass());    			&#xD;
    		}&#xD;
    	}&#xD;
    	isInitialized = true;&#xD;
    }&#xD;
    &#xD;
    public void notInitialized() {&#xD;
		this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
    public void setHeatingMethodPct_services( double[] pctArray ) {&#xD;
    	amountOfGasBurners_services_fr = pctArray[0]/100;&#xD;
    	amountOfElectricHeatpumps_services_fr = pctArray[1]/100;&#xD;
    	amountOfHybridHeatpump_services_fr = pctArray[2]/100;&#xD;
    	amountOfDistrictHeating_services_fr = pctArray[3]/100;&#xD;
    	amountOfLowTempHeatgrid_services_fr = pctArray[4]/100;&#xD;
    }&#xD;
    &#xD;
    public void setHeatingMethodPct_houses( double[] pctArray ) {&#xD;
    	amountOfGasBurners_houses_fr = pctArray[0]/100;&#xD;
    	amountOfElectricHeatpumps_houses_fr = pctArray[1]/100;&#xD;
    	amountOfHybridHeatpump_houses_fr = pctArray[2]/100;&#xD;
    	amountOfDistrictHeating_houses_fr = pctArray[3]/100;&#xD;
    	amountOfLowTempHeatgrid_houses_fr = pctArray[4]/100;&#xD;
    }&#xD;
    &#xD;
    public void setHeatingMethodPct_industry( double[] pctArray ) {&#xD;
    	//Calculate actual space heating &#xD;
    	double actualHeatingDemandSpaceHeating_fr =  (1 - amountOfHydrogenUseForHeating_industry_fr);&#xD;
    	amountOfGasBurners_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[0]/100;&#xD;
    	amountOfElectricHeatpumps_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[1]/100;&#xD;
    	amountOfHybridHeatpump_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[2]/100;&#xD;
    	amountOfDistrictHeating_industry_fr = actualHeatingDemandSpaceHeating_fr * pctArray[3]/100;&#xD;
    }&#xD;
    &#xD;
    public void setH2HeatingFr_industry( double amountOfHydrogenUseForHeating_fr ) {&#xD;
    	//Get current values&#xD;
    	if(amountOfHydrogenUseForHeating_fr &gt;= 1){&#xD;
    		//throw new RuntimeException("Can not replace all gas in industry with hydrogen! The model does not support this.");&#xD;
    		amountOfHydrogenUseForHeating_fr = 0.999;&#xD;
    	}&#xD;
    	double actualHeatingDemandSpaceHeating_fr =  (1 - amountOfHydrogenUseForHeating_industry_fr);&#xD;
    	double[] currentPctArray = {amountOfGasBurners_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
    								amountOfHybridHeatpump_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
    								amountOfElectricHeatpumps_industry_fr*100/actualHeatingDemandSpaceHeating_fr, &#xD;
    								amountOfDistrictHeating_industry_fr*100/actualHeatingDemandSpaceHeating_fr};&#xD;
&#xD;
    	//Set new hydrogen use for heating fr&#xD;
    	amountOfHydrogenUseForHeating_industry_fr = min(1, amountOfHydrogenUseForHeating_fr);&#xD;
&#xD;
&#xD;
    	//Set new values&#xD;
    	this.setHeatingMethodPct_industry(currentPctArray);&#xD;
    }&#xD;
    &#xD;
    public void setHeatingMethodPct_agriculture( double[] pctArray ) {&#xD;
    	amountOfGasBurners_agriculture_fr = pctArray[0]/100;&#xD;
    	amountOfElectricHeatpumps_agriculture_fr = pctArray[1]/100;&#xD;
    	amountOfHybridHeatpump_agriculture_fr = pctArray[2]/100;&#xD;
    	amountOfDistrictHeating_agriculture_fr = pctArray[3]/100;&#xD;
    }&#xD;
    &#xD;
    public void addHeatDemandProfile(String name, J_EAConsumption profile) {&#xD;
    	heatDemandProfiles.put(name, profile);&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
			<JavaClass>
				<Id>1753167599716</Id>
				<Name>J_HeatingManagementBuildingHybridHeatPump</Name>
				<Folder>1753194088788</Folder>
				<Text>/**&#xD;
 * J_HeatingManagementBuildingHybridHeatPump&#xD;
 */	&#xD;
public class J_HeatingManagementBuildingHybridHeatPump implements I_HeatingManagement {&#xD;
&#xD;
	private boolean isInitialized = false;&#xD;
	private GridConnection gc;&#xD;
	private List&lt;OL_GridConnectionHeatingType&gt; validHeatingTypes = Arrays.asList(&#xD;
		OL_GridConnectionHeatingType.HYBRID_HEATPUMP&#xD;
	);&#xD;
	private J_EABuilding building;	&#xD;
	private J_EAConversionHeatPump heatPumpAsset;&#xD;
	private J_EAConversionGasBurner gasBurnerAsset;&#xD;
	&#xD;
    private double startOfDay_h = 8;&#xD;
    private double startOfNight_h = 23;&#xD;
    private double dayTimeSetPoint_degC = 19;&#xD;
    private double nightTimeSetPoint_degC = 19;&#xD;
    private double heatingKickinTreshhold_degC = 1;&#xD;
    &#xD;
	/**&#xD;
     * Default constructor&#xD;
     */&#xD;
    public J_HeatingManagementBuildingHybridHeatPump( GridConnection gc ) {&#xD;
    	this.gc = gc;&#xD;
    }&#xD;
&#xD;
    public J_HeatingManagementBuildingHybridHeatPump( GridConnection gc, double startOfDay_h, double startOfNight_h, double dayTimeSetPoint_degC, double nightTimeSetPoint_degC, double heatingKickinTreshhold_degC ) {&#xD;
    	this.gc = gc;&#xD;
    	this.building = gc.p_BuildingThermalAsset;&#xD;
    	this.startOfDay_h = startOfDay_h;&#xD;
        this.startOfNight_h = startOfNight_h;&#xD;
        this.dayTimeSetPoint_degC = dayTimeSetPoint_degC;&#xD;
        this.nightTimeSetPoint_degC = nightTimeSetPoint_degC;&#xD;
        this.heatingKickinTreshhold_degC = heatingKickinTreshhold_degC;	&#xD;
    }&#xD;
    &#xD;
    public void manageHeating() {&#xD;
    	if ( !isInitialized ) {&#xD;
    		this.initializeAssets();&#xD;
    	}&#xD;
    	double heatDemand_kW = gc.fm_currentBalanceFlows_kW.get(OL_EnergyCarriers.HEAT);&#xD;
    	boolean heatBuilding = false;&#xD;
    	double buildingTemp_degC = building.getCurrentTemperature();&#xD;
    	double timeOfDay_h = gc.energyModel.t_hourOfDay;&#xD;
    	if (timeOfDay_h &lt; startOfDay_h || timeOfDay_h &gt;= startOfNight_h) {&#xD;
    		if (buildingTemp_degC &lt; nightTimeSetPoint_degC - heatingKickinTreshhold_degC) {&#xD;
    			heatBuilding = true;&#xD;
    		}&#xD;
    	}&#xD;
    	else {&#xD;
    		if (buildingTemp_degC &lt; dayTimeSetPoint_degC - heatingKickinTreshhold_degC) {&#xD;
    			heatBuilding = true;&#xD;
    		}&#xD;
    	}&#xD;
    	if (heatBuilding) {&#xD;
        	if (heatPumpAsset.getCOP() &gt; 3.0 ) {&#xD;
        		double buildingPower_kW = heatPumpAsset.getOutputCapacity_kW() - heatDemand_kW;&#xD;
        		heatPumpAsset.f_updateAllFlows( 1.0 );&#xD;
        		building.f_updateAllFlows( buildingPower_kW / building.getCapacityHeat_kW() );&#xD;
        		gasBurnerAsset.f_updateAllFlows( 0.0 );&#xD;
        	}&#xD;
        	else {&#xD;
        		double buildingPower_kW = gasBurnerAsset.getOutputCapacity_kW() - heatDemand_kW;&#xD;
        		gasBurnerAsset.f_updateAllFlows( 1.0 );&#xD;
        		building.f_updateAllFlows( buildingPower_kW / building.getCapacityHeat_kW() );&#xD;
        		heatPumpAsset.f_updateAllFlows( 0.0 );&#xD;
        	}&#xD;
    	}&#xD;
    	else {&#xD;
        	if (heatPumpAsset.getCOP() &gt; 3.0 ) {&#xD;
        		heatPumpAsset.f_updateAllFlows( heatDemand_kW / heatPumpAsset.getOutputCapacity_kW() );&#xD;
        		gasBurnerAsset.f_updateAllFlows( 0.0 );&#xD;
        		building.f_updateAllFlows( 0.0 );&#xD;
        	}&#xD;
        	else {&#xD;
        		gasBurnerAsset.f_updateAllFlows( heatDemand_kW / gasBurnerAsset.getOutputCapacity_kW() );&#xD;
        		heatPumpAsset.f_updateAllFlows( 0.0 );&#xD;
        		building.f_updateAllFlows( 0.0 );&#xD;
        	}&#xD;
    	}&#xD;
    }&#xD;
&#xD;
    public void initializeAssets() {&#xD;
    	if (!validHeatingTypes.contains(gc.p_heatingType)) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heating type: " + gc.p_heatingType);&#xD;
    	}&#xD;
    	if (gc.p_heatBuffer != null) {&#xD;
    		throw new RuntimeException(this.getClass() + " does not support heat buffers.");&#xD;
    	}&#xD;
    	if (gc.p_BuildingThermalAsset == null) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a building asset.");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.size() != 2) {&#xD;
    		throw new RuntimeException(this.getClass() + " requires exactly two heating assets.");&#xD;
    	}&#xD;
    	// TODO: Add a check if the power of the asset is sufficient?&#xD;
    	if (gc.c_heatingAssets.get(0) instanceof J_EAConversionGasBurner) {&#xD;
    		this.gasBurnerAsset = (J_EAConversionGasBurner)gc.c_heatingAssets.get(0);&#xD;
    	}&#xD;
    	else if (gc.c_heatingAssets.get(1) instanceof J_EAConversionGasBurner) {&#xD;
    		this.gasBurnerAsset = (J_EAConversionGasBurner)gc.c_heatingAssets.get(1);    		&#xD;
    	}&#xD;
    	else {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a Gas Burner");&#xD;
    	}&#xD;
    	if (gc.c_heatingAssets.get(0) instanceof J_EAConversionHeatPump) {&#xD;
    		this.heatPumpAsset = (J_EAConversionHeatPump)gc.c_heatingAssets.get(0);&#xD;
    	}&#xD;
    	else if (gc.c_heatingAssets.get(1) instanceof J_EAConversionHeatPump) {&#xD;
    		this.heatPumpAsset = (J_EAConversionHeatPump)gc.c_heatingAssets.get(1);    		&#xD;
    	}&#xD;
    	else {&#xD;
    		throw new RuntimeException(this.getClass() + " requires a Heat Pump");&#xD;
    	}&#xD;
    	this.isInitialized = true;&#xD;
    }&#xD;
    public void notInitialized() {&#xD;
    	this.isInitialized = false;&#xD;
    }&#xD;
    &#xD;
    public List&lt;OL_GridConnectionHeatingType&gt; getValidHeatingTypes() {&#xD;
    	return this.validHeatingTypes;&#xD;
    }&#xD;
    &#xD;
	@Override&#xD;
	public String toString() {&#xD;
		return super.toString();&#xD;
	}&#xD;
&#xD;
	/**&#xD;
	 * This number is here for model snapshot storing purpose&lt;br&gt;&#xD;
	 * It needs to be changed when this class gets changed&#xD;
	 */ &#xD;
	private static final long serialVersionUID = 1L;&#xD;
&#xD;
}</Text>
			</JavaClass>
		</JavaClasses>
		<RequiredLibraryReference>
			<LibraryName>com.anylogic.libraries.modules.markup_descriptors</LibraryName>
			<VersionMajor>1</VersionMajor>
			<VersionMinor>0</VersionMinor>
			<VersionBuild>0</VersionBuild>
		</RequiredLibraryReference>
		<ClassPathEntry>
			<ResourceReference>
				<PackageName>zero_engine</PackageName>
				<ClassName>ZeroMath.jar</ClassName>
			</ResourceReference>
			<Imported>true</Imported>
			<Folder>false</Folder>
		</ClassPathEntry>
		<CloudModelUuid>f5586290-2a06-4a7c-8c59-bd77840932c3</CloudModelUuid>
		<ModelResources>
			<Resource>
				<Id>1658477089999</Id>
				<Path>AlbatrossProcessedVehicleTrips.xlsx</Path>
				<ReferencedFromUserCode>true</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
			<Resource>
				<Id>1658477089998</Id>
				<Path>ZeroMath.jar</Path>
				<ReferencedFromUserCode>false</ReferencedFromUserCode>
				<Location>FILE_SYSTEM</Location>
			</Resource>
		</ModelResources>
	</Model>
	<ConvertersApplied>
		<Uuid>9f7858c9-b2c8-4ead-9244-fd08833f642b</Uuid>
		<Uuid>404652e6-561a-404c-aab2-ab7415f40ef5</Uuid>
		<Uuid>6fd6cd57-6dfe-4fc6-be0b-c74065351957</Uuid>
		<Uuid>3325dc48-3ad4-41e3-836f-dfd0e98fe1ed</Uuid>
		<Uuid>3f69ef3d-706e-41a6-8af0-11658c5eef68</Uuid>
		<Uuid>3f6fe405-e047-4304-91d6-6eee206d1106</Uuid>
		<Uuid>820d2b51-5b4a-48e7-b0b6-e46418e3c0f2</Uuid>
		<Uuid>630818fa-8975-4b70-976f-03180dce01db</Uuid>
		<Uuid>7c7e471c-004e-495e-a4ad-d840620ab38e</Uuid>
		<Uuid>3e38ff63-1f70-4ec0-b42c-e879b146785d</Uuid>
		<Uuid>b1eb86e4-14b3-405c-8257-56b80f1b485d</Uuid>
		<Uuid>d55f9fb6-86bb-45ea-9db1-79cecfa0ce91</Uuid>
		<Uuid>ab77aafd-8f02-4354-b789-928d45b1f73c</Uuid>
		<Uuid>e4f14fd7-1c4a-42e9-b91d-db2415f475db</Uuid>
		<Uuid>6d208120-6c7a-45a6-b411-402f18890d9b</Uuid>
		<Uuid>1816cdd0-177c-4973-9e88-dd8b95318556</Uuid>
		<Uuid>5c23f62f-06dc-46ad-8ead-688ec434e3e5</Uuid>
		<Uuid>5c7d7990-3f35-41eb-ae16-d0c16098acc6</Uuid>
		<Uuid>02a16c52-a834-4f30-b6af-a6aee51a294e</Uuid>
		<Uuid>f0988929-2718-4984-a1b6-c1f2ce152f1f</Uuid>
		<Uuid>1c9d9cfe-ea2b-43f9-8f62-dc31d8ed3ae1</Uuid>
		<Uuid>34cb742a-8ba4-47a7-87e6-f2685fe69e97</Uuid>
		<Uuid>4fe10751-c399-4752-94b7-30113ad45070</Uuid>
		<Uuid>c13fe5ac-6466-446e-886a-12df1431b1eb</Uuid>
		<Uuid>714f9ca2-426e-4bff-8569-2d18f58fdcf8</Uuid>
		<Uuid>045aeb5f-1087-4ac7-9702-a49404e7f7e8</Uuid>
		<Uuid>840e9a0a-de98-4b7d-a172-f9bbda2d6b98</Uuid>
		<Uuid>e342358b-75ed-4812-9376-6043fb6cb473</Uuid>
		<Uuid>f3d5ccdc-1bb3-466f-871d-f6b92a26cbb4</Uuid>
		<Uuid>59acb6fb-561c-4038-b722-a596a748b3c7</Uuid>
		<Uuid>be7e6726-05c0-4228-821d-a8df91aeb5bc</Uuid>
		<Uuid>df4a6a60-9ce8-4c6c-91c0-ad5a5d732259</Uuid>
		<Uuid>47491eb9-4606-42bd-8399-125a2b95fded</Uuid>
		<Uuid>9b2d1306-5d19-439a-8f2c-b144dd7e22fa</Uuid>
		<Uuid>ef421152-8732-4f97-9acb-c8e9a6890d5e</Uuid>
		<Uuid>d48f8080-25b1-44f5-8322-7bf2712ff974</Uuid>
		<Uuid>6c4de826-daad-4cd4-b703-51dfe803e822</Uuid>
		<Uuid>01af22d6-6889-4e98-a3df-e6eddc40fc92</Uuid>
		<Uuid>ea3b3dbe-cca2-4bde-957b-feaef7e18789</Uuid>
		<Uuid>e737c8c6-b526-4f88-b89e-554e205b0614</Uuid>
		<Uuid>efd24e87-d7f7-425f-9cb0-3ee17c7b2116</Uuid>
		<Uuid>a62607e6-047e-4910-a1ec-5426bf9283b5</Uuid>
		<Uuid>64dceb5b-de05-47c7-8e40-e9b293e80d75</Uuid>
		<Uuid>8d51c652-6aee-4de8-ba03-47b289a13ec5</Uuid>
		<Uuid>51d7b5ce-5664-4750-b1a0-fabcdc31e49a</Uuid>
		<Uuid>6522e3af-aa9e-421c-b667-e11db73cd8ca</Uuid>
		<Uuid>9ac073a0-7abf-4dff-826f-9c44d4780590</Uuid>
		<Uuid>2da9c21c-adc7-405a-a36e-46fbd9dfcd42</Uuid>
		<Uuid>fe4d1053-9c84-4221-bac7-cb489a7064ff</Uuid>
		<Uuid>1f005f88-e6d7-4bdc-81fa-3acf4c89cf64</Uuid>
		<Uuid>42dc5a7c-d7b1-4653-92b9-9359b46cc2d4</Uuid>
		<Uuid>e25721a9-34f9-479c-a4c3-31f5ec9e117d</Uuid>
		<Uuid>506d1de3-06df-4131-9e88-e43f1768e3d8</Uuid>
		<Uuid>e6625695-25a2-43d0-9056-1e9a1a594b1e</Uuid>
		<Uuid>91990287-4edf-4e38-aa6c-66d0e906807b</Uuid>
		<Uuid>2216cdd0-177c-5678-9e88-dd8b95312234</Uuid>
	</ConvertersApplied>
</AnyLogicWorkspace>
